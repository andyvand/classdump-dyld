/*
* This header is generated by classdump-dyld 0.7
* on Saturday, February 14, 2015 at 11:50:49 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/AVCore.framework/Versions/A/AVCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol AVControllerDelegate;
@interface AVController : NSObject {

	char _blockMultipleIncomingInvitations;
	char _blockOutgoingInvitationsDuringCall;
	char _blockIncomingInvitationsDuringCall;
	id<AVControllerDelegate> _delegate;

}

@property (nonatomic,readonly) char hasActiveConference; 
@property (nonatomic,readonly) char hasRunningConference; 
@property (nonatomic,readonly) unsigned overallChatState; 
@property (nonatomic,readonly) char cameraCapable; 
@property (nonatomic,readonly) char microphoneCapable; 
@property (nonatomic,readonly) char multiAudioCapable; 
@property (nonatomic,readonly) char multiVideoCapable; 
@property (nonatomic,readonly) char cameraConnected; 
@property (nonatomic,readonly) char microphoneConnected; 
@property (assign,nonatomic) char blockMicrophoneCapable; 
@property (assign,nonatomic) char blockCameraCapable; 
@property (assign,nonatomic) char blockARDCapable; 
@property (assign,nonatomic) char blockAudioOnlyCalls; 
@property (assign,nonatomic) char blockMultipleIncomingInvitations;                //@synthesize blockMultipleIncomingInvitations=_blockMultipleIncomingInvitations - In the implementation block
@property (assign,nonatomic) char blockIncomingInvitationsDuringCall;              //@synthesize blockIncomingInvitationsDuringCall=_blockIncomingInvitationsDuringCall - In the implementation block
@property (assign,nonatomic) char blockOutgoingInvitationsDuringCall;              //@synthesize blockOutgoingInvitationsDuringCall=_blockOutgoingInvitationsDuringCall - In the implementation block
@property (nonatomic,readonly) char ARDServerCapable; 
@property (nonatomic,readonly) char ARDClientCapable; 
@property (nonatomic,readonly) char softwareCameraSupported; 
@property (nonatomic,readonly) char softwareMicrophoneSupported; 
@property (assign,nonatomic) char softwareCameraEnabled; 
@property (assign,nonatomic) char softwareMicrophoneEnabled; 
@property (assign,nonatomic) id<AVControllerDelegate> delegate;                    //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) char canUseSmallDataBlobs; 
@property (nonatomic,readonly) char _ready; 
+(id)sharedInstance;
-(void)vcCapabilitiesChanged:(unsigned long long)arg1 ;
-(id)init;
-(void)setDelegate:(id<AVControllerDelegate>)arg1 ;
-(id<AVControllerDelegate>)delegate;
-(char)ARDClientCapable;
-(char)ARDServerCapable;
-(id)vcResponseInfoWithSessionID:(unsigned)arg1 ICEData:(id)arg2 natType:(id)arg3 natIP:(id)arg4 ardChannelInfo:(id)arg5 forParticipant:(id)arg6 relaySupported:(char)arg7 ;
-(id)vcResponseInfoWithSessionID:(unsigned)arg1 ;
-(void)cancelVCRequestWithBuddy:(id)arg1 vcProps:(id)arg2 forAccount:(id)arg3 conferenceID:(id)arg4 ;
-(char)_ready;
-(char)blockMultipleIncomingInvitations;
-(char)blockIncomingInvitationsDuringCall;
-(char)hasRunningConference;
-(void)declineVCRequestWithBuddy:(id)arg1 response:(unsigned)arg2 vcProps:(id)arg3 forAccount:(id)arg4 conferenceID:(id)arg5 ;
-(char)blockAudioOnlyCalls;
-(char)cameraCapable;
-(char)_shouldRunConferences;
-(void)pushCachedVCCapsToDaemon;
-(char)microphoneCapable;
-(char)blockOutgoingInvitationsDuringCall;
-(char)hasActiveConference;
-(void)updateActiveConference;
-(unsigned)overallChatState;
-(void)_markSetup;
-(void)setBlockIncomingInvitationsDuringCall:(char)arg1 ;
-(void)setBlockMultipleIncomingInvitations:(char)arg1 ;
-(void)setBlockOutgoingInvitationsDuringCall:(char)arg1 ;
-(char)_shouldHandleInvites;
-(char)cameraConnected;
-(char)microphoneConnected;
-(char)softwareCameraEnabled;
-(char)blockMicrophoneCapable;
-(char)multiVideoCapable;
-(char)multiAudioCapable;
-(char)canUseSmallDataBlobs;
-(void)dumpCaps;
-(void)_setServiceVCCaps:(unsigned long long)arg1 toCaps:(unsigned long long)arg2 ;
-(void)setHasRunningConference:(char)arg1 ;
-(void)setHasActiveConference:(char)arg1 ;
-(void)setupAVController;
-(void)declineVCRequestWithBuddy:(id)arg1 response:(unsigned)arg2 vcProps:(id)arg3 conferenceID:(id)arg4 ;
-(void)setAVCapabilities:(int)arg1 toCaps:(int)arg2 ;
-(char)canReceiveWidescreen;
-(char)ardMuxingSupported;
-(char)softwareCameraSupported;
-(char)softwareMicrophoneSupported;
-(void)setSoftwareCameraEnabled:(char)arg1 ;
-(char)softwareMicrophoneEnabled;
-(void)setSoftwareMicrophoneEnabled:(char)arg1 ;
-(void)setBlockAudioOnlyCalls:(char)arg1 ;
-(void)setBlockMicrophoneCapable:(char)arg1 ;
-(char)blockCameraCapable;
-(void)setBlockCameraCapable:(char)arg1 ;
-(char)blockARDCapable;
-(void)setBlockARDCapable:(char)arg1 ;
-(void)currentAVChatInfoChanged:(id)arg1 ;
-(void)requestPendingVCInvitations;
@end

