/*
* This header is generated by classdump-dyld 0.7
* on Saturday, February 14, 2015 at 11:51:07 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/CalendarPersistence.framework/Versions/A/CalendarPersistence
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CalendarPersistence/CalABListener.h>

@class CalLimitingQueue;

@interface CalBirthdayListener : CalABListener {

	char _needsReset;
	CalLimitingQueue* _updateQueue;

}

@property (assign) char needsReset;              //@synthesize needsReset=_needsReset - In the implementation block
+(id)sharedListener;
-(id)init;
-(void)dealloc;
-(void)_runUpdateJobIfNecessaryInBackground;
-(void)_addressBookChanged:(id)arg1 ;
-(void)setNeedsReset:(char)arg1 ;
-(char)areBirthdaysEnabled;
-(char)needsReset;
-(void)_resetInManagedObjectContext:(id)arg1 ;
-(id)findBirthdayCalendarsInContext:(id)arg1 createLocalCalendarIfNeeded:(char)arg2 ;
-(void)_runQuickUpdateInBackground:(id)arg1 ;
-(id)peopleFromDeletedUIDs:(id)arg1 updatedUIDs:(id)arg2 insertedRecords:(id)arg3 inContext:(id)arg4 ;
-(id)_unifiedPeopleAssociatedWithNotification:(id)arg1 inContext:(id)arg2 ;
-(void)_gatherUIDsFromPeople:(id)arg1 allUIDs:(id)arg2 preferredUIDs:(id)arg3 ;
-(id)_masterEventsFromUIDs:(id)arg1 inContext:(id)arg2 ;
-(void)putContactInAppropriateBirthdayCalendar:(id)arg1 withCalendars:(id)arg2 eventsCreatedSoFar:(id)arg3 inContext:(id)arg4 ;
-(void)getRidOfFacebookCalendarIfEmpty:(id)arg1 ;
-(void)saveEventsAndObtainIDsFor:(id)arg1 inContext:(id)arg2 ;
-(id)unifiedPersonHelperForEvent:(id)arg1 linkIDsSeenSoFar:(id)arg2 usingAddressBook:(id)arg3 ;
-(id)unifiedPersonHelperForPerson:(id)arg1 linkIDsSeenSoFar:(id)arg2 ;
-(id)uniquePeopleWithBirthdays;
-(void)populateExistingBirthdayEventsInCalendars:(id)arg1 withPeople:(id)arg2 birthdayEventDictionaryToPopulate:(id)arg3 lunarBirthdayEventDictionaryToPopulate:(id)arg4 context:(id)arg5 ;
-(void)putContactInAppropriateBirthdayCalendar:(id)arg1 forExistingEvent:(id)arg2 withCalendars:(id)arg3 eventsCreatedSoFar:(id)arg4 inContext:(id)arg5 birthday:(id)arg6 birthdayYearlessness:(char)arg7 lunarCalendarString:(id)arg8 ;
-(id)createBirthdayCalendarInContext:(id)arg1 ;
-(id)_peopleWithProperty:(id)arg1 inAddressBook:(id)arg2 ;
-(id)_peopleWithBirthdays;
-(void)_deleteEventIfNecessary:(id)arg1 forUnifiedPerson:(id)arg2 birthdayEventDictionary:(id)arg3 addressBookUID:(id)arg4 preferredBirthday:(char)arg5 context:(id)arg6 ;
-(id)_existingBirthdayEventsInCalendars:(id)arg1 context:(id)arg2 ;
-(id)_addressBookUIDForEvent:(id)arg1 ;
-(void)_deleteEventIfNecessary:(id)arg1 forUnifiedPerson:(id)arg2 birthdayEventDictionary:(id)arg3 lunarBirthdayEventDictionary:(id)arg4 addressBookUID:(id)arg5 context:(id)arg6 ;
-(id)createFacebookCalendarInContext:(id)arg1 ;
-(id)_calendarInWhichToCreateEventWithCalendars:(id)arg1 calendarType:(int)arg2 context:(id)arg3 ;
-(id)createEventInCalendar:(id)arg1 withABUID:(id)arg2 withLinkID:(id)arg3 withSummary:(id)arg4 withBirthday:(id)arg5 withName:(id)arg6 isYearless:(char)arg7 isYearlessLeapMonthBirthday:(char)arg8 lunarCalendarString:(id)arg9 ;
-(void)addBirthdayCalendars;
-(void)disableBirthdayCalendars;
-(void)putContactInAppropriateBirthdayCalendar:(id)arg1 basedOnExistingEvent:(id)arg2 withCalendars:(id)arg3 eventsCreatedSoFar:(id)arg4 inContext:(id)arg5 ;
@end

