/*
* This header is generated by classdump-dyld 0.7
* on Saturday, February 14, 2015 at 11:51:05 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/CalendarPersistence.framework/Versions/A/CalendarPersistence
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CalendarPersistence/CalendarPersistence-Structs.h>
#import <CalendarPersistence/NSCoding.h>

@class NSString, NSMutableArray;

@interface CALProperty : NSObject <NSCoding> {

	NSString* _name;
	NSMutableArray* _values;
	NSMutableArray* _changelist;
	int _status;

}
+(id)propertyWithName:(id)arg1 withPropertyValue:(id)arg2 ;
+(id)propertyWithName:(id)arg1 withValue:(id)arg2 withType:(int)arg3 ;
+(id)propertyWithName:(id)arg1 withValue:(id)arg2 ;
+(id)propertyWithName:(id)arg1 withPropertyValues:(id)arg2 ;
+(id)propertyWithName:(id)arg1 withValues:(id)arg2 withType:(int)arg3 ;
-(void)dealloc;
-(unsigned long long)count;
-(id)description;
-(id)values;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)name;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)stringValue;
-(id)initWithName:(id)arg1 ;
-(char)isSingleValued;
-(id)singleValue;
-(void)setCommitStatus:(int)arg1 ;
-(char)isEqualToProperty:(id)arg1 ;
-(void)addValue:(id)arg1 ;
-(void)removeValue:(id)arg1 ;
-(int)commitStatus;
-(void)markAsClean;
-(char)isEqualToProperty:(id)arg1 ignoreParameters:(id)arg2 useCommittedValues:(char)arg3 ;
-(char)isEqualToProperty:(id)arg1 ignoreParameters:(id)arg2 ;
-(void)restoreAsClean;
-(id)changedValues;
-(id)initFromVCal:(id)arg1 withParseState:(id)arg2 ;
-(id)initEncodedTextProperty:(id)arg1 withParseState:(id)arg2 property:(const SCD_Struct_CA3*)arg3 ;
-(id)initISO8061Property:(id)arg1 withParseState:(id)arg2 property:(const SCD_Struct_CA3*)arg3 ;
-(id)initISO8061DateListProperty:(id)arg1 withParseState:(id)arg2 property:(const SCD_Struct_CA3*)arg3 ;
-(id)initIntProperty:(id)arg1 withParseState:(id)arg2 property:(const SCD_Struct_CA3*)arg3 ;
-(id)initURIProperty:(id)arg1 withParseState:(id)arg2 property:(const SCD_Struct_CA3*)arg3 ;
-(id)initClassificationProperty:(id)arg1 withParseState:(id)arg2 property:(const SCD_Struct_CA3*)arg3 ;
-(id)initStatusProperty:(id)arg1 withParseState:(id)arg2 property:(const SCD_Struct_CA3*)arg3 ;
-(id)initRecurrenceProperty:(id)arg1 withParseState:(id)arg2 property:(const SCD_Struct_CA3*)arg3 ;
-(id)initTranspProperty:(id)arg1 withParseState:(id)arg2 property:(const SCD_Struct_CA3*)arg3 ;
-(id)initKeywordListProperty:(id)arg1 withParseState:(id)arg2 property:(const SCD_Struct_CA3*)arg3 ;
-(id)initRFC822AddressProperty:(id)arg1 withParseState:(id)arg2 property:(const SCD_Struct_CA3*)arg3 ;
-(id)initWithName:(id)arg1 withPropertyValue:(id)arg2 ;
-(id)initWithName:(id)arg1 withValue:(id)arg2 withType:(int)arg3 ;
-(id)initWithName:(id)arg1 withValues:(id)arg2 withType:(int)arg3 ;
-(id)initWithName:(id)arg1 withValue:(id)arg2 ;
-(id)initVerbatimProperty:(id)arg1 withParseState:(id)arg2 property:(const SCD_Struct_CA3*)arg3 ;
-(id)initWithName:(id)arg1 withPropertyValues:(id)arg2 ;
-(id)committedValues;
-(void)setSingleValue:(id)arg1 ;
-(id)deletedValues;
-(char)isEqualToProperty:(id)arg1 useCommittedValues:(char)arg2 ;
-(char)dirty;
@end

