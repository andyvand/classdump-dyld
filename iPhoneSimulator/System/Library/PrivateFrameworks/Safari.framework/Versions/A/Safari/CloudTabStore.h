/*
* This header is generated by classdump-dyld 0.7
* on Saturday, February 14, 2015 at 11:50:11 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/Safari.framework/Versions/A/Safari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Safari/Safari-Structs.h>
#import <Safari/WBSCloudTabStore.h>

@class CloudTabKeyValueStore, NSTimer;

@interface CloudTabStore : WBSCloudTabStore {

	CloudTabKeyValueStore* _keyValueStore;
	NSTimer* _saveTabsTimer;
	double _lastSaveTabsTimerInterval;
	char _shouldRefreshCloudTabsSupportedAfterCloudTabKeyValueStoreDictionaryIsAvailable;
	char _suppressSavingTabs;
	char _cloudTabsSupported;

}

@property (assign,nonatomic) char suppressSavingTabs;              //@synthesize suppressSavingTabs=_suppressSavingTabs - In the implementation block
@property (assign,nonatomic) char cloudTabsSupported;              //@synthesize cloudTabsSupported=_cloudTabsSupported - In the implementation block
+(id)sharedCloudTabStore;
+(char)browserTabQualifiesForUserActivityContinuation:(const BrowserTab*)arg1 ;
+(id)cloudTabForBrowserTab:(const BrowserTab*)arg1 ;
+(char)browserTabQualifiesForCloudTabSyncing:(const BrowserTab*)arg1 ;
-(void)clearTabsForCurrentDevice;
-(void)saveTabsForCurrentDeviceSoon;
-(void)saveTabsForCurrentDeviceAndWaitForOperationsToComplete;
-(char)cloudTabsSupported;
-(void)_iCloudLoggedInStateDidChange:(id)arg1 ;
-(id)syncedCloudTabDevices;
-(char)closeAllTabsOnDevice:(id)arg1 ;
-(char)closeTab:(id)arg1 onDevice:(id)arg2 ;
-(void)_refreshCloudTabsSupported;
-(char)_hasCloudTabsEntitlement;
-(void)_keyValueStoreDidChangeExternally:(long long)arg1 notification:(id)arg2 ;
-(void)_cancelPendingSaveTabsForCurrentDevice;
-(char)suppressSavingTabs;
-(void)_saveTabsForCurrentDeviceDelayTimerFired;
-(char)_saveTabsForCurrentDeviceForcingSaveEvenIfUnchanged:(char)arg1 blockUntilDone:(char)arg2 ;
-(char)_atLeastOneOtherActiveDeviceIsRegistered;
-(void)_saveTabsForCurrentDeviceAfterDelay:(double)arg1 ;
-(char)_shouldSaveTabsForCurrentDevice;
-(id)_dictionaryForCurrentDeviceWithBrowserTabs:(Vector<Safari::BrowserTab *, 0, WTF::CrashOnOverflow>*)arg1 ;
-(char)_shouldSaveCurrentDeviceDictionary:(id)arg1 ;
-(void)_keyValueStoreDidChange;
-(void)_clearTabsForCurrentDeviceBlockingUntilDone:(char)arg1 ;
-(void)_handleQuotaViolation;
-(id)_currentDeviceName;
-(void)setCloudTabsSupported:(char)arg1 ;
-(char)_currentDeviceIsRegistered;
-(void)_clearTabsForFirstDuplicateDevice;
-(void)_keyValueStoreDictionaryRepresentationDidChange:(id)arg1 ;
-(void)_refreshCloudTabsSupportedAfterCloudTabKeyValueStoreDictionaryIsAvailable;
-(char)closeTabs:(id)arg1 onDevice:(id)arg2 ;
-(void)debugSaveTabsForCurrentDeviceUsingNewUUID;
-(void)debugClearTabsForAllDevices;
-(id)_currentDeviceUUID;
-(id)_keyValueStoreDictionaryRepresentation:(long long)arg1 ;
-(void)_setDictionaryInKeyValueStore:(long long)arg1 dictionary:(id)arg2 forKey:(id)arg3 ;
-(void)_removeObjectFromKeyValueStore:(long long)arg1 forKey:(id)arg2 ;
-(void)_closeRequestedTabIfPossible:(id)arg1 ;
-(void)setSuppressSavingTabs:(char)arg1 ;
-(id)init;
-(void)dealloc;
@end

