/*
* This header is generated by classdump-dyld 0.7
* on Saturday, February 14, 2015 at 11:50:59 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <Backup/Backup-Structs.h>
@class BU_VortexGL, CAMediaTimingFunction, BU_TMFloatParameterController;

@interface BU_MPStarField : NSObject {

	BOOL fUseStarMipmapping;
	BU_VortexGL* fVortex;
	double _sunSetOffsetPercentage;
	double _sunRiseOffsetPercentage;
	double _minimumFGStarDistanceFromOrigin;
	double _bgStarVanishingPoint;
	BOOL _enableGlow;
	double fTime;
	double fLastBGUpdate;
	double fElapsedFrames;
	float fBGStarOffsetY;
	float fStarOffsetY;
	float fAspect;
	float fFarWidth;
	float fFarHeight;
	float fNearWidth;
	float fNearHeight;
	/*function pointer*/void** fStars[4];
	/*function pointer*/void** fBGStars[4];
	vector<StarVertices, std::__1::allocator<StarVertices> >* fBGStarVertices[4];
	vector<StarVertices, std::__1::allocator<StarVertices> >* fFGStarVertices[4];
	unsigned fStarBuffers[4];
	unsigned fStarBufferAttributes;
	unsigned fBGStarBuffers[4];
	unsigned fBGStarBufferAttributes;
	unsigned long long fStarCount;
	float fTanFovHalf;
	float fFarPlane;
	float fSpeed;
	double fWarpFactor;
	float fMinSize;
	float fMaxSize;
	unsigned long long fBGStarCount;
	float fBGMinSize;
	float fBGMaxSize;
	float fBGMaxXY;
	float fBGMinXY;
	float fBGSpeed;
	float fBGNearPlane;
	float fBGUpdateInterval;
	float fBGWidth;
	float fBGHeight;
	float fBGBrightness;
	CGPoint fGasTopLeft;
	CGPoint fGasBottomRight;
	CGPoint fSunTopLeft;
	CGPoint fSunBottomRight;
	float fGasWidth;
	double fGasSpeed;
	double fGasPower;
	double fGasRadius;
	double fGasRadians;
	double fGasFade;
	unsigned fStarTextures[4];
	unsigned fBGStarTextures[4];
	unsigned fBackgroundStarTexture;
	unsigned fForegroundStarTexture;
	BOOL fEnableStarUpdates;
	BOOL fDrawBackground;
	BOOL fDrawBackgroundStars;
	BOOL fDrawDarkCloud;
	BOOL fDrawRedCloud;
	BOOL fDrawForegroundStars;
	unsigned fNewBackgroundTexture;
	unsigned fDarkCloud;
	unsigned fRedCloud;
	unsigned fSunTexture;
	unsigned char fWasEnabled;
	int fSaveUnit;
	int fSaveName;
	CAMediaTimingFunction* fEaseCurve;
	double fStartTimeY;
	double fDurationY;
	double fTimestampY;
	BOOL fAnimatingY;
	double fStartY;
	double fEndY;
	double fWidthY;
	double fHeightY;
	double fOffsetY;
	double fAspectY;
	double fTimeSS;
	double fStartTimeSS;
	double fEndTimeSS;
	double fEndEaseInSS;
	double fStartEaseOutSS;
	double fTimestampSS;
	double fDurationSS;
	BOOL fAnimatingSS;
	BOOL fForwardSS;
	double fSpeedStarsSS;
	double fSpeedGasSS;
	double fSpeedGasIdleSS;
	double fSpeedStarsIdleSS;
	double fSpeedGasWarpSS;
	double fSpeedStarsWarpSS;
	double fSpeedGasReverseSS;
	double fSpeedStarsReverseSS;
	double fInputStarsZOffset;
	BU_TMFloatParameterController* fStarsZOffset;
	BU_TMFloatParameterController* fGlobalYOffset;
	long long fFrameRateScale;
	double fFrameRateInterval;

}

@property (assign,nonatomic) BOOL enableStarUpdates; 
@property (assign,nonatomic) BOOL drawBackground; 
@property (assign,nonatomic) BOOL drawBackgroundStars; 
@property (assign,nonatomic) BOOL drawDarkCloud; 
@property (assign,nonatomic) BOOL drawRedCloud; 
@property (assign,nonatomic) BOOL drawForegroundStars; 
+(BOOL)isCompliantWithHardwareCapabilities;
+(void)resetPerformanceStats;
+(void)clearPerformanceStats;
-(void)setDrawBackground:(BOOL)arg1 ;
-(BOOL)drawBackground;
-(id)init;
-(void)dealloc;
-(double)gasSpeed:(double)arg1 ;
-(double)starsSpeed:(double)arg1 ;
-(void)_setDefaultValues:(CGLContextObject*)arg1 ;
-(BOOL)_loadTextures:(CGLContextObject*)arg1 ;
-(void)_computeAspectRatioWithContext:(CGLContextObject*)arg1 ;
-(BOOL)setSpeeds:(double)arg1 ;
-(void)initStarsInContext:(CGLContextObject*)arg1 newOffset:(float)arg2 ;
-(CGRect)backgroundImageFrameWithYOffset:(float)arg1 ;
-(void)updateFGStars:(CGLContextObject*)arg1 yOffset:(float)arg2 zOffset:(float)arg3 ;
-(void)updateBGStars:(CGLContextObject*)arg1 yOffset:(float)arg2 zOffset:(float)arg3 ;
-(void)drawNewBackground:(CGLContextObject*)arg1 yOffset:(float)arg2 glowPercentage:(float)arg3 ;
-(void)drawBackgroundStars:(CGLContextObject*)arg1 ;
-(void)drawBackgroundClouds:(CGLContextObject*)arg1 yOffset:(float)arg2 ;
-(void)drawForegroundStars:(CGLContextObject*)arg1 ;
-(void)checkAndUpdateBackgroundStars:(SCD_Struct_BU28*)arg1 count:(unsigned long long)arg2 stars:(SCD_Struct_BU29*)arg3 newOffset:(float)arg4 zOffset:(float)arg5 ;
-(void)checkAndUpdateFGStars:(SCD_Struct_BU28*)arg1 count:(unsigned long long)arg2 zOffset:(double)arg3 ;
-(void)generateFGStarPositionX:(float*)arg1 y:(float*)arg2 size:(float*)arg3 ;
-(void)cleanupStarBuffers:(CGLContextObject*)arg1 ;
-(void)initFGStarsWithRandomZ:(SCD_Struct_BU28*)arg1 count:(unsigned long long)arg2 stars:(SCD_Struct_BU30*)arg3 ;
-(void)initVertexAttribs:(SCD_Struct_BU31*)arg1 count:(unsigned long long)arg2 ;
-(void)initBackgroundStars:(SCD_Struct_BU28*)arg1 count:(unsigned long long)arg2 stars:(SCD_Struct_BU29*)arg3 newOffset:(float)arg4 ;
-(void)setTextureOnContext:(CGLContextObject*)arg1 texture:(unsigned)arg2 unitName:(unsigned)arg3 ;
-(void)unsetTextureOnContext:(CGLContextObject*)arg1 unitName:(unsigned)arg2 ;
-(void)setShouldSkipFrames:(BOOL)arg1 ;
-(BOOL)_setup:(CGLContextObject*)arg1 pixelFormat:(CGLPixelFormatObjectRef)arg2 cglError:(int*)arg3 glError:(unsigned*)arg4 ;
-(id)starsZOffset;
-(id)globalYOffset;
-(BOOL)_execute:(CGLContextObject*)arg1 pixelFormat:(CGLPixelFormatObjectRef)arg2 time:(double)arg3 ;
-(void)updatePerfMetrics;
-(BOOL)enableStarUpdates;
-(void)setEnableStarUpdates:(BOOL)arg1 ;
-(BOOL)drawBackgroundStars;
-(void)setDrawBackgroundStars:(BOOL)arg1 ;
-(BOOL)drawDarkCloud;
-(void)setDrawDarkCloud:(BOOL)arg1 ;
-(BOOL)drawRedCloud;
-(void)setDrawRedCloud:(BOOL)arg1 ;
-(BOOL)drawForegroundStars;
-(void)setDrawForegroundStars:(BOOL)arg1 ;
-(void)cleanup:(CGLContextObject*)arg1 ;
@end

