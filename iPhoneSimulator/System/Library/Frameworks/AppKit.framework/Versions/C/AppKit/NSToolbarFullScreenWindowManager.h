/*
* This header is generated by classdump-dyld 0.7
* on Saturday, February 14, 2015 at 11:50:31 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <AppKit/AppKit-Structs.h>
@class NSWindow, NSToolbarFullScreenWindow, NSToolbar, NSTitlebarAccessoryViewController, NSToolbarFullScreenResetableAnimation, NSTitlebarContainerView, NSTitlebarView;

@interface NSToolbarFullScreenWindowManager : NSObject {

	char _inLayout;
	NSWindow* _originalWindow;
	NSToolbarFullScreenWindow* window;
	NSToolbar* _toolbar;
	NSTitlebarAccessoryViewController* _auxiliaryViewController;
	NSToolbarFullScreenResetableAnimation* windowSlideOutAnimation;
	void* evtHandler;
	unsigned autohideDisabledCounter;
	unsigned forceWindowVisibleCounter;
	double _menuBarReveal;
	double _autohideHeight;
	double lastSetAutohideHeight;
	char hasAutoHideMask;
	char menuBarIsShown;
	char windowIsInFullScreen;
	char settingAuxFrame;
	char resizeContentWindowAfterToolbarAnimation;
	char isForcingToolbarVisibleForSheet;
	char isHandlingHotKeyEvent;
	char forceAuxViewVisible;
	char animatingToCorrectPosition;
	char toolbarWantsToAttachToMenubar;
	char contentWindowInToolbarWindowMovementGroup;
	char setAsAttachedToMenuBar;
	char setAsMergedWithMenuBar;
	char _registeredForNotes;
	NSTitlebarContainerView* _titlebarContainerView;
	NSTitlebarView* _titlebarView;
	char _toolbarWindowIsInheritingAppearanceFromParentWindow;

}

@property (nonatomic,retain) NSToolbar * toolbar; 
@property (getter=isHandlingHotKeyEvent) char handlingHotKeyEvent; 
@property (assign) NSWindow * originalWindow;                                             //@synthesize originalWindow=_originalWindow - In the implementation block
@property (assign) NSTitlebarContainerView * titlebarContainerView;                       //@synthesize titlebarContainerView=_titlebarContainerView - In the implementation block
@property (assign) NSTitlebarView * titlebarView;                                         //@synthesize titlebarView=_titlebarView - In the implementation block
@property (assign) char toolbarWindowIsInheritingAppearanceFromParentWindow;              //@synthesize toolbarWindowIsInheritingAppearanceFromParentWindow=_toolbarWindowIsInheritingAppearanceFromParentWindow - In the implementation block
-(void)finalize;
-(void)dealloc;
-(id)window;
-(void)setToolbar:(NSToolbar *)arg1 ;
-(NSToolbar *)toolbar;
-(void)layout;
-(id)screen;
-(void)tile;
-(NSWindow *)originalWindow;
-(id)auxiliaryViewController;
-(void)setAuxiliaryViewController:(id)arg1 ;
-(NSTitlebarContainerView *)titlebarContainerView;
-(NSTitlebarView *)titlebarView;
-(char)_shouldRoundCorners;
-(void)updateTitlebarViewBlendingMode;
-(void)updateWindowAndContentView;
-(void)setTitlebarContainerView:(NSTitlebarContainerView *)arg1 ;
-(void)setTitlebarView:(NSTitlebarView *)arg1 ;
-(char)autohideDisabled;
-(void)setHandlingHotKeyEvent:(char)arg1 ;
-(void)_disableFullScreenAutohidingForToolbar:(id)arg1 ;
-(void)_enableFullScreenAutohidingForToolbar:(id)arg1 ;
-(void)_enableFullScreenForceVisibleForToolbar:(id)arg1 ;
-(void)_disableFullScreenForceVisibleForToolbar:(id)arg1 ;
-(void)toolbarDidChangeAttachesToMenuBar:(id)arg1 ;
-(void)autohideHeightChanged;
-(void)setOriginalWindow:(NSWindow *)arg1 ;
-(void)updateWindowVisibility;
-(void)dispose;
-(void)toolbar:(id)arg1 didChangeFrameSizeFromOldSize:(CGSize)arg2 ;
-(void)_doDidEnterFullScreen;
-(void)setToolbarWindowIsInheritingAppearanceFromParentWindow:(char)arg1 ;
-(unsigned long long)windowStyleMask;
-(char)isHandlingHotKeyEvent;
-(double)correctWindowTopTarget;
-(void)updateWindowLayout;
-(void)forceUpdateMenuBarAttachmentTags:(char)arg1 ;
-(CGPoint)topCenterForSheet:(id)arg1 ;
-(char)toolbarWindowIsInheritingAppearanceFromParentWindow;
-(NSToolbarFullScreenContentViewLayout_t)getToolbarLayout;
-(id)mainLayoutView;
-(double)visibleWindowHeight;
-(double)effectiveAutohideHeight;
-(double)desiredWindowHeight;
-(CGSize)toolbarWindowSize;
-(double)effectiveClampedAutohideHeight;
-(char)_shouldDrawBaselineForEffectiveReveal:(double)arg1 ;
-(void)updateWindowAlpha;
-(void)updateMenuBarScreenRevealHeight;
-(void)_updateContentViewWithEffectiveReveal:(double)arg1 ;
-(unsigned long long)fullScreenSpaceID;
-(void)animateWindowToCorrectPositionIfNecessary;
-(void)finishAnimationIfSynchronous;
-(void)updateWindowHeight;
-(void)resizeContentWindow;
-(void)updateMenuBarAttachmentTags;
-(void)updateWindowPositionAnimation:(double)arg1 startTop:(double)arg2 ;
-(double)windowAnimationDuration;
-(void)windowDidChangeFullScreenStatus:(id)arg1 ;
-(void)updateWindowCorners;
-(void)windowDidChangeSheetNotification:(id)arg1 ;
-(void)registerForWindowNotifications:(char)arg1 ;
-(void)_makeWindowIfNecessary;
-(void)_addViewControllerToWindow;
-(void)updateMovementGroups;
-(void)removeAsChildOfContentWindow;
-(void)addAsChildOfContentWindow;
-(double)effectiveAuxiliaryViewMaxHeight;
-(double)effectiveAuxiliaryViewMinHeight;
-(void)updateContentViewRevealByMenuBar;
-(char)contentWindowShouldMakeRoomForToolbar;
-(double)_toolbarWindowContentScreenHeightForToolbar:(id)arg1 ;
@end

