/*
* This header is generated by classdump-dyld 0.7
* on Saturday, February 14, 2015 at 11:50:39 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/EventKit.framework/Versions/A/EventKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <EventKit/EKCalendarItem.h>
#import <EventKit/EKProtocolMutableReminderOccurrence.h>

@class NSDate, NSNumber, NSDateComponents, NSString, NSDictionary, NSManagedObjectID, NSURL, NSTimeZone;

@interface EKReminder : EKCalendarItem <EKProtocolMutableReminderOccurrence> {

	char cachedHasLocationAlarm;

}

@property (nonatomic,copy) NSDateComponents * startDateComponents; 
@property (nonatomic,copy) NSDateComponents * dueDateComponents; 
@property (assign,getter=isCompleted,nonatomic) char completed; 
@property (nonatomic,copy) NSDate * completionDate; 
@property (assign,nonatomic) unsigned long long priority; 
@property (nonatomic,copy) NSDate * dueDate; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) char canBeConvertedToFullObject; 
@property (nonatomic,readonly) char isPartialObject; 
@property (nonatomic,readonly) NSDictionary * preFrozenRelationshipObjects; 
@property (nonatomic,readonly) NSManagedObjectID * managedObjectID; 
@property (nonatomic,retain,readonly) NSDate * recurrenceDateUnadjustedFromUTC; 
@property (nonatomic,readonly) NSNumber * calendarItemPermissionNumber; 
@property (nonatomic,copy,readonly) id<EKProtocolCalendar> container; 
@property (nonatomic,copy,readonly) NSString * recurrenceRuleString; 
@property (nonatomic,readonly) char cachedHasAttendee; 
@property (nonatomic,readonly) char cachedHasAttachment; 
@property (nonatomic,readonly) char cachedHasAlarm; 
@property (nonatomic,readonly) char cachedIsCalendarOwnerInvitedAttendee; 
@property (nonatomic,readonly) char cachedIsCurrentUserInvitedAttendee; 
@property (nonatomic,copy,readonly) id<EKProtocolParticipant> participantForMe; 
@property (nonatomic,copy,readonly) NSString * organizerName; 
@property (nonatomic,copy,readonly) NSURL * organizerURL; 
@property (nonatomic,copy,readonly) NSString * organizerEmail; 
@property (nonatomic,readonly) char organizedByMe; 
@property (nonatomic,copy,readonly) NSDate * lastModifiedDate; 
@property (nonatomic,copy,readonly) NSString * scheduleAgentString; 
@property (nonatomic,copy,readonly) NSTimeZone * timeZoneObject; 
@property (nonatomic,copy,readonly) NSDate * startDateUnadjustedFromUTC; 
@property (nonatomic,readonly) char defaultAlarmWasDeleted; 
@property (nonatomic,copy) NSString * title; 
@property (nonatomic,copy) NSString * location; 
@property (nonatomic,copy) NSString * notes; 
@property (nonatomic,copy) NSURL * URL; 
@property (nonatomic,copy) NSNumber * priorityNumber; 
@property (nonatomic,copy,readonly) NSDate * dueDateUnadjustedFromUTC; 
@property (nonatomic,copy,readonly) NSNumber * orderNumber; 
@property (nonatomic,readonly) char statusCompleteNotByDate; 
@property (nonatomic,readonly) char canEditRecurrence; 
@property (nonatomic,readonly) char cachedHasLocationAlarm; 
+(Class)frozenClass;
+(id)itemWithIdentifier:(id)arg1 inStore:(id)arg2 ;
+(id)knownImmutableKeys;
+(id)knownSingleValueKeys;
+(id)keysToCheckForChangedKeysMethod;
+(void)_adjustOrderOnReminders:(id)arg1 boundaryOrder:(unsigned long long)arg2 reverse:(char)arg3 eventStore:(id)arg4 ;
+(void)reorderReminders:(id)arg1 betweenEarlier:(id)arg2 later:(id)arg3 ;
+(char)fixBrokenICalReminderOrdersWithReminders:(id)arg1 ;
+(id)reminderWithEventStore:(id)arg1 ;
+(id)batchChangeNotificationName;
+(void)fixBrokenICalReminderOrdersInReminderList:(id)arg1 ;
+(void)fixBrokenICalReminderOrdersWithEventStore:(id)arg1 ;
+(id)sortDescriptorsForSortOrder:(int)arg1 ;
+(id)orderSortDescriptors;
-(char)commit:(id*)arg1 ;
-(char)canMoveFromCalendar:(id)arg1 toCalendar:(id)arg2 error:(id*)arg3 ;
-(char)canMoveOrCopyFromCalendar:(id)arg1 toCalendar:(id)arg2 error:(id*)arg3 ;
-(char)validate:(id*)arg1 ;
-(char)_validateEntityTypeIsSupported:(id*)arg1 ;
-(void)_applyKnownImmutableValuesFrom:(id)arg1 ;
-(id)externalURI;
-(void)setStatusCompleteNotByDate:(char)arg1 ;
-(id)bestDisplayAlarm;
-(void)_adjustOrderOnReminders:(id)arg1 reverse:(char)arg2 ;
-(NSDateComponents *)dueDateComponents;
-(NSDateComponents *)startDateComponents;
-(void)setStartDateComponents:(NSDateComponents *)arg1 ;
-(void)setDueDateComponents:(NSDateComponents *)arg1 ;
-(long long)compareDueDateWithReminder:(id)arg1 ;
-(void)reorderBetweenEarlier:(id)arg1 later:(id)arg2 ;
-(id)humanReadableRecurrenceDescription;
-(char)saveWithSpan:(int)arg1 error:(id*)arg2 ;
-(char)removeWithSpan:(int)arg1 error:(id*)arg2 ;
-(void)setPriority:(unsigned long long)arg1 ;
-(unsigned long long)priority;
-(unsigned long long)entityType;
-(NSDate *)completionDate;
-(NSDate *)dueDate;
-(char)isCompleted;
-(void)setCompletionDate:(NSDate *)arg1 ;
-(void)setDueDate:(NSDate *)arg1 ;
-(unsigned long long)order;
-(void)setOrder:(unsigned long long)arg1 ;
-(void)setCompleted:(char)arg1 ;
-(char)isReminder;
-(void)setAllDay:(char)arg1 ;
-(void)setTimeZoneObject:(NSTimeZone *)arg1 ;
-(NSNumber *)orderNumber;
-(void)setOrderNumber:(NSNumber *)arg1 ;
-(char)hasLocationAlarm;
-(NSDate *)dueDateUnadjustedFromUTC;
-(char)statusCompleteNotByDate;
-(char)canEditRecurrence;
-(char)cachedHasLocationAlarm;
-(void)setDueDateUnadjustedFromUTC:(NSDate *)arg1 ;
@end

