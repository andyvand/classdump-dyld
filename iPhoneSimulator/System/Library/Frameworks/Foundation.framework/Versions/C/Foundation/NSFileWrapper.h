/*
* This header is generated by classdump-dyld 0.7
* on Saturday, February 14, 2015 at 11:50:57 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Foundation/Foundation-Structs.h>
#import <Foundation/NSCoding.h>

@class NSDictionary, NSString, NSData, NSNumber, NSArray, NSImage, NSURL;

@interface NSFileWrapper : NSObject <NSCoding> {

	NSDictionary* _fileAttributes;
	NSString* _preferredFileName;
	NSString* _fileName;
	id _contents;
	id _icon;
	id _moreVars;

}

@property (retain) NSString * savedPath; 
@property (assign) char shouldBeViewedInline; 
@property (assign,nonatomic) unsigned type; 
@property (assign,nonatomic) unsigned creator; 
@property (assign,nonatomic) unsigned short finderFlags; 
@property (nonatomic,retain) NSData * resourceForkData; 
@property (assign,nonatomic) char shouldHideExtension; 
@property (nonatomic,retain) NSNumber * filePermissions; 
@property (nonatomic,retain) NSString * contentID; 
@property (nonatomic,retain) NSString * mailSpecialHandlingType; 
@property (nonatomic,retain) NSString * mimeType; 
@property (nonatomic,retain) NSDictionary * quarantineProperties; 
@property (nonatomic,retain) NSArray * whereFroms; 
@property (nonatomic,retain) NSString * messageID; 
@property (nonatomic,copy,readonly) NSString * bestMimeType; 
@property (retain) NSImage * icon; 
@property (getter=isDirectory,readonly) char directory; 
@property (getter=isRegularFile,readonly) char regularFile; 
@property (getter=isSymbolicLink,readonly) char symbolicLink; 
@property (copy) NSString * preferredFilename; 
@property (copy) NSString * filename; 
@property (copy) NSDictionary * fileAttributes; 
@property (copy,readonly) NSData * serializedRepresentation; 
@property (copy,readonly) NSDictionary * fileWrappers; 
@property (copy,readonly) NSData * regularFileContents; 
@property (copy,readonly) NSURL * symbolicLinkDestinationURL; 
+(id)uniquedPathForFile:(id)arg1 inDirectory:(id)arg2 ;
+(id)_quarantinePropertiesQueue;
+(void)loadMessageExtensions;
+(char)_canSafelyMapFilesAtPath:(id)arg1 ;
+(char)_forPath:(id)arg1 getItemKind:(id*)arg2 modificationDate:(id*)arg3 ;
+(id)_newContentsAtURL:(id)arg1 path:(id)arg2 itemKind:(id)arg3 oldChildrenByUniqueFileName:(id)arg4 options:(unsigned long long)arg5 error:(id*)arg6 ;
+(id)_temporaryDirectoryPathForWritingToPath:(id)arg1 forResaving:(char)arg2 error:(id*)arg3 ;
+(void)initialize;
+(void)_removeTemporaryDirectoryAtURL:(id)arg1 ;
+(char)_finishWritingToURL:(id)arg1 byMovingItemAtURL:(id)arg2 addingAttributes:(id)arg3 error:(id*)arg4 ;
+(char)_finishWritingToURL:(id)arg1 byTakingContentsFromItemAtURL:(id)arg2 addingAttributes:(id)arg3 usingTemporaryDirectoryAtURL:(id)arg4 backupFileName:(id)arg5 error:(id*)arg6 ;
+(id)_temporaryDirectoryURLForWritingToURL:(id)arg1 error:(id*)arg2 ;
+(id)_pathForURL:(id)arg1 reading:(char)arg2 error:(id*)arg3 ;
+(void)_writeAttributes:(id)arg1 toURL:(id)arg2 ;
+(id)_newReaderWithItemAtPath:(id)arg1 ;
+(id)_newFileWrapperWithWriter:(id)arg1 uniqueFileName:(id)arg2 ;
+(char)attemptOverwrite:(id)arg1 ;
+(id)_newWriterWithData:(id)arg1 preferredName:(id*)arg2 ;
+(char)_writeWithWriter:(id)arg1 toItemAtPath:(id)arg2 ;
+(id)_readWithReader:(id)arg1 preferredFileName:(id)arg2 ;
-(void)_am_removeFileWrapperIfPresentNamed:(id)arg1 ;
-(void)_am_replaceOrAddFileWrapper:(id)arg1 ;
-(char)_Message_writeToURL:(id)arg1 options:(unsigned long long)arg2 originalContentsURL:(id)arg3 error:(id*)arg4 ;
-(id)_Message_initWithURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(void)_Message_setPreferredFilename:(id)arg1 ;
-(char)_Message_updateFromPath:(id)arg1 checkOnly:(char)arg2 exists:(char*)arg3 ;
-(char)couldConfuseWindowsClients;
-(void)setShouldBeViewedInline:(char)arg1 ;
-(char)shouldBeViewedInline;
-(id)remoteAccessMimeType;
-(void)setSavedPath:(NSString *)arg1 ;
-(NSString *)savedPath;
-(id)initWithDictionaryRepresentation:(id)arg1 ;
-(id)dictionaryRepresentation;
-(id)archivedDataWithPartNumber:(id)arg1 ;
-(id)archivedData;
-(void)setIsCalendarInvitation:(char)arg1 ;
-(char)isCalendarInvitation;
-(id)stringForIndexing;
-(id)emptyAttachmentPath;
-(char)shouldHideExtension;
-(NSNumber *)filePermissions;
-(NSString *)mailSpecialHandlingType;
-(void)setWhereFroms:(NSArray *)arg1 ;
-(void)setQuarantineProperties:(NSDictionary *)arg1 ;
-(void)setFilePermissions:(NSNumber *)arg1 ;
-(void)setContentID:(NSString *)arg1 ;
-(void)setShouldHideExtension:(char)arg1 ;
-(void)setCreator:(unsigned)arg1 ;
-(void)setMailSpecialHandlingType:(NSString *)arg1 ;
-(unsigned long long)imageBytes;
-(char)createEmptyAttachmentAtPath:(id)arg1 ;
-(id)tmpFullPath;
-(void)setFinderFlags:(unsigned short)arg1 ;
-(void)setResourceForkData:(NSData *)arg1 ;
-(char)isALargeAttachment;
-(void)setImageSize:(CGSize)arg1 imageBytes:(unsigned long long)arg2 ;
-(char)isImageFile;
-(char)_writeFinderInfoToPath:(id)arg1 includeDirectoryContents:(char)arg2 ;
-(void)_isImageFile:(char*)arg1 isPDF:(char*)arg2 bestMimeType:(id*)arg3 ;
-(void)isImageFile:(char*)arg1 isPDF:(char*)arg2 ;
-(void)removeEmptyAttachment;
-(NSString *)bestMimeType;
-(id)preferredFilenameWithoutHiddenExtension;
-(NSString *)mimeType;
-(NSString *)contentID;
-(NSString *)messageID;
-(char)isPlaceholder;
-(void)setMimeType:(NSString *)arg1 ;
-(NSData *)resourceForkData;
-(unsigned short)finderFlags;
-(char)isRemotelyAccessed;
-(char)emptyAttachmentExists;
-(NSArray *)whereFroms;
-(NSDictionary *)quarantineProperties;
-(unsigned)creator;
-(void)setMessageID:(NSString *)arg1 ;
-(unsigned)type;
-(CGSize)imageSize;
-(void)setType:(unsigned)arg1 ;
-(unsigned long long)approximateSize;
-(id)appleSingleDataWithFilename:(const char*)arg1 length:(unsigned long long)arg2 ;
-(id)appleDoubleDataWithFilename:(const char*)arg1 length:(unsigned long long)arg2 ;
-(void)setIcon:(NSImage *)arg1 ;
-(NSImage *)icon;
-(void)_initIcon:(id)arg1 ;
-(void)_initIconWithData:(id)arg1 ;
-(char)_hasIcon;
-(id)_iconData;
-(char)_readContentsFromURL:(id)arg1 path:(id)arg2 itemKind:(id)arg3 options:(unsigned long long)arg4 error:(id*)arg5 ;
-(id)_addChild:(id)arg1 forUniqueFileName:(id)arg2 ;
-(void)_initDirectoryContents;
-(id)_initWithImpl:(id)arg1 preferredFileName:(id)arg2 uniqueFileName:(id)arg3 docInfo:(id)arg4 iconData:(id)arg5 ;
-(void)_removeParent:(id)arg1 ;
-(void)_observePreferredFileNameOfChild:(id)arg1 ;
-(void)_setFileType:(id)arg1 ;
-(char)_matchesItemKind:(id)arg1 modificationDate:(id)arg2 ;
-(char)matchesContentsOfURL:(id)arg1 ;
-(char)readFromURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(void)_removeChild:(id)arg1 forUniqueFileName:(id)arg2 ;
-(void)_forWritingToURL:(id)arg1 returnContentsLazyReadingError:(id*)arg2 ;
-(NSURL *)symbolicLinkDestinationURL;
-(void)_updateDescendantFileNames;
-(char)_writeContentsToURL:(id)arg1 path:(id)arg2 originalContentsURL:(id)arg3 tryHardLinking:(char)arg4 didHardLinking:(char*)arg5 error:(id*)arg6 ;
-(id)_attributesToWrite;
-(id)_newImpl;
-(void)_addParent:(id)arg1 ;
-(void)_resetFileModificationDate;
-(id)_uniqueFileNameOfChild:(id)arg1 ;
-(id)initWithSerializedRepresentation:(id)arg1 ;
-(id)initDirectoryWithFileWrappers:(id)arg1 ;
-(id)_fileType;
-(id)initSymbolicLinkWithDestination:(id)arg1 ;
-(char)needsToBeUpdatedFromPath:(id)arg1 ;
-(id)symbolicLinkDestination;
-(id)init;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)_init;
-(NSString *)filename;
-(id)initWithPath:(id)arg1 ;
-(void)setFilename:(NSString *)arg1 ;
-(id)initWithURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(char)isRegularFile;
-(NSData *)regularFileContents;
-(char)writeToFile:(id)arg1 atomically:(char)arg2 updateFilenames:(char)arg3 ;
-(char)writeToURL:(id)arg1 options:(unsigned long long)arg2 originalContentsURL:(id)arg3 error:(id*)arg4 ;
-(id)initRegularFileWithContents:(id)arg1 ;
-(void)setPreferredFilename:(NSString *)arg1 ;
-(char)isDirectory;
-(id)_icon;
-(NSString *)preferredFilename;
-(NSDictionary *)fileAttributes;
-(void)setFileAttributes:(NSDictionary *)arg1 ;
-(id)_fullDescription:(char)arg1 ;
-(char)updateFromPath:(id)arg1 ;
-(char)isSymbolicLink;
-(id)initSymbolicLinkWithDestinationURL:(id)arg1 ;
-(NSData *)serializedRepresentation;
-(void)_setIcon:(id)arg1 ;
-(void)_loadIcon;
-(id)addFileWrapper:(id)arg1 ;
-(void)removeFileWrapper:(id)arg1 ;
-(NSDictionary *)fileWrappers;
-(id)keyForFileWrapper:(id)arg1 ;
-(id)addFileWithPath:(id)arg1 ;
-(id)addRegularFileWithContents:(id)arg1 preferredFilename:(id)arg2 ;
-(id)addSymbolicLinkWithDestination:(id)arg1 preferredFilename:(id)arg2 ;
@end

