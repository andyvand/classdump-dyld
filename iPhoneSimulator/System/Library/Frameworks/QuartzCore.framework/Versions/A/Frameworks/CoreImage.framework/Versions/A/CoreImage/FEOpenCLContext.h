/*
* This header is generated by classdump-dyld 0.7
* on Saturday, February 14, 2015 at 11:49:52 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/QuartzCore.framework/Versions/A/Frameworks/CoreImage.framework/Versions/A/CoreImage
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CoreImage/CoreImage-Structs.h>
#import <CoreImage/FEContext.h>

@class NSPointerArray, NSMutableDictionary;

@interface FEOpenCLContext : FEContext {

	cl_command_queueRef clQueue;
	cl_device_idRef clDevice;
	cl_contextRef clContext;
	cl_sampler* clSamplers[12];
	int clTarget;
	BOOL isSharedCPUContext;
	NSPointerArray* programs;
	NSMutableDictionary* kernel_dict;
	FEOpenCLProgram* current_program;
	FEOpenCLProgram* pass_through_program;
	FEOpenCLProgram* fake_program;
	FEOpenCLProgram* clear_program;
	dispatch_group_sRef preCompileDispatchGroup;
	cl_programRef preCompileGaussianBlurProgram;
	cl_programRef preCompileConvolutionNxNProgram;
	cl_programRef preCompilePartialAreaHistogramProgram;
	fe_cl_buffer_structRef dest;
	CGRect dest_bounds;
	fe_cl_buffer_structRef user_dest;
	CGRect user_dest_bounds;
	fe_cl_texture_struct* null_texture[6];
	fe_cl_texture_struct* texunits[16];
	unsigned wrapModes[16];
	unsigned filterModes[16];
	unsigned long long locals_count;
	BOOL transposed;
	BOOL print_active_program;
	char buildProgramOptions[256];
	unsigned max_work_item_dims;
	unsigned long long* max_work_item_sizes;
	FETextureCache* cl_texture_cache;
	unsigned long long texture_cache_size;
	float max_texture_size;
	unsigned long long cl_device_memory_size;
	fe_kernel_table_structRef cl_kernel_table;
	FEFormatSet supportedFormats;
	unsigned max_sampler_count;
	unsigned max_read_image_args;
	unsigned long long max_param_size;
	SCD_Struct_FE46* gl;
	CGSize max_dim_CL_stream;
	unsigned long long max_alloc_size_CL;
	unsigned dest_flipped : 1;
	unsigned user_dest_flipped : 1;
	unsigned checked_GL_extensions : 1;
	unsigned has_texture_range : 1;
	unsigned enable_image_cache : 1;
	float locals[256];

}
+(void)readOpenCLBuffer:(fe_cl_buffer_structRef)arg1 width:(unsigned long long)arg2 height:(unsigned long long)arg3 bytesPerRow:(unsigned long long)arg4 target:(void*)arg5 ;
+(void)copyImageFormatFrom:(const cl_image_format*)arg1 to:(cl_image_format*)arg2 ;
+(FEFormatSet)supportedFormatsForDeviceType:(unsigned long long)arg1 ;
+(int)instanceCount;
+(int)samplerIndexForNormalized:(char)arg1 wrapMode:(unsigned)arg2 filterMode:(unsigned)arg3 ;
+(void)purgeTextureCache;
+(FEFormatSet)supportedFormatsForDeviceIsCPU:(char)arg1 imageTypeIs2D:(char)arg2 readWriteImages:(char)arg3 ;
+(void)populateFormatSet:(FEFormatSet*)arg1 deviceType:(unsigned long long)arg2 ;
-(void)finish;
-(char)createCLFormatWithFormat:(FEFormat)arg1 outputFormat:(cl_image_format*)arg2 ;
-(fe_cl_buffer_structRef)createCLBufferWithMemoryFlags:(unsigned long long)arg1 format:(cl_image_format*)arg2 width:(unsigned long long)arg3 height:(unsigned long long)arg4 depth:(unsigned long long)arg5 bytesPerRow:(unsigned long long)arg6 hostPointer:(void*)arg7 surface:(IOSurfaceRef)arg8 plane:(unsigned)arg9 ;
-(char)setDestination:(fe_bitmap_struct*)arg1 bounds:(CGRect)arg2 ;
-(void)unsetDestination;
-(char)setDestinationToCLBuffer:(fe_cl_buffer_structRef)arg1 bounds:(CGRect)arg2 ;
-(void)unsetCLBufferDestination;
-(void)readOpenCLBuffer:(fe_cl_buffer_structRef)arg1 width:(unsigned long long)arg2 height:(unsigned long long)arg3 bytesPerRow:(unsigned long long)arg4 target:(void*)arg5 ;
-(char)isGPUBased;
-(int)deviceVendorID;
-(void)setOpenGLContext:(void*)arg1 cglBased:(BOOL)arg2 ;
-(fe_cl_buffer_structRef)createCLBufferWithMemoryFlags:(unsigned long long)arg1 format:(cl_image_format*)arg2 width:(unsigned long long)arg3 height:(unsigned long long)arg4 depth:(unsigned long long)arg5 bytesPerRow:(unsigned long long)arg6 hostPointer:(void*)arg7 fe_flags:(unsigned)arg8 surface:(IOSurfaceRef)arg9 plane:(unsigned)arg10 ;
-(void)setMaximumOpenGLTextureRectSize:(float)arg1 ;
-(void)renderUsingGPUWithRenderCallback:(void*)arg1 destinationFormat:(FEFormat)arg2 workingFormat:(FEFormat)arg3 extent:(CGRect)arg4 transform:(CGAffineTransform)arg5 info:(void*)arg6 ;
-(void)renderBufferToContext:(fe_cl_buffer_structRef)arg1 format:(FEFormat)arg2 extent:(CGRect)arg3 ;
-(void)_getTextureLimitsSize:(CGSize*)arg1 bytes:(unsigned long long*)arg2 ;
-(char)supportsBufferFormat:(FEFormat)arg1 ;
-(cl_contextRef)getCLContext;
-(fe_texture_object_struct*)textureForBuffer:(id)arg1 target:(unsigned)arg2 wrapMode:(unsigned)arg3 filterMode:(unsigned)arg4 ;
-(void*)getOpenGLContext:(BOOL*)arg1 isShared:(BOOL*)arg2 ;
-(fe_cl_buffer_structRef)createCLBufferWithMemoryFlags:(unsigned long long)arg1 clFormat:(cl_image_format)arg2 width:(unsigned long long)arg3 height:(unsigned long long)arg4 nativeOpenGLContext:(CGLContextObject*)arg5 ;
-(void)activateBuffer:(id)arg1 data:(void*)arg2 ;
-(char)bindTexture:(fe_texture_object_struct*)arg1 unit:(int)arg2 ;
-(void)setLocalVariables:(const float*)arg1 count:(unsigned long long)arg2 ;
-(void)unbindTextureWithUnit:(int)arg1 dirty:(char)arg2 ;
-(cl_samplerRef)newSamplerWithWrapMode:(unsigned)arg1 filterMode:(unsigned)arg2 normalized:(char)arg3 ;
-(void)_dispatchPreCompile;
-(FETextureCache*)GPUTextureCacheWithCreate:(char)arg1 ;
-(FETextureCache*)CPUTextureCacheWithCreate:(char)arg1 ;
-(void)collectBitmapsForAllTiles:(char)arg1 ;
-(void)getKernelTarget:(fe_kernel_target_struct*)arg1 args:(const fe_kernel_args_struct*)arg2 ;
-(void)_quad:(const fe_vertex_struct*)arg1 ;
-(void)testIdleTiles;
-(FETextureCache*)textureCacheWithCreate:(char)arg1 ;
-(char)isUsingImageCache;
-(void)_purge;
-(void)_waitForPreCompilation;
-(cl_kernelRef)_getPreCompiledKernel:(id)arg1 ;
-(id)printTreeName;
-(void)setWrapMode:(unsigned)arg1 forTexUnit:(unsigned)arg2 ;
-(void)setFilterMode:(unsigned)arg1 forTexUnit:(unsigned)arg2 ;
-(char)needsWrapModeForTextureMatch;
-(fe_kernel_table_structRef)kernelTable;
-(FEOpenCLProgram*)_findInProgramCache:(fe_kernel_struct*)arg1 target:(const fe_kernel_target_struct*)arg2 ;
-(void)_addToProgramCache:(cl_programRef)arg1 CLkernel:(cl_kernelRef)arg2 program:(FEOpenCLProgram*)arg3 kernel:(fe_kernel_struct*)arg4 target:(const fe_kernel_target_struct*)arg5 ;
-(cl_kernelRef)_findKernelInDictionaryCache:(id)arg1 ;
-(void)_addKernelToDictionaryCache:(id)arg1 kernel:(cl_kernelRef)arg2 ;
-(char)_loadKernel:(fe_kernel_struct*)arg1 target:(const fe_kernel_target_struct*)arg2 testOnly:(char)arg3 ;
-(const sl_program_limits_struct*)programLimitsForType:(unsigned)arg1 ;
-(char)supportsCustomQuad;
-(void)_customQuad:(const fe_vertex_struct*)arg1 kernel:(fe_kernel_struct*)arg2 callbackObject:(id)arg3 ;
-(fe_texture_object_struct*)textureWithIOSurface:(IOSurfaceRef)arg1 size:(CGSize)arg2 plane:(unsigned long long)arg3 format:(FEFormat)arg4 target:(unsigned)arg5 wrapMode:(unsigned)arg6 filterMode:(unsigned)arg7 ;
-(void)getBitmap:(fe_bitmap_struct*)arg1 ;
-(void)collect;
-(fe_texture_object_struct*)_textureForBitmap:(FETiledBitmap*)arg1 bounds:(CGRect*)arg2 target:(unsigned)arg3 wrapMode:(unsigned)arg4 filterMode:(unsigned)arg5 buffer:(id*)arg6 ;
-(fe_texture_object_struct*)nullTextureForTarget:(unsigned)arg1 ;
-(void)setModeForTexture:(fe_texture_object_struct*)arg1 target:(unsigned)arg2 format:(FEFormat)arg3 wrapMode:(unsigned)arg4 filterMode:(unsigned)arg5 ;
-(char)_textureIsTilableForBitmap:(FETiledBitmap*)arg1 target:(unsigned)arg2 ;
-(fe_texture_object_struct*)noOpTextureForBitmap:(FETiledBitmap*)arg1 bounds:(CGRect*)arg2 target:(unsigned)arg3 wrapMode:(unsigned)arg4 filterMode:(unsigned)arg5 buffer:(id*)arg6 ;
-(void)textureTileMapForBitmap:(FETiledBitmap*)arg1 shape:(const FEShape*)arg2 target:(unsigned)arg3 filterMode:(unsigned)arg4 callback:(/*function pointer*/void*)arg5 context:(void*)arg6 ;
-(fe_texture_object_struct*)textureForWrap:(unsigned long long)arg1 bounds:(CGRect)arg2 format:(FEFormat)arg3 target:(unsigned)arg4 wrapMode:(unsigned)arg5 filterMode:(unsigned)arg6 ;
-(fe_texture_object_struct*)textureForBitmapProvider:(FETiledBitmap*)arg1 bounds:(CGRect*)arg2 target:(unsigned)arg3 wrapMode:(unsigned)arg4 filterMode:(unsigned)arg5 buffer:(id*)arg6 ;
-(CGLShareGroupRecRef)getShareGroup;
-(fe_cl_buffer_structRef)createCLBufferWithMemoryFlags:(unsigned long long)arg1 format:(FEFormat)arg2 width:(unsigned long long)arg3 height:(unsigned long long)arg4 nativeOpenGLContext:(CGLContextObject*)arg5 ;
-(void)releaseCLBuffer:(fe_cl_buffer_structRef)arg1 ;
-(fe_cl_buffer_structRef)createCLBufferWithMemoryFlags:(unsigned long long)arg1 textureID:(unsigned)arg2 target:(unsigned)arg3 format:(FEFormat)arg4 width:(unsigned long long)arg5 height:(unsigned long long)arg6 nativeOpenGLContext:(CGLContextObject*)arg7 ;
-(fe_texture_object_struct*)_readbackTexture:(unsigned long long)arg1 bounds:(CGRect)arg2 format:(FEFormat)arg3 target:(unsigned)arg4 wrapMode:(unsigned)arg5 filterMode:(unsigned)arg6 ;
-(void)finalize;
-(void)dealloc;
-(void)flush;
-(id)initWithOptions:(const fe_params_struct*)arg1 ;
@end

