/*
* This header is generated by classdump-dyld 0.7
* on Saturday, February 14, 2015 at 11:50:05 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/MapKit.framework/Versions/A/MapKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MapKit/MapKit-Structs.h>
#import <MapKit/GEOURLSerializable.h>

@protocol GEOMapItemPrivate;
@class NSString, _MKMapItemPlaceAttribution, _MKMapItemPhotosAttribution, _MKMapItemReviewsAttribution, MKMapItemMetadata, GEOPlace, NSArray, MKPlacemark, NSURL, GEOMapRegion, GEOAddress, GEOPDFlyover, NSData, GEOFeatureStyleAttributes;

@interface MKMapItem : NSObject <GEOURLSerializable> {

	char _isCurrentLocation;
	NSString* _extSessionGuid;
	char _isPlaceHolder;
	id<GEOMapItemPrivate> _geoMapItem;
	_MKMapItemPlaceAttribution* _attribution;
	_MKMapItemPhotosAttribution* _photosAttribution;
	_MKMapItemReviewsAttribution* _reviewsAttribution;
	MKMapItemMetadata* _metadata;
	GEOPlace* _place;
	NSString* singleLineAddress;
	NSArray* formattedAddressLinesCache;
	NSString* ABUUID;

}

@property (nonatomic,readonly) char looksLikeBusiness; 
@property (nonatomic,readonly) NSString * formattedNumberOfReviews; 
@property (nonatomic,readonly) NSString * formattedNumberOfReviewsIncludingProvider; 
@property (getter=_hasDisplayableAmenities,readonly) char hasDisplayableAmenities; 
@property (nonatomic,readonly) MKPlacemark * placemark; 
@property (assign,nonatomic) char isCurrentLocation;                                                                      //@synthesize isCurrentLocation=_isCurrentLocation - In the implementation block
@property (nonatomic,copy) NSString * name; 
@property (nonatomic,copy) NSString * phoneNumber; 
@property (nonatomic,retain) NSURL * url; 
@property (nonatomic,readonly) MKMapItemMetadata * metadata;                                                              //@synthesize metadata=_metadata - In the implementation block
@property (nonatomic,readonly) GEOPlace * place;                                                                          //@synthesize place=_place - In the implementation block
@property (nonatomic,copy) NSString * extSessionGuid;                                                                     //@synthesize extSessionGuid=_extSessionGuid - In the implementation block
@property (getter=_geoMapItem,nonatomic,readonly) id<GEOMapItemPrivate> geoMapItem; 
@property (nonatomic,readonly) NSString * yelpID; 
@property (nonatomic,readonly) char isPlaceHolder;                                                                        //@synthesize isPlaceHolder=_isPlaceHolder - In the implementation block
@property (getter=_hasSessionGUID,nonatomic,readonly) char hasSessionGUID; 
@property (getter=_sessionGUID,nonatomic,readonly) SCD_Struct_MK15 sessionGUID; 
@property (getter=_sequenceNumber,nonatomic,readonly) unsigned sequenceNumber; 
@property (getter=_coordinate,nonatomic,readonly) CGPoint coordinate; 
@property (getter=_displayMapRegion,nonatomic,readonly) GEOMapRegion * displayMapRegion; 
@property (getter=_geoFenceMapRegion,nonatomic,readonly) GEOMapRegion * geoFenceMapRegion; 
@property (getter=_geoAddress,nonatomic,readonly) GEOAddress * geoAddress; 
@property (getter=_hasFlyover,nonatomic,readonly) char hasFlyover; 
@property (getter=_flyover,nonatomic,readonly) GEOPDFlyover * flyover; 
@property (getter=_hasFlyoverAnnouncementMessage,nonatomic,readonly) char hasFlyoverAnnouncement; 
@property (getter=_flyoverAnnouncementMessage,nonatomic,readonly) NSString * flyoverAnnouncement; 
@property (getter=_hasMUID,nonatomic,readonly) char hasMUID; 
@property (getter=_muid,nonatomic,readonly) unsigned long long muid; 
@property (getter=_firstLocalizedCategoryName,nonatomic,readonly) NSString * firstLocalizedCategoryName; 
@property (getter=_hasUserRatingScore,nonatomic,readonly) char hasUserRatingScore; 
@property (getter=_sampleSizeForUserRatingScore,nonatomic,readonly) unsigned sampleSizeForUserRatingScore; 
@property (getter=_normalizedUserRatingScore,nonatomic,readonly) float normalizedUserRatingScore; 
@property (getter=_hasPriceRange,nonatomic,readonly) char hasPriceRange; 
@property (getter=_priceRangeString,nonatomic,readonly) NSString * priceRangeString; 
@property (getter=_hasFormattedTelephone,nonatomic,readonly) char hasFormattedTelephone; 
@property (getter=_formattedTelephone,nonatomic,readonly) NSString * formattedTelephone; 
@property (getter=_shortAddress,nonatomic,readonly) NSString * shortAddress; 
@property (getter=_hasAnyAmenities,nonatomic,readonly) char hasAnyAmenities; 
@property (getter=_hasDeliveryAmenity,nonatomic,readonly) char hasDeliveryAmenity; 
@property (getter=_hasDelivery,nonatomic,readonly) char hasDelivery; 
@property (getter=_hasGoodForKidsAmenity,nonatomic,readonly) char hasGoodForKidsAmenity; 
@property (getter=_goodForKids,nonatomic,readonly) char goodForKids; 
@property (getter=_hasTakesReservationsAmenity,nonatomic,readonly) char hasTakesReservationsAmenity; 
@property (getter=_takesReservations,nonatomic,readonly) char takesReservations; 
@property (getter=_hasResolvablePartialInformation,nonatomic,readonly) char hasResolvablePartialInformation; 
@property (getter=_hasOperatingHours,nonatomic,readonly) char hasOperatingHours; 
@property (getter=_hasLocalizedOperatingHours,nonatomic,readonly) char hasLocalizedOperatingHours; 
@property (getter=_localizedOperatingHours,nonatomic,readonly) NSString * localizedOperatingHours; 
@property (getter=_disambiguationName,nonatomic,readonly) NSString * disambiguationName; 
@property (getter=_openState,nonatomic,readonly) unsigned openState; 
@property (getter=_placeDataAsData,nonatomic,readonly) NSData * placeDataAsData; 
@property (getter=_placeAsData,nonatomic,readonly) NSData * placeAsData; 
@property (getter=_poiSurveyURLString,nonatomic,readonly) NSString * poiSurveyURLString; 
@property (nonatomic,readonly) NSArray * formattedAddressLines; 
@property (nonatomic,copy) NSString * singleLineAddress; 
@property (nonatomic,retain) NSArray * formattedAddressLinesCache; 
@property (nonatomic,retain) NSString * ABUUID; 
@property (getter=_needsAttribution,nonatomic,readonly) char needsAttribution; 
@property (getter=_webURL,nonatomic,copy,readonly) NSURL * webURL; 
@property (getter=_providerURL,nonatomic,copy,readonly) NSURL * providerURL; 
@property (getter=_vendorID,nonatomic,copy,readonly) NSString * vendorID; 
@property (getter=_reviewsDisplayName,nonatomic,readonly) NSString * reviewsDisplayName; 
@property (getter=_attribution,nonatomic,readonly) _MKMapItemPlaceAttribution * attribution;                              //@synthesize attribution=_attribution - In the implementation block
@property (getter=_photosAttribution,nonatomic,readonly) _MKMapItemPhotosAttribution * photosAttribution;                 //@synthesize photosAttribution=_photosAttribution - In the implementation block
@property (getter=_reviewsAttribution,nonatomic,readonly) _MKMapItemReviewsAttribution * reviewsAttribution;              //@synthesize reviewsAttribution=_reviewsAttribution - In the implementation block
@property (getter=_styleAttributes,nonatomic,readonly) GEOFeatureStyleAttributes * styleAttributes; 
@property (getter=_customIconID,nonatomic,readonly) unsigned long long customIconID; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)mapItemWithSerializedPlaceData:(id)arg1 ;
+(id)urlForMapItems:(id)arg1 options:(id)arg2 ;
+(id)_itemWithGeoMapItem:(id)arg1 ;
+(id)mapItemForCurrentLocation;
+(char)openMapsWithItems:(id)arg1 launchOptions:(id)arg2 ;
+(id)urlForMapItem:(id)arg1 options:(id)arg2 ;
+(id)mapItemWithDictionary:(id)arg1 ;
+(id)standardOptionsFromPlistCompatibleDictionary:(id)arg1 ;
+(id)plistCompatibleDictionaryFromStandardOptions:(id)arg1 ;
+(id)mapItemsFromURL:(id)arg1 options:(id*)arg2 ;
+(void)_mapItemsWithSerializedPlaceDataResponse:(id)arg1 handler:(/*^block*/id)arg2 ;
+(id)_mapItemWithWithLocation:(id)arg1 addressDictionary:(id)arg2 name:(id)arg3 businessURL:(id)arg4 phoneNumber:(id)arg5 sessionID:(id)arg6 muid:(unsigned long long)arg7 attributionID:(id)arg8 sampleSizeForUserRatingScore:(unsigned)arg9 normalizedUserRatingScore:(float)arg10 ;
+(unsigned long long)_placeCardIDForMapsDataString:(id)arg1 ;
-(MKMapItemMetadata *)metadata;
-(char)looksLikeBusiness;
-(NSString *)yelpID;
-(id)_reviewsAttributionWithSourceStringFormat:(id)arg1 moreSourceStringFormat:(id)arg2 ;
-(id)_geoAddress;
-(NSString *)singleLineAddress;
-(id)_placeCardContact;
-(char)openInMapsWithLaunchOptions:(id)arg1 ;
-(id)initWithGeoMapItem:(id)arg1 isPlaceHolderPlace:(char)arg2 ;
-(id)initWithPlace:(id)arg1 ;
-(id)initWithCLLocation:(id)arg1 ;
-(id)initWithPlace:(id)arg1 isPlaceHolderPlace:(char)arg2 ;
-(CGPoint)_coordinate;
-(id)_getBusiness;
-(void)setExtSessionGuid:(NSString *)arg1 ;
-(id)initWithPlace:(id)arg1 sessionGuid:(id)arg2 ;
-(id)_attributionWithDisplayName:(id)arg1 attributionFormat:(id)arg2 logo:(id)arg3 ;
-(NSArray *)formattedAddressLinesCache;
-(void)setFormattedAddressLinesCache:(NSArray *)arg1 ;
-(void)setPhoneNumber:(NSString *)arg1 ;
-(id)_displayMapRegion;
-(id)_geoFenceMapRegion;
-(id)_priceRangeString;
-(char)_hasFormattedTelephone;
-(id)_formattedTelephone;
-(id)_shortAddress;
-(id)_firstLocalizedCategoryName;
-(char)_hasLocalizedOperatingHours;
-(id)_localizedOperatingHours;
-(id)_reviewsDisplayName;
-(id)_infoAttributionWithSourceStringFormat:(id)arg1 moreSourceStringFormat:(id)arg2 ;
-(id)_photoAttributionWithSourceStringFormat:(id)arg1 moreSourceStringFormat:(id)arg2 ;
-(NSString *)extSessionGuid;
-(char)isPlaceHolder;
-(void)setSingleLineAddress:(NSString *)arg1 ;
-(NSString *)ABUUID;
-(void)setABUUID:(NSString *)arg1 ;
-(NSString *)formattedNumberOfReviews;
-(NSString *)formattedNumberOfReviewsIncludingProvider;
-(id)sharingURL;
-(id)thumbnailWithSize:(CGSize)arg1 annotationView:(id)arg2 ;
-(char)_hasDisplayableAmenities;
-(id)_mapsDataString;
-(id)_styleAttributes;
-(id)_flyover;
-(id)initWithAddressDictionary:(id)arg1 ;
-(NSArray *)formattedAddressLines;
-(unsigned)_sequenceNumber;
-(GEOPlace *)place;
-(id)initWithUrlRepresentation:(id)arg1 ;
-(id)urlRepresentation;
-(char)_isEquivalentURLRepresentationTo:(id)arg1 ;
-(SCD_Struct_MK15)_sessionGUID;
-(char)_hasMUID;
-(unsigned long long)_muid;
-(char)_hasUserRatingScore;
-(unsigned)_sampleSizeForUserRatingScore;
-(float)_normalizedUserRatingScore;
-(char)_hasPriceRange;
-(id)_localizedCategoryNamesForType:(unsigned)arg1 ;
-(char)_hasLocalizedCategoryNamesForType:(unsigned)arg1 ;
-(char)_hasAnyAmenities;
-(char)_hasDeliveryAmenity;
-(char)_hasDelivery;
-(char)_hasGoodForKidsAmenity;
-(char)_goodForKids;
-(char)_hasTakesReservationsAmenity;
-(char)_takesReservations;
-(char)_hasOperatingHours;
-(id)_urlForPhotoWithUID:(id)arg1 ;
-(id)_webURL;
-(int)_recommendedTransportType;
-(unsigned)_travelTimeForTransportType:(int)arg1 ;
-(unsigned)_travelDistanceForTransportType:(int)arg1 ;
-(id)_urlForReviewWithUID:(id)arg1 ;
-(id)_urlForWritingAReview;
-(id)_placeAsData;
-(id)_placeDataAsData;
-(char)_hasResolvablePartialInformation;
-(char)_hasSessionGUID;
-(char)_hasFlyover;
-(char)_hasFlyoverAnnouncementMessage;
-(id)_flyoverAnnouncementMessage;
-(id)_disambiguationName;
-(unsigned)_openState;
-(char)_needsAttribution;
-(id)_providerURL;
-(id)_vendorID;
-(id)_attribution;
-(id)_photosAttribution;
-(id)_reviewsAttribution;
-(id)_poiSurveyURLString;
-(unsigned long long)_customIconID;
-(id)_geoMapItem;
-(void)setIsCurrentLocation:(char)arg1 ;
-(char)isCurrentLocation;
-(id)initWithPlacemark:(id)arg1 ;
-(NSString *)description;
-(void)setName:(NSString *)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(NSURL *)url;
-(NSString *)name;
-(void)setUrl:(NSURL *)arg1 ;
-(id)dictionaryRepresentation;
-(NSString *)phoneNumber;
-(MKPlacemark *)placemark;
@end

