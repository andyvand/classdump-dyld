/*
* This header is generated by classdump-dyld 0.7
* on Saturday, February 14, 2015 at 11:50:34 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/lib/libmecabra.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <libmecabra.dylib/libmecabra.dylib-Structs.h>
#import <libmecabra.dylib/NSCopying.h>

@class NSString;

@interface MecabraCandidate : NSObject <NSCopying> {

	void* _rawCandidate;

}

@property (nonatomic,readonly) char isConversionCandidate; 
@property (nonatomic,readonly) char isExtensionCandidate; 
@property (nonatomic,readonly) char isEmojiCandidate; 
@property (nonatomic,readonly) char isPersonName; 
@property (nonatomic,readonly) char isLearningDictionaryCandidate; 
@property (nonatomic,readonly) char isUserWordCandidate; 
@property (nonatomic,readonly) char isPredictionCandidate; 
@property (nonatomic,readonly) char isFuzzyMatchCandidate; 
@property (nonatomic,readonly) char isAutocorrectedCandidate; 
@property (nonatomic,readonly) int type; 
@property (nonatomic,readonly) unsigned long long wordCount; 
@property (nonatomic,readonly) NSString * surface; 
@property (nonatomic,readonly) NSString * analysisString; 
@property (nonatomic,readonly) NSString * convertedAnalysisString; 
@property (nonatomic,readonly) NSString * dictionaryReading; 
@property (nonatomic,readonly) MecabraCandidateBase* rawCandidate; 
@property (nonatomic,readonly) ConversionCandidate* rawConversionCandidate; 
+(id)createSyntheticCandidate:(id)arg1 withLexicon:(void*)arg2 language:(int)arg3 ;
-(id)initWithCandidate:(MecabraCandidateBase*)arg1 ;
-(ConversionCandidate*)rawConversionCandidate;
-(char)isEmojiCandidate;
-(NSString *)dictionaryReading;
-(MecabraCandidateBase*)rawCandidate;
-(NSString *)analysisString;
-(unsigned short)matchedLengthType;
-(char)isConversionCandidate;
-(NSString *)convertedAnalysisString;
-(char)isPersonName;
-(char)isExtensionCandidate;
-(char)isLearningDictionaryCandidate;
-(char)isUserWordCandidate;
-(char)isPredictionCandidate;
-(char)isFuzzyMatchCandidate;
-(long long)phraseBoundaryAfterWordAtIndex:(long long)arg1 ;
-(unsigned short)wordLengthAtIndex:(unsigned long long)arg1 ;
-(unsigned short)wordReadingLengthAtIndex:(unsigned long long)arg1 ;
-(char)wordIsFromSystemDictionaryAtIndex:(unsigned long long)arg1 ;
-(CFArrayRef)copySyllableLengthArrayForWordAtIndex:(unsigned long long)arg1 ;
-(unsigned short)lcAttrAtIndex:(unsigned long long)arg1 ;
-(unsigned short)rcAttrAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)trieValueAtIndex:(unsigned long long)arg1 ;
-(unsigned short)lastPrefixValue;
-(unsigned short)matchType;
-(CFArrayRef)copySyllableLengthArrayInAnalysisString;
-(CFArrayRef)copySyllableLengthArrayInConvertedAnalysisString;
-(CFArrayRef)copySyllableLengthArrayInDictionaryReading;
-(SCD_Struct_Me4)wordRangeAtIndex:(long long)arg1 ;
-(id)syllablesInAnalysisString;
-(id)syllablesInConvertedAnalysisString;
-(id)syllablesInDictionaryReading;
-(id)syllablesInString:(id)arg1 syllableLengths:(id)arg2 ;
-(char)isAutocorrectedCandidate;
-(id)convertedAnalysisStringForFirstSyllable;
-(id)syllabifiedAnalysisString;
-(id)syllabifiedConvertedAnalysisString;
-(id)syllabifiedDictionaryReading;
-(id)wordReadings;
-(id)wordIDs;
-(void)setWeight:(unsigned long long)arg1 ;
-(long long)weight;
-(void)dealloc;
-(id)description;
-(char)isEqual:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(int)type;
-(unsigned short)kind;
-(unsigned long long)wordCount;
-(id)words;
-(NSString *)surface;
@end

