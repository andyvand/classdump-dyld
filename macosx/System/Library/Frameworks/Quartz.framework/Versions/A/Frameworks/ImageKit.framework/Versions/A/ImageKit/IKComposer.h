/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:01:48 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <ImageKit/ImageKit-Structs.h>
@class IKImageView, IKRootLayer, IKImageBackgroundLayer, IKImageLayer, CALayer, NSMutableArray, NSMutableDictionary, NSURL, IKFilterChain, NSColor;

@interface IKComposer : NSObject {

	IKImageView* _view;
	id _viewDelegate;
	IKRootLayer* _rootLayer;
	IKImageBackgroundLayer* _imageBackgroundLayer;
	IKImageLayer* _imageLayer;
	CALayer* _userOverlayImage;
	CALayer* _userOverlayRoot;
	CALayer* _mouseDownLayer;
	NSMutableArray* _layers;
	NSMutableDictionary* _registeredLayers;
	NSURL* _URL;
	IKFilterChain* _filterChain;
	long long _toolMode;
	long long _oldToolMode;
	int _selectionType;
	int _annotationType;
	int _maxTextureSize;
	NSColor* _backgroundColor;
	CGColorRef _cgBackgroundColor;
	char _viewDelegateRespondsToWillChange;
	char _viewDelegateRespondsToDidChange;
	char _viewDelegateRespondsToDidChangeWithParameters;
	char _viewDelegateRespondsToUndoManagerForOperation;
	char _needToCreateImageForImageState;
	char _reuseImageLayer;
	char _isOpaque;

}

@property (assign) char reuseImageLayer;              //@synthesize reuseImageLayer=_reuseImageLayer - In the implementation block
@property (assign) char isOpaque;                     //@synthesize isOpaque=_isOpaque - In the implementation block
@property (retain) NSURL * URL;                       //@synthesize URL=_URL - In the implementation block
+(CGContextRef)createContextForCGImage:(CGImageRef)arg1 width:(unsigned long long)arg2 height:(unsigned long long)arg3 alphaInfo:(unsigned)arg4 data:(void*)arg5 ;
+(CGImageRef)imageFromURL:(id)arg1 imageState:(id)arg2 options:(id)arg3 ;
+(CGImageRef)imageFromCGImage:(CGImageRef)arg1 imageProperties:(id)arg2 imageState:(id)arg3 options:(id)arg4 ;
+(CGImageRef)createCopy:(CGImageRef)arg1 orientationTag:(int)arg2 ;
+(CGImageRef)createCopy:(CGImageRef)arg1 filterArray:(id)arg2 ;
-(char)canPaste;
-(int)selectionType;
-(void)imageDidChange;
-(id)imageProperties;
-(id)filterArray;
-(void)setFilterArray:(id)arg1 ;
-(id)filter:(id)arg1 valueForKey:(id)arg2 ;
-(void)filter:(id)arg1 setValue:(id)arg2 forKey:(id)arg3 ;
-(void)crop:(id)arg1 ;
-(void)selectionRectRemoved;
-(void)selectionRectAdded;
-(CGImageRef)createThumbnailWithMaximumSize:(CGSize)arg1 ;
-(void)updateFilter:(id)arg1 withParameters:(id)arg2 ;
-(void)filterAdded:(id)arg1 filterChain:(id)arg2 ;
-(void)filterRemoved:(id)arg1 filterChain:(id)arg2 ;
-(void)filterChainChanged:(id)arg1 ;
-(int)annotationType;
-(void)setAnnotationType:(int)arg1 ;
-(char)registerLayer:(id)arg1 ;
-(long long)toolMode;
-(void)addLayer:(id)arg1 linkedTo:(id)arg2 ;
-(id)undoManagerForOperation:(id)arg1 ;
-(void)doRemoveAnnotation:(id)arg1 ;
-(void)imageWillChange;
-(void)imageDidChange:(char)arg1 imageStateDidChange:(char)arg2 ;
-(id)imageLayer;
-(id)layerOfType:(id)arg1 ;
-(void)removeLayer:(id)arg1 ;
-(void)rotateImageLeft:(id)arg1 ;
-(void)rotateImageRight:(id)arg1 ;
-(char)reuseImageLayer;
-(void)hideKnobs;
-(void)showKnobs;
-(void)setRotationAngle:(double)arg1 centerPoint:(CGPoint)arg2 ;
-(void)flipImageHorizontal:(id)arg1 ;
-(void)flipImageVertical:(id)arg1 ;
-(void)closingDown;
-(void)setImageWithURL:(id)arg1 imageState:(id)arg2 options:(id)arg3 ;
-(void)setImage:(CGImageRef)arg1 imageProperties:(id)arg2 imageState:(id)arg3 options:(id)arg4 ;
-(void)setImageZoomFactor:(double)arg1 centerPoint:(CGPoint)arg2 ;
-(void)scrollToRect:(CGRect)arg1 ;
-(id)backgroundLayer;
-(void)setImageLayer:(id)arg1 ;
-(void)registerInternalLayers;
-(void)addCursorRectForToolMode;
-(void)setToolMode:(long long)arg1 ;
-(CGPoint)convertViewPointToImagePoint:(CGPoint)arg1 ;
-(CGRect)convertViewRectToImageRect:(CGRect)arg1 ;
-(CGPoint)convertImagePointToViewPoint:(CGPoint)arg1 ;
-(CGRect)convertImageRectToViewRect:(CGRect)arg1 ;
-(CGColorRef)cgBackgroundColor;
-(id)targetForSelector:(SEL)arg1 ;
-(void)viewDelegateChanged;
-(void)setOverlay:(id)arg1 forType:(id)arg2 ;
-(id)overlayForType:(id)arg1 ;
-(void)imageState:(id*)arg1 image:(CGImage*)arg2 options:(id)arg3 ;
-(CGImageRef)imageWithOptions:(id)arg1 ;
-(char)canCrop;
-(CGRect)selectionRectCG;
-(void)setSelectionRectCG:(CGRect)arg1 ;
-(void)setReuseImageLayer:(char)arg1 ;
-(id)filterChain;
-(void)setFilterChain:(id)arg1 ;
-(void)selectionRectDidChange:(CGRect)arg1 ;
-(void)setIsOpaque:(char)arg1 ;
-(void)_disableScreenUpdates;
-(void)setupDefaultLayers;
-(void)setupImageLayer;
-(void)resetToolMode;
-(CGImageRef)createNewImageWithCallback:(SEL)arg1 param:(id)arg2 applyFilters:(char)arg3 ;
-(CGImageRef)createImageWithCallback:(SEL)arg1 param:(id)arg2 ;
-(void)renderOptionsForOptionsCallback:(id)arg1 param:(id)arg2 ;
-(id)layerForTool:(long long)arg1 ;
-(id)imageState;
-(CGImageRef)imageForImageState;
-(void)applyPaste:(id)arg1 ;
-(id)createLayerForTool:(long long)arg1 event:(id)arg2 ;
-(id)layerForName:(id)arg1 ;
-(void)setSelectionType:(int)arg1 ;
-(CGColorRef)createCGColorFromNSColor:(id)arg1 ;
-(CGImageRef)cgImageFromSelection:(char)arg1 createSquarePixels:(char)arg2 ;
-(void)swapOldImage:(CGImageRef)arg1 oldState:(id)arg2 newImage:(CGImageRef)arg3 newState:(id)arg4 undoManager:(id)arg5 ;
-(CGImageRef)cgImageFromSelection:(char)arg1 ;
-(void)removeSelectionLayers;
-(void)applyPasteCallback:(id)arg1 layer:(id)arg2 ;
-(void)setupRootLayer;
-(void)setupImageBackgroundLayer;
-(id)layerForImage;
-(void)bind:(id)arg1 toLayer:(id)arg2 ;
-(void)unbindLayer:(id)arg1 ;
-(void)setValue:(id)arg1 forKey:(id)arg2 inObject:(id)arg3 ;
-(void)doAddAnnotation:(id)arg1 select:(char)arg2 ;
-(void)reassignFilterChain:(id)arg1 ;
-(void)applyPendingChanges;
-(id)mouseDownLayer;
-(void)setMouseDownLayer:(id)arg1 ;
-(int)maxTextureSize;
-(void)finalize;
-(void)dealloc;
-(void)setBackgroundColor:(id)arg1 ;
-(NSURL *)URL;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(CGImageRef)image;
-(char)performKeyEquivalent:(id)arg1 ;
-(char)isOpaque;
-(id)backgroundColor;
-(char)keyDown:(id)arg1 ;
-(void)selectAll:(id)arg1 ;
-(void)mouseDown:(id)arg1 ;
-(CGSize)imageSize;
-(void)copy:(id)arg1 ;
-(void)paste:(id)arg1 ;
-(void)scrollToPoint:(CGPoint)arg1 ;
-(id)initWithView:(id)arg1 ;
-(void)mouseDragged:(id)arg1 ;
-(void)changeColor:(id)arg1 ;
-(void)mouseUp:(id)arg1 ;
-(id)fileURL;
-(void)setURL:(NSURL *)arg1 ;
-(void)changeFont:(id)arg1 ;
-(void)_enableScreenUpdates;
-(id)imageView;
-(id)rootLayer;
-(void)cleanup;
@end

