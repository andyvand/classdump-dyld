/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:02:00 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <Foundation/Foundation-Structs.h>
@class NSURL, NSString, NSDictionary, NSArray;

@interface NSBundle : NSObject {

	unsigned long long _flags;
	id _cfBundle;
	unsigned long long _reserved2;
	Class _principalClass;
	id _initialPath;
	id _resolvedPath;
	id _reserved3;
	id _lock;

}

@property (getter=isLoaded,readonly) char loaded; 
@property (copy,readonly) NSURL * bundleURL; 
@property (copy,readonly) NSURL * resourceURL; 
@property (copy,readonly) NSURL * executableURL; 
@property (copy,readonly) NSURL * privateFrameworksURL; 
@property (copy,readonly) NSURL * sharedFrameworksURL; 
@property (copy,readonly) NSURL * sharedSupportURL; 
@property (copy,readonly) NSURL * builtInPlugInsURL; 
@property (copy,readonly) NSURL * appStoreReceiptURL; 
@property (copy,readonly) NSString * bundlePath; 
@property (copy,readonly) NSString * resourcePath; 
@property (copy,readonly) NSString * executablePath; 
@property (copy,readonly) NSString * privateFrameworksPath; 
@property (copy,readonly) NSString * sharedFrameworksPath; 
@property (copy,readonly) NSString * sharedSupportPath; 
@property (copy,readonly) NSString * builtInPlugInsPath; 
@property (copy,readonly) NSString * bundleIdentifier; 
@property (copy,readonly) NSDictionary * infoDictionary; 
@property (copy,readonly) NSDictionary * localizedInfoDictionary; 
@property (readonly) Class principalClass; 
@property (copy,readonly) NSArray * preferredLocalizations; 
@property (copy,readonly) NSArray * localizations; 
@property (copy,readonly) NSString * developmentLocalization; 
@property (copy,readonly) NSArray * executableArchitectures; 
+(id)pathForITunesStoreResource:(id)arg1 ofType:(id)arg2 ;
+(id)commerceKit;
+(id)safari_safariSharedBundle;
+(id)safari_defaultApplicationNameForUserAgent;
+(id)safari_safariFrameworkBundle;
+(id)safari_defaultBrowserBundleForScheme:(id)arg1 ;
+(void)safari_setSafariAsDefaultHTTPHandler;
+(char)safari_isSafariDefaultHTTPHandler;
+(id)safari_bundlesFromDirectory:(id)arg1 bundleType:(id)arg2 ;
+(id)safari_browserBundlesForSampleURL:(id)arg1 ;
+(id)safari_defaultBrowserBundle;
+(id)_mapkitBundle;
+(id)__vkBundle;
+(char)mainBundleIsXcode;
+(id)__geoBundle;
+(id)frameworkBundleForBinaryImagePath:(id)arg1 ;
+(id)bundleForBinaryImagePath:(id)arg1 ;
+(id)currentNibPath;
+(id)currentNibLoadingBundle;
+(void)pushNibLoadingBundle:(id)arg1 ;
+(void)popNibLoadingBundle;
+(void)pushNibPath:(id)arg1 ;
+(void)popNibPath;
+(char)_loadNibFile:(id)arg1 externalNameTable:(id)arg2 options:(id)arg3 withZone:(NSZone*)arg4 ;
+(id)currentStringsTableName;
+(char)loadNibNamed:(id)arg1 owner:(id)arg2 ;
+(char)loadNibFile:(id)arg1 externalNameTable:(id)arg2 withZone:(NSZone*)arg3 ;
+(char)_loadNibFile:(id)arg1 nameTable:(id)arg2 options:(id)arg3 withZone:(NSZone*)arg4 ownerBundle:(id)arg5 ;
+(id)loadedBundles;
+(id)findBundleResources:(id)arg1 callingMethod:(SEL)arg2 directory:(id)arg3 languages:(id)arg4 name:(id)arg5 types:(id)arg6 limit:(unsigned long long)arg7 ;
+(id)URLForResource:(id)arg1 withExtension:(id)arg2 subdirectory:(id)arg3 inBundleWithURL:(id)arg4 ;
+(id)URLsForResourcesWithExtension:(id)arg1 subdirectory:(id)arg2 inBundleWithURL:(id)arg3 ;
+(void)setSystemLanguages:(id)arg1 ;
+(id)debugDescription;
+(id)mainBundle;
+(id)bundleWithPath:(id)arg1 ;
+(id)bundleWithIdentifier:(id)arg1 ;
+(id)bundleForClass:(Class)arg1 ;
+(id)pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2 ;
+(id)allBundles;
+(id)allFrameworks;
+(id)findBundleResourceURLsCallingMethod:(SEL)arg1 baseURL:(id)arg2 passingTest:(/*^block*/id)arg3 ;
+(id)bundleWithURL:(id)arg1 ;
+(id)preferredLocalizationsFromArray:(id)arg1 forPreferences:(id)arg2 ;
+(id)pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3 ;
+(id)preferredLocalizationsFromArray:(id)arg1 ;
-(void)loadAppleScriptObjectiveCScripts;
-(char)safari_primaryLocalizationIsEnglish;
-(id)localizedShortVersion;
-(char)safari_isSafariApplicationBundle;
-(char)isSystemFramework;
-(id)safari_version;
-(id)safari_displayName;
-(RetainPtr<CGImage *>*)safari_loadPNG:(id)arg1 ;
-(char)safari_isSafariServicesFrameworkBundle;
-(id)shortVersion;
-(unsigned long long)safari_supportedImportingDataTypes;
-(unsigned long long)safari_supportedTestDriveImportingDataTypes;
-(id)cgImageForResource:(id)arg1 ;
-(id)locStringForKey:(id)arg1 defaultValue:(id)arg2 ;
-(id)URLForMovieResource:(id)arg1 ;
-(id)imageForResource:(id)arg1 size:(CGSize)arg2 ;
-(char)__verifyCodeSignaturesWithRequirement:(SecRequirementRef)arg1 recursively:(char)arg2 addingErrorsTo:(id)arg3 cancelUsingTest:(/*^block*/id)arg4 ;
-(char)__verifyCodeSignatureOnURL:(id)arg1 requirements:(SecRequirementRef)arg2 error:(id*)arg3 ;
-(char)__verifyCodeSignaturesUnderDirectory:(id)arg1 requirements:(SecRequirementRef)arg2 currentBundleResourcePath:(id)arg3 addingErrorsTo:(id)arg4 cancelUsingTest:(/*^block*/id)arg5 ;
-(char)_verifyCodeSignaturesWithRequirement:(SecRequirementRef)arg1 recursively:(char)arg2 errors:(id*)arg3 cancelUsingTest:(/*^block*/id)arg4 ;
-(char)_verifyCodeSignaturesWithRequirement:(SecRequirementRef)arg1 recursively:(char)arg2 errors:(id*)arg3 ;
-(id)XPCServiceBundles;
-(id)sandboxProfilePath;
-(id)pathForSoundResource:(id)arg1 ;
-(char)loadNibFile:(id)arg1 externalNameTable:(id)arg2 options:(id)arg3 withZone:(NSZone*)arg4 ;
-(char)loadNibFile:(id)arg1 externalNameTable:(id)arg2 withZone:(NSZone*)arg3 ;
-(char)loadNibNamed:(id)arg1 owner:(id)arg2 topLevelObjects:(id*)arg3 ;
-(id)URLForImageResource:(id)arg1 ;
-(id)imageForResource:(id)arg1 ;
-(id)_newImageForResourceWithProspectiveName:(id*)arg1 imageClass:(Class)arg2 ;
-(id)URLsForImageResource:(id)arg1 ;
-(id)pathForImageResource:(id)arg1 ;
-(id)contextHelpForKey:(id)arg1 ;
-(id)_cachedMainBundleResourcePath;
-(NSURL *)resourceURL;
-(id)URLsForResourcesWithExtension:(id)arg1 subdirectory:(id)arg2 ;
-(id)URLForResource:(id)arg1 withExtension:(id)arg2 subdirectory:(id)arg3 ;
-(CFBundleRef)_cfBundle;
-(char)unload;
-(id)pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3 forLocalization:(id)arg4 ;
-(id)pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2 forLocalization:(id)arg3 ;
-(id)URLsForResourcesWithExtension:(id)arg1 subdirectory:(id)arg2 localization:(id)arg3 ;
-(NSURL *)appStoreReceiptURL;
-(id)URLForAuxiliaryExecutable:(id)arg1 ;
-(NSString *)privateFrameworksPath;
-(NSURL *)privateFrameworksURL;
-(NSString *)sharedFrameworksPath;
-(NSURL *)sharedFrameworksURL;
-(NSString *)sharedSupportPath;
-(NSURL *)sharedSupportURL;
-(NSString *)builtInPlugInsPath;
-(NSURL *)builtInPlugInsURL;
-(unsigned long long)versionNumber;
-(id)bundleLanguages;
-(void)invalidateResourceCache;
-(void)__static;
-(id)_regionsArray;
-(id)_pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3 forRegion:(id)arg4 ;
-(id)_pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2 forRegion:(id)arg3 ;
-(id)pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3 forLanguage:(id)arg4 ;
-(id)pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2 forLanguage:(id)arg3 ;
-(NSString *)developmentLocalization;
-(void)finalize;
-(void)dealloc;
-(id)description;
-(id)localizedStringForKey:(id)arg1 value:(id)arg2 table:(id)arg3 ;
-(NSURL *)bundleURL;
-(NSString *)bundleIdentifier;
-(Class)classNamed:(id)arg1 ;
-(NSDictionary *)infoDictionary;
-(id)objectForInfoDictionaryKey:(id)arg1 ;
-(char)load;
-(NSArray *)preferredLocalizations;
-(NSString *)bundlePath;
-(NSString *)executablePath;
-(id)initWithPath:(id)arg1 ;
-(char)isLoaded;
-(id)pathForResource:(id)arg1 ofType:(id)arg2 ;
-(Class)principalClass;
-(NSDictionary *)localizedInfoDictionary;
-(id)initWithURL:(id)arg1 ;
-(id)findBundleResourceURLsCallingMethod:(SEL)arg1 passingTest:(/*^block*/id)arg2 ;
-(NSString *)resourcePath;
-(id)pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2 ;
-(NSArray *)localizations;
-(id)URLForResource:(id)arg1 withExtension:(id)arg2 subdirectory:(id)arg3 localization:(id)arg4 ;
-(id)pathForAuxiliaryExecutable:(id)arg1 ;
-(id)pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3 ;
-(NSURL *)executableURL;
-(NSArray *)executableArchitectures;
-(char)loadAndReturnError:(id*)arg1 ;
-(char)preflightAndReturnError:(id*)arg1 ;
-(id)URLForResource:(id)arg1 withExtension:(id)arg2 ;
@end

