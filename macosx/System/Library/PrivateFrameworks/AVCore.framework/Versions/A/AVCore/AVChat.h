/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:01:53 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/AVCore.framework/Versions/A/AVCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AVCore/AVCore-Structs.h>
#import <AVCore/IMSystemMonitorListener.h>

@class NSString, NSMutableArray, IMHandle, AVChatParticipant, NSNumber, NSMutableDictionary, NSDictionary, NSDate, NSData, NSError, IMPair, AVChatFeature, IMAccount, NSArray;

@interface AVChat : NSObject <IMSystemMonitorListener> {

	NSString* _GUID;
	NSString* _conferenceID;
	NSMutableArray* _participants;
	IMHandle* _initiator;
	AVChatParticipant* _localParticipant;
	NSNumber* _natType;
	NSMutableDictionary* _extraServerContext;
	NSDictionary* _errorDict;
	NSDate* _dateCreated;
	NSDate* _dateStartedConnecting;
	NSDate* _dateConnected;
	NSDate* _dateEnded;
	NSDate* _dateReceivedRelayInitiate;
	NSDate* _dateReceivedRelayUpdate;
	NSDate* _interruptionBegan;
	NSString* _participantNames;
	NSDictionary* _pingTestResults;
	NSNumber* _frontCameraCaptureTime;
	NSNumber* _backCameraCaptureTime;
	NSData* _connectData;
	NSDictionary* _callerProperties;
	NSMutableDictionary* _unknownPartyStates;
	dispatch_queue_sRef _queue;
	id _conferenceController;
	long long _callID;
	unsigned _sessionID;
	unsigned _addStatus;
	NSError* _error;
	int _addableParticipants;
	unsigned _localState;
	unsigned _lastPostedState;
	IMPair* _pendingPreemptiveRelayInitate;
	NSString* _callStatisticsGUID;
	CGSize _portraitAspectRatios;
	CGSize _landscapeAspectRatios;
	char _hasReceivedFirstFrame;
	char _isListening;
	char _isCounterProposalConnect;
	char _hasPendingAccept;
	char _hasPendingInit;
	char _isTerminating;
	char _Q8IrisOpen;
	char _usingCoercedIDs;
	char _suppressBeginChat;
	char _isCaller;
	char _isVideo;
	char _dataOut;
	char _dataIn;
	char _didRemoteMute;
	char _didRemotePause;
	char _participantOrderFinal;
	int _connectionType;
	char _needsVideoRestart;
	char _needsAudioRestart;
	char _airplaneModeEnabled;
	AVChatFeature* _recorder;
	AVChatFeature* _auxVideo;
	AVChatFeature* _ard;

}

@property (assign,setter=setMute:,nonatomic) char isMute; 
@property (assign,setter=setRemoteMute:,nonatomic) char isRemoteMute; 
@property (nonatomic,readonly) char isChatMute; 
@property (assign,nonatomic) char isSendingAudio; 
@property (nonatomic,readonly) char didRemoteMute; 
@property (assign,setter=setPaused:,nonatomic) char isPaused; 
@property (assign,setter=setRemotePaused:,nonatomic) char isRemotePaused; 
@property (nonatomic,readonly) char isChatPaused; 
@property (nonatomic,readonly) char hasReceivedFirstFrame; 
@property (assign,nonatomic) char isSendingVideo; 
@property (assign,nonatomic) char allowsVideo; 
@property (nonatomic,readonly) char didRemotePause; 
@property (nonatomic,readonly) char _allParticipantsUsingICE; 
@property (nonatomic,readonly) char isOneWay; 
@property (nonatomic,readonly) char isAOLInterop; 
@property (nonatomic,readonly) NSDictionary * vcErrorReport; 
@property (assign,nonatomic) float audioVolume; 
@property (nonatomic,retain,readonly) AVChatFeature * recorder; 
@property (nonatomic,retain,readonly) AVChatFeature * auxVideo; 
@property (nonatomic,retain,readonly) AVChatFeature * ard; 
@property (assign,setter=setARDRole:,nonatomic) int ardRole; 
@property (assign,nonatomic) id<AVChatTheaterDelegate> theaterDelegate; 
@property (assign,nonatomic) unsigned sessionID;                                                                 //@synthesize sessionID=_sessionID - In the implementation block
@property (assign,nonatomic) long long callID;                                                                   //@synthesize callID=_callID - In the implementation block
@property (nonatomic,retain) NSString * conferenceID;                                                            //@synthesize conferenceID=_conferenceID - In the implementation block
@property (getter=UID,nonatomic,retain) NSString * GUID;                                                         //@synthesize GUID=_GUID - In the implementation block
@property (nonatomic,retain) IMHandle * initiatorIMHandle;                                                       //@synthesize initiator=_initiator - In the implementation block
@property (nonatomic,retain,readonly) IMHandle * otherIMHandle; 
@property (nonatomic,retain,readonly) IMAccount * account; 
@property (nonatomic,retain,readonly) AVChatParticipant * initiatorParticipant; 
@property (nonatomic,retain,readonly) AVChatParticipant * localParticipant;                                      //@synthesize localParticipant=_localParticipant - In the implementation block
@property (nonatomic,retain) NSArray * participants;                                                             //@synthesize participants=_participants - In the implementation block
@property (nonatomic,retain,readonly) NSArray * remoteParticipants; 
@property (assign,nonatomic) unsigned state;                                                                     //@synthesize localState=_localState - In the implementation block
@property (nonatomic,readonly) char isActive; 
@property (nonatomic,readonly) char isStateFinal; 
@property (nonatomic,readonly) int endedError; 
@property (nonatomic,readonly) unsigned endedReason; 
@property (nonatomic,readonly) NSDictionary * errorDictionary; 
@property (nonatomic,readonly) char dataOut;                                                                     //@synthesize dataOut=_dataOut - In the implementation block
@property (nonatomic,readonly) char dataIn;                                                                      //@synthesize dataIn=_dataIn - In the implementation block
@property (nonatomic,readonly) char isQ8IrisOpen;                                                                //@synthesize Q8IrisOpen=_Q8IrisOpen - In the implementation block
@property (setter=_setCallerProperties:,nonatomic,retain) NSDictionary * callerProperties;                       //@synthesize callerProperties=_callerProperties - In the implementation block
@property (nonatomic,readonly) int addableParticipants;                                                          //@synthesize addableParticipants=_addableParticipants - In the implementation block
@property (nonatomic,readonly) unsigned addStatus;                                                               //@synthesize addStatus=_addStatus - In the implementation block
@property (nonatomic,readonly) int numActiveParticipants; 
@property (nonatomic,readonly) NSString * participantNames; 
@property (retain,readonly) NSDictionary * _extraServerContext;                                                  //@synthesize extraServerContext=_extraServerContext - In the implementation block
@property (setter=_setCallStatisticsGUID:,nonatomic,retain) NSString * _callStatisticsGUID;                      //@synthesize callStatisticsGUID=_callStatisticsGUID - In the implementation block
@property (assign,setter=_setConferenceController:,nonatomic) id _conferenceController;                          //@synthesize conferenceController=_conferenceController - In the implementation block
@property (setter=_setNatType:,nonatomic,retain) NSNumber * _natType;                                            //@synthesize natType=_natType - In the implementation block
@property (nonatomic,readonly) NSNumber * _remoteNatType; 
@property (nonatomic,readonly) NSNumber * _currentNatType; 
@property (assign,setter=_setConnectionType:,nonatomic) int _connectionType;                                     //@synthesize connectionType=_connectionType - In the implementation block
@property (nonatomic,readonly) NSNumber * _connectDuration; 
@property (nonatomic,readonly) NSNumber * _callDuration; 
@property (nonatomic,readonly) NSNumber * _relayConnectDuration; 
@property (nonatomic,readonly) char _usesRelay; 
@property (setter=_setInterruptionBegan:,nonatomic,retain) NSDate * _interruptionBegan;                          //@synthesize interruptionBegan=_interruptionBegan - In the implementation block
@property (setter=_setFrontCameraCaptureTime:,nonatomic,retain) NSNumber * _frontCameraCaptureTime;              //@synthesize frontCameraCaptureTime=_frontCameraCaptureTime - In the implementation block
@property (setter=_setBackCameraCaptureTime:,nonatomic,retain) NSNumber * _backCameraCaptureTime;                //@synthesize backCameraCaptureTime=_backCameraCaptureTime - In the implementation block
@property (assign,setter=_setNeedsAudioRestart:,nonatomic) char _needsAudioRestart;                              //@synthesize needsAudioRestart=_needsAudioRestart - In the implementation block
@property (assign,setter=_setNeedsVideoRestart:,nonatomic) char _needsVideoRestart;                              //@synthesize needsVideoRestart=_needsVideoRestart - In the implementation block
@property (assign,setter=_setQueue:,nonatomic) dispatch_queue_sRef _queue;                                       //@synthesize queue=_queue - In the implementation block
@property (setter=_setPingTestResults:,nonatomic,retain) NSDictionary * _pingTestResults;                        //@synthesize pingTestResults=_pingTestResults - In the implementation block
@property (assign,setter=_setIsCaller:,nonatomic) char isCaller;                                                 //@synthesize isCaller=_isCaller - In the implementation block
@property (assign,setter=_setIsVideo:,nonatomic) char isVideo;                                                   //@synthesize isVideo=_isVideo - In the implementation block
@property (assign,setter=_setIsListening:,nonatomic) char _isListening;                                          //@synthesize isListening=_isListening - In the implementation block
@property (setter=_setDateEnded:,nonatomic,retain) NSDate * dateEnded;                                           //@synthesize dateEnded=_dateEnded - In the implementation block
@property (nonatomic,readonly) char _isTeminating;                                                               //@synthesize isTerminating=_isTerminating - In the implementation block
@property (assign,setter=_setHasPendingInit:,nonatomic) char _hasPendingInit;                                    //@synthesize hasPendingInit=_hasPendingInit - In the implementation block
@property (assign,setter=_setHasPendingAccept:,nonatomic) char _hasPendingAccept;                                //@synthesize hasPendingAccept=_hasPendingAccept - In the implementation block
@property (assign,setter=_setUsingCoercedIDs:,nonatomic) char _usingCoercedIDs;                                  //@synthesize usingCoercedIDs=_usingCoercedIDs - In the implementation block
@property (assign,setter=_setParticipantOrderFinal:,nonatomic) char participantOrderFinal;                       //@synthesize participantOrderFinal=_participantOrderFinal - In the implementation block
@property (assign,setter=_setSuppressBeginChat:,nonatomic) char suppressBeginChat;                               //@synthesize suppressBeginChat=_suppressBeginChat - In the implementation block
@property (assign,setter=_setIsCounterProposalConnect:,nonatomic) char _isCounterProposalConnect;                //@synthesize isCounterProposalConnect=_isCounterProposalConnect - In the implementation block
@property (setter=_setConnectData:,nonatomic,retain) NSData * _connectData;                                      //@synthesize connectData=_connectData - In the implementation block
@property (nonatomic,readonly) char canUseRelay; 
@property (nonatomic,readonly) NSDate * dateCreated;                                                             //@synthesize dateCreated=_dateCreated - In the implementation block
@property (nonatomic,readonly) NSDate * dateConnected;                                                           //@synthesize dateConnected=_dateConnected - In the implementation block
+(id)currentAVChatInfo;
+(id)alloc;
+(void)_sendUpdate;
+(id)avChatWaitingForReplyFromIMHandle:(id)arg1 orConferenceID:(id)arg2 ;
+(id)avChatConnectingFromIMHandle:(id)arg1 ;
+(id)activeChat;
+(id)nonFinalChat;
+(id)connectedChat;
+(id)_avChatArray;
+(id)incomingInvitations;
+(id)outgoingInvitations;
+(id)bestGuessAVChatWithIMHandle:(id)arg1 conferenceID:(id)arg2 sessionID:(unsigned)arg3 properties:(id)arg4 ;
+(id)avChatWithConferenceID:(id)arg1 ;
+(id)allowedClassesForArchives;
+(int)maxRemoteParticipantsVideo:(char)arg1 ;
+(int)systemSupportsNewOutgoingConferenceTo:(id)arg1 isVideo:(char)arg2 ;
+(id)avChatWithMatchingIMHandles:(id)arg1 video:(char)arg2 ;
+(char)isStateActive:(unsigned)arg1 ;
+(id)acceptedChats;
+(id)chatList;
+(char)isStateFinal:(unsigned)arg1 ;
+(id)chatsWithAVChatState:(unsigned)arg1 ;
+(id)connectingChats;
+(id)connectedChats;
+(id)chatWithSessionID:(unsigned)arg1 ;
+(id)avChatInvitedByIMHandle:(id)arg1 orConferenceID:(id)arg2 ;
+(int)systemSupportsNewOutgoingConferenceTo:(id)arg1 isVideo:(char)arg2 isARD:(char)arg3 ;
+(char)isIMHandleInActiveConference:(id)arg1 ;
-(void)setMute:(char)arg1 ;
-(float)audioVolume;
-(void)setAudioVolume:(float)arg1 ;
-(dispatch_queue_sRef)_queue;
-(void)_reportError:(id)arg1 ;
-(void)cancelInvitation;
-(NSString *)participantNames;
-(void)_setGUID:(id)arg1 ;
-(void)systemWillShutdown;
-(void)systemApplicationDidEnterBackground;
-(void)systemApplicationWillEnterForeground;
-(void)systemApplicationDidBecomeActive;
-(void)systemApplicationDidSuspend;
-(void)systemApplicationDidResume;
-(void)systemApplicationDidResumeForEventsOnly;
-(void)systemDidFastUserSwitchOut;
-(void)acceptInvitation;
-(void)declineInvitation;
-(void)setAllowsVideo:(char)arg1 ;
-(NSString *)GUID;
-(char)allowsVideo;
-(NSDate *)dateCreated;
-(void)_setState:(unsigned)arg1 ;
-(NSArray *)participants;
-(void)_postNotificationName:(id)arg1 userInfo:(id)arg2 ;
-(void)_setQueue:(dispatch_queue_sRef)arg1 ;
-(NSDictionary *)errorDictionary;
-(void)dealloc;
-(id)description;
-(char)isActive;
-(unsigned)state;
-(char)isPaused;
-(void)setPaused:(char)arg1 ;
-(IMAccount *)account;
-(unsigned)sessionID;
-(char)isVideo;
-(id)inviteesInfoAsPlist:(char)arg1 account:(id)arg2 ;
-(NSDictionary *)callerProperties;
-(NSDictionary *)_extraServerContext;
-(AVChatParticipant *)localParticipant;
-(NSString *)conferenceID;
-(char)isSendingAudio;
-(char)isSendingVideo;
-(int)ardRole;
-(NSArray *)remoteParticipants;
-(id)participantMatchingIMHandle:(id)arg1 ;
-(id)initIncomingFrom:(id)arg1 isVideo:(char)arg2 callerProperties:(id)arg3 ;
-(void)_setConferenceID:(id)arg1 ;
-(void)beginChat;
-(void)endChat;
-(void)_VCCounterProposal:(id)arg1 ;
-(void)_responseToVCInvite:(id)arg1 ;
-(void)_cancelInvitationWithReason:(unsigned)arg1 error:(int)arg2 ;
-(void)_participantsChanged:(id)arg1 ;
-(void)handleGenericAVMessageFromParticipant:(id)arg1 type:(unsigned)arg2 userInfo:(id)arg3 ;
-(void)_peerID:(id)arg1 changedTo:(id)arg2 ;
-(void)declineInvitationWithResponse:(unsigned)arg1 ;
-(void)_handleAVError:(id)arg1 ;
-(void)_setCreationDate;
-(void)_initParticipantsWithIMHandles:(id)arg1 ;
-(void)_initParticipantsWithNuggets:(id)arg1 ;
-(char)_participantsCheckOut;
-(AVChatParticipant *)initiatorParticipant;
-(void)_initiatorInfoChanged:(id)arg1 ;
-(int)_initialRelayStatus;
-(void)_determineDataIn;
-(void)handleVideoConferenceNotification:(id)arg1 ;
-(id)_initWith:(id)arg1 invitedBy:(id)arg2 sessionID:(unsigned)arg3 video:(char)arg4 extraProperties:(id)arg5 ;
-(void)_setCallerProperties:(id)arg1 ;
-(char)isCaller;
-(unsigned)endedReason;
-(long long)callID;
-(void)_endChatWithReason:(unsigned)arg1 andError:(int)arg2 ;
-(IMHandle *)otherIMHandle;
-(void)_postStateToDelegateIfNecessary;
-(void)_setActiveConference;
-(void)_vccInitDidFinish:(id)arg1 ;
-(char)isStateFinal;
-(void)_insertRemoteParticipant:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)_sendVCUpdateTo:(id)arg1 skipConnected:(char)arg2 ;
-(void)_refreshAddableStatus;
-(void)invalidateParticipantNames;
-(void)endChatWithReason:(unsigned)arg1 ;
-(void)endChatWithReason:(unsigned)arg1 error:(int)arg2 ;
-(int)endedError;
-(void)_connectTo:(id)arg1 withData:(id)arg2 ;
-(void)_updateIMHandleInBuddyList:(id)arg1 ;
-(void)_prepareConnectionForParticipant:(id)arg1 ;
-(void)_mainThreadFinishPrepareConnectionForInvitedParty:(id)arg1 ;
-(char)_checkVCResponseDict:(id)arg1 ;
-(void)_threadedPrepareConnectionForInvitedParty:(id)arg1 ;
-(void)__responseToVCInvite:(id)arg1 ;
-(void)_handleGenericAVMessageFromParticipant:(id)arg1 type:(unsigned)arg2 userInfo:(id)arg3 handled:(char)arg4 ;
-(void)_updateParticipantsWithData:(id)arg1 ;
-(id)_participantMatchingVCPartyID:(id)arg1 ;
-(NSNumber *)_natType;
-(NSDate *)dateConnected;
-(NSDate *)dateEnded;
-(int)_connectionType;
-(void)_setStateDisconnected;
-(id)initOutgoingTo:(id)arg1 isVideo:(char)arg2 ;
-(void)endChatWithError:(int)arg1 ;
-(void)inviteAll;
-(void)invite:(id)arg1 ;
-(void)sendARDFileTransferAuthorization:(id)arg1 to:(id)arg2 ;
-(void)_counterPropose:(id)arg1 ;
-(void)_inviteeInfoChanged:(id)arg1 ;
-(id)participantWithID:(id)arg1 ;
-(id)vcPartyIDForIMHandle:(id)arg1 ;
-(void)setCallID:(long long)arg1 ;
-(void)_setDataOut:(char)arg1 ;
-(void)_setDataIn:(char)arg1 ;
-(void)_setQ8IrisOpen:(char)arg1 ;
-(void)_setAddStatus:(unsigned)arg1 ;
-(void)_setAddableParticipants:(int)arg1 ;
-(void)_setParticipants:(id)arg1 ;
-(void)_setLocalParticipant:(id)arg1 ;
-(char)isConferenceSilent;
-(NSNumber *)_remoteNatType;
-(NSNumber *)_currentNatType;
-(NSNumber *)_connectDuration;
-(NSNumber *)_callDuration;
-(NSNumber *)_relayConnectDuration;
-(char)_usesRelay;
-(void)_setErrorDictionary:(id)arg1 ;
-(void)_postNotificationName:(id)arg1 participant:(id)arg2 userInfo:(id)arg3 ;
-(void)_noteFirstFrame;
-(void)_setConnectionType:(int)arg1 ;
-(NSString *)_callStatisticsGUID;
-(void)_setCallStatisticsGUID:(id)arg1 ;
-(char)isQ8IrisOpen;
-(void)_setSessionID:(unsigned)arg1 ;
-(IMHandle *)initiatorIMHandle;
-(void)_setInitiatorIMHandle:(id)arg1 ;
-(void)_setNatType:(id)arg1 ;
-(char)_needsAudioRestart;
-(void)_setNeedsAudioRestart:(char)arg1 ;
-(char)_needsVideoRestart;
-(void)_setNeedsVideoRestart:(char)arg1 ;
-(void)_setIsVideo:(char)arg1 ;
-(char)_isListening;
-(void)_setIsListening:(char)arg1 ;
-(NSData *)_connectData;
-(void)_setConnectData:(id)arg1 ;
-(char)_isTeminating;
-(char)_hasPendingInit;
-(void)_setHasPendingInit:(char)arg1 ;
-(char)_hasPendingAccept;
-(void)_setHasPendingAccept:(char)arg1 ;
-(char)_usingCoercedIDs;
-(void)_setUsingCoercedIDs:(char)arg1 ;
-(NSDate *)_interruptionBegan;
-(void)_setInterruptionBegan:(id)arg1 ;
-(NSNumber *)_frontCameraCaptureTime;
-(void)_setFrontCameraCaptureTime:(id)arg1 ;
-(NSNumber *)_backCameraCaptureTime;
-(void)_setBackCameraCaptureTime:(id)arg1 ;
-(char)participantOrderFinal;
-(void)_setParticipantOrderFinal:(char)arg1 ;
-(char)suppressBeginChat;
-(void)_setSuppressBeginChat:(char)arg1 ;
-(char)_isCounterProposalConnect;
-(void)_setIsCounterProposalConnect:(char)arg1 ;
-(void)_setIsCaller:(char)arg1 ;
-(char)dataOut;
-(char)dataIn;
-(id)_conferenceController;
-(void)_setConferenceController:(id)arg1 ;
-(void)_setDateEnded:(id)arg1 ;
-(int)addableParticipants;
-(unsigned)addStatus;
-(NSDictionary *)_pingTestResults;
-(void)_setPingTestResults:(id)arg1 ;
-(void)setARDRole:(int)arg1 ;
-(void)participant:(id)arg1 changedFromState:(unsigned)arg2 toState:(unsigned)arg3 ;
-(char)isAOLInterop;
-(unsigned)addStatusForIMHandle:(id)arg1 asVideo:(char)arg2 ardRole:(int)arg3 ;
-(void)conferencePersonWithID:(id)arg1 completedWithInfo:(id)arg2 ;
-(void)conferencePersonWithID:(id)arg1 didConnect:(char)arg2 ;
-(void)conferenceHungUpByPersonWithID:(id)arg1 ;
-(void)conferencePersonWithID:(id)arg1 didMute:(char)arg2 ;
-(void)conferencePersonWithID:(id)arg1 didPause:(char)arg2 ;
-(void)conferencePersonWithID:(id)arg1 didCancel:(char)arg2 ;
-(void)conferencePersonWithID:(id)arg1 hasInfoForInsufficientBandwidth:(id)arg2 ;
-(void)conferenceHasTimedOut;
-(void)conferenceHasVideoError;
-(void)conferencePersonWithID:(id)arg1 hasInfoForNoPackets:(id)arg2 ;
-(void)conferencePersonWithID:(id)arg1 didStall:(char)arg2 ;
-(char)shouldConferenceAcceptAuxVideoFromUser:(id)arg1 ;
-(void)conferencePersonWithID:(id)arg1 approvedAuxVideo:(char)arg2 ;
-(void)auxVideoBeganForPersonWithID:(id)arg1 ;
-(void)auxVideoEndedForPersonWithID:(id)arg1 ;
-(char)canUseRelay;
-(void)startVCOnMainThread:(id)arg1 ;
-(void)_relayPropose:(id)arg1 ;
-(void)_unknownParty:(id)arg1 didConnect:(char)arg2 ;
-(void)_noteConferenceConnected:(id)arg1 ;
-(void)_unknownParty:(id)arg1 muteOrPause:(unsigned)arg2 didChange:(char)arg3 ;
-(void)conferencePersonWithID:(id)arg1 didDegrade:(char)arg2 ;
-(void)conferencePersonWithID:(id)arg1 mediaDidStall:(char)arg2 ;
-(void)conferencePersonWithID:(id)arg1 sendRelayRequest:(id)arg2 ;
-(void)conferencePersonWithID:(id)arg1 sendRelayUpdate:(id)arg2 ;
-(void)conferencePersonWithID:(id)arg1 sendRelayCancel:(id)arg2 ;
-(char)isMute;
-(char)isRemoteMute;
-(void)setRemoteMute:(char)arg1 ;
-(void)toggleMute;
-(void)toggleRemoteMute;
-(void)setIsSendingAudio:(char)arg1 ;
-(char)isChatMute;
-(void)toggleChatMute;
-(char)didRemoteMute;
-(void)toggleSendingAudio;
-(char)isRemotePaused;
-(void)setRemotePaused:(char)arg1 ;
-(void)togglePaused;
-(void)toggleRemotePaused;
-(void)setIsSendingVideo:(char)arg1 ;
-(char)hasReceivedFirstFrame;
-(char)isChatPaused;
-(void)toggleChatPaused;
-(char)didRemotePause;
-(void)toggleSendingVideo;
-(char)isLocalNetworkStalled;
-(void)_resumeAudioState;
-(void)_resumeVideoState;
-(void)_saveVideoRestartState;
-(void)_saveAudioRestartState;
-(void)_imHandleStatusChanged:(id)arg1 ;
-(char)_moveVCPartyID:(id)arg1 toIndex:(unsigned)arg2 inCount:(unsigned)arg3 ;
-(id)participantsNotInNuggets:(id)arg1 ;
-(void)_finalizeParticipantOrder:(id)arg1 andNotify:(char)arg2 ;
-(char)_imHandlesRequireCoercedIDs:(id)arg1 ;
-(id)stringForAddStatus:(unsigned)arg1 ;
-(int)numActiveParticipants;
-(char)_allParticipantsUsingICE;
-(id)stringForAddStatus;
-(id)orderedRemotePartyIDs;
-(void)finalizeOrderWithVideoFrom:(id)arg1 ;
-(void)_configureVCCRecv;
-(id<AVChatTheaterDelegate>)theaterDelegate;
-(void)_configureVCC;
-(void)connectProc:(id)arg1 ;
-(id)initPersistentAVChatWith:(id)arg1 invitedBy:(id)arg2 ARDRole:(int)arg3 sessionID:(unsigned)arg4 video:(char)arg5 ;
-(id)initOutgoingTo:(id)arg1 isVideo:(char)arg2 ARDRole:(int)arg3 ;
-(char)isOneWay;
-(NSDictionary *)vcErrorReport;
-(AVChatFeature *)recorder;
-(AVChatFeature *)auxVideo;
-(AVChatFeature *)ard;
-(void)setTheaterDelegate:(id<AVChatTheaterDelegate>)arg1 ;
-(char)canAddIMHandle:(id)arg1 ;
-(void)removeParticipantWithID:(id)arg1 ;
@end

