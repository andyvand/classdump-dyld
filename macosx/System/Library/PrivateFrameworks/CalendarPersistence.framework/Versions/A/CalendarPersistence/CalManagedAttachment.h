/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:02:08 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/CalendarPersistence.framework/Versions/A/CalendarPersistence
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CalendarPersistence/CalManagedObject.h>
#import <CalendarPersistence/EKProtocolAttachment.h>

@class NSString, NSURL, NSNumber, NSData, CalManagedCalendarItem, NSDictionary, NSManagedObjectID;

@interface CalManagedAttachment : CalManagedObject <EKProtocolAttachment> {

	NSData* _data;
	NSString* _filename;

}

@property (retain) NSString * contentType; 
@property (assign) char isCached; 
@property (retain) CalManagedCalendarItem * item; 
@property (retain) NSString * attachmentID; 
@property (retain) NSURL * url; 
@property (retain) NSString * uuid; 
@property (assign) char isAutoArchived; 
@property (retain) NSData * data;                                                        //@synthesize data=_data - In the implementation block
@property (retain) NSString * filename; 
@property (retain) NSURL * pathOnDisk; 
@property (retain) NSString * filenameInCache; 
@property (retain) NSString * filenameSuggestedByServer; 
@property (assign) char omitSyncRecord; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) char canBeConvertedToFullObject; 
@property (nonatomic,readonly) char isPartialObject; 
@property (nonatomic,readonly) NSDictionary * preFrozenRelationshipObjects; 
@property (nonatomic,readonly) NSManagedObjectID * managedObjectID; 
@property (retain,readonly) NSString * attachmentIDOnServer; 
@property (retain,readonly) NSURL * urlOnDisk; 
@property (retain,readonly) NSURL * urlOnServer; 
@property (retain,readonly) NSNumber * isAutoArchivedNumber; 
+(id)entityName;
+(id)fetchRequestWithURL:(id)arg1 inGroup:(id)arg2 inManagedObjectContext:(id)arg3 ;
+(char)_isManagedAttachmentCalendar:(id)arg1 ;
+(id)uniqueIdentifierForObject:(id)arg1 ;
+(id)fetchRequestWithURL:(id)arg1 inManagedObjectContext:(id)arg2 ;
+(void)addAttachmentPrefetchToCalendarItemFetch:(id)arg1 ;
+(id)bestFilenameForAttachment:(id)arg1 ;
-(void)dealloc;
-(NSURL *)url;
-(NSData *)data;
-(NSString *)filename;
-(void)setFilename:(NSString *)arg1 ;
-(void)setUrl:(NSURL *)arg1 ;
-(id)uniqueIdentifier;
-(void)setData:(NSData *)arg1 ;
-(void)importiCalendarProperty:(id)arg1 inComponent:(id)arg2 fromDocument:(id)arg3 inCalendar:(id)arg4 ;
-(id)_iCalendarElementWithOptions:(unsigned long long)arg1 ;
-(void)setFilenameInCache:(NSString *)arg1 ;
-(NSString *)filenameInCache;
-(void)_importiCalendarProperty:(id)arg1 inComponent:(id)arg2 fromDocument:(id)arg3 inCalendar:(id)arg4 accumulatedAttachmentFilenames:(id)arg5 ;
-(char)isLocalAttachment;
-(void)willSave;
-(void)awakeFromInsert;
-(void)willRefresh:(char)arg1 ;
-(NSURL *)pathOnDisk;
-(void)setPathOnDisk:(NSURL *)arg1 ;
-(NSURL *)urlOnDisk;
-(NSURL *)urlOnServer;
-(char)isInDetachedEvent;
-(id)uniqueKeyForObject;
-(id)enclosingSource;
-(NSString *)attachmentIDOnServer;
-(NSNumber *)isAutoArchivedNumber;
-(void)setUrlOnServer:(NSURL *)arg1 ;
-(void)setAttachmentIDOnServer:(NSString *)arg1 ;
@end

