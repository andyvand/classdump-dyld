/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:01:21 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/Safari.framework/Versions/A/Safari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Safari/Safari-Structs.h>
#import <Safari/WindowController.h>
#import <Safari/VisualTabPickerDelegate.h>
#import <Safari/MorphingDragImageDropTarget.h>
#import <Safari/NSMenuDelegate.h>
#import <Safari/UnifiedFieldDelegate.h>
#import <Safari/BrowserWindowDelegate.h>
#import <Safari/ReopensAtLaunch.h>
#import <Safari/NSSplitViewDelegate.h>
#import <Safari/ImageHopAnimationDelegate.h>
#import <Safari/WBSFluidProgressControllerWindowDelegate.h>
#import <Safari/WBSFluidProgressRocketEffectDelegate.h>

@class ToolbarController, UnifiedFieldEditor, NSTextView, BookmarksSidebarTitleTextView, NSURL, NSMenu, OneStepBookmarkingButtonController, NSMutableArray, NSMapTable, NSString, ClosedTabStateHolder, NSTimer, BrowserWindowPersistentState, ColoredRect, NSMutableSet, BrowserTabViewItem, WBSFluidProgressController, NSArray, BrowserWKView, BrowserWindowContentView, SidebarViewController, NSTabView, NSClipView, VisualTabPickerViewController, NSView, NSTitlebarAccessoryViewController, FavoritesBarView, ScrollableTabBarView, TabBarEnclosureView, BarBackground, NSTextField, ReadingListContentProvider, AutomaticReadingListContentProvider, UnifiedField;

@interface BrowserWindowControllerMac : WindowController <VisualTabPickerDelegate, MorphingDragImageDropTarget, NSMenuDelegate, UnifiedFieldDelegate, BrowserWindowDelegate, ReopensAtLaunch, NSSplitViewDelegate, ImageHopAnimationDelegate, WBSFluidProgressControllerWindowDelegate, WBSFluidProgressRocketEffectDelegate> {

	ToolbarController* _toolbarController;
	UnifiedFieldEditor* _unifiedFieldEditor;
	NSTextView* _fieldEditorWithoutAutomaticSubstitution;
	BookmarksSidebarTitleTextView* _bookmarksSidebarTitleTextView;
	RefPtr<Safari::UnifiedFieldCompletionController>* _unifiedFieldCompletionController;
	NSURL* _completionListURLBeingActivated;
	NSMenu* _dynamicBackMenu;
	NSMenu* _dynamicForwardMenu;
	OneStepBookmarkingButtonController* _oneStepBookmarkingButtonController;
	char _temporaryLocationBar;
	char _tabBarHiddenByJavaScript;
	char _readyToUpdateKeyboardLoop;
	char _windowWasLoaded;
	char _windowIsClosing;
	char _showingPrivateBrowsingConfirmationSheet;
	NSMutableArray* _topLevelViewOrder;
	NSMutableArray* _collapsibleBarViewOrder;
	NSMapTable* _barsToOriginalHeights;
	NSString* _statusText;
	char _clearStatus;
	char _ellipsizeStatus;
	NSString* _newStatus;
	char _stopAndReloadButtonWillStop;
	char _tabBarShownForTabDrag;
	char _hideToolbarOnEndSheet;
	ClosedTabStateHolder* _closedTabStateHolder;
	NSTimer* _springToFrontTimer;
	NSTimer* _setStatusMessageTimer;
	NSTimer* _setInterpretsAllInputAsURLTimer;
	BrowserWindowPersistentState* _pendingClosedState;
	unique_ptr<Safari::ObjCNotifier, std::__1::default_delete<Safari::ObjCNotifier> >* _notifier;
	Vector<WTF::RefPtr<Safari::ExtensionBar>, 0, WTF::CrashOnOverflow>* _extensionBars;
	ColoredRect* _topExtensionDivider;
	ColoredRect* _bottomExtensionDivider;
	int _fullScreenState;
	CGRect _windowFrameBeforeFullScreen;
	char _forceFullScreenAuxiliaryViewMinHeightAsMax;
	char _didLockMenuBarInFullScreen;
	char _shouldShowStatusBarExitingFullScreenMode;
	char _favoritesBarIsVisibleEnteringFullScreen;
	NSMutableSet* _currentAutoShowingBars;
	NSMutableSet* _currentAlwaysShowingBars;
	NSMutableSet* _currentAnimatingBars;
	RefPtr<Safari::BrowserWindowController>* _browserWindow;
	NSMutableSet* _imageHopAnimationControllers;
	BrowserTabViewItem* _closingTabView;
	CGPoint _lastMouseClickPosition;
	WBSFluidProgressController* _fluidProgressController;
	NSArray* _speculativeLoadURLs;
	NSString* _speculativeLoadURLTabLabel;
	BrowserWKView* _speculativeLoadWKView;
	BrowserTabViewItem* _destinationTabViewItemForCommittedSpeculativeLoad;
	NSMutableArray* _speculativeLoadHistoryOperations;
	char _cancelSpeculativeLoadShouldBeIgnored;
	char _didSeeNavigationToSpeculativeLoadURL;
	BackForwardListItem* _currentPageCurrentBackForwardListItem;
	Array* _currentPageBackList;
	BackForwardListItem* _speculativeLoadPageCurrentBackForwardListItem;
	Array* _speculativeLoadPageBackList;
	BrowserWindowContentView* _mainContentView;
	SidebarAnimationContext* _sidebarAnimationContext;
	SidebarViewController* _cachedSidebarViewController;
	long long _tryCloseOfCurrentPageCompletionAction;
	char _isPopupWindow;
	char _insertingTab;
	char _creatingNewTab;
	NSTimer* _updateFirstResponderAfterTabSwitchTimer;
	NSTabView* _tabSwitcherForGoBack;
	NSTabView* _tabSwitcherForGoForward;
	NSClipView* _sidebarContainerClipView;
	VisualTabPickerViewController* _visualTabPickerViewController;
	NSView* _visualTabPickerToolbarBackgroundView;
	char _visualTabPickerPendingEntryAnimation;
	char _canToggleTabBarInVisualTabPicker;
	char _canChangeTopInsetInVisualTabPicker;
	char _visualTabPickerIsHidingTabBar;
	BOOL _usesPrivateBrowsing;
	char _titlebarBlurringDisabled;
	NSTitlebarAccessoryViewController* _toolbarNewTabButtonViewController;
	double _titlebarHeightInWindow;
	NSMapTable* _collapsibleBarsToViewControllers;
	char _shouldUpdateFocusOnSpeculativeLoadCommit;
	char _creatingNewTabRespectingNewTabBehavior;
	char _switchingTabs;
	char _forceEnableTitlebarBlurFilters;
	char _prefersSidebarVisible;
	char _isClosingVisualTabPicker;
	int _windowType;
	FavoritesBarView* _favoritesBarView;
	ScrollableTabBarView* _scrollableTabBarView;
	TabBarEnclosureView* _tabBarEnclosureView;
	NSTabView* _tabSwitcher;
	BarBackground* _statusBar;
	NSTextField* _statusTextField;
	SidebarViewController* _sidebarViewController;
	double _sidebarWidth;
	ReadingListContentProvider* _readingListContentProvider;
	AutomaticReadingListContentProvider* _automaticReadingListContentProvider;
	NSView* _firstResponderViewBeforeFullScreenTransition;
	NSView* _webContentSnapshotForSidebarAnimation;
	NSView* _backgroundSidebarAnimationView;
	NSView* _continuousBannerSidebarAnimationView;
	/*^block*/id _completionHandlerForLastSheetEndingOnWindow;
	BarBackground* _popupWindowUnifiedFieldContainer;
	UnifiedField* _popupWindowUnifiedField;

}

@property (nonatomic,retain) ScrollableTabBarView * scrollableTabBarView;                                                                //@synthesize scrollableTabBarView=_scrollableTabBarView - In the implementation block
@property (nonatomic,readonly) FavoritesBarView * favoritesBarView;                                                                      //@synthesize favoritesBarView=_favoritesBarView - In the implementation block
@property (assign,nonatomic,__weak) TabBarEnclosureView * tabBarEnclosureView;                                                           //@synthesize tabBarEnclosureView=_tabBarEnclosureView - In the implementation block
@property (assign,nonatomic,__weak) NSTabView * tabSwitcher;                                                                             //@synthesize tabSwitcher=_tabSwitcher - In the implementation block
@property (assign,nonatomic,__weak) BarBackground * statusBar;                                                                           //@synthesize statusBar=_statusBar - In the implementation block
@property (assign,nonatomic,__weak) NSTextField * statusTextField;                                                                       //@synthesize statusTextField=_statusTextField - In the implementation block
@property (nonatomic,readonly) UnifiedFieldCompletionController* unifiedFieldCompletionController; 
@property (assign,nonatomic) char shouldUpdateFocusOnSpeculativeLoadCommit;                                                              //@synthesize shouldUpdateFocusOnSpeculativeLoadCommit=_shouldUpdateFocusOnSpeculativeLoadCommit - In the implementation block
@property (nonatomic,retain) SidebarViewController * sidebarViewController;                                                              //@synthesize sidebarViewController=_sidebarViewController - In the implementation block
@property (nonatomic,readonly) NSView * sidebarContainerView; 
@property (getter=isSidebarVisible,nonatomic,readonly) char sidebarVisible; 
@property (getter=isCreatingNewTabRespectingNewTabBehavior,nonatomic,readonly) char creatingNewTabRespectingNewTabBehavior;              //@synthesize creatingNewTabRespectingNewTabBehavior=_creatingNewTabRespectingNewTabBehavior - In the implementation block
@property (getter=isSwitchingTabs,nonatomic,readonly) char switchingTabs;                                                                //@synthesize switchingTabs=_switchingTabs - In the implementation block
@property (assign,nonatomic) double sidebarWidth;                                                                                        //@synthesize sidebarWidth=_sidebarWidth - In the implementation block
@property (nonatomic,readonly) char usesPrivateBrowsing; 
@property (assign,nonatomic) char forceEnableTitlebarBlurFilters;                                                                        //@synthesize forceEnableTitlebarBlurFilters=_forceEnableTitlebarBlurFilters - In the implementation block
@property (assign,nonatomic) char prefersSidebarVisible;                                                                                 //@synthesize prefersSidebarVisible=_prefersSidebarVisible - In the implementation block
@property (assign) int windowType;                                                                                                       //@synthesize windowType=_windowType - In the implementation block
@property (nonatomic,readonly) char isClosingVisualTabPicker;                                                                            //@synthesize isClosingVisualTabPicker=_isClosingVisualTabPicker - In the implementation block
@property (nonatomic,readonly) CGRect mainContentRectRelativeToWindowContentView; 
@property (nonatomic,readonly) NSView * mainContentView; 
@property (nonatomic,readonly) double topContentInset; 
@property (nonatomic,retain) ReadingListContentProvider * readingListContentProvider;                                                    //@synthesize readingListContentProvider=_readingListContentProvider - In the implementation block
@property (nonatomic,retain) AutomaticReadingListContentProvider * automaticReadingListContentProvider;                                  //@synthesize automaticReadingListContentProvider=_automaticReadingListContentProvider - In the implementation block
@property (nonatomic,retain) NSView * firstResponderViewBeforeFullScreenTransition;                                                      //@synthesize firstResponderViewBeforeFullScreenTransition=_firstResponderViewBeforeFullScreenTransition - In the implementation block
@property (nonatomic,retain) NSView * webContentSnapshotForSidebarAnimation;                                                             //@synthesize webContentSnapshotForSidebarAnimation=_webContentSnapshotForSidebarAnimation - In the implementation block
@property (nonatomic,retain) NSView * backgroundSidebarAnimationView;                                                                    //@synthesize backgroundSidebarAnimationView=_backgroundSidebarAnimationView - In the implementation block
@property (nonatomic,retain) NSView * continuousBannerSidebarAnimationView;                                                              //@synthesize continuousBannerSidebarAnimationView=_continuousBannerSidebarAnimationView - In the implementation block
@property (nonatomic,copy) id completionHandlerForLastSheetEndingOnWindow;                                                               //@synthesize completionHandlerForLastSheetEndingOnWindow=_completionHandlerForLastSheetEndingOnWindow - In the implementation block
@property (assign,nonatomic,__weak) BarBackground * popupWindowUnifiedFieldContainer;                                                    //@synthesize popupWindowUnifiedFieldContainer=_popupWindowUnifiedFieldContainer - In the implementation block
@property (assign,nonatomic,__weak) UnifiedField * popupWindowUnifiedField;                                                              //@synthesize popupWindowUnifiedField=_popupWindowUnifiedField - In the implementation block
@property (assign,getter=isPopupWindowUnifiedFieldVisible,nonatomic) char popupWindowUnifiedFieldVisible; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)browserWindowControllerForWindow:(id)arg1 ;
+(void)setShouldIgnoreReopen:(char)arg1 ;
+(void)reopen;
+(BrowserContentViewController*)browserContentViewControllerForNavigationPurposesFor:(BrowserContentViewController*)arg1 ;
+(id)orderedWindowControllers;
+(id)activeWindowController;
+(id)_bookmarksButtonLockedImage;
-(void)_updateCloseKeyEquivalents;
-(void)_parentalControlsDidChange;
-(char)isAvailableForForcedLocationUsingWindowPolicy:(long long)arg1 ;
-(BrowserContentViewController*)createNewEmptyTab;
-(BrowserWindowController*)browserWindowController;
-(void)cancelFluidProgressForContentViewController:(BrowserContentViewController*)arg1 ;
-(void)confirmClosingTabWithUnsavedCredentials:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)toggleFavoritesBar:(id)arg1 ;
-(char)isShowingDownloadsPopover;
-(void)stopLoading:(id)arg1 ;
-(void)reloadObeyingUnifiedField:(id)arg1 ;
-(char)isShowingVisualTabPicker;
-(char)usesPrivateBrowsing;
-(id)orderedTabs;
-(void)moveTabFromOtherWindow:(id)arg1 toIndex:(unsigned)arg2 andSelect:(char)arg3 ;
-(id)orderedTabViewItems;
-(void)toggleDownloadsPopover:(id)arg1 ;
-(id)takePendingClosedWindowState;
-(void)sessionStateDidChange;
-(char)closeKeyEquivalentClosesTab;
-(void)toggleLocationBar:(id)arg1 ;
-(void)toggleExtensionBar:(id)arg1 ;
-(void)toggleTabBar:(id)arg1 ;
-(id)firstTabWithUnsavedCredentials;
-(unsigned long long)numberOfNonDisposableTabs;
-(BrowserContentViewController*)currentBrowserContentViewController;
-(void)changeTextEncoding:(id)arg1 ;
-(void)triedToCloseContentViewControllerBeforeCommittingToSpeculativeLoad:(BrowserContentViewController*)arg1 canClose:(char)arg2 ;
-(void)_iconDidChange:(id)arg1 ;
-(AutomaticReadingListContentProvider *)automaticReadingListContentProvider;
-(void)toggleBookmarksEditView:(id)arg1 ;
-(void)addBookmarkFolder:(id)arg1 ;
-(void)goHome:(id)arg1 ;
-(char)updateWindowTitlebarBlurFilters;
-(id)tabViewItemForWKView:(id)arg1 ;
-(char)isInContinuousMode;
-(char)hasCommittedSpeculativeLoadInBackgroundThatCanBeShown;
-(void)cancelSpeculativeLoadSoonOrReissueLoadIfCommitted;
-(void)forceCommittedSpeculativeLoadInBackgroundToBeShown;
-(void)willLoadURLRequestForContentViewController:(BrowserContentViewController*)arg1 ;
-(double)topContentInset;
-(char)isSpeculativeLoadWKView:(id)arg1 ;
-(char)hasCommittedSpeculativeLoadInBackground;
-(void)cancelCommittedSpeculativeLoadAndReissueLoadSoon;
-(id)browserDocument;
-(void)startRocketEffectForContentViewController:(BrowserContentViewController*)arg1 ;
-(void)didCollectPageLayoutInformationForSidebarAnimationBeforeResize;
-(void)didForceContentRepaintAndCollectPageLayoutInformationForSidebarAnimationAfterResize:(id)arg1 ;
-(void)startFluidProgressForContentViewController:(BrowserContentViewController*)arg1 ;
-(void)makeUnifiedFieldOrWindowFirstResponder;
-(char)isCreatingNewTabRespectingNewTabBehavior;
-(void)webViewBlockedFromKeyViewLoopHasChanged:(BrowserContentViewController*)arg1 ;
-(void)startHopAnimationFromPoint:(CGPoint)arg1 ;
-(id)continuousReadingListViewControllerForWKView:(id)arg1 ;
-(void)updateUnifiedFieldPlaceholderString;
-(id)selectedTab;
-(void)webViewReaderWillActivate:(BrowserContentViewController*)arg1 ;
-(void)webViewReaderDidActivate:(BrowserContentViewController*)arg1 ;
-(void)webViewReaderWillDeactivate:(BrowserContentViewController*)arg1 ;
-(void)webViewReaderDidDeactivate:(BrowserContentViewController*)arg1 ;
-(void)webViewReaderDidBecomeUnavailableUnexpectedly:(BrowserContentViewController*)arg1 ;
-(void)releaseTabSwitcherForGoingForward;
-(void)addHistoryOperationForSpeculativeLoad:(id)arg1 ;
-(void)closeTabWithoutConfirming:(id)arg1 ;
-(id)initUsingPrivateBrowsing:(char)arg1 isPopupWindow:(char)arg2 ;
-(char)canShowUnifiedField;
-(id)toolbarViewWindow;
-(void)selectUnifiedField:(id)arg1 ;
-(void)focusVisualTabPickerSearchField;
-(SearchableWebContentViewController*)currentBrowserOrOverlayContentViewController;
-(void)openLocation:(id)arg1 ;
-(BrowserContentViewController*)currentBrowserContentViewControllerForNavigationPurposes;
-(id)dynamicBackMenu;
-(id)dynamicForwardMenu;
-(char)sharedLinksSidebarIsShowing;
-(char)allowBookmarksChanges;
-(void)showBookmarksSidebar:(id)arg1 ;
-(void)addBookmark:(id)arg1 ;
-(void)createWebClip:(id)arg1 ;
-(char)isClosingVisualTabPicker;
-(BrowserContentViewController*)currentBrowserContentViewControllerIgnoringVisualTabPickerVisibility;
-(id)initAsPopupWindow:(char)arg1 ;
-(void)showTopSitesWall:(id)arg1 ;
-(void)showFavorites:(id)arg1 ;
-(void)newTab:(id)arg1 ;
-(void)closeInactiveTabs:(id)arg1 ;
-(void)showStartPage:(id)arg1 ;
-(void)setPrefersSidebarVisible:(char)arg1 ;
-(long long)windowPolicyRespectingVisualTabPickerVisibility:(long long)arg1 ;
-(void)selectTab:(id)arg1 ;
-(BrowserContentViewController*)createTabWithPosition:(int)arg1 ;
-(BrowserContentViewController*)createInactiveTabWithPosition:(int)arg1 ;
-(char)shouldAllowSpeculativeLoadNavigationForURL:(id)arg1 ;
-(BrowserContentViewController*)speculativeLoadBrowserContentViewControllerForTab:(const BrowserTab*)arg1 ;
-(void)closeTabOrWindowWithoutConfirming:(id)arg1 ;
-(void)tryToCloseTab:(id)arg1 ;
-(unsigned long long)numberOfTabs;
-(char)continuousPageViewIsHandlingPageTransition;
-(ScrollableTabBarView *)scrollableTabBarView;
-(void)setScrollableTabBarView:(ScrollableTabBarView *)arg1 ;
-(void)replaceTabsWithStates:(const Vector<BrowserTabPersistentState *, 0, WTF::CrashOnOverflow>*)arg1 allowGoBack:(char)arg2 allowJavaScript:(char)arg3 selectTabIndex:(unsigned long long)arg4 ;
-(void)goToURLInNewProcessIfPossible:(id)arg1 withTitle:(id)arg2 windowPolicy:(long long)arg3 tabPlacementHint:(const TabPlacementHint*)arg4 ;
-(void)handlePerformSelectNextOrPreviousTabKeyEquivalentWithEvent:(id)arg1 navigationDirection:(int)arg2 ;
-(void)handleClickInWindowNotHandledByAnyView;
-(CGRect)adjustedFrameForSaving:(CGRect)arg1 ;
-(CGRect)adjustedFrameForCascade:(CGRect)arg1 fromWindow:(id)arg2 ;
-(void)willShowCustomizeToolbarSheet;
-(void)tryToCloseWindowWhenReady;
-(void)windowTitleNeedsUpdate;
-(void)firstResponderMightHaveChanged;
-(char)isTogglingFullScreenMode;
-(void)recordFirstResponderViewBeforeEnteringFullScreen;
-(void)recordFirstResponderViewBeforeExitingFullScreen;
-(void)insertInOrderedTabViewItems:(id)arg1 ;
-(void)insertInOrderedTabViewItems:(id)arg1 atIndex:(unsigned)arg2 ;
-(void)replaceInOrderedTabViewItems:(id)arg1 atIndex:(unsigned)arg2 ;
-(void)removeFromOrderedTabViewItemsAtIndex:(unsigned)arg1 ;
-(NSView *)mainContentView;
-(SidebarViewController *)sidebarViewController;
-(void)setTabSwitcher:(NSTabView *)arg1 ;
-(NSTabView *)tabSwitcher;
-(void)_updateKeyboardLoop;
-(void)safariBrowserWindowUnifiedFieldURLDidChange:(BrowserWindowController*)arg1 ;
-(void)revealContentUnderFullScreenToolbar;
-(void)mainDocumentDidFirstVisuallyNonEmptyLayoutForSpeculativeLoad;
-(UnifiedFieldCompletionController*)unifiedFieldCompletionController;
-(void)didCommitLoadForContentViewController:(BrowserContentViewController*)arg1 loadingSingleResource:(char)arg2 ;
-(void)setShouldUpdateFocusOnSpeculativeLoadCommit:(char)arg1 ;
-(void)updateSecurityUI;
-(void)updateStatusMessage;
-(void)safariBrowserWindowUpdateUnifiedFieldIconNow:(BrowserWindowController*)arg1 ;
-(char)safariBrowserWindowUpdateUnifiedFieldTextNow:(BrowserWindowController*)arg1 isSelectingNewTab:(char)arg2 ;
-(void)safariBrowserWindowUpdateStopReloadButtonNow:(BrowserWindowController*)arg1 ;
-(void)safariBrowserWindowUpdateTabTitlesNow:(BrowserWindowController*)arg1 ;
-(void)updateSidebarButton;
-(void)updateReaderButton;
-(void)updateOneStepBookmarkingButton;
-(void)setSidebarViewController:(SidebarViewController *)arg1 ;
-(char)prefersSidebarVisible;
-(char)readingListSidebarIsShowing;
-(void)showReadingListSidebar;
-(char)isSidebarVisible;
-(void)installSidebarWithAnimation:(char)arg1 ;
-(void)uninstallSidebarWithAnimation:(char)arg1 ;
-(BrowserContentViewController*)currentBrowserContentViewControllerIncludingSpeculativeLoad;
-(void)setFrameProgrammatically:(CGRect)arg1 ;
-(char)isLocationBarVisible;
-(void)setLocationBarVisible:(char)arg1 ;
-(char)isFavoritesBarVisible;
-(void)setFavoritesBarVisible:(char)arg1 ;
-(char)isTabBarVisible;
-(void)setTabBarVisible:(char)arg1 ;
-(char)isStatusBarVisible;
-(void)setStatusBarVisible:(char)arg1 ;
-(char)anyToolbarsVisible;
-(void)setToolbarsVisible:(char)arg1 ;
-(void)updateFluidProgressForContentViewController:(BrowserContentViewController*)arg1 ;
-(void)finishFluidProgressForContentViewController:(BrowserContentViewController*)arg1 ;
-(id)toolbarController;
-(void)searchForString:(id)arg1 ;
-(char)unifiedFieldIsReflectingSearchTerms;
-(char)unifiedFieldIsFirstResponder;
-(void)webViewMainContentViewDidChange:(BrowserContentViewController*)arg1 ;
-(void)tryToCloseOtherTabs:(id)arg1 ;
-(int)windowType;
-(void)_updateReaderButton:(int)arg1 ;
-(id)unifiedField;
-(id)_resizableContentContainer;
-(void)_didReplaceBrowserWKViewInTab:(id)arg1 shouldUpdateFluidProgressController:(char)arg2 ;
-(char)_canAddBookmark;
-(char)bookmarksSidebarIsShowing;
-(void)toggleBookmarksSidebar:(id)arg1 ;
-(char)_canCloseTab:(id)arg1 ;
-(void)tryToCloseTabWhenReady:(id)arg1 ;
-(void)tryToCloseOtherTabsWhenReady:(id)arg1 ;
-(char)_canGoBack;
-(void)goBackInWindow:(id)arg1 ;
-(TabPlacementHint*)_currentTabPlacementHint;
-(id)_replaceTabSwitcher:(id)arg1 ;
-(void)goForwardInWindow:(id)arg1 ;
-(char)_canGoForward;
-(void)_goToUnifiedFieldURLWithWindowPolicy:(long long)arg1 ;
-(void)zoomOut:(id)arg1 ;
-(void)zoomIn:(id)arg1 ;
-(char)_moreThanOneTabShowing;
-(void)_moveTabToNewWindow:(id)arg1 ;
-(void)_applyNewBrowserViewBehavior:(long long)arg1 usingReferenceBrowserContentViewController:(BrowserContentViewController*)arg2 ;
-(void)_showLocationBarTemporarilyIfHidden;
-(char)_makeUnifiedFieldFirstResponderProgrammatically;
-(void)_showTabBarAndUpdateCloseKeyEquivalentsIfNeeded;
-(void)_browserTabsDidChange;
-(BrowserContentViewController*)_createNewTabRespectingNewTabBehavior:(char)arg1 ;
-(void)_performWebSearchWithWindowPolicy:(long long)arg1 ;
-(char)_canPrintFromToolbar;
-(char)_makeUnifiedFieldFirstResponder;
-(char)_unifiedFieldIsEmpty;
-(unsigned long long)selectedTabIndex;
-(void)selectTabAtIndex:(unsigned long long)arg1 ;
-(void)cancelSpeculativeLoad;
-(char)_unifiedFieldIsShowing;
-(char)_unifiedFieldIsReflectingCurrentURL;
-(char)_unifiedFieldTextIsWorthyOfHonoringOnReload;
-(void)_refreshSharedLinks;
-(void)_performUnifiedFieldActionWithWindowPolicy:(long long)arg1 ;
-(void)_reloadHonoringUnifiedField:(char)arg1 ;
-(void)_reloadTab:(id)arg1 ;
-(char)canReloadTab:(id)arg1 ;
-(char)isEnteringOrInFullScreenMode;
-(void)_toggleLocationBar:(id)arg1 suppressToolbarConfigurationAutosave:(char)arg2 ;
-(char)_windowIsFullHeight;
-(void)_toggleToolbarIgnoringCurrentEvent:(id)arg1 ;
-(char)_isTogglingFullScreenBar;
-(void)_toggleFavoritesBarWithAnimation:(char)arg1 ;
-(void)_toggleStatusBarWithAnimation:(char)arg1 ;
-(int)_barDisplayContext;
-(void)_toggleTabBarWithAnimation:(char)arg1 ;
-(void)_setReaderButtonState:(long long)arg1 animate:(char)arg2 ;
-(char)_canShowSharingServicePicker;
-(void)toggleSidebar:(id)arg1 ;
-(char)_isShowingBookmarksInCurrentContentView;
-(char)_isShowingHistoryInCurrentContentView;
-(void)toggleHistoryInBookmarksView:(id)arg1 ;
-(id)_currentBookmarksViewController;
-(char)_isReaderInstalled;
-(void)_updateContentViewTopContentInset;
-(void)_updateWindowBackgroundHeight;
-(void)_updateSidebarForStateChange:(int)arg1 viewController:(BrowserContentViewController*)arg2 finalContentContainerFrame:(CGRect)arg3 animated:(char)arg4 ;
-(id)_windowContentView;
-(void)_prepareForSidebarAnimation:(int)arg1 destinationSnapshotFrame:(CGRect)arg2 ;
-(void)_cleanUpAfterSidebarHasHidden;
-(void)sidebarAnimationHasFinished;
-(void)_animateShowingOrHidingSidebar:(id)arg1 ;
-(char)isSidebarAnimationInProgress;
-(NSView *)webContentSnapshotForSidebarAnimation;
-(void)_setResizableContentContainerSizeForSidebarAnimation:(id)arg1 ;
-(void)setForceEnableTitlebarBlurFilters:(char)arg1 ;
-(char)_sidebarAnimationShouldConsultDataFromWebContentLayoutAnalysis;
-(id)_tabContentViewOfCurrentTab;
-(NSView *)backgroundSidebarAnimationView;
-(id)_sidebarAnimationWithKeyPath:(id)arg1 fromValue:(id)arg2 toValue:(id)arg3 ;
-(char)prefersTopSitesSidebarVisible;
-(void)setBackgroundSidebarAnimationView:(NSView *)arg1 ;
-(void)setWebContentSnapshotForSidebarAnimation:(NSView *)arg1 ;
-(void)_startReadingListHopAnimationUsingStartPoint:(CGPoint)arg1 withImage:(id)arg2 ;
-(void)_startHopAnimationFromPoint:(CGPoint)arg1 toDestination:(int)arg2 withImage:(id)arg3 ;
-(void)startReadingListHopAnimationUsingStartPoint:(CGPoint)arg1 ;
-(void)_startHopAnimationFromPoint:(CGPoint)arg1 withImage:(id)arg2 ;
-(CGPoint)_siteIconHopAnimationStartPoint;
-(CGPoint)_hopAnimationEndPointForDestination:(int)arg1 ;
-(void)_startHopAnimationWithStartPoint:(CGPoint)arg1 endPoint:(CGPoint)arg2 image:(id)arg3 ;
-(void)_showStartPageWithMode:(int)arg1 ;
-(char)_unifiedFieldIsReflectingUnifiedFieldURL;
-(void)toggleReader:(id)arg1 ;
-(void)_startObservingContentLayoutRectChanges;
-(void)_insertCollapsibleBarView:(id)arg1 initiallyVisible:(char)arg2 atIndex:(unsigned long long)arg3 withOriginalHeight:(double)arg4 ;
-(char)_newWindowShouldBeUnbuffered;
-(void)_collectTopLevelViews;
-(char)isPopupWindowUnifiedFieldVisible;
-(void)_setUpTabBar;
-(id)_setUpBackgroundTabAfterLastTabForView:(id)arg1 ;
-(void)_setUpLocationBar;
-(void)_showFavoritesBarIfNeeded;
-(void)_setUpStatusBar;
-(void)_setupExtensionBars;
-(void)_setupPopupWindowUnifiedField;
-(void)_updateVisualTabPickerButton;
-(void)_addOrRemoveNewTabButtonInToolbarIfNecessary;
-(double)_originalHeightForBar:(id)arg1 ;
-(void)_recentSearchesCleared:(id)arg1 ;
-(void)_allIconsRemoved:(id)arg1 ;
-(void)_webPreferencesChanged:(id)arg1 ;
-(void)_downloadDidBegin:(id)arg1 ;
-(void)_extensionWasDisabled:(id)arg1 ;
-(void)_extensionWasEnabled:(id)arg1 ;
-(void)_tellUserThatAppIsHosed;
-(void)setFirstResponderViewBeforeFullScreenTransition:(NSView *)arg1 ;
-(void)_updatePageTitleInUnifiedField;
-(char)frameAutosaveIsAllowed;
-(void)_toggleLocationBarWithoutSavingConfiguration;
-(char)_isShowingBar:(id)arg1 ignoringFullScreenAlwaysVisibleBars:(char)arg2 ;
-(void)_setTabBarVisible:(char)arg1 ;
-(char)_anyExtensionBarsVisible;
-(char)_shouldShowFavoritesBar;
-(char)_alwaysShowTabBar;
-(void)_setExtensionBarsVisible:(char)arg1 ;
-(id)_unifiedFieldURL;
-(UnifiedFieldCompletionController*)_unifiedFieldCompletionController;
-(id)_urlStringForUnifiedFieldIcon;
-(PassRefPtr<Safari::CompletionListItem>*)_selectedParsecCompletionListItem;
-(id)_completionIconForParsecCompletionListItem:(CompletionListItem*)arg1 ;
-(char)_setUnifiedFieldNonURLText:(id)arg1 ;
-(void)_clearEditedUnifiedFieldStringForSelectedTab;
-(void)_updateUIAfterProgrammaticUnifiedFieldTextChange;
-(char)_stopReloadButtonShouldBeVisible;
-(char)_isShowingBookmarksAndHistoryCollectionView;
-(char)_shouldShowTabBar;
-(FavoritesBarView *)favoritesBarView;
-(void)searchForString:(id)arg1 withWindowPolicy:(long long)arg2 ;
-(void)_searchWebForString:(id)arg1 withWindowPolicy:(long long)arg2 ;
-(id)_unifiedFieldText;
-(void)_certificateTrustSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void*)arg3 ;
-(void)_startDownloadHopAnimationFromPoint:(CGPoint)arg1 ;
-(id)_createTabWithView:(id)arg1 atIndex:(unsigned)arg2 andSelect:(char)arg3 ;
-(id)_findTabForView:(id)arg1 inTabViewItems:(id)arg2 ;
-(id)_tabViewItemForWKView:(id)arg1 inTabViewItems:(id)arg2 ;
-(BrowserContentViewController*)_createTabWithPosition:(int)arg1 andSelect:(char)arg2 ;
-(void)_commitToSpeculativeLoadUpdatingFluidProgressController:(char)arg1 ;
-(void)_copyCurrentSessionStateToSpeculativeLoadWKView;
-(void)_loadSpeculativeURLs:(id)arg1 inContentViewController:(BrowserContentViewController*)arg2 tabLabelForSingleURL:(id)arg3 ;
-(char)_updateSpeculativeLoadURLs:(id)arg1 isSpeculative:(char)arg2 withTabLabel:(id)arg3 ;
-(void)_beginSpeculativeLoad:(char)arg1 ;
-(void)_discardSpeculativeLoadBackForwardListInformation;
-(void)_closeSpeculativeLoadWKView;
-(void)_cancelAndReissueSpeculativeLoadInForegroundSoon;
-(char)_tryToCloseDestinationContentViewControllerBeforeCommittingToSpeculativeLoad;
-(void)_updateWindowWithCurrentTabInfoUpdatingFluidProgressController:(char)arg1 shouldUpdateKeyboardLoop:(char)arg2 isSelectingNewTab:(char)arg3 ;
-(void)_currentPageCanBeClosedForCommittingToSpeculativeLoad;
-(void)_commitToSpeculativeLoadSoon;
-(char)shouldUpdateFocusOnSpeculativeLoadCommit;
-(void)populateOldBackForwardListItemToNewBackForwardListItemMap:(HashMap<Safari::WK::BackForwardListItem, Safari::WK::BackForwardListItem, Safari::WK::ObjectSubclassHash<Safari::WK::BackForwardListItem>, WTF::HashTraits<Safari::WK::BackForwardListItem>, WTF::HashTraits<Safari::WK::BackForwardListItem> >*)arg1 ;
-(char)_updateSpeculativeLoadURL:(id)arg1 isSpeculative:(char)arg2 withTabLabel:(id)arg3 ;
-(char)commitToSpeculativeLoad;
-(char)tryGoToURL:(id)arg1 withTabLabel:(id)arg2 ;
-(id)_findTabForView:(id)arg1 ;
-(void)_selectTab:(id)arg1 ;
-(void)_closeTabWithoutConfirming:(id)arg1 ;
-(void)_confirmClosingEditedTab:(id)arg1 ;
-(void)setCompletionHandlerForLastSheetEndingOnWindow:(id)arg1 ;
-(id)_firstTabWithUnsavedCredentialsExcludingTab:(id)arg1 ;
-(void)_confirmClosingOtherTabsIfAnyAreEdited:(id)arg1 ;
-(void)_releaseTabSwitchersForBackForward;
-(void)_releaseTabSwitcher:(id)arg1 andSendWillCloseTabMessages:(char)arg2 ;
-(void)hideVisualTabPicker;
-(void)_updateDocumentIsEdited;
-(void)_removeTabViewItem:(id)arg1 ;
-(void)_closeTabWithoutConfirming:(id)arg1 allowUndo:(char)arg2 ;
-(void)_insertTabFromOtherWindow:(id)arg1 atIndex:(unsigned long long)arg2 andSelect:(char)arg3 ;
-(void)_closeWindowIfNoTabs;
-(double)tabBarHeight;
-(char)_shouldHideTemporaryLocationBarForFirstResponder:(id)arg1 ;
-(void)_hideLocationBarIfTemporary;
-(void)goBackOrForwardFromSegmentedControl:(id)arg1 ;
-(void)zoomInOrOutFromSegmentedControl:(id)arg1 ;
-(char)_canCreateWebClip;
-(char)_canGoHome;
-(void)printFromToolbar:(id)arg1 ;
-(void)autoFill:(id)arg1 ;
-(char)_canAutoFill;
-(void)zoomToStandardSize:(id)arg1 ;
-(void)closeOtherTabsFromMenu:(id)arg1 ;
-(void)selectNextTab:(id)arg1 ;
-(void)selectPreviousTab:(id)arg1 ;
-(void)moveTabToNewWindowFromMenu:(id)arg1 ;
-(void)moveCurrentTabToNewWindow:(id)arg1 ;
-(void)closeCurrentTab:(id)arg1 ;
-(void)closeTabFromMenu:(id)arg1 ;
-(char)canCloseSelectedTab;
-(void)reloadTabFromMenu:(id)arg1 ;
-(void)reloadAllTabs:(id)arg1 ;
-(char)canCreateNewTab;
-(void)showSharingServicePicker:(id)arg1 ;
-(void)toggleCloudTabsPopover:(id)arg1 ;
-(char)_canShowCloudTabsPopover;
-(void)toggleStatusBar:(id)arg1 ;
-(char)canReloadObeyingUnifiedField;
-(long long)_readerButtonState;
-(void)toggleVisualTabPicker:(id)arg1 ;
-(char)_canShowVisualTabPicker;
-(void)toggleReadingListSidebar:(id)arg1 ;
-(void)toggleBookmarks:(id)arg1 ;
-(void)toggleSharedLinksSidebar:(id)arg1 ;
-(void)updateSharedLinks:(id)arg1 ;
-(void)_windowDidResizeToEnterFullScreen;
-(void)_windowDidResizeToExitFullScreen;
-(void)goBackAndFlashToolbarButton:(id)arg1 ;
-(void)goForwardAndFlashToolbarButton:(id)arg1 ;
-(void)_stopSetInterpretsAllInputAsURLTimer;
-(void)_setInterpretsAllInputAsURL;
-(void)_updateUnifiedFieldInputTypeCuesIfNeeded;
-(double)_sheetPositionTop;
-(char)_displayCloseConfirmation;
-(void)updatePendingClosedWindowState;
-(void)_stopObservingContentLayoutRectChanges;
-(void)_stopSetStatusMessageTimer;
-(void)_cancelSpringToFront;
-(void)_tellAppControllerWindowWillClose;
-(id)_windowURL;
-(void)_updateSecurityUIVisibility;
-(char)_unifiedFieldTextLooksLikeWebSearch;
-(void)_performUnifiedFieldAction:(id)arg1 ;
-(char)_canEnterQuickWebsiteSearchMode;
-(void)_enterQuickWebsiteSearchMode;
-(char)_shouldExitQuickWebsiteSearchMode;
-(void)_exitQuickWebsiteSearchMode;
-(char)_appendSlashAndCollapseSelectionInUnifiedField;
-(void)stopOrReload:(id)arg1 ;
-(void)showCertificateSheet:(id)arg1 ;
-(void)unifiedFieldPerformStopReloadButtonAction:(id)arg1 ;
-(void)unifiedFieldPerformSecurityPillAction:(id)arg1 ;
-(char)_trackSearchButtonForEvent:(id)arg1 ;
-(id)_backListMenuForButton:(id)arg1 ;
-(id)_forwardListMenuForButton:(id)arg1 ;
-(void)_scheduleSpringToFront;
-(void)_automaticallyHideTabBarForTabDrag;
-(void)_makeFirstResponder:(id)arg1 ;
-(char)_isExpectedOrCurrentURLEmptyOrStartPage;
-(void)_updateWindowWithNewSelectedTabInfoUpdatingFluidProgressController:(char)arg1 ;
-(char)_shouldSetUnifiedFieldAsFirstResponderImmediatelyAfterCurrentTabWasSelected;
-(char)_makeCurrentContentViewOfSelectedTabFirstResponderIfNecessary;
-(void)_updateFirstResponderAfterTabSwitch;
-(void)_removeAllTabCloseUndoActions;
-(char)_setTitlebarBlurFiltersDisabled:(char)arg1 ;
-(void)_updateSecurityUIWithEVCertificateTitle:(id)arg1 ;
-(char)_currentPageIsSecureEnoughToShowLock;
-(void)_updateEVButtonForHost:(id)arg1 certificateChain:(id)arg2 ;
-(void)_stopUpdateFirstResponderAfterTabSwitchTimer;
-(void)_handleNavigationAction:(id)arg1 request:(id)arg2 ;
-(void)_setExtensionBar:(const ExtensionBar*)arg1 visible:(char)arg2 withAnimation:(char)arg3 ;
-(void)_updateExtensionBarDividers;
-(void)_setStatusMessage:(id)arg1 ellipsize:(char)arg2 ;
-(void)_dismissPrivateBrowsingSheet;
-(double)_collapsedHeightOfBar:(id)arg1 ;
-(void)_insertViewControllerForCollapsibleBar:(id)arg1 ;
-(char)_isBarAutoShowingInFullScreen:(id)arg1 ;
-(void)_removeViewControllerForCollapsibleBar:(id)arg1 ;
-(void)_toggleCollapsibleBar:(id)arg1 toBeVisible:(char)arg2 ;
-(char)_shouldShowTabBarIgnoringVisualTabPicker;
-(void)_toggleBar:(id)arg1 withAnimation:(char)arg2 isShowing:(char)arg3 ;
-(char)_anyExtensionBarsVisibleIgnoringFullScreen:(char)arg1 ;
-(id)_setUpTabForView:(id)arg1 atIndex:(unsigned long long)arg2 andSelect:(char)arg3 withBrowserTab:(BrowserTab*)arg4 ;
-(id)_createTabWithView:(id)arg1 atIndex:(unsigned)arg2 andSelect:(char)arg3 withBrowserTab:(BrowserTab*)arg4 ;
-(void)_willInsertTab;
-(void)_didInsertTab;
-(int)_newTabPositionRespectingVisualTabPickerVisibility:(int)arg1 ;
-(BrowserContentViewController*)createTabAtIndex:(unsigned long long)arg1 andSelect:(char)arg2 ;
-(void)_insertTab:(id)arg1 atIndex:(unsigned long long)arg2 andSelect:(char)arg3 ;
-(void)_didSelectNewTab:(id)arg1 withLastSelectedTab:(id)arg2 ;
-(void)replaceEmptyTabWithTabs:(id)arg1 ;
-(void)_cancelSidebarAnimation;
-(void)_willUnselectTab:(id)arg1 ;
-(void)_undoCloseTabAtIndex:(unsigned long long)arg1 andSelect:(char)arg2 ;
-(void)willSelectTabViewItem:(id)arg1 ;
-(void)didSelectTabViewItem;
-(void)_releaseTabSwitcherForGoingBack;
-(void)_closeOtherTabsWithoutConfirming:(id)arg1 ;
-(char)_shouldShowSecurityUIInUnifiedField;
-(id)_defaultSearchProviderDisplayName;
-(id)unifiedFieldPlaceholderString;
-(void)_abortUnifiedFieldCompletion;
-(char)_unifiedFieldIsReflectingURL:(id)arg1 ;
-(void)_completionListSelectionDidChange:(id)arg1 ;
-(void)_completionListDidHide:(id)arg1 ;
-(void)_completionListHintDidChange:(id)arg1 ;
-(void)setPopupWindowUnifiedFieldVisible:(char)arg1 ;
-(char)_shouldShowStatusBar;
-(void)_toggleBar:(id)arg1 withAnimation:(char)arg2 isShowing:(char)arg3 forceMaintainFullHeight:(char)arg4 ;
-(char)_isMenuBarVisibleInThisFullScreenSpace;
-(id)_barBackgroundFromBar:(id)arg1 ;
-(char)_collapsibleBarsAreInFullScreenToolbarWindow;
-(void)_toggleFullScreenBar:(id)arg1 withAnimation:(char)arg2 isShowing:(char)arg3 ;
-(void)_setFavoritesBarNewTabButtonVisibility:(char)arg1 ;
-(id)_screenForWindow;
-(id)_setAutoresizingMasksForOrderedViews:(id)arg1 toResizeOnly:(id)arg2 allowingTabViewToResize:(char)arg3 ;
-(void)_updateVisualTabPickerFrame;
-(void)_setStatusMessageNow;
-(void)_clearStatus;
-(id)_defaultStatus;
-(void)_tryMultipleURLs:(unique_ptr<WTF::Deque<NSURL *, 0>, std::__1::default_delete<WTF::Deque<NSURL *, 0> > >*)arg1 windowPolicy:(long long)arg2 ;
-(void)_performSpringToFront;
-(char)_anyExtensionBarsVisibleExcludingBar:(const ExtensionBar*)arg1 ignoringFullScreen:(char)arg2 ;
-(void)_insertExtensionBars:(const Vector<WTF::RefPtr<Safari::ExtensionBar>, 0, WTF::CrashOnOverflow>*)arg1 withAnimation:(char)arg2 ;
-(char)_anyExtensionBarsVisibleExcludingBar:(const ExtensionBar*)arg1 ;
-(void)_removeCollapsibleBarView:(id)arg1 ;
-(void)_setUpExtensionBar:(ExtensionBar*)arg1 withFrame:(CGRect)arg2 ;
-(CGPoint)_downloadHopStartPoint;
-(CGPoint)_downloadHopEndPoint;
-(char)_isWindowFullScreenToolbarWindow:(id)arg1 ;
-(void)_setShouldDisableFrameSizeUpdates:(char)arg1 ;
-(void)_setShouldDeferWKViewInWindowChanges:(char)arg1 ;
-(void)_prepareBarsToEnterFullScreen;
-(void)_prepareTopLevelViewsToToggleFullScreen;
-(void)_prepareBarsToExitFullScreen;
-(void)_finishExitingFullScreen;
-(void)_unlockMenuBarIfNeeded;
-(id)_snapshotOfView:(id)arg1 contentInsets:(NSEdgeInsets)arg2 ;
-(void)setUpVisualTabPickerView;
-(void)_visualTabPickerInsertToolbarBackground;
-(void)_visualTabPickerFadeOutToolbarBackground;
-(void)_showTabBarAndNewTabButtonWhenHidingVisualTabPickerIfNeeded;
-(void)_showTabSwitcherAndSidebarWhenHidingVisualTabPickerIfNeeded;
-(CGRect)visualTabPickerRootViewFrame;
-(void)showVisualTabPicker;
-(void)_takeOffscreenToolbarSnapshotForVisualTabPickerAnimation;
-(char)_isToolbarBlurringEnabledInFullScreen;
-(void)_updatePopupWindowUnifiedFieldContainerFrameYOrigin;
-(void)visualTabPickerControllerWillClose:(id)arg1 ;
-(void)willStartExitAnimationForVisualTabPickerController:(id)arg1 ;
-(unsigned long long)morphingDragImage:(id)arg1 draggingEntered:(id)arg2 ;
-(unsigned long long)morphingDragImage:(id)arg1 draggingUpdated:(id)arg2 ;
-(void)morphingDragImage:(id)arg1 draggingExited:(id)arg2 ;
-(char)morphingDragImage:(id)arg1 performDragOperation:(id)arg2 ;
-(void)unifiedFieldBecameFirstResponder:(id)arg1 ;
-(void)unifiedFieldResignedFirstResponder:(id)arg1 ;
-(void)unifiedFieldAutocompleteSelectionDidChange:(id)arg1 ;
-(void)unifiedFieldMarkedTextDidChange:(id)arg1 ;
-(char)unifiedFieldShouldSelectAllAfterMouseDown:(id)arg1 ;
-(void)unifiedField:(id)arg1 mouseUpInStopReloadButton:(id)arg2 ;
-(void)unifiedField:(id)arg1 mouseUpInSecurityPill:(id)arg2 ;
-(char)unifiedField:(id)arg1 trackSearchButtonForEvent:(id)arg2 ;
-(id)bookmarkToDragFromSiteIconInUnifiedField:(id)arg1 ;
-(void)unifiedFieldURLDropped:(id)arg1 ;
-(id)browserWindowTitleBarURL:(id)arg1 ;
-(void)browserWindow:(id)arg1 shouldGoToURL:(id)arg2 ;
-(char)window:(id)arg1 performKeyEquivalent:(id)arg2 ;
-(char)window:(id)arg1 willHandleKeyEvent:(id)arg2 ;
-(char)window:(id)arg1 willHandleMouseDownEvent:(id)arg2 ;
-(id)imageHopParentWindow;
-(void)imageHopAnimationDidFinish:(id)arg1 ;
-(void)fluidProgressRocketAnimationDidComplete;
-(id)currentFluidProgressStateSource;
-(char)isRocketEffectTestEnabled;
-(void)userInteractedWithPageDuringSwipeGesture;
-(CGSize)tabSwitcherSize;
-(CGSize)currentWebViewSize;
-(CGRect)mainContentRectRelativeToWindowContentView;
-(void)didReplaceBrowserWKViewInTab:(id)arg1 ;
-(void)goToActivatedCompletionListURL:(id)arg1 ;
-(void)goToUnifiedFieldURL:(id)arg1 ;
-(void)performWebSearch:(id)arg1 ;
-(void)attemptToShowFavoritesViewIfUnifiedFieldIsEmpty;
-(void)reloadIgnoringUnifiedField:(id)arg1 ;
-(void)showFavoritesBarForReadingListAnimation:(id)arg1 ;
-(void)hideFavoritesBarAfterReadingListAnimation:(id)arg1 ;
-(void)showHistoryInBookmarksView:(id)arg1 ;
-(void)showHistoryViewAndSearchForString:(id)arg1 ;
-(void)currentWKViewDidSwipeSnapshotToRect:(CGRect)arg1 ;
-(void)startReadingListHopAnimationFromMouseLocation;
-(void)startSiteIconHopAnimationToDestination:(int)arg1 ;
-(CGRect)defaultFrame;
-(void)setFullScreenFavoritesBarVisible:(char)arg1 ;
-(char)isFavoritesBarVisibleEnteringFullScreen;
-(void)setFavoritesBarVisibleEnteringFullScreen:(char)arg1 ;
-(char)safariBrowserWindowUpdateUnifiedFieldTextNow:(BrowserWindowController*)arg1 ;
-(void)slideInFavoritesBarNewTabButtonIfNecessary;
-(void)slideOutFavoritesBarNewTabButtonIfNecessary;
-(id)unifiedFieldTextForRestoring;
-(void)restoreUnifiedFieldText:(id)arg1 ;
-(CGRect)webViewFrameForWebViewSize:(CGSize)arg1 ;
-(void)setLastMouseClickPosition:(CGPoint)arg1 ;
-(void)downloadFailedToHopToDockFromPoint:(CGPoint)arg1 ;
-(id)orderedTabContentViews;
-(id)overflowTabViewItem;
-(unsigned long long)indexOfOverflowTabButtonInTabBar;
-(void)updateSpeculativeLoadURL:(id)arg1 ;
-(void)moveTab:(id)arg1 toIndex:(unsigned)arg2 ;
-(void)updateTabLabelForView:(id)arg1 ;
-(double)tabBarHeightForSingleTabWindow;
-(void)windowWillOrderOnScreen:(id)arg1 ;
-(void)morphingDragImage:(id)arg1 enteredWindow:(id)arg2 ;
-(void)morphingDragImage:(id)arg1 exitedWindow:(id)arg2 ;
-(void)tabsWereRearranged;
-(void)userDidScrollDownInBrowserWKView:(id)arg1 ;
-(char)shouldBlockTabsFromResizing;
-(void)bar:(const ExtensionBar*)arg1 handleNavigationAction:(id)arg2 request:(id)arg3 ;
-(void)toolbarItem:(const ExtensionToolbarItem*)arg1 handleNavigationAction:(id)arg2 request:(id)arg3 ;
-(void)setExtensionBar:(const ExtensionBar*)arg1 visible:(char)arg2 withAnimation:(char)arg3 ;
-(BrowserTab*)extensionEventTargetForCurrentSpeculativeLoad;
-(char)shouldReaderIgnoreWindowChangeNotificationsForWKView:(id)arg1 ;
-(ReadingListContentProvider *)readingListContentProvider;
-(void)_postPrivateBrowsingSheetWasCanceledNotification;
-(void)_startObservingPrivateBrowsingSheetWasCanceledNotifications;
-(void)_stopObservingPrivateBrowsingSheetWasCanceledNotifications;
-(void)_automaticallyShowTabBarForTabDrag;
-(void)_lockMenuBarIfNeeded;
-(void)_setMenuBarAutoHidingIsEnabled:(id)arg1 ;
-(double)_windowWidthForTabSwitcherWidth:(double)arg1 ;
-(NSView *)sidebarContainerView;
-(char)isToolbarInFullScreenToolbarWindow;
-(char)_hasAttachedSheet;
-(void)performSearchWithQuery:(id)arg1 usingQuickWebsiteSearchProvider:(id)arg2 ;
-(void)cancelVisualTabPickerPendingEntryAnimation;
-(void)startHidingVisualTabPicker;
-(TabBarEnclosureView *)tabBarEnclosureView;
-(void)setTabBarEnclosureView:(TabBarEnclosureView *)arg1 ;
-(NSTextField *)statusTextField;
-(void)setStatusTextField:(NSTextField *)arg1 ;
-(char)isSwitchingTabs;
-(char)forceEnableTitlebarBlurFilters;
-(void)setWindowType:(int)arg1 ;
-(void)setReadingListContentProvider:(ReadingListContentProvider *)arg1 ;
-(void)setAutomaticReadingListContentProvider:(AutomaticReadingListContentProvider *)arg1 ;
-(NSView *)firstResponderViewBeforeFullScreenTransition;
-(NSView *)continuousBannerSidebarAnimationView;
-(void)setContinuousBannerSidebarAnimationView:(NSView *)arg1 ;
-(id)completionHandlerForLastSheetEndingOnWindow;
-(BarBackground *)popupWindowUnifiedFieldContainer;
-(void)setPopupWindowUnifiedFieldContainer:(BarBackground *)arg1 ;
-(UnifiedField *)popupWindowUnifiedField;
-(void)setPopupWindowUnifiedField:(UnifiedField *)arg1 ;
-(char)centersStartPageContent;
-(char)showsStartPageModeSegmentedControl;
-(void)toggleCentersStartPageContent:(id)arg1 ;
-(void)toggleShowsStartPageModeSegmentedControl:(id)arg1 ;
-(id)init;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)windowDidBecomeKey:(id)arg1 ;
-(void)encodeRestorableStateWithCoder:(id)arg1 ;
-(void)restoreStateWithCoder:(id)arg1 ;
-(char)validateUserInterfaceItem:(id)arg1 ;
-(char)validateMenuItem:(id)arg1 ;
-(void)doCommandBySelector:(SEL)arg1 ;
-(void)showWindow:(id)arg1 ;
-(char)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3 ;
-(void)cancel:(id)arg1 ;
-(CGSize)windowWillResize:(id)arg1 toSize:(CGSize)arg2 ;
-(void)controlTextDidEndEditing:(id)arg1 ;
-(void)controlTextDidChange:(id)arg1 ;
-(void)windowWillClose:(id)arg1 ;
-(void)synchronizeWindowTitleWithDocumentName;
-(id)windowNibName;
-(void)setDocument:(id)arg1 ;
-(char)shouldCloseDocument;
-(void)menuNeedsUpdate:(id)arg1 ;
-(char)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id*)arg3 action:(SEL*)arg4 ;
-(char)windowShouldClose:(id)arg1 ;
-(id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2 ;
-(CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(CGRect)arg2 ;
-(CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(CGRect)arg3 ;
-(CGSize)window:(id)arg1 willUseFullScreenContentSize:(CGSize)arg2 ;
-(void)windowDidFailToEnterFullScreen:(id)arg1 ;
-(void)windowDidResize:(id)arg1 ;
-(void)windowDidMove:(id)arg1 ;
-(void)windowDidResignKey:(id)arg1 ;
-(void)windowDidBecomeMain:(id)arg1 ;
-(void)windowDidResignMain:(id)arg1 ;
-(void)windowDidMiniaturize:(id)arg1 ;
-(void)windowDidDeminiaturize:(id)arg1 ;
-(void)windowDidEndSheet:(id)arg1 ;
-(void)windowDidEndLiveResize:(id)arg1 ;
-(void)windowWillEnterFullScreen:(id)arg1 ;
-(void)windowDidEnterFullScreen:(id)arg1 ;
-(void)windowWillExitFullScreen:(id)arg1 ;
-(void)windowDidExitFullScreen:(id)arg1 ;
-(void)windowDidLoad;
-(void)loadWindow;
-(void)noResponderFor:(SEL)arg1 ;
-(void)swipeWithEvent:(id)arg1 ;
-(id)_attachedSheet;
-(void)setStatusBar:(BarBackground *)arg1 ;
-(BarBackground *)statusBar;
-(char)isInFullScreenMode;
-(void)setSidebarWidth:(double)arg1 ;
-(double)sidebarWidth;
-(void)_showSidebar:(id)arg1 ;
-(void)animationDidStop:(id)arg1 finished:(char)arg2 ;
@end

