/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:01:08 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/Mail.framework/Versions/A/Mail
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Mail/MFRemoteStore.h>
#import <Mail/IMAPMailboxDelegate.h>
#import <Mail/IMAPMessageDataSource.h>

@class NSString, IMAPMailbox, IMAPDownloadCache, IMAPCommandPipeline, IMAPMailboxSyncEngine, NSLock, NSMutableArray, MCInvocationQueue, NSMutableDictionary;

@interface MFLibraryIMAPStore : MFRemoteStore <IMAPMailboxDelegate, IMAPMessageDataSource> {

	NSString* _mailboxName;
	IMAPMailbox* _IMAPMailbox;
	IMAPDownloadCache* _downloadCache;
	IMAPCommandPipeline* _fetchPipeline;
	IMAPMailboxSyncEngine* _syncEngine;
	NSLock* _copyLock;
	NSMutableArray* _pendingCompacts;
	MCInvocationQueue* _pendingCompactsQueue;
	NSMutableDictionary* _recentFlagChangesByMessageID;
	NSMutableArray* _recentlyDeletedMessageIDs;
	char _readyToDealloc;
	char _isOpenedByUser;
	char _supportsCustomPermanentFlags;
	unsigned long long _totalCount;

}

@property (assign) char isOpenedByUser;                                      //@synthesize isOpenedByUser=_isOpenedByUser - In the implementation block
@property (assign) unsigned long long totalCount;                            //@synthesize totalCount=_totalCount - In the implementation block
@property (assign,nonatomic) char supportsCustomPermanentFlags;              //@synthesize supportsCustomPermanentFlags=_supportsCustomPermanentFlags - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) char isReadOnly; 
@property (nonatomic,readonly) char persistentIDType; 
+(id)_newDataFromMimePart:(id)arg1 threshold:(unsigned long long)arg2 ;
-(char)isReadOnly;
-(id)objectSpecifierForMessage:(id)arg1 ;
-(void)deleteMessages:(id)arg1 moveToTrash:(char)arg2 ;
-(id)async_setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2 ;
-(id)messagesForImporter;
-(id)copyOfAllMessagesWithOptions:(unsigned)arg1 ;
-(char)canCompact;
-(void)doCompact;
-(void)writeUpdatedMessageDataToDisk;
-(id)_fetchHeaderDataForMessage:(id)arg1 fetchIfNotAvailable:(char)arg2 ;
-(id)_fetchBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id*)arg2 fetchIfNotAvailable:(char)arg3 ;
-(void)fetchSynchronously;
-(void)openSynchronouslyUpdatingMetadata:(char)arg1 ;
-(id)initWithCriterion:(id)arg1 mailbox:(id)arg2 readOnly:(char)arg3 ;
-(id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id*)arg2 fetchIfNotAvailable:(char)arg3 ;
-(void)messagesWereAdded:(id)arg1 conversationsMembers:(id)arg2 duringOpen:(char)arg3 options:(id)arg4 ;
-(void)addMessages:(id)arg1 ;
-(id)messageForMessageID:(id)arg1 ;
-(void)_handleStoreFinishedFirstTimeSync:(id)arg1 ;
-(char)canRebuild;
-(char)allowsOverwrite;
-(void)startSynchronization;
-(long long)undoAppendOfMessageIDs:(id)arg1 ;
-(void)forceResync;
-(char)_copyMessagesByID:(id)arg1 toStore:(id)arg2 settingFlags:(id)arg3 newMessages:(id)arg4 error:(id*)arg5 ;
-(long long)_appendToServerWithContext:(id)arg1 error:(id*)arg2 ;
-(char)allowsAppend;
-(id)async_setGmailLabelsFromDictionary:(id)arg1 forMessages:(id)arg2 ;
-(void)deleteMessagesOlderThanNumberOfDays:(long long)arg1 compact:(char)arg2 ;
-(id)messagesForMailbox:(id)arg1 where:(id)arg2 sortedBy:(id)arg3 ascending:(char)arg4 options:(unsigned)arg5 ;
-(void)setBackgroundColorForMessages:(id)arg1 textColorForMessages:(id)arg2 ;
-(void)doRoutineCleanup;
-(char)isAllMailMailbox;
-(void)compactMailbox:(id)arg1 ;
-(void)boostExistingFetchTo:(long long)arg1 ;
-(void)checkNewMail;
-(id)offlineCacheIfOffline;
-(void)setComputedHighestModificationSequence:(unsigned long long)arg1 ;
-(id)mailboxName;
-(id)_offlineCache;
-(unsigned)uidValidityStatus;
-(void)setUid:(unsigned)arg1 forMessageWithTemporaryUid:(unsigned)arg2 ;
-(void)undeleteMessagesWithRemoteIDs:(id)arg1 ;
-(id)messageWithLibraryID:(long long)arg1 options:(unsigned)arg2 ;
-(id)copyOfOldCachedMessagesContentsForUid:(unsigned)arg1 ;
-(id)dataForMimePart:(id)arg1 ;
-(id)_copyMailboxSyncEngineCreateIfNecessary:(char)arg1 setupGatewayIfNecessary:(char)arg2 ;
-(char)supportsCustomPermanentFlags;
-(void)setIsOpenedByUser:(char)arg1 ;
-(void)openAsynchronously;
-(char)_isSynchronized;
-(id)_gatewayCreateIfNeeded:(char)arg1 options:(unsigned long long)arg2 ;
-(void)_openSynchronouslyUpdatingMetadata:(char)arg1 withOptions:(unsigned long long)arg2 ;
-(id)willDeallocPerformingInStoreCacheLock:(char*)arg1 ;
-(char)setStoreState:(int)arg1 fromState:(int)arg2 ;
-(void)_retrieveNewMessagesForCheckingNewMail:(char)arg1 ;
-(id)_IMAPMailbox;
-(void)_fetchForCheckingNewMail:(char)arg1 ;
-(void)cleanupSynchronously;
-(unsigned long long)totalCountOfMessages;
-(char)_isRebuildingOrSynchronizing;
-(id)_copyOfAllMessagesSortedByUidWithOptions:(unsigned)arg1 ;
-(void)compactMessages:(id)arg1 ;
-(id)_deletedMessages;
-(void)_processPendingCompacts;
-(unsigned)_permanentFlags;
-(void)deleteLastMessageWithHeaders:(id)arg1 compactWhenDone:(char)arg2 ;
-(id)getDetailsForMessagesWithRemoteIDs:(id)arg1 ;
-(id)_uidIndexSetForMessages:(id)arg1 ;
-(void)setUidValidityStatus:(unsigned)arg1 ;
-(unsigned)maximumRemoteID;
-(id)_uidSearchForMessageIds:(id)arg1 destinationUidNext:(unsigned)arg2 withGateway:(id)arg3 ;
-(void)_copyFlagsFromMessages:(id)arg1 flagsByMessage:(id)arg2 toMessagesWithUids:(id)arg3 withGateway:(id)arg4 usedFlags:(id)arg5 ;
-(id)duplicateMessages:(id)arg1 newRemoteIDs:(id)arg2 newDocumentIDs:(id)arg3 forMailbox:(id)arg4 setFlags:(long long)arg5 clearFlags:(long long)arg6 messageFlagsForMessages:(id)arg7 createNewCacheFiles:(char)arg8 ;
-(id)duplicateMessages:(id)arg1 newRemoteIDs:(id)arg2 newDocumentIDs:(id)arg3 forMailbox:(id)arg4 setFlags:(long long)arg5 clearFlags:(long long)arg6 createNewCacheFiles:(char)arg7 ;
-(void)_synchronouslyStoreFlagsFromDictionary:(id)arg1 forMessages:(id)arg2 ;
-(id)async_setGmailLabelsFromDictionary:(id)arg1 forMessages:(id)arg2 updatingServer:(char)arg3 ;
-(void)_synchronouslyStoreLabelsFromDictionary:(id)arg1 forMessages:(id)arg2 ;
-(id)async_setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2 updatingServer:(char)arg3 ;
-(void)_internalSetFlagsFromDictionary:(id)arg1 forMessages:(id)arg2 ;
-(char)persistentIDType;
-(void)_setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2 ;
-(id)_waitForDataFromDownload:(id)arg1 uid:(unsigned)arg2 gateway:(id)arg3 ;
-(id)_fetchDataForMimePart:(id)arg1 keepInMemory:(char)arg2 writeToDisk:(char)arg3 ;
-(char)_hasCachedDataForMimePart:(id)arg1 message:(id)arg2 ;
-(char)hasCachedDataForMimePart:(id)arg1 ;
-(id)_dataForMessage:(id)arg1 readHeadersOnly:(char)arg2 ;
-(id)colorForMessage:(id)arg1 ;
-(char)isOpenedByUser;
-(char)hasValidCacheFileForUid:(unsigned)arg1 ;
-(id)messageWithRemoteID:(id)arg1 inRemoteMailbox:(id)arg2 ;
-(void)setTotalCount:(unsigned long long)arg1 ;
-(char)canSetMessageColors;
-(void)_setBackgroundColorForMessages:(id)arg1 textColorForMessages:(id)arg2 ;
-(id)messagesBeingAdded;
-(void)_updateCountFromMailbox:(id)arg1 fromIDLE:(id)arg2 ;
-(void)_processResponsesFromMailbox:(id)arg1 ;
-(void)_updateUidValidityFromMailbox:(id)arg1 ;
-(void)setAllegedHighestModificationSequence:(unsigned long long)arg1 ;
-(void)updateCountFromMailbox:(id)arg1 fromIDLE:(char)arg2 ;
-(void)updateUidValidityFromMailbox:(id)arg1 ;
-(void)processResponsesFromMailbox:(id)arg1 ;
-(void)updateSelectedGatewayFromMailbox:(id)arg1 ;
-(unsigned long long)allegedHighestModificationSequenceForMailbox:(id)arg1 ;
-(unsigned long long)computedHighestModificationSequenceForMailbox:(id)arg1 ;
-(void)updateComputedHighestModificationSequence:(unsigned long long)arg1 forMailbox:(id)arg2 ;
-(char)isInbox;
-(id)copyMessagesWithTemporaryUids;
-(id)copyIncompleteMessages;
-(char)hasValidCacheFileForMessage:(id)arg1 ;
-(id)fetchPipeline;
-(id)downloadCache;
-(char)messagesAreBeingAdded;
-(id)fetchAndCacheBodyDataForMessages:(id)arg1 ;
-(void)compactMessagesFromSyncEngine:(id)arg1 ;
-(id)newDictionaryForLocalFlags:(unsigned)arg1 serverFlags:(unsigned)arg2 existingDictionary:(id)arg3 ;
-(void)syncEngineDidStart;
-(void)syncEngineDidFinish;
-(unsigned)uidNextStatus;
-(void)setUidNextStatus:(unsigned)arg1 ;
-(unsigned long long)allegedHighestModificationSequence;
-(void)removeAllLocalMessages;
-(void)syncEngineDidSynchronizeMessageList;
-(id)messageWithDefaultLoadOptionsAndRowID:(long long)arg1 ;
-(id)messagesWithRowIDs:(id)arg1 ;
-(id)recentFlagChangesForRowID:(id)arg1 ;
-(void)openSynchronouslyWithoutUserInteraction;
-(void)invalidateSyncEngine;
-(char)_shouldCallCompactWhenClosing;
-(void)fetchSynchronouslyForKnownChanges;
-(id)_preferredOrderForFetchingMessageBodies:(id)arg1 ;
-(char)isSortedAscending;
-(id)messagesBeingRouted;
-(unsigned long long)totalCount;
-(void)setSupportsCustomPermanentFlags:(char)arg1 ;
-(void)dealloc;
-(void)_invalidate;
-(id)sortOrder;
-(id)account;
-(id)mailbox;
@end

