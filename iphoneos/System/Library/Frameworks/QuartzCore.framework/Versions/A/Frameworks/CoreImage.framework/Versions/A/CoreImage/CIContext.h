/*
* This header is generated by classdump-dyld 0.7
* on Saturday, February 14, 2015 at 11:59:41 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/QuartzCore.framework/Versions/A/Frameworks/CoreImage.framework/Versions/A/CoreImage
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <CoreImage/CoreImage-Structs.h>
@interface CIContext : NSObject {

	id _priv;

}
+(id)contextWithQTOpenGLContext:(id)arg1 ;
+(CGColorSpaceRef)defaultRGBColorSpace;
+(id)_contextByfeContext:(id)arg1 ;
+(id)_offlineGPUs;
+(id)contextWithCGLContext:(CGLContextObjectRef)arg1 pixelFormat:(CGLPixelFormatObjectRef)arg2 colorSpace:(CGColorSpaceRef)arg3 options:(id)arg4 ;
+(id)contextForOfflineGPUAtIndex:(unsigned)arg1 colorSpace:(CGColorSpaceRef)arg2 options:(id)arg3 sharedContext:(CGLContextObjectRef)arg4 ;
+(id)_singletonContext;
+(void)setTextureCacheFraction:(float)arg1 forContextsUsingRenderID:(int)arg2 ;
+(float)textureCacheFractionForContextsUsingRenderID:(int)arg1 ;
+(id)_allContexts;
+(void)_setInitCallback:(/*function pointer*/void*)arg1 ;
+(char)getRepresentation:(id)arg1 options:(CFDictionaryRef)arg2 colorspace:(CGColorSpace*)arg3 intent:(int*)arg4 bitsPerComponent:(unsigned long long*)arg5 image:(CGImage*)arg6 ;
+(CGColorSpaceRef)defaultWorkingColorSpace;
+(unsigned)offlineGPUCount;
+(id)contextForOfflineGPUAtIndex:(unsigned)arg1 ;
+(id)offlineGPUAtIndex:(unsigned)arg1 colorSpace:(CGColorSpaceRef)arg2 options:(id)arg3 sharedContext:(CGLContextObjectRef)arg4 ;
+(id)offlineGPUAtIndex:(unsigned)arg1 ;
+(id)contextWithCGLContext:(CGLContextObjectRef)arg1 pixelFormat:(CGLPixelFormatObjectRef)arg2 options:(id)arg3 ;
+(id)context;
+(void)initialize;
+(id)contextWithCGContext:(CGContextRef)arg1 options:(id)arg2 ;
+(id)contextWithOptions:(id)arg1 ;
+(unsigned)currentVersion;
-(void)clearCaches;
-(void)abort;
-(id)_initWithImpl:(id)arg1 ;
-(CGAffineTransform)CTM;
-(id)initWithCGContext:(CGContextRef)arg1 options:(id)arg2 ;
-(id)optionsDictionaryWithPixelAligment;
-(id)optionsDictionary;
-(id)_impl;
-(void)updateContext;
-(void)setCTM:(CGAffineTransform)arg1 ;
-(CGImageRef)createCGImage:(id)arg1 fromRect:(CGRect)arg2 format:(int)arg3 colorSpace:(CGColorSpaceRef)arg4 ;
-(CGLayerRef)createCGLayerWithSize:(CGSize)arg1 info:(CFDictionaryRef)arg2 ;
-(void)render:(id)arg1 toIOSurface:(IOSurfaceRef)arg2 bounds:(CGRect)arg3 colorSpace:(CGColorSpaceRef)arg4 ;
-(void)render:(id)arg1 toTexture:(unsigned)arg2 target:(unsigned)arg3 bounds:(CGRect)arg4 colorSpace:(CGColorSpaceRef)arg5 ;
-(char)measureRequirementsOf:(id)arg1 query:(int)arg2 :(id*)arg3 results:(CGRect*)arg4 ;
-(unsigned)passes;
-(void)waitImage:(id)arg1 ;
-(BOOL)testImage:(id)arg1 ;
-(void)_setImpl:(id)arg1 ;
-(CGImageRef)createCGImage:(id)arg1 ;
-(CGImageRef)createCGImage:(id)arg1 format:(int)arg2 ;
-(CGImageRef)createCGImage:(id)arg1 fromRect:(CGRect)arg2 format:(int)arg3 ;
-(id)_imageByRenderingInRect:(CGRect)arg1 format:(int)arg2 callback:(void*)arg3 data:(void*)arg4 options:(id)arg5 ;
-(void)releaseAllResources;
-(void)render:(id)arg1 ;
-(void)render:(id)arg1 toBitmap:(void*)arg2 rowBytes:(long long)arg3 bounds:(CGRect)arg4 format:(int)arg5 colorSpace:(CGColorSpaceRef)arg6 ;
-(id)flatten:(id)arg1 fromRect:(CGRect)arg2 format:(int)arg3 colorSpace:(CGColorSpaceRef)arg4 ;
-(id)init;
-(void)finalize;
-(void)dealloc;
-(CGRect)bounds;
-(void)setBounds:(CGRect)arg1 ;
-(id)objectForKey:(id)arg1 ;
-(void)setObject:(id)arg1 forKey:(id)arg2 ;
-(void)invalidate;
-(id)userInfo;
-(void)setUserInfo:(id)arg1 ;
-(id)initWithOptions:(id)arg1 ;
-(CGImageRef)createCGImage:(id)arg1 fromRect:(CGRect)arg2 ;
-(CGColorSpaceRef)_outputColorSpace;
-(void)drawImage:(id)arg1 inRect:(CGRect)arg2 fromRect:(CGRect)arg3 ;
-(int)vendorID;
-(float)progress;
-(void)setOptionsDictionary:(id)arg1 ;
-(id)initWithCGLContext:(CGLContextObjectRef)arg1 pixelFormat:(CGLPixelFormatObjectRef)arg2 options:(id)arg3 ;
-(void)reclaimResources;
-(void)compileImage:(id)arg1 inRect:(CGRect)arg2 fromRect:(CGRect)arg3 ;
-(void)drawImage:(id)arg1 atPoint:(CGPoint)arg2 fromRect:(CGRect)arg3 ;
@end

