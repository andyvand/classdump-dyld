/*
* This header is generated by classdump-dyld 0.7
* on Saturday, February 14, 2015 at 11:59:48 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class CKContainerID, CKRecordID, CKDatabase, NSXPCConnection, NSOperationQueue, CKOperationCallbackManager, CKOperationFlowControlManager, CKAccountInfo, ACAccountStore, NSMutableArray, NSString;

@interface CKContainer : NSObject {

	char _connectionIsInvalid;
	char _shouldSendClientIDs;
	int _statusReportToken;
	int _killSwitchToken;
	CKContainerID* _containerID;
	CKRecordID* _containerScopedUserID;
	CKDatabase* _privateCloudDatabase;
	CKDatabase* _publicCloudDatabase;
	NSXPCConnection* _xpcConnection;
	NSOperationQueue* _convenienceOperationQueue;
	NSOperationQueue* _throttlingOperationQueue;
	CKOperationCallbackManager* _callbackManager;
	CKOperationFlowControlManager* _flowControlManager;
	CKAccountInfo* _accountInfoOverride;
	ACAccountStore* _accountStore;
	NSMutableArray* _sandboxExtensionHandles;
	NSString* _sourceApplicationBundleIdentifier;
	NSString* _sourceApplicationSecondaryIdentifier;

}

@property (nonatomic,readonly) NSString * containerIdentifier; 
@property (nonatomic,retain) CKContainerID * containerID;                                     //@synthesize containerID=_containerID - In the implementation block
@property (nonatomic,retain) CKRecordID * containerScopedUserID;                              //@synthesize containerScopedUserID=_containerScopedUserID - In the implementation block
@property (nonatomic,retain) CKDatabase * privateCloudDatabase;                               //@synthesize privateCloudDatabase=_privateCloudDatabase - In the implementation block
@property (nonatomic,retain) CKDatabase * publicCloudDatabase;                                //@synthesize publicCloudDatabase=_publicCloudDatabase - In the implementation block
@property (nonatomic,retain) NSXPCConnection * xpcConnection;                                 //@synthesize xpcConnection=_xpcConnection - In the implementation block
@property (assign,nonatomic) char connectionIsInvalid;                                        //@synthesize connectionIsInvalid=_connectionIsInvalid - In the implementation block
@property (assign,nonatomic) char shouldSendClientIDs;                                        //@synthesize shouldSendClientIDs=_shouldSendClientIDs - In the implementation block
@property (nonatomic,retain) NSOperationQueue * convenienceOperationQueue;                    //@synthesize convenienceOperationQueue=_convenienceOperationQueue - In the implementation block
@property (nonatomic,retain) NSOperationQueue * throttlingOperationQueue;                     //@synthesize throttlingOperationQueue=_throttlingOperationQueue - In the implementation block
@property (nonatomic,retain) CKOperationCallbackManager * callbackManager;                    //@synthesize callbackManager=_callbackManager - In the implementation block
@property (nonatomic,retain) CKOperationFlowControlManager * flowControlManager;              //@synthesize flowControlManager=_flowControlManager - In the implementation block
@property (nonatomic,copy) CKAccountInfo * accountInfoOverride;                               //@synthesize accountInfoOverride=_accountInfoOverride - In the implementation block
@property (nonatomic,retain) ACAccountStore * accountStore;                                   //@synthesize accountStore=_accountStore - In the implementation block
@property (assign,nonatomic) int statusReportToken;                                           //@synthesize statusReportToken=_statusReportToken - In the implementation block
@property (assign,nonatomic) int killSwitchToken;                                             //@synthesize killSwitchToken=_killSwitchToken - In the implementation block
@property (nonatomic,retain) NSMutableArray * sandboxExtensionHandles;                        //@synthesize sandboxExtensionHandles=_sandboxExtensionHandles - In the implementation block
@property (nonatomic,retain) NSString * sourceApplicationBundleIdentifier;                    //@synthesize sourceApplicationBundleIdentifier=_sourceApplicationBundleIdentifier - In the implementation block
@property (nonatomic,retain) NSString * sourceApplicationSecondaryIdentifier;                 //@synthesize sourceApplicationSecondaryIdentifier=_sourceApplicationSecondaryIdentifier - In the implementation block
+(void)getBehaviorOptionForKey:(id)arg1 isContainerOption:(char)arg2 completionHandler:(/*^block*/id)arg3 ;
+(id)defaultContainer;
+(id)containerWithIdentifier:(id)arg1 ;
-(id)CKPropertiesDescription;
-(id)_initWithContainerIdentifier:(id)arg1 ;
-(void)_checkSelfCloudServicesEntitlement;
-(id)statusReport;
-(id)_checkSelfContainerIdentifier;
-(void)_setupWithContainerID:(id)arg1 accountInfoOverride:(id)arg2 ;
-(long long)_untrustedDatabaseEnvironment;
-(NSMutableArray *)sandboxExtensionHandles;
-(void)_cleanupSandboxExtensionHandles:(id)arg1 ;
-(CKContainerID *)containerID;
-(NSString *)sourceApplicationSecondaryIdentifier;
-(id)_untrustedEntitlementForKey:(id)arg1 ;
-(CKAccountInfo *)accountInfoOverride;
-(void)setConnectionIsInvalid:(char)arg1 ;
-(void)setShouldSendClientIDs:(char)arg1 ;
-(char)connectionIsInvalid;
-(void)accountStatusWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)statusForApplicationPermission:(unsigned long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)requestApplicationPermission:(unsigned long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)getNewWebSharingIdentity:(/*^block*/id)arg1 ;
-(void)serverPreferredPushEnvironmentWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)setFakeError:(id)arg1 forNextRequestOfClassName:(id)arg2 ;
-(void)accountsDidGrantAccessToBundleID:(id)arg1 containerIdentifiers:(id)arg2 ;
-(void)accountsDidRevokeAccessToBundleID:(id)arg1 containerIdentifiers:(id)arg2 ;
-(void)accountsWillDeleteAccount:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)accountChangedWithID:(id)arg1 ;
-(void)setApplicationPermission:(unsigned long long)arg1 enabled:(char)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)resetAllApplicationPermissionsWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)statusGroupsForApplicationPermission:(unsigned long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)wipeAllCachesAndDie;
-(void)updatePushTokens;
-(void)tossConfigWithCompletionHandler:(/*^block*/id)arg1 ;
-(CKOperationCallbackManager *)callbackManager;
-(CKOperationFlowControlManager *)flowControlManager;
-(void)handleOperationProgress:(id)arg1 forOperationWithID:(id)arg2 ;
-(void)handleOperationCompletion:(id)arg1 forOperationWithID:(id)arg2 ;
-(char)shouldSendClientIDs;
-(void)_synchronouslySendContextInformation;
-(NSOperationQueue *)convenienceOperationQueue;
-(id)daemonWithErrorHandler:(/*^block*/id)arg1 ;
-(NSOperationQueue *)throttlingOperationQueue;
-(id)_initWithContainerIdentifier:(id)arg1 environment:(long long)arg2 ;
-(id)initWithContainerID:(id)arg1 accountInfoOverride:(id)arg2 ;
-(id)initWithContainerID:(id)arg1 ;
-(void)setSourceApplicationSecondaryIdentifier:(NSString *)arg1 ;
-(void)setEffectiveClientBundleIdentifier:(id)arg1 ;
-(void)setContainerID:(CKContainerID *)arg1 ;
-(CKRecordID *)containerScopedUserID;
-(void)setContainerScopedUserID:(CKRecordID *)arg1 ;
-(void)setPrivateCloudDatabase:(CKDatabase *)arg1 ;
-(CKDatabase *)publicCloudDatabase;
-(void)setPublicCloudDatabase:(CKDatabase *)arg1 ;
-(void)setConvenienceOperationQueue:(NSOperationQueue *)arg1 ;
-(void)setThrottlingOperationQueue:(NSOperationQueue *)arg1 ;
-(void)setCallbackManager:(CKOperationCallbackManager *)arg1 ;
-(void)setFlowControlManager:(CKOperationFlowControlManager *)arg1 ;
-(void)setAccountInfoOverride:(CKAccountInfo *)arg1 ;
-(ACAccountStore *)accountStore;
-(void)setAccountStore:(ACAccountStore *)arg1 ;
-(int)statusReportToken;
-(void)setStatusReportToken:(int)arg1 ;
-(int)killSwitchToken;
-(void)setKillSwitchToken:(int)arg1 ;
-(void)setSandboxExtensionHandles:(NSMutableArray *)arg1 ;
-(void)fetchUserRecordIDWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)discoverAllContactUserInfosWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)discoverUserInfoWithEmailAddress:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)discoverUserInfoWithUserRecordID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)fetchShareWithID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)fetchAllSharesWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)saveShare:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)deleteShareWithID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)fetchAllReceivedInvitationsWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)respondToInvitation:(id)arg1 accept:(char)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)fetchCommentsForItem:(id)arg1 inShareWithID:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)saveComment:(id)arg1 inShareWithID:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)deleteCommentWithID:(id)arg1 inShareWithID:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setLike:(char)arg1 forItem:(id)arg2 inShareWithID:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)fetchLikesForItem:(id)arg1 inShareWithID:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)updateCurrentUserStatus:(long long)arg1 inShareWithID:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)addPresenceObserver:(id)arg1 inShareWithID:(id)arg2 ;
-(void)removePresenceObserver:(id)arg1 inShareWithID:(id)arg2 ;
-(CKDatabase *)privateCloudDatabase;
-(void)setXpcConnection:(NSXPCConnection *)arg1 ;
-(NSXPCConnection *)xpcConnection;
-(NSString *)containerIdentifier;
-(id)connection;
-(void)dealloc;
-(id)description;
-(void)_consumeSandboxExtensions:(id)arg1 ;
-(void)addOperation:(id)arg1 ;
-(void)setSourceApplicationBundleIdentifier:(NSString *)arg1 ;
-(NSString *)sourceApplicationBundleIdentifier;
@end

