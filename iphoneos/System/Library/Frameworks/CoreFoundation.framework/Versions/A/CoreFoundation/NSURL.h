/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:00:39 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CoreFoundation/CoreFoundation-Structs.h>
#import <CoreFoundation/NSSecureCoding.h>
#import <CoreFoundation/NSCopying.h>
#import <CoreFoundation/NSURLHandleClient.h>
#import <CoreFoundation/NSPasteboardWriting.h>
#import <CoreFoundation/NSPasteboardReading.h>
#import <CoreFoundation/QLPreviewItem.h>

@class NSString, NSArray, NSNumber;

@interface NSURL : NSObject <NSSecureCoding, NSCopying, NSURLHandleClient, NSPasteboardWriting, NSPasteboardReading, QLPreviewItem> {

	NSString* _urlString;
	NSURL* _baseURL;
	void* _clients;
	void* _reserved;

}

@property (nonatomic,readonly) NSString * br_lastEditorDeviceName; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) NSURL * previewItemURL; 
@property (readonly) NSString * previewItemTitle; 
@property (readonly) id previewItemDisplayState; 
@property (copy,readonly) NSArray * pathComponents; 
@property (copy,readonly) NSString * lastPathComponent; 
@property (copy,readonly) NSString * pathExtension; 
@property (copy,readonly) NSURL * URLByDeletingLastPathComponent; 
@property (copy,readonly) NSURL * URLByDeletingPathExtension; 
@property (copy,readonly) NSURL * URLByStandardizingPath; 
@property (copy,readonly) NSURL * URLByResolvingSymlinksInPath; 
@property (copy,readonly) NSString * absoluteString; 
@property (copy,readonly) NSString * relativeString; 
@property (copy,readonly) NSURL * baseURL; 
@property (copy,readonly) NSURL * absoluteURL; 
@property (copy,readonly) NSString * scheme; 
@property (copy,readonly) NSString * resourceSpecifier; 
@property (copy,readonly) NSString * host; 
@property (copy,readonly) NSNumber * port; 
@property (copy,readonly) NSString * user; 
@property (copy,readonly) NSString * password; 
@property (copy,readonly) NSString * path; 
@property (copy,readonly) NSString * fragment; 
@property (copy,readonly) NSString * parameterString; 
@property (copy,readonly) NSString * query; 
@property (copy,readonly) NSString * relativePath; 
@property (readonly) const char* fileSystemRepresentation; 
@property (getter=isFileURL,readonly) char fileURL; 
@property (copy,readonly) NSURL * standardizedURL; 
@property (copy,readonly) NSURL * filePathURL; 
+(char)openURL:(id)arg1 ;
+(id)unescapedStringForString:(id)arg1 ;
+(id)escapedStringForString:(id)arg1 ;
+(id)_macOSXVersionString;
+(id)_userVisibleWebKitVersionString;
+(id)_macOSXBuildString;
+(id)copyDictionaryForQueryString:(id)arg1 unescapedValues:(char)arg2 ;
+(id)queryStringForDictionary:(id)arg1 escapedValues:(char)arg2 ;
+(id)storeUserAgentStringForClient:(id)arg1 ;
+(id)macOSXVersionString;
+(id)_preferredLanguageCode;
+(id)safari_URLWithDataAsString:(id)arg1 ;
+(id)safari_URLWithUserTypedString:(id)arg1 ;
+(void)safari_enumeratePossibleURLsForUserTypedString:(id)arg1 withBlock:(/*^block*/id)arg2 ;
+(id)safari_URLWithDataAsString:(id)arg1 relativeToURL:(id)arg2 ;
+(NSRange)safari_hostAndPortRangeFromUserTypedString:(id)arg1 ;
+(id)safari_welcomePageURL;
+(id)safari_readingListURL;
+(id)safari_aboutBlankURL;
+(id)URLForNoMail;
+(id)URLForMail:(id)arg1 ;
+(id)davCompatibleFilenameForFilename:(id)arg1 ;
+(id)URLWithAddressBookUID:(id)arg1 ;
+(id)isd_propertyValueWithType:(int)arg1 bytesEncodedForSqlite:(const void*)arg2 ;
+(id)_faceTimeURLWithDestinationID:(id)arg1 addressBookUID:(id)arg2 audioOnly:(char)arg3 ;
+(id)_applyFaceTimeScheme:(id)arg1 toFaceTimeURL:(id)arg2 ;
+(id)faceTimeAcceptURLWithURL:(id)arg1 conferenceID:(id)arg2 ;
+(id)faceTimeURLWithDestinationID:(id)arg1 ;
+(id)faceTimeURLWithDestinationID:(id)arg1 addressBookUID:(id)arg2 ;
+(id)faceTimeTelephonyURLWithPhoneNumber:(id)arg1 ;
+(id)faceTimeURLWithURL:(id)arg1 ;
+(id)faceTimePromptURLWithURL:(id)arg1 ;
+(id)faceTimeAcceptURLWithURL:(id)arg1 ;
+(id)faceTimeLaunchForIncomingCallURL;
+(id)faceTimeURLWithDestinationID:(id)arg1 addressBookUID:(id)arg2 audioOnly:(char)arg3 ;
+(id)faceTimeTelephonyURLWithPhoneNumber:(id)arg1 showPrompt:(char)arg2 ;
+(id)URLWithDirtyString:(id)arg1 ;
+(id)URLWithScheme:(id)arg1 host:(id)arg2 port:(int)arg3 uri:(id)arg4 ;
+(int)classicPortForScheme:(id)arg1 ;
+(id)davCompatibleFilenameForFilename:(id)arg1 ;
+(id)iDiskSmallNameCompatibleNameForFilename:(id)arg1 ;
+(id)CDVURLWithScheme:(id)arg1 host:(id)arg2 port:(id)arg3 path:(id)arg4 ;
+(id)CDVURLWithScheme:(id)arg1 user:(id)arg2 password:(id)arg3 host:(id)arg4 port:(id)arg5 path:(id)arg6 ;
+(id)CDVDefaultPortForScheme:(id)arg1 ;
+(id)URLForFacebookRESTMethod:(id)arg1 ;
+(id)URLForFacebookGraphAPIWithPath:(id)arg1 ;
+(char)_isBetaSwitchEnabledForKey:(CFStringRef)arg1 ;
+(id)URLForFacebookGraphAPIWithDomain:(id)arg1 path:(id)arg2 ;
+(id)URLForFacebookPageAtPath:(id)arg1 ;
+(id)SLTwitterUpdateStatusURL;
+(id)SLTwitterUpdateMultiPartStatusURL;
+(id)SLTwitterNearbyPlacesURL;
+(id)SLTwitterFriendshipsURL;
+(id)SLTwitterFriendsURL;
+(id)SLTwitterTCoLengthURL;
+(id)SLTwitterImageLimitsURL;
+(id)SLTwitterVerifyCredentialsURL;
+(id)SLTwitterCleanupPushDestinationsURL;
+(id)SLTwitterRequestTokenURL;
+(id)SLTwitterAccessTokenURL;
+(id)SLTwitterUserInfoURL;
+(id)SLTwitterAccountSettingsURL;
+(id)SLTwitterUsersLookupURL;
+(id)SLTwitterAccountGenerateURL;
+(id)SLTwitterRetweetURLForTweetID:(id)arg1 ;
+(id)SLTwitterDirectMessageURL;
+(id)_web_URLWithWTFString:(const String*)arg1 ;
+(id)_web_URLWithWTFString:(const String*)arg1 relativeToURL:(id)arg2 ;
+(id)_web_URLWithDataAsString:(id)arg1 ;
+(id)_web_URLWithUserTypedString:(id)arg1 ;
+(id)_web_URLWithData:(id)arg1 ;
+(id)_web_URLWithDataAsString:(id)arg1 relativeToURL:(id)arg2 ;
+(id)_web_URLWithUserTypedString:(id)arg1 relativeToURL:(id)arg2 ;
+(id)_web_URLWithData:(id)arg1 relativeToURL:(id)arg2 ;
+(id)_web_uniqueWebDataURL;
+(id)ab_URLWithStringByEscapingStringIfNecessary:(id)arg1 ;
+(void)br_documentURLFromBookmarkableString:(id)arg1 completion:(/*^block*/id)arg2 ;
+(id)brc_fileURLWithFileDescriptor:(int)arg1 ;
+(id)brc_fileReferenceURLWithVolumeID:(id)arg1 fileID:(id)arg2 andName:(id)arg3 isDirectory:(char)arg4 ;
+(id)previewItemVirtualNodeURLWithPath:(id)arg1 ;
+(id)readableTypesForPasteboard:(id)arg1 ;
+(unsigned long long)readingOptionsForType:(id)arg1 pasteboard:(id)arg2 ;
+(id)URLFromPasteboard:(id)arg1 ;
+(id)_convertedFileReferenceURLDataOrNil:(CFDataRef)arg1 ;
+(id)_URLFromPasteboardNSData:(CFDataRef)arg1 ;
+(id)_URLWithDataAsString:(id)arg1 relativeToURL:(id)arg2 ;
+(id)_URLWithData:(id)arg1 relativeToURL:(id)arg2 ;
+(id)_web_URLWithString:(id)arg1 relativeToURL:(id)arg2 ;
+(id)_web_URLWithComponents:(SCD_Struct_NS27)arg1 ;
+(char)automaticallyNotifiesObserversForKey:(id)arg1 ;
+(id)fileURLWithPathComponents:(id)arg1 ;
+(id)fileURLWithFileSystemRepresentation:(const char*)arg1 isDirectory:(char)arg2 relativeToURL:(id)arg3 ;
+(id)URLByResolvingAliasFileAtURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
+(id)allocWithZone:(NSZone*)arg1 ;
+(id)URLByResolvingBookmarkData:(id)arg1 options:(unsigned long long)arg2 relativeToURL:(id)arg3 bookmarkDataIsStale:(char*)arg4 error:(id*)arg5 ;
+(id)fileURLWithPath:(id)arg1 ;
+(id)fileURLWithPath:(id)arg1 isDirectory:(char)arg2 ;
+(id)URLWithString:(id)arg1 relativeToURL:(id)arg2 ;
+(id)URLWithString:(id)arg1 ;
+(id)_scriptingFileWithDescriptor:(id)arg1 ;
+(char)writeBookmarkData:(id)arg1 toURL:(id)arg2 options:(unsigned long long)arg3 error:(id*)arg4 ;
+(id)__unurl;
+(char)supportsSecureCoding;
+(id)bookmarkDataWithContentsOfURL:(id)arg1 error:(id*)arg2 ;
+(id)resourceValuesForKeys:(id)arg1 fromBookmarkData:(id)arg2 ;
-(char)isFeedURL;
-(id)_osa_hfsPath;
-(id)urlByConvertingToStoreURLForClient:(id)arg1 ;
-(id)urlByAddingStringToQueryString:(id)arg1 ;
-(id)stripPassword;
-(id)copyQueryStringDictionaryWithUnescapedValues:(char)arg1 ;
-(char)isSafeExternalURL;
-(id)urlBySettingQueryStringDictionary:(id)arg1 ;
-(id)schemeSwizzledURL;
-(id)newFileTransferPreview;
-(id)securityScopedURL;
-(id)newAudioMessagePreview:(char)arg1 ;
-(id)sanitizeNoPrompt;
-(id)renderedWaveFormForAudioFile:(char)arg1 ;
-(id)newMoviePreview;
-(id)inputLinePreviewForAudioMessage;
-(id)iconPreview;
-(unsigned long long)_waveformPowerLevelsCountForDuration:(double)arg1 ;
-(char)_audioPowerLevels:(double*)arg1 powerLevelsCount:(unsigned long long)arg2 ;
-(id)_waveformWithPowerLevels:(double*)arg1 powerLevelsCount:(unsigned long long)arg2 is2x:(char)arg3 ;
-(id)formattedNameFromVCFURL;
-(void)openURL;
-(char)safari_isHTTPFamilyURL;
-(id)safari_userVisibleString;
-(id)safari_originalDataAsString;
-(id)safari_userVisibleHost;
-(id)safari_URLByReplacingSchemeWithString:(id)arg1 ;
-(char)safari_hasScheme:(id)arg1 ;
-(id)safari_canonicalURL;
-(id)safari_userVisibleHostWithoutWWWSubdomain;
-(char)safari_hasCharactersBeyondPath;
-(id)safari_URLByDeletingPort;
-(id)safari_URLByReplacingHostWithString:(id)arg1 ;
-(id)safari_URLByReplacingQueryWithString:(id)arg1 ;
-(char)safari_isDataURL;
-(id)_safari_URLByReplacingComponent:(long long)arg1 includingSeparators:(char)arg2 withString:(id)arg3 ;
-(id)_safari_URLByReplacingComponent:(long long)arg1 withString:(id)arg2 ;
-(id)safari_URLByRemovingPathComponents;
-(id)safari_fileSystemPath;
-(char)safari_isAboutBlankURL;
-(char)safari_isTopSitesURL;
-(char)safari_isFavoritesURL;
-(char)safari_isReaderURL;
-(char)safari_isSafariResourceURL;
-(char)safari_isBookmarksURL;
-(char)safari_isHistoryURL;
-(char)safari_isStartPageURL;
-(char)safari_isReadingListURL;
-(char)safari_isWelcomePageURL;
-(id)safari_URLByRemovingUserAndPath;
-(char)safari_isUserPreferredStartPageURL;
-(char)safari_isJavaScriptURL;
-(char)safari_isMailToURL;
-(id)safari_URLByRemovingFragment;
-(char)safari_isSecureURL;
-(char)safari_isSafariExtensionURL;
-(char)safari_isHTTPURL;
-(id)safari_emailAddresses;
-(id)safari_highLevelDomain;
-(char)safari_hasPassPathExtension;
-(id)safari_resourceSpecifier;
-(char)safari_isDashboardURL;
-(id)safari_URLByLowercasingScheme;
-(id)safari_URLWithUniqueFilename;
-(id)safari_path;
-(id)_safari_URLByTruncatingOneCharacterBeforeComponent:(long long)arg1 ;
-(char)safari_isHTTPSURL;
-(id)safari_fullySimplifiedUserVisibleString;
-(char)isMapAttachmentURL;
-(char)isAudioMessageAttachmentURL;
-(id)type;
-(char)isNoMail;
-(id)queryParameters;
-(id)initWithCalDirtyString:(id)arg1 ;
-(id)hostWithoutWWW;
-(NSString *)lastPathComponent;
-(id)unquotedPassword;
-(id)initWithScheme:(id)arg1 host:(id)arg2 port:(int)arg3 path:(id)arg4 ;
-(id)URLWithUsername:(id)arg1 withPassword:(id)arg2 ;
-(id)serverURL;
-(char)isEqualToURL:(id)arg1 ;
-(char)compareToLocalString:(id)arg1 ;
-(id)pathWithoutTrailingRemovingSlash;
-(char)isEqualToURLIgnoringScheme:(id)arg1 ;
-(char)compareToLocalURL:(id)arg1 ;
-(char)isOnRemoteFileSystem;
-(id)pathDecodedAndWithoutTrailingSlashRemoved;
-(int)isd_quickDirtyCoderType;
-(char)isd_isEqual:(id)arg1 ;
-(void*)isd_bytesEncodedForSqlite;
-(int)isd_sqlitePropertyValueType;
-(char)isFaceTimeURL;
-(char)isFaceTimeAcceptURL;
-(char)isFaceTimeAudioURL;
-(char)isFaceTimeAudioAcceptURL;
-(id)faceTimeDestinationAccount;
-(char)_isPhoneNumberID:(id)arg1 ;
-(char)isFaceTimePromptURL;
-(char)isFaceTimeAudioPromptURL;
-(char)isUpgradeURL;
-(char)isLaunchForIncomingCallURL;
-(char)isValidFaceTimeURL;
-(id)URLWithoutUsername;
-(id)URLWithUsername:(id)arg1 ;
-(id)initWithDirtyString:(id)arg1 ;
-(id)URLWithoutPassword;
-(char)absoluteURLisEqual:(id)arg1 ;
-(id)uri;
-(id)URLByRemovingLastPathComponent;
-(id)pathWithoutDecodingAndRemovingTrailingSlash;
-(id)queryParameters;
-(NSString *)lastPathComponent;
-(id)unquotedPassword;
-(id)initWithScheme:(id)arg1 host:(id)arg2 port:(int)arg3 path:(id)arg4 ;
-(id)URLWithUsername:(id)arg1 withPassword:(id)arg2 ;
-(id)serverURL;
-(char)isEqualToURL:(id)arg1 ;
-(id)pathWithoutTrailingRemovingSlash;
-(id)CDVURLWithPassword:(id)arg1 ;
-(id)CDVURLByDeletingLastPathComponent;
-(id)CDVURLWithUser:(id)arg1 ;
-(id)CDVURLWithPath:(id)arg1 ;
-(char)CDVIsEqualToURL:(id)arg1 ;
-(id)CDVRawPath;
-(id)CDVServerURL;
-(id)CDVRawLastPathComponentPreservingEscapes;
-(id)CDVServerURLWithPath:(char)arg1 ;
-(id)CDVfixedURLByAppendingPathComponent:(id)arg1 ;
-(id)CDVRawLastPathComponent;
-(char)CDVIsSafeRedirectForRequestURL:(id)arg1 ;
-(id)initWithCDVScheme:(id)arg1 user:(id)arg2 password:(id)arg3 host:(id)arg4 port:(id)arg5 path:(id)arg6 parameterString:(id)arg7 query:(id)arg8 fragment:(id)arg9 ;
-(id)CDVURLWithScheme:(id)arg1 userandpass:(id)arg2 host:(id)arg3 port:(id)arg4 path:(id)arg5 parameters:(id)arg6 encodePercents:(char)arg7 ;
-(id)CDVPassword;
-(id)CDVFileSystemSafePath;
-(void)_ICSStringWithOptions:(unsigned long long)arg1 appendingToString:(id)arg2 ;
-(char)isMusicStoreURL;
-(char)isAppStoreURL;
-(char)isAssetURL;
-(id)completePath;
-(char)isReallyCaseSensitivelyEqual:(id)arg1 ;
-(id)URLByRemovingFragment;
-(id)bundleID;
-(id)bundleName;
-(id)queryArguments;
-(id)hashArguments;
-(id)_hash;
-(String*)_web_originalDataAsWTFString;
-(id)_webkit_canonicalize;
-(char)_webkit_isJavaScriptURL;
-(id)_web_hostString;
-(id)_web_originalData;
-(id)_web_userVisibleString;
-(id)_web_originalDataAsString;
-(const char*)_web_URLCString;
-(id)_webkit_scriptIfJavaScriptURL;
-(id)_webkit_URLFromURLOrSchemelessFileURL;
-(char)_webkit_isFileURL;
-(char)_web_isEmpty;
-(id)_web_URLByRemovingUserInfo;
-(char)_webkit_isFTPDirectoryURL;
-(id)_web_schemeData;
-(id)_web_hostData;
-(id)_web_URLByTruncatingOneCharacterBeforeComponent:(long long)arg1 ;
-(id)_webkit_URLByRemovingFragment;
-(id)_webkit_URLByRemovingResourceSpecifier;
-(char)_webkit_shouldLoadAsEmptyDocument;
-(id)_web_URLWithLowercasedScheme;
-(id)_web_schemeSeparatorWithoutColon;
-(id)_web_dataForURLComponentType:(long long)arg1 ;
-(id)_webkit_suggestedFilenameWithMIMEType:(id)arg1 ;
-(id)_AOSURLByReplacingHost:(id)arg1 ;
-(id)replacementObjectForPortCoder:(id)arg1 ;
-(char)isAMOSIdentifier;
-(char)isAMOSCommittedIdentifier;
-(void)br_containerIDsWithExternalReferencesWithHandler:(/*^block*/id)arg1 ;
-(void)br_isConflictedWithHandler:(/*^block*/id)arg1 ;
-(char)br_isInMobileDocuments;
-(id)br_containerID;
-(id)br_pathRelativeToMobileDocuments;
-(void)br_bookmarkableStringWithEtag:(char)arg1 completion:(/*^block*/id)arg2 ;
-(char)br_isExternalDocumentReference;
-(id)br_URLByResolvingExternalDocumentReferenceWithError:(id*)arg1 ;
-(id)br_debugDescription;
-(char)br_isParentOfURL:(id)arg1 ;
-(void)br_preCacheBookmarkData:(id)arg1 versionEtag:(id)arg2 ;
-(char)br_isInCloudDocsPrivateStorages;
-(char)br_isDocumentsContainer;
-(id)br_cloudDocsContainer;
-(id)br_addFakeConflictLoserFromItemAtURL:(id)arg1 lastEditorDeviceName:(id)arg2 error:(id*)arg3 ;
-(id)br_addFakeConflictLoserFromItemAtURL:(id)arg1 lastEditorDeviceName:(id)arg2 lastEditorUserName:(id)arg3 error:(id*)arg4 ;
-(NSString *)br_lastEditorDeviceName;
-(char)br_getTagNames:(id*)arg1 error:(id*)arg2 ;
-(char)br_setTagNames:(id)arg1 error:(id*)arg2 ;
-(id)brc_fileReferenceVolumeID;
-(id)brc_fileReferenceFileID;
-(id)brc_fileReferenceRelativePath;
-(char)brc_fileReferenceParseIntoVolumeID:(id*)arg1 fileID:(id*)arg2 andRelativePath:(id*)arg3 ;
-(id)brc_issueSandboxExtensionOfClass:(const char*)arg1 error:(id*)arg2 ;
-(id)_geo_portionAfterHostname;
-(char)isPreviewItemVirtualNodeURL;
-(NSURL *)previewItemURL;
-(id)QT_URLByRemovingFragment;
-(char)isInContainer:(id)arg1 ;
-(id)displayName;
-(id)replacementObjectForPortCoder:(id)arg1 ;
-(id)initWithPasteboardPropertyList:(id)arg1 ofType:(id)arg2 ;
-(id)writableTypesForPasteboard:(id)arg1 ;
-(unsigned long long)writingOptionsForType:(id)arg1 pasteboard:(id)arg2 ;
-(id)pasteboardPropertyListForType:(id)arg1 ;
-(void)writeToPasteboard:(id)arg1 ;
-(char)__isAbsolute;
-(id)_absoluteStringConvertingFileReferenceURLIfRequired;
-(char)_urlForNSOpenSavePanelIsMobileDocumentsURL;
-(void)chmod:(unsigned short)arg1 ;
-(id)gs_issueExtension:(const char*)arg1 error:(id*)arg2 ;
-(id)gs_issueReadExtensionIfNeededForPid:(int)arg1 ;
-(id)gs_URLByUpdatingPathExtensionWithPathOrURL:(id)arg1 ;
-(void)encodeWithCAMLWriter:(id)arg1 ;
-(id)CAMLType;
-(id)_hostString;
-(id)_web_URLByRemovingLastPathComponent_nowarn;
-(id)_web_URLByRemovingUserAndPath_nowarn;
-(id)_web_URLByRemovingUserAndQueryAndFragment_nowarn;
-(id)_URLByEscapingSpacesAndControlChars;
-(id)_web_suggestedFilenameWithMIMEType:(id)arg1 ;
-(char)_web_isJavaScriptURL;
-(SCD_Struct_NS27)_web_URLComponents;
-(id)_web_scriptIfJavaScriptURL;
-(NSURL *)URLByStandardizingPath;
-(NSString *)lastPathComponent;
-(NSURL *)URLByDeletingLastPathComponent;
-(NSURL *)URLByResolvingSymlinksInPath;
-(NSString *)pathExtension;
-(id)URLByAppendingPathComponent:(id)arg1 ;
-(NSURL *)URLByDeletingPathExtension;
-(id)URLByAppendingPathExtension:(id)arg1 ;
-(NSArray *)pathComponents;
-(id)URLByAppendingPathComponent:(id)arg1 isDirectory:(char)arg2 ;
-(NSString *)password;
-(NSString *)fragment;
-(NSString *)user;
-(NSString *)resourceSpecifier;
-(NSString *)query;
-(unsigned long long)_cfTypeID;
-(CFURLRef)_cfurl;
-(void)_freeClients;
-(char)_isAbsolute;
-(id)initFileURLWithFileSystemRepresentation:(const char*)arg1 isDirectory:(char)arg2 relativeToURL:(id)arg3 ;
-(id)initByResolvingAliasFileAtURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(CFDictionaryRef)_clientsCreatingIfNecessary:(char)arg1 ;
-(id)URLHandleUsingCache:(char)arg1 ;
-(id)_relativeURLPath;
-(NSString *)parameterString;
-(id)resourceDataUsingCache:(char)arg1 ;
-(void)loadResourceDataNotifyingClient:(id)arg1 usingCache:(char)arg2 ;
-(char)setResourceData:(id)arg1 ;
-(void)URLHandle:(id)arg1 resourceDataDidBecomeAvailable:(id)arg2 ;
-(void)URLHandleResourceDidBeginLoading:(id)arg1 ;
-(void)URLHandleResourceDidFinishLoading:(id)arg1 ;
-(void)URLHandleResourceDidCancelLoading:(id)arg1 ;
-(void)URLHandle:(id)arg1 resourceDidFailLoadingWithReason:(id)arg2 ;
-(id)init;
-(oneway void)release;
-(id)retain;
-(void)finalize;
-(void)dealloc;
-(NSString *)description;
-(NSString *)absoluteString;
-(NSString *)path;
-(char)isKindOfClass:(Class)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(char)isEqual:(id)arg1 ;
-(char)isMemberOfClass:(Class)arg1 ;
-(unsigned long long)retainCount;
-(unsigned long long)hash;
-(id)initWithString:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)initFileURLWithPath:(id)arg1 ;
-(const char*)fileSystemRepresentation;
-(char)_tryRetain;
-(char)_isDeallocating;
-(char)isFileURL;
-(NSURL *)standardizedURL;
-(NSString *)scheme;
-(NSString *)host;
-(NSString *)relativeString;
-(id)initWithString:(id)arg1 relativeToURL:(id)arg2 ;
-(char)getFileSystemRepresentation:(char*)arg1 maxLength:(unsigned long long)arg2 ;
-(NSURL *)absoluteURL;
-(id)initFileURLWithPath:(id)arg1 isDirectory:(char)arg2 ;
-(id)initWithScheme:(id)arg1 host:(id)arg2 path:(id)arg3 ;
-(NSURL *)baseURL;
-(id)initByResolvingBookmarkData:(id)arg1 options:(unsigned long long)arg2 relativeToURL:(id)arg3 bookmarkDataIsStale:(char*)arg4 error:(id*)arg5 ;
-(NSString *)relativePath;
-(char)setProperty:(id)arg1 forKey:(id)arg2 ;
-(NSNumber *)port;
-(void)connection:(id)arg1 didFailWithError:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveData:(id)arg2 ;
-(void)connectionDidFinishLoading:(id)arg1 ;
-(id)propertyForKey:(id)arg1 ;
-(int)_scriptingAlternativeValueRankWithDescriptor:(id)arg1 ;
-(id)_scriptingFileDescriptor;
-(id)_fixedUpSideFaultError:(id)arg1 ;
-(id)_physicalURL;
-(long long)_promiseExtensionConsume;
-(void)_promiseExtensionRelease:(long long)arg1 ;
-(id)_valueFromFaultDictionary:(id)arg1 forKey:(id)arg2 ;
-(char)checkPromisedItemIsReachableAndReturnError:(id*)arg1 ;
-(char)getPromisedItemResourceValue:(out id*)arg1 forKey:(id)arg2 error:(out id*)arg3 ;
-(id)promisedItemResourceValuesForKeys:(id)arg1 error:(id*)arg2 ;
-(char)isiWorkURL;
-(char)conformsToOverridePatternWithKey:(id)arg1 ;
-(id)iWorkApplicationName;
-(id)iWorkDocumentName;
-(id)fmfURL;
-(id)iCloudFamilyURL;
-(id)youTubeURL;
-(id)gamecenterURL;
-(id)iTunesStoreURL;
-(id)facebookURL;
-(id)twitterURL;
-(id)photosURL;
-(id)fmipURL;
-(id)betaStoreURL;
-(id)mapsURL;
-(char)_isSafeFileForBackgroundUpload:(int)arg1 ;
-(char)_isSafeDirectoryForDownloads:(int)arg1 ;
-(void)setTemporaryResourceValue:(id)arg1 forKey:(id)arg2 ;
-(id)bookmarkDataWithAliasRecord:(id)arg1 ;
-(id)fileReferenceURL;
-(void)removeCachedResourceValueForKey:(id)arg1 ;
-(id)resourceValuesForKeys:(id)arg1 error:(id*)arg2 ;
-(char)getResourceValue:(out id*)arg1 forKey:(id)arg2 error:(out id*)arg3 ;
-(char)startAccessingSecurityScopedResource;
-(char)isFileReferenceURL;
-(NSURL *)filePathURL;
-(void)removeAllCachedResourceValues;
-(char)checkResourceIsReachableAndReturnError:(id*)arg1 ;
-(char)setResourceValue:(id)arg1 forKey:(id)arg2 error:(id*)arg3 ;
-(void)stopAccessingSecurityScopedResource;
-(char)setResourceValues:(id)arg1 error:(id*)arg2 ;
-(id)bookmarkDataWithOptions:(unsigned long long)arg1 includingResourceValuesForKeys:(id)arg2 relativeToURL:(id)arg3 error:(id*)arg4 ;
@end

