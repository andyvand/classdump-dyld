/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:00:21 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CFNetwork/CFNetwork-Structs.h>
#import <CFNetwork/NSSecureCoding.h>
#import <CFNetwork/NSCopying.h>
#import <CFNetwork/NSMutableCopying.h>

@class NSURLRequestInternal, NSString, NSDictionary, NSData, NSInputStream, NSURL;

@interface NSURLRequest : NSObject <NSSecureCoding, NSCopying, NSMutableCopying> {

	NSURLRequestInternal* _internal;

}

@property (copy,readonly) NSString * HTTPMethod; 
@property (copy,readonly) NSDictionary * allHTTPHeaderFields; 
@property (copy,readonly) NSData * HTTPBody; 
@property (retain,readonly) NSInputStream * HTTPBodyStream; 
@property (readonly) char HTTPShouldHandleCookies; 
@property (readonly) char HTTPShouldUsePipelining; 
@property (copy,readonly) NSURL * URL; 
@property (readonly) unsigned long long cachePolicy; 
@property (readonly) double timeoutInterval; 
@property (copy,readonly) NSURL * mainDocumentURL; 
@property (readonly) unsigned long long networkServiceType; 
@property (readonly) char allowsCellularAccess; 
+(id)safari_requestWithURL:(id)arg1 cachePolicy:(unsigned long long)arg2 usePrivateStorageSession:(char)arg3 ;
+(void)setDefaultTimeoutInterval:(double)arg1 ;
+(void)setAllowsSpecificHTTPSCertificate:(id)arg1 forHost:(id)arg2 ;
+(id)requestWithURL:(id)arg1 cachePolicy:(unsigned long long)arg2 timeoutInterval:(double)arg3 ;
+(id)requestWithURL:(id)arg1 ;
+(char)supportsSecureCoding;
+(double)defaultTimeoutInterval;
+(id)allowsSpecificHTTPSCertificateForHost:(id)arg1 ;
+(id)getObjectKeyWithIndex:(long long)arg1 ;
+(char)allowsAnyHTTPSCertificateForHost:(id)arg1 ;
+(void)setAllowsAnyHTTPSCertificate:(char)arg1 forHost:(id)arg2 ;
-(id)_web_HTTPReferrer;
-(id)_web_HTTPContentType;
-(char)_web_isConditionalRequest;
-(NSString *)HTTPMethod;
-(void)_setProperty:(id)arg1 forKey:(id)arg2 ;
-(id)valueForHTTPHeaderField:(id)arg1 ;
-(CFURLRequestRef)_CFURLRequest;
-(NSURL *)mainDocumentURL;
-(NSDictionary *)allHTTPHeaderFields;
-(unsigned long long)cachePolicy;
-(double)timeoutInterval;
-(char)HTTPShouldHandleCookies;
-(id)contentDispositionEncodingFallbackArray;
-(NSData *)HTTPBody;
-(NSInputStream *)HTTPBodyStream;
-(id)_propertyForKey:(id)arg1 ;
-(id)_initWithCFURLRequest:(CFURLRequestRef)arg1 ;
-(id)init;
-(void)dealloc;
-(id)description;
-(id)initWithCoder:(id)arg1 ;
-(NSURL *)URL;
-(void)encodeWithCoder:(id)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(id)initWithURL:(id)arg1 ;
-(char)_URLHasScheme:(id)arg1 ;
-(char)_isSafeRequestForBackgroundDownload;
-(void)_removePropertyForKey:(id)arg1 ;
-(double)_timeWindowDelay;
-(double)_timeWindowDuration;
-(id)_copyReplacingURLWithURL:(id)arg1 ;
-(unsigned long long)networkServiceType;
-(char)allowsCellularAccess;
-(id)boundInterfaceIdentifier;
-(char)preventsIdleSystemSleep;
-(id)HTTPContentType;
-(id)HTTPExtraCookies;
-(id)HTTPReferrer;
-(id)HTTPUserAgent;
-(char)HTTPShouldUsePipelining;
-(unsigned long long)expectedWorkload;
-(id)initWithURL:(id)arg1 cachePolicy:(unsigned long long)arg2 timeoutInterval:(double)arg3 ;
@end

