/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:00:14 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <AppKit/NSView.h>

@class NSOpenGLContext, NSOpenGLPixelFormat;

@interface NSOpenGLView : NSView {

	NSOpenGLContext* _openGLContext;
	NSOpenGLPixelFormat* _pixelFormat;
	long long _reserved1;
	long long _reserved2;
	long long _reserved3;

}

@property (assign) char animates; 
@property (assign) char canAnimateOnBackgroundThread; 
@property (readonly) CGSize openGLSurfaceSize; 
@property (retain) NSOpenGLContext * openGLContext; 
@property (retain) NSOpenGLPixelFormat * pixelFormat; 
+(void)initialize;
+(id)defaultPixelFormat;
-(void)_IMGetOpenGLBufferContext:(CGLContextObject*)arg1 pixelFormat:(CGLPixelFormatObject*)arg2 ;
-(char)_IMUsePixelBufferCallBacks;
-(void)finalize;
-(void)dealloc;
-(void)setLayer:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)update;
-(char)isOpaque;
-(id)_invalidateGStatesForTree;
-(char)lockFocusIfCanDraw;
-(id)makeBackingLayer;
-(long long)layerContentsRedrawPolicy;
-(void)setAnimates:(char)arg1 ;
-(char)animates;
-(void)prepareOpenGL;
-(char)wantsBestResolutionOpenGLSurface;
-(void)reshape;
-(NSOpenGLPixelFormat *)pixelFormat;
-(void)_surfaceNeedsUpdate:(id)arg1 ;
-(id)initWithFrame:(CGRect)arg1 pixelFormat:(id)arg2 ;
-(void)clearGLContext;
-(NSOpenGLContext *)openGLContext;
-(void)viewDidChangeBackingProperties;
-(void)setOpenGLContext:(NSOpenGLContext *)arg1 ;
-(void)setPixelFormat:(NSOpenGLPixelFormat *)arg1 ;
-(char)canAnimateOnBackgroundThread;
-(void)setCanAnimateOnBackgroundThread:(char)arg1 ;
-(void)setWantsBestResolutionOpenGLSurface:(char)arg1 ;
-(CGSize)openGLSurfaceSize;
-(CGPoint)convertPointToOpenGLSurface:(CGPoint)arg1 ;
-(CGPoint)convertPointFromOpenGLSurface:(CGPoint)arg1 ;
-(CGSize)convertSizeToOpenGLSurface:(CGSize)arg1 ;
-(CGSize)convertSizeFromOpenGLSurface:(CGSize)arg1 ;
-(CGRect)convertRectToOpenGLSurface:(CGRect)arg1 ;
-(CGRect)convertRectFromOpenGLSurface:(CGRect)arg1 ;
@end

