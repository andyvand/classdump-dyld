/*
* This header is generated by classdump-dyld 0.7
* on Saturday, February 14, 2015 at 11:59:36 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/Mail.framework/Versions/A/Mail
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <Mail/Mail-Structs.h>
@interface MFConversationCalculator : NSObject {

	char _logConversationCalculationPerformance;
	char _logConversationCalculationTrace;
	char _logConversationCalculationSubjectPrefixTrace;
	char _forceConversationSplits;
	char _alwaysValidateConversations;
	char _recordConversationCalculationPerformanceMetrics;

}

@property (assign,nonatomic) char logConversationCalculationPerformance;                        //@synthesize logConversationCalculationPerformance=_logConversationCalculationPerformance - In the implementation block
@property (assign,nonatomic) char logConversationCalculationTrace;                              //@synthesize logConversationCalculationTrace=_logConversationCalculationTrace - In the implementation block
@property (assign,nonatomic) char logConversationCalculationSubjectPrefixTrace;                 //@synthesize logConversationCalculationSubjectPrefixTrace=_logConversationCalculationSubjectPrefixTrace - In the implementation block
@property (assign,nonatomic) char forceConversationSplits;                                      //@synthesize forceConversationSplits=_forceConversationSplits - In the implementation block
@property (assign,nonatomic) char alwaysValidateConversations;                                  //@synthesize alwaysValidateConversations=_alwaysValidateConversations - In the implementation block
@property (assign,nonatomic) char recordConversationCalculationPerformanceMetrics;              //@synthesize recordConversationCalculationPerformanceMetrics=_recordConversationCalculationPerformanceMetrics - In the implementation block
+(id)allocWithZone:(NSZone*)arg1 ;
+(id)sharedInstance;
-(char)recordConversationCalculationPerformanceMetrics;
-(void)setRecordConversationCalculationPerformanceMetrics:(char)arg1 ;
-(char)logConversationCalculationTrace;
-(void)setLogConversationCalculationTrace:(char)arg1 ;
-(char)updateSubjectPrefixesWithHandle:(id)arg1 onlyForMessagesMissingConversations:(char)arg2 ;
-(void)updateAllRowsMissingConversationsWithHandle:(id)arg1 conversationUserInfo:(id)arg2 conversationsWereReset:(char)arg3 progressDelegate:(id)arg4 ;
-(char)logConversationCalculationPerformance;
-(void)_updateAllRowsMissingRootValueWithHandle:(id)arg1 ;
-(void)_updateAllRowsMissingFuzzyAncestorWithHandle:(id)arg1 ;
-(char)forceConversationSplits;
-(void)_calculateConversationForMessage:(id)arg1 ;
-(void)updateConversationRootsWithHandle:(id)arg1 onlyForMessagesMissingRoots:(char)arg2 ;
-(long long)_createNewConversationFromMessage:(id)arg1 ;
-(int)_conversationPositionForMessageWithRowID:(long long)arg1 dateReceived:(int)arg2 conversationID:(long long)arg3 context:(id)arg4 ;
-(void)_addMessage:(id)arg1 toConversation:(long long)arg2 withConversationPosition:(int)arg3 ;
-(void)_mergeMessagesInConversations:(id)arg1 withConversation:(id)arg2 ;
-(void)_fixupConversationPositionsForConversation:(id)arg1 ;
-(char)alwaysValidateConversations;
-(char)logConversationCalculationSubjectPrefixTrace;
-(void)_updatePrefixWithHandle:(id)arg1 withNewPrefix:(id)arg2 forMessagesWithSubject:(long long)arg3 ;
-(char)isRootSubjectPrefix:(id)arg1 ;
-(void)updateConversationsIfNeededWithHandle:(id)arg1 ;
-(id)resetConversationIDForMessages:(id)arg1 withHandle:(id)arg2 ;
-(char)isRootMessageSubject:(id)arg1 ;
-(void)setLogConversationCalculationPerformance:(char)arg1 ;
-(void)setLogConversationCalculationSubjectPrefixTrace:(char)arg1 ;
-(void)setForceConversationSplits:(char)arg1 ;
-(void)setAlwaysValidateConversations:(char)arg1 ;
-(id)init;
-(void)dealloc;
@end

