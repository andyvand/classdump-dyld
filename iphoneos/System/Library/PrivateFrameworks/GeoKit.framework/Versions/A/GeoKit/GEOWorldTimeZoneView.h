/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:00:20 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/GeoKit.framework/Versions/A/GeoKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <GeoKit/GeoKit-Structs.h>
#import <GeoKit/GEOWorldView.h>

@class NSOperationQueue, NSManagedObjectContext, GEOCity, NSTimer, NSString, GEOWorldImageLayer, CALayer, GEOPulseLayer;

@interface GEOWorldTimeZoneView : GEOWorldView {

	NSOperationQueue* __operationQueue;
	NSManagedObjectContext* __geoContext;
	GEOCity* selectedCity;
	char isBusy;
	NSTimer* isBusyTimer;
	char isSearchingByName;
	NSString* nameToSearch;
	GEOWorldImageLayer* timeZoneLayer;
	GEOWorldImageLayer* mouseOverTimeZoneLayer;
	CALayer* cityLightsLayer;
	CALayer* _selectedCityLayer;
	CALayer* _tentativeSelectionLayer;
	GEOPulseLayer* _pulseLayer;
	char pulseSelectedCity;
	CALayer* _pinLayer;
	CALayer* _pinShadowLayer;

}

@property (assign,nonatomic) char showTimeZone; 
@property (assign,nonatomic) char showSelectedCity; 
@property (nonatomic,retain) GEOCity * selectedCity; 
@property (readonly) NSManagedObjectContext * geoContext; 
@property (readonly) NSOperationQueue * operationQueue; 
@property (assign) char isBusy; 
@property (assign) char isSearchingByName; 
@property (retain) NSString * nameToSearch; 
@property (assign) char pulseSelectedCity; 
+(CGImageRef)_selectedCityImage:(double)arg1 ;
+(CGImageRef)_smallDotCityImage:(double)arg1 ;
+(CGImageRef)_tentativeSelectedCityImage:(double)arg1 ;
-(char)isBusy;
-(GEOCity *)selectedCity;
-(void)_invokeInvocation:(id)arg1 ;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)setEnabled:(char)arg1 ;
-(id)accessibilityAttributeValue:(id)arg1 ;
-(char)acceptsFirstResponder;
-(char)resignFirstResponder;
-(char)becomeFirstResponder;
-(void)viewDidMoveToWindow;
-(NSOperationQueue *)operationQueue;
-(void)setSelectedCity:(GEOCity *)arg1 ;
-(char)isSearchingByName;
-(void)showTentativeSelectionForCity:(id)arg1 ;
-(NSManagedObjectContext *)geoContext;
-(void)searchForCityWhoseNameContainsString:(id)arg1 notifyTargetWhenDone:(id)arg2 selector:(SEL)arg3 ;
-(id)pinLayer;
-(id)pinShadowLayer;
-(char)showSelectedCity;
-(id)pulseLayer;
-(id)selectedCityLayer;
-(char)pulseSelectedCity;
-(void)setPulseSelectedCity:(char)arg1 ;
-(char)showTimeZone;
-(id)layerWithTimeZoneImage:(CGImageRef)arg1 ;
-(void)_setCityLightsLayer:(id)arg1 ;
-(void)_removeMouseOverTimeZoneLayer;
-(id)_mouseOverLayerForAreaName:(id)arg1 ;
-(void)setShowSelectedCity:(char)arg1 ;
-(void)setTimeZoneMask:(CGImageRef)arg1 ;
-(void)setShowTimeZone:(char)arg1 ;
-(void)setIsSearchingByName:(char)arg1 ;
-(void)setNightMap:(char)arg1 ;
-(void)_setSelectedCityWithManagedObjectID:(id)arg1 ;
-(void)_findCityAtLongLatOpererationFinished:(id)arg1 ;
-(void)_seachForCityAtLongitude:(double)arg1 latitude:(double)arg2 longitudeSpan:(double)arg3 latitudeSpan:(double)arg4 timeZoneNamesScope:(id)arg5 ;
-(void)_drawCityResultInContext:(CGContextRef)arg1 dotImage:(CGImageRef)arg2 contextSize:(CGSize)arg3 city:(id)arg4 ;
-(CGImageRef)_copyComposeCityResultImage:(id)arg1 ;
-(void)setCityResultImage:(CGImageRef)arg1 ;
-(void)_findCityByNameOpererationFinished:(id)arg1 ;
-(void)_updateLightPointsFromFindOperation:(id)arg1 ;
-(void)_setNeedsDisplayYES;
-(void)_addFindCityOperationWithName:(id)arg1 fetchLimit:(unsigned long long)arg2 notifyWhenDoneInvocation:(id)arg3 ;
-(void)setNameToSearch:(NSString *)arg1 ;
-(void)setIsBusy:(char)arg1 ;
-(void)_busyTimerCallback;
-(void)_stopBusyTimer;
-(void)_startBusyTimer;
-(void)_setIsBusyToNO;
-(void)mouseDragged:(id)arg1 coordinate:(CGPoint)arg2 ;
-(void)repositionLayers;
-(id)_layerWithImageFromResources:(id)arg1 extension:(id)arg2 ;
-(void)dropPinToPoint:(CGPoint)arg1 ;
-(id)_layer:(id)arg1 withWorldMaskLayer:(id)arg2 ;
-(void)mouseExited:(id)arg1 coordinate:(CGPoint)arg2 ;
-(void)timedMouseMoved:(id)arg1 coordinate:(CGPoint)arg2 ;
-(void)seachForCityAtLongitude:(double)arg1 latitude:(double)arg2 longitudeSpan:(double)arg3 latitudeSpan:(double)arg4 ;
-(void)mouseUp:(id)arg1 coordinate:(CGPoint)arg2 ;
-(void)mouseDown:(id)arg1 coordinate:(CGPoint)arg2 ;
-(void)dropPinToCity:(id)arg1 ;
-(void)removePin;
-(NSString *)nameToSearch;
@end

