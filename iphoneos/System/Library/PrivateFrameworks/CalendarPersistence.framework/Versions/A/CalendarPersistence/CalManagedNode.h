/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:00:43 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/CalendarPersistence.framework/Versions/A/CalendarPersistence
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CalendarPersistence/CalManagedObject.h>

@class NSString, CalManagedPublication, NSColor;

@interface CalManagedNode : CalManagedObject {

	NSString* _path;

}

@property (retain) NSString * title; 
@property (retain) NSString * notes; 
@property (retain) CalManagedPublication * publication; 
@property (assign) long long checked; 
@property (assign) int order; 
@property (readonly) char isPublished; 
@property (readonly) char isCalDAVPublished; 
@property (readonly) char isShared; 
@property (readonly) char isSharedByMe; 
@property (readonly) char isSharedToMe; 
@property (readonly) char isSubscribed; 
@property (retain) NSColor * color; 
@property (retain) NSString * symbolicColorName; 
@property (retain) NSString * uid; 
@property (readonly) NSString * type; 
@property (readonly) NSString * path;                                //@synthesize path=_path - In the implementation block
@property (readonly) char keepSyncRecordLocal; 
@property (assign) char isEnabled; 
@property (assign) char omitSyncRecord; 
@property (readonly) char isDeletable; 
@property (readonly) char isEventContainer; 
@property (readonly) char isTaskContainer; 
@property (readonly) char isRefreshable; 
@property (readonly) char isRenameable; 
@property (readonly) char isColorEditable; 
@property (readonly) char isWritable; 
@property (readonly) char supportsAttendeeSearch; 
@property (readonly) char supportsCalDAVPublish; 
@property (readonly) char supportsPublishing; 
@property (readonly) char supportsSharing; 
+(id)pathExtension;
+(id)entityName;
+(id)fetchRequestWithUID:(id)arg1 inManagedObjectContext:(id)arg2 ;
+(id)firstNodeInNodes:(id)arg1 ordered:(long long)arg2 passingTest:(/*^block*/id)arg3 ;
+(id)nodeWithHighestOrder:(id)arg1 passingTest:(/*^block*/id)arg2 ;
+(id)nodeWithHighestOrder:(id)arg1 ;
-(void)setChecked:(long long)arg1 ;
-(long long)checked;
-(void)dealloc;
-(NSString *)path;
-(NSString *)type;
-(long long)compare:(id)arg1 ;
-(void)setColor:(NSColor *)arg1 ;
-(NSColor *)color;
-(id)properties;
-(int)order;
-(void)setOrder:(int)arg1 ;
-(char)isWritable;
-(char)isEventContainer;
-(id)lastOperationError;
-(void)deactivateSession;
-(id)session;
-(char)wantsSession;
-(void)activateSession;
-(char)isSubscribed;
-(id)relativePath;
-(char)isTaskContainer;
-(void)refreshSession;
-(void)refreshSession:(long long)arg1 ;
-(id)iCalendarDocumentWithID:(id)arg1 name:(id)arg2 description:(id)arg3 color:(id)arg4 options:(unsigned long long)arg5 ;
-(id)_iCalendarDocumentForCalendars:(id)arg1 calendarID:(id)arg2 name:(id)arg3 description:(id)arg4 color:(id)arg5 options:(unsigned long long)arg6 ;
-(id)iCalendarDocumentWithOptions:(unsigned long long)arg1 ;
-(char)isRefreshable;
-(void)willRefresh:(char)arg1 ;
-(char)keepSyncRecordLocal;
-(char)isRenameable;
-(char)isColorEditable;
-(char)supportsPublishing;
-(char)isShared;
-(char)isCalDAVPublished;
-(id)subscriptionOrPublishURL;
-(char)supportsSharing;
-(char)isSharedToMe;
-(char)isSharedByMe;
-(char)supportsCalDAVPublish;
-(id)nodesInNamespace;
-(void)awakeFromFetch;
-(void)setNeedsPublish:(char)arg1 ;
-(long long)compareTitle:(id)arg1 ;
-(id)nodesForOrdering;
-(char)isDeletable;
-(long long)notificationCountForClass:(Class)arg1 ;
-(char)_isTitleInUse:(id)arg1 nodes:(id)arg2 ;
-(void)updateOrderToFirstOrderWithNodesForOrdering:(id)arg1 ;
-(void)updateOrderToLastOrderWithNodesForOrdering:(id)arg1 ;
-(void)updateOrderToOrder:(int)arg1 withNodesForOrdering:(id)arg2 ;
-(void)_updateOrderToOrder:(int)arg1 shouldUseFirstOrder:(char)arg2 shouldUseLastOrder:(char)arg3 nodesForOrdering:(id)arg4 ;
-(char)isPublished;
-(char)supportsAttendeeSearch;
-(char)isTitleInUse:(id)arg1 ;
-(id)titleWithPrefix:(id)arg1 ;
-(void)updateOrderToFirstOrder;
-(void)updateOrderToLastOrder;
-(void)updateOrderToOrder:(int)arg1 ;
@end

