/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 8:59:57 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Volumes/YosInst/Install OS X Yosemite.app/Contents/PlugIns/IA.bundle/Contents/MacOS/IA
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <IA/IA-Structs.h>
#import <AppKit/NSWindowController.h>
#import <IA/PUKDiskPickerHorizontalDataSource.h>
#import <IA/PUKDiskPickerHorizontalDelegate.h>
#import <IA/NSTextViewDelegate.h>
#import <IA/IACompatibilityCheckerWindowDelegate.h>

@class IASetupState, NSTabView, NSDictionary, NSView, NSTextField, NSProgressIndicator, IACustomizeSheetController, PUKDiskPickerHorizontalView, IACompatibilityCheckerWindowController, NSButton, NSImageView, IASetupOperationQueue, IADistributionController, IATargetController, IABatteryPowerController, NSString, NSTextView, NSArray, NSAlert, OSInstallRecoveryAuthSession, OSInstallRecoveryProduct, IABackupWarningController, NSWindow, NSTimer, NSError, IAPisaSource;

@interface IASetupWindowController : NSWindowController <PUKDiskPickerHorizontalDataSource, PUKDiskPickerHorizontalDelegate, NSTextViewDelegate, IACompatibilityCheckerWindowDelegate> {

	id _delegate;
	IASetupState* _state;
	NSTabView* _paneTabView;
	NSDictionary* _paneByIdentifier;
	NSView* _currentPaneView;
	NSTextField* _progressTitleField;
	NSProgressIndicator* _operationProgressIndicator;
	NSTextField* _errorField;
	IACustomizeSheetController* _customizeSheetController;
	PUKDiskPickerHorizontalView* _diskPickerView;
	IACompatibilityCheckerWindowController* _compatibilityChecker;
	NSButton* _continueButton;
	NSButton* _goBackButton;
	NSButton* _alternateButton;
	CGRect _continueButtonLeftFrame;
	CGRect _continueButtonRightFrame;
	CGRect _continueButtonMiddleFrame;
	NSImageView* _osxImage;
	NSTextField* _osxText;
	IASetupOperationQueue* _operationQueue;
	IADistributionController* _distributionController;
	IATargetController* _targetController;
	IABatteryPowerController* _powerController;
	char _agreedToProceedWithUnsupportedInstall;
	NSString* _targetExplanation;
	NSTextView* _licenseTextView;
	NSArray* _bindableProperties;
	NSString* _selectedPaneIdentifier;
	char _didAgreeToLicense;
	char _odsEnabled;
	char _agreedToDisableServer;
	NSView* _loadingDistView;
	NSProgressIndicator* _loadingDistProgress;
	char _agreedToSerialSend;
	NSAlert* _serialAlert;
	char _isRemoteRecovery;
	char _hasCheckedProductState;
	OSInstallRecoveryAuthSession* _authSession;
	OSInstallRecoveryProduct* _recoveryProduct;
	IABackupWarningController* backupWarningController;
	char _readyForTargetSelect;
	char _showingWaitSheet;
	NSWindow* _waitWindow;
	NSTextField* _waitWindowMessage;
	NSProgressIndicator* _waitProgress;
	NSProgressIndicator* _connectingSpinner;
	NSTextField* _connectingText;
	NSTextField* _countdownOrPromptField;
	NSTimer* _countdownTimer;
	char _isRestarting;
	char _isAppStoreRecovery;
	char _appStorePurchaseFinished;
	NSError* _appStoreError;
	IAPisaSource* _appStoreProduct;

}

@property (retain) NSError * _appStoreError;                        //@synthesize appStoreError=_appStoreError - In the implementation block
@property (assign) char _isAppStoreRecovery;                        //@synthesize isAppStoreRecovery=_isAppStoreRecovery - In the implementation block
@property (retain) IAPisaSource * _appStoreProduct;                 //@synthesize appStoreProduct=_appStoreProduct - In the implementation block
@property (assign) char _appStorePurchaseFinished;                  //@synthesize appStorePurchaseFinished=_appStorePurchaseFinished - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(char)_shouldShowNotPluggedInDialog;
-(NSError *)_appStoreError;
-(void)setAppStoreRecovery:(char)arg1 ;
-(char)continueButtonEnabled;
-(char)alternateButtonEnabled;
-(id)continueButtonImage;
-(id)targetStatus;
-(id)selectedPaneIdentifier;
-(void)didClickAlternate:(id)arg1 ;
-(char)canShowDiskPicker;
-(id)targetExplanation;
-(id)alertIcon;
-(void)showMeTheIA:(id)arg1 ;
-(IAPisaSource *)_appStoreProduct;
-(void)set_appStoreProduct:(IAPisaSource *)arg1 ;
-(char)_appStorePurchaseFinished;
-(void)set_appStorePurchaseFinished:(char)arg1 ;
-(id)_kernedTitleString:(id)arg1 withFont:(id)arg2 ;
-(id)backButtonImage;
-(void)setODSEnabled:(char)arg1 ;
-(void)serverAppSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3 ;
-(void)set_appStoreError:(NSError *)arg1 ;
-(char)_isAppStoreRecovery;
-(void)set_isAppStoreRecovery:(char)arg1 ;
-(void)didClickGoBack:(id)arg1 ;
-(void)_targetChangeNotification:(id)arg1 ;
-(void)customizeSheetControllerDidEnd:(id)arg1 didCustomize:(char)arg2 ;
-(void)compatibilityCheckerDidClickContinue;
-(void)compatibilityCheckerDidClickCancel;
-(void)_adjustImagesAndTextForPane:(id)arg1 animating:(char)arg2 ;
-(void)_selectedTargetDidChange;
-(void)endWaitWindow;
-(void)_updateLicenseAgreement;
-(void)_stopDisplayingOperationQueue;
-(id)alternateButtonTitle;
-(void)serialAgreeSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void*)arg3 ;
-(id)initWithDelegate:(id)arg1 state:(id)arg2 ;
-(void)displayProgressViewForOperationQueue:(id)arg1 ;
-(void)_disableServerAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void*)arg3 ;
-(void)_powerWarningSheetDidEnd:(id)arg1 shouldProceed:(char)arg2 contextInfo:(void*)arg3 ;
-(void)_finishAnalyzeDistributionAndTargets:(id)arg1 ;
-(void)_checkForPotentialProblemsAndConfirmStart;
-(void)_handleRequestUnlockVolume;
-(void)_licenseAgreementSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void*)arg3 ;
-(void)_restartConfirmationTimerDidFire:(id)arg1 ;
-(void)printLicense:(id)arg1 ;
-(void)setDistributionController:(id)arg1 targetController:(id)arg2 ;
-(void)_unsupportedAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void*)arg3 ;
-(void)showWaitWindowWithMessage:(id)arg1 ;
-(void)_adjustButtonVisibilityAndLocation;
-(void)_checkForOtherApplicationsBeforeRestarting:(id)arg1 ;
-(void)_confirmStartAsRetry:(char)arg1 ;
-(void)_otherUserSheetDidEnd:(id)arg1 didLogoutAll:(char)arg2 contextInfo:(void*)arg3 ;
-(void)_confirmStart;
-(void)_anotherMacSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void*)arg3 ;
-(void)_displayCompatibilityCheckIfNecessary;
-(void)setRemoteRecovery:(char)arg1 ;
-(void)_licenseSavePanelDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void*)arg3 ;
-(void)saveLicense:(id)arg1 ;
-(void)displayFatalErrorMessage:(id)arg1 ;
-(void)setTargetExplanation:(id)arg1 ;
-(void)setRemoteRecoveryProduct:(id)arg1 ;
-(void)cancelRestartConfirmationTimer:(id)arg1 ;
-(void)setAppStoreProduct:(id)arg1 ;
-(id)goBackButtonTitle;
-(void)_startAnalyzingDistributionAndTargets;
-(void)setSelectedPaneIdentifier:(id)arg1 ;
-(void)didClickContinue:(id)arg1 ;
-(void)showDiskPicker:(id)arg1 ;
-(void)_willUpdateState;
-(void)_didUpdateState;
-(char)isInTargetSelect;
-(void)displayRestartConfirmation;
-(void)displayRestartingNotice;
-(void)_otherAppController:(id)arg1 didCloseAll:(char)arg2 contextInfo:(void*)arg3 ;
-(void)displayIntro;
-(id)distributionController;
-(id)continueButtonTitle;
-(id)diskPicker:(id)arg1 titleForDisk:(id)arg2 ;
-(id)diskPicker:(id)arg1 iconForDisk:(id)arg2 ;
-(id)diskPicker:(id)arg1 subtitleForDisk:(id)arg2 ;
-(id)diskPicker:(id)arg1 detailsForDisk:(id)arg2 ;
-(id)diskPicker:(id)arg1 actionButtonForDisk:(id)arg2 ;
-(id)diskPicker:(id)arg1 URLForDisk:(id)arg2 ;
-(char)diskPicker:(id)arg1 shouldEnableDisk:(id)arg2 ;
-(void)diskPicker:(id)arg1 didClickActionButtonForDisk:(id)arg2 ;
-(id)diskPicker:(id)arg1 childDisksForDisk:(id)arg2 ;
-(void)diskPicker:(id)arg1 didSelectDisk:(id)arg2 ;
-(char)disk:(id)arg1 equalsDisk:(id)arg2 ;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(char)validateMenuItem:(id)arg1 ;
-(id)targetController;
-(char)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3 ;
-(void)windowDidLoad;
-(id)operationQueue;
@end

