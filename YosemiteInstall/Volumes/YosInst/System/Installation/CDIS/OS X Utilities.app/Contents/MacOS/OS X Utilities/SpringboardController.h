/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 9:08:16 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Volumes/YosInst/System/Installation/CDIS/OS X Utilities.app/Contents/MacOS/OS X Utilities
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <OS X Utilities/OS X Utilities-Structs.h>
#import <OS X Utilities/NSTableViewDataSource.h>

@class NSWindow, NSTextField, NSLayoutConstraint, NSButton, NSTableView, NSMenuItem, NSMutableArray, NSMutableDictionary, NSTimer, IFXLogWindowController, NSStatusItem, NSString;

@interface SpringboardController : NSObject <NSTableViewDataSource> {

	NSWindow* window;
	NSTextField* titleTextField;
	NSLayoutConstraint* titleTopConstraint;
	NSButton* launchButton;
	NSTableView* applicationTableView;
	NSMenuItem* utilitiesMenu;
	char lockedMode;
	char isRunningFromInstallMedia;
	char isRecoveryImage;
	char runningPassthruMode;
	char runningSafariMode;
	char runningFDERecoveryMode;
	char runningFDEPasswordResetMode;
	char shouldShowWindow;
	char appIsRunning;
	NSMutableArray* utilityList;
	unsigned connection;
	NSMutableDictionary* taskDictionary;
	NSTimer* windowCounterTimer;
	IFXLogWindowController* logWindowController;
	id airPortMenuExtra;
	NSStatusItem* timStatusItem;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)logWindowWillClose;
-(void)showLogWindow:(id)arg1 ;
-(void)_addMenuExtras;
-(void)_titleChanged:(id)arg1 ;
-(id)getBootMode;
-(id)diagnosticsURLOptions;
-(id)applicationToAutopilotTo;
-(char)_bootedFromRecoveryImage;
-(void)setupUtilityList;
-(void)_doubleClickedApplicationTable:(id)arg1 ;
-(void)_setSafariStartPage:(int)arg1 options:(id)arg2 ;
-(void)_messageTraceBootScenario:(char)arg1 :(char)arg2 :(char)arg3 ;
-(void)launchPath:(id)arg1 withArguments:(id)arg2 ;
-(char)_shouldLockInternalDrives;
-(char)_lockInternalDrives;
-(void)_registerForUtilityDidAppearNotifciation:(id)arg1 ;
-(void)_tableSelectionDidChange:(id)arg1 ;
-(id)_utilitiesPlistPath;
-(id)_processItemDictionary:(id)arg1 ;
-(void)launchUtility:(id)arg1 ;
-(void)_launchProgramAtIndex:(long long)arg1 ;
-(void)utilityDidTerminate:(id)arg1 ;
-(void)_unregisterForUtilityDidAppearNotifciation:(id)arg1 ;
-(void)utilityDidAppear:(id)arg1 ;
-(void)_windowListUpdateTimer:(id)arg1 ;
-(id)_getImgsrcDevicesByNestingHeight;
-(id)_mountPointForBootDrive;
-(id)_dictionaryForDiskutilOutputWithArgs:(id)arg1 ;
-(char)_machineIsLockedForWipe;
-(id)_dictionaryForBootedRecoveryHDOwner;
-(void)openButtonPressed:(id)arg1 ;
-(id)shouldShowRAIDUtility;
-(void)back:(id)arg1 ;
-(void)_sheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void*)arg3 ;
-(void)dealloc;
-(long long)numberOfRowsInTableView:(id)arg1 ;
-(id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3 ;
-(void)awakeFromNib;
-(void)close:(id)arg1 ;
@end

