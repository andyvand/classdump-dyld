/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 8:00:58 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Volumes/YosInst/System/Library/PrivateFrameworks/OSInstaller.framework/Versions/A/OSInstaller
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <OSInstaller/SKManagerListener.h>

@protocol OS_dispatch_queue, OSInstallControllerDelegate;
@class OSInstallOptions, NSMutableArray, NSObject, NSError, NSArray, NSNumber, NSString;

@interface OSInstallController : NSObject <SKManagerListener> {

	OSInstallOptions* _options;
	NSMutableArray* _customizationOptions;
	NSMutableArray* _products;
	NSMutableArray* _distControllers;
	NSObject*<OS_dispatch_queue> _targetEvaluationQueue;
	NSMutableArray* _validTargets;
	NSMutableArray* _invalidTargetsWithErrors;
	NSMutableArray* _installOperations;
	double _initialTimeRemaining;
	double _totalNonRunningTimeRemaining;
	double _lastTimeRemaining;
	double _progressCompleted;
	double _lastProgress;
	char _shouldProcessTimeRemaining;
	unsigned _systemSleepAssertion;
	char _isCollectionInstall;
	char _isCurrentlyInstalling;
	char _hasEvaluatedInstallability;
	char _installationCompletedSuccessfully;
	NSError* _installCheckFailureReason;
	NSObject*<OSInstallControllerDelegate> _delegate;
	NSError* _installFailureReason;

}

@property (assign) char isCollectionInstall;                                     //@synthesize isCollectionInstall=_isCollectionInstall - In the implementation block
@property (assign) char isCurrentlyInstalling;                                   //@synthesize isCurrentlyInstalling=_isCurrentlyInstalling - In the implementation block
@property (assign) char hasEvaluatedInstallability;                              //@synthesize hasEvaluatedInstallability=_hasEvaluatedInstallability - In the implementation block
@property (retain) NSError * installCheckFailureReason;                          //@synthesize installCheckFailureReason=_installCheckFailureReason - In the implementation block
@property (assign) NSObject*<OSInstallControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (retain) NSError * installFailureReason;                               //@synthesize installFailureReason=_installFailureReason - In the implementation block
@property (readonly) char hasCustomizationOptions; 
@property (readonly) NSArray * customizationOptions; 
@property (readonly) NSNumber * bytesRequiredToInstall; 
@property (assign) char installationCompletedSuccessfully;                       //@synthesize installationCompletedSuccessfully=_installationCompletedSuccessfully - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)_logSystemInfo;
-(void)_invalidateCustomization;
-(NSArray *)customizationOptions;
-(long long)_recursivelyUpdateStateForItem:(id)arg1 ;
-(void)_disableSystemSleep;
-(char)_isRecoverySupportedForTarget:(id)arg1 ;
-(NSNumber *)bytesRequiredToInstall;
-(id)_baseSystemMountPathFromXML:(id)arg1 ;
-(char)_isOSInstallFromXML:(id)arg1 ;
-(char)_isValidCompatibilityUpdatePackage:(id)arg1 ;
-(double)timeRemainingAfter:(id)arg1 ;
-(void)setInstallCheckFailureReason:(NSError *)arg1 ;
-(void)setInstallationCompletedSuccessfully:(char)arg1 ;
-(void)stopProgressTimer;
-(void)_enableSystemSleep;
-(char)installationCompletedSuccessfully;
-(void)setHasEvaluatedInstallability:(char)arg1 ;
-(void)_evaluateDisks:(id)arg1 ;
-(void)_startTargetEvaulationQueue;
-(void)_removeDisksFromHandledTargets:(id)arg1 ;
-(id)_mountDiskImageWithPath:(id)arg1 ;
-(void)operation:(id)arg1 timeRemaining:(double)arg2 ;
-(double)smoothTimeRemaining:(double)arg1 ;
-(id)initWithDistributionPath:(id)arg1 considerAutomation:(char)arg2 ;
-(char)hasCustomizationOptions;
-(void)updateCustomizationState;
-(char)startInstall;
-(void)prepareForReboot;
-(char)setTarget:(id)arg1 error:(id*)arg2 ;
-(char)isCollectionInstall;
-(void)setIsCollectionInstall:(char)arg1 ;
-(char)isCurrentlyInstalling;
-(void)setIsCurrentlyInstalling:(char)arg1 ;
-(char)hasEvaluatedInstallability;
-(NSError *)installCheckFailureReason;
-(NSError *)installFailureReason;
-(void)setInstallFailureReason:(NSError *)arg1 ;
-(void)initialPopulateComplete;
-(void)disksChanged:(id)arg1 ;
-(void)disksAppeared:(id)arg1 ;
-(id)visibleDiskRoles;
-(void)disksDisappeared:(id)arg1 ;
-(id)localizedProductName;
-(id)licenseAgreement;
-(void)setDelegate:(NSObject*<OSInstallControllerDelegate>)arg1 ;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(id)target;
-(NSObject*<OSInstallControllerDelegate>)delegate;
-(id)options;
@end

