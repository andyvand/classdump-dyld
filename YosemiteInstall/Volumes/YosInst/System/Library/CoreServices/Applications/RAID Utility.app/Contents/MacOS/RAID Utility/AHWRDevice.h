/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:47:02 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Volumes/YosInst/System/Library/CoreServices/Applications/RAID Utility.app/Contents/MacOS/RAID Utility
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <RAID Utility/CRDevice.h>

@class NSString;

@interface AHWRDevice : CRDevice {

	NSString* _statusDescription;
	NSString* _shortStatusDescription;
	long long _status;

}
+(Class)driveClass;
+(Class)groupClass;
+(Class)volumeClass;
+(id)drivesSortDescriptors;
+(id)groupsSortDescriptors;
+(id)volumesSortDescriptors;
+(id)keyPathsForValuesAffectingAlerts;
+(id)keyPathsForValuesAffectingBattery;
+(id)keyPathsForValuesAffectingController;
+(id)keyPathsForValuesAffectingStatusDescription;
+(id)keyPathsForValuesAffectingShortStatusDescription;
+(id)keyPathsForValuesAffectingAllowsCacheControl;
+(Class)controllerClass;
+(id)keyPathsForValuesAffectingStatus;
+(void)initialize;
-(char)createGroupWithDrives:(id)arg1 raidLevel:(id)arg2 name:(id)arg3 error:(id*)arg4 ;
-(char)addLocalSpares:(id)arg1 toGroup:(id)arg2 error:(id*)arg3 ;
-(void)setShortStatusDescription:(id)arg1 ;
-(char)allowsCacheControl;
-(id)shortStatusDescription;
-(id)driverVersion;
-(id)createGroupOperation;
-(id)deleteGroupOperation;
-(id)createVolumeOperation;
-(id)deleteVolumeOperation;
-(id)addLocalSpareOperation;
-(id)addGlobalSpareOperation;
-(id)migrateOperation;
-(id)moveVolumeOperation;
-(id)scrubGroupOperation;
-(id)assimilateDriveOperation;
-(id)removeLocalSpareOperation;
-(id)removeGlobalSpareOperation;
-(char)scrubVolume:(id)arg1 onGroup:(id)arg2 priority:(id)arg3 error:(id*)arg4 ;
-(char)moveVolumes:(id)arg1 group:(id)arg2 error:(id*)arg3 ;
-(char)expandVolume:(id)arg1 size:(unsigned long long)arg2 error:(id*)arg3 ;
-(char)addCapacityToGroup:(id)arg1 drives:(id)arg2 error:(id*)arg3 ;
-(char)addMirrorToGroup:(id)arg1 drives:(id)arg2 error:(id*)arg3 ;
-(char)migrateGroupToRAID5:(id)arg1 drives:(id)arg2 error:(id*)arg3 ;
-(char)deleteGroup:(id)arg1 error:(id*)arg2 ;
-(char)createVolumeWithName:(id)arg1 size:(unsigned long long)arg2 onGroup:(id)arg3 error:(id*)arg4 ;
-(char)deleteVolume:(id)arg1 error:(id*)arg2 ;
-(char)removeLocalSpares:(id)arg1 fromGroup:(id)arg2 error:(id*)arg3 ;
-(char)addGlobalSpares:(id)arg1 error:(id*)arg2 ;
-(char)removeGlobalSpares:(id)arg1 error:(id*)arg2 ;
-(char)dropDrive:(id)arg1 error:(id*)arg2 ;
-(char)assimilateDrive:(id)arg1 error:(id*)arg2 ;
-(char)scrubGroup:(id)arg1 priority:(id)arg2 error:(id*)arg3 ;
-(char)abortVolumeScrub:(id)arg1 onGroup:(id)arg2 error:(id*)arg3 ;
-(char)rewriteVolume:(id)arg1 priority:(id)arg2 error:(id*)arg3 ;
-(char)abortRewriteVolume:(id)arg1 error:(id*)arg2 ;
-(char)setWriteCachePolicy:(unsigned)arg1 onVolume:(id)arg2 ofGroup:(id)arg3 error:(id*)arg4 ;
-(id)alertsSortDescriptors;
-(id)tasksSortDescriptors;
-(id)statusDescription;
-(void)setStatusDescription:(id)arg1 ;
-(char)connect;
-(id)tasks;
-(id)alerts;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(id)controller;
-(long long)status;
-(id)battery;
-(void)setStatus:(long long)arg1 ;
@end

