/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 9:01:28 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Volumes/YosInst/Applications/Utilities/Disk Utility.app/Contents/Frameworks/DUSupport.framework/DUSupport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <DUSupport/DUSupport-Structs.h>
@class NSMutableDictionary, NSLock, NSString, NSImage, NSMutableArray, DUSMARTDriveObject;

@interface DUDisk : NSObject {

	NSMutableDictionary* miscData;
	int cachedDUDiskType;
	DUDisk* parentDisk;
	char isDisplayedToUser;
	long long indentLevel;
	char needsChildrenUpdate;
	id fsckHistory;
	char ejected;
	char changed;
	DUDisk* pseudoChild;
	char requestingEjectOrUnmount;
	NSLock* childListLock;
	NSString* diskIdentifier;
	NSString* cachedDisplayName;
	NSString* cachedStringForOutlineView;
	NSString* cachedStringForSimpleInterfaceList;
	NSImage* cachedDisplayIcon;
	NSString* cachedRAIDSetUUID;
	NSString* cachedRAIDMemberUUID;
	NSString* cachedRAIDParentUUID;
	NSString* cachedRAIDUUID;
	NSString* cachedUUID;
	NSMutableArray* cachedChildrenDisk;
	NSMutableArray* cachedVisibleChildrenDisk;
	NSString* claimedByLVGUUID;
	DUSMARTDriveObject* cachedSmartDriveInfo;
	char _flaggedForFixing;

}

@property (copy) NSString * cachedDisplayName; 
@property (copy) NSString * cachedStringForOutlineView; 
@property (copy) NSString * cachedStringForSimpleInterfaceList; 
@property (copy) NSString * cachedRAIDSetUUID; 
@property (copy) NSString * cachedRAIDMemberUUID; 
@property (copy) NSString * cachedRAIDParentUUID; 
@property (copy) NSString * cachedRAIDUUID; 
@property (copy) NSString * cachedUUID; 
@property (copy) NSString * diskIdentifier; 
@property (copy) NSImage * cachedDisplayIcon; 
@property (retain) NSMutableArray * cachedChildrenDisk; 
@property (retain) NSMutableArray * cachedVisibleChildrenDisk; 
@property (retain) DUSMARTDriveObject * cachedSmartDriveInfo; 
@property (retain) NSString * claimedByLVGUUID; 
@property (assign) char flaggedForFixing;                                    //@synthesize flaggedForFixing=_flaggedForFixing - In the implementation block
+(id)diskTypeName:(int)arg1 ;
-(void)diskChangedHandler:(id)arg1 ;
-(unsigned long long)diskNumber;
-(NSString *)diskIdentifier;
-(const char*)di;
-(id)ioContent;
-(char)isCoreStoragePhysicalVolumeDisk;
-(char)isCoreStorageLogicalVolumeDisk;
-(char)isCoreStorageEncryptedLogicalVolumeDisk;
-(char)isCoreStorageLogicalVolumeLocked;
-(unsigned long long)partitionNumber;
-(id)RAIDSetLevelType;
-(unsigned long long)RAIDMembersCount;
-(id)RAIDSetStatus;
-(char)isRAIDMissingMember;
-(char)isMounted;
-(char)isWhole;
-(id)RAIDMemberUUID;
-(double)RAIDRebuildProgress;
-(char)RAIDIsRebuilding;
-(int)diskType;
-(id)internalUUID;
-(id)coreStorageVolumeUUID;
-(id)visibleChildrenAndSubChildren;
-(char)isCoreStorageLogicalVolumeGroup;
-(char)outlineViewCellIsEnabled;
-(id)displayIcon;
-(char)hasSpecialOutlineViewDrawing;
-(id)stringForOutlineView;
-(id)outlineViewColor;
-(char)canBeRemovedByUser;
-(char)isOpticalDevice;
-(char)isOfflineDiskImage;
-(char)containsCoreStoragePhysicalVolumes;
-(id)parentDisk;
-(id)coreStorageVolumeParentUUID;
-(NSString *)claimedByLVGUUID;
-(void)setClaimedByLVGUUID:(NSString *)arg1 ;
-(void)setCachedUUID:(NSString *)arg1 ;
-(char)isCoreStorage;
-(char)isOpticalDisc;
-(id)opticalMediaType;
-(id)diskImagePath;
-(char)isSystemImage;
-(void)setDiskNode:(id)arg1 ;
-(DADiskRef)theDADisk;
-(char)changed;
-(char)ejected;
-(void)invalidateCachedData;
-(void)setEjected:(char)arg1 ;
-(void)setNeedsChildrenUpdate:(char)arg1 ;
-(id)diskNode;
-(id)rootParentDisk;
-(id)RAIDMembers;
-(id)RAIDSpares;
-(id)RAIDSetUUID;
-(void)resetMountPoint;
-(void)diskFullDescription;
-(char)isJournaled;
-(void)updateJournalStatus;
-(char)ownersEnabled;
-(void)updateOwnersEnabled;
-(id)ioKitSize;
-(char)isWritableVolume;
-(void)diskDescription:(char)arg1 ;
-(void)setRequestEjectOrUnmount:(char)arg1 ;
-(id)RAIDParentUUID;
-(char)isBootVolume;
-(char)isVirtualOnly;
-(char)requestingEjectOrUnmount;
-(void)resetPartitionStartLocation;
-(void)updateCoreStorageDictionary:(id)arg1 ;
-(void)setParentDisk:(id)arg1 ;
-(void)buildNewChildrenDiskList;
-(char)shouldInvalidateCachedData;
-(void)setCachedDisplayName:(NSString *)arg1 ;
-(void)setCachedDisplayIcon:(NSImage *)arg1 ;
-(void)setCachedStringForOutlineView:(NSString *)arg1 ;
-(void)setCachedStringForSimpleInterfaceList:(NSString *)arg1 ;
-(void)setCachedChildrenDisk:(NSMutableArray *)arg1 ;
-(void)setCachedVisibleChildrenDisk:(NSMutableArray *)arg1 ;
-(void)setCachedRAIDSetUUID:(NSString *)arg1 ;
-(void)setCachedRAIDMemberUUID:(NSString *)arg1 ;
-(void)setCachedRAIDParentUUID:(NSString *)arg1 ;
-(NSImage *)cachedDisplayIcon;
-(id)uncachedDisplayIcon;
-(NSString *)cachedStringForOutlineView;
-(NSString *)cachedStringForSimpleInterfaceList;
-(int)calculateDUDiskType;
-(char)hasParentDisk;
-(NSMutableArray *)cachedChildrenDisk;
-(void)updateChildren;
-(char)needsPseudoPartitionDisk;
-(char)isPseudoDisk;
-(NSMutableArray *)cachedVisibleChildrenDisk;
-(id)fsckHistoryNoChildren;
-(id)fsckHistory;
-(void)setFsckHistory:(id)arg1 ;
-(char)clearFsckHistory;
-(id)smartStatus;
-(void)setCachedSmartDriveInfo:(DUSMARTDriveObject *)arg1 ;
-(DUSMARTDriveObject *)cachedSmartDriveInfo;
-(id)RAIDMemberStatus;
-(char)hasSMARTError;
-(char)flaggedForFixing;
-(id)coreStorageStatus;
-(void)diskOneLineDescription;
-(id)diskDisplayType;
-(id)formattedSessionName;
-(id)stringForSimpleInterfaceList;
-(void)setDADisk:(DADiskRef)arg1 ;
-(void)setPseudoChild:(id)arg1 ;
-(id)pseudoChild;
-(char)isDisplayedToUser;
-(void)setIsDisplayedToUser:(char)arg1 ;
-(char)needsChildrenUpdate;
-(id)cachedChildDiskWithDADisk:(DADiskRef)arg1 ;
-(id)coreStorageData;
-(char)shouldBeDisplayedInOutlineView;
-(char)outlineViewCellCanBeSelected;
-(char)hasOutlineViewColor;
-(id)miscData;
-(id)miscDataForKey:(id)arg1 ;
-(void)setMiscData:(id)arg1 forKey:(id)arg2 ;
-(id)smartDriveInfo;
-(NSString *)cachedDisplayName;
-(NSString *)cachedRAIDSetUUID;
-(NSString *)cachedRAIDMemberUUID;
-(NSString *)cachedRAIDParentUUID;
-(NSString *)cachedRAIDUUID;
-(void)setCachedRAIDUUID:(NSString *)arg1 ;
-(NSString *)cachedUUID;
-(void)setDiskIdentifier:(NSString *)arg1 ;
-(void)setFlaggedForFixing:(char)arg1 ;
-(char)isCoreStorageEncryptedLogicalVolumeDisk:(char*)arg1 type:(id*)arg2 ;
-(unsigned long long)sliceNumber;
-(CFDictionaryRef)registryProps;
-(long long)partitionID;
-(char)deviceIsOpen;
-(id)deviceNode;
-(id)volumeName;
-(id)filesystem;
-(char)filesystemTypeIsEqualTo:(id)arg1 ;
-(id)deviceTreePath;
-(id)bayName;
-(id)diskArbInfoDict;
-(char)isWritableMedia;
-(char)isNetworkDisk;
-(char)isNonLeaf;
-(char)isCDROM;
-(char)isDVDROM;
-(char)isXsanDisk;
-(char)isZFSDisk;
-(char)isErasableOpticalMedia;
-(char)isMountable;
-(char)isSolidStateDisk;
-(id)rawDeviceNode;
-(id)opticalDeviceType;
-(unsigned long long)RAIDBytesRebuilt;
-(id)RAIDSequenceNumber;
-(unsigned long long)RAIDSliceNumber;
-(unsigned long long)RAIDSetSliceCount;
-(char)RAIDAutoRebuild;
-(unsigned long long)RAIDSetTimeout;
-(unsigned long long)RAIDChunkCount;
-(unsigned long long)RAIDChunkSize;
-(char)RAIDSizesCanVary;
-(id)RAIDUUID;
-(id)RAIDSetName;
-(id)RAIDMemberType;
-(id)RAIDSetProperties;
-(id)RAIDMemberProperties;
-(void)updateLogicalVolumeProperties;
-(char)isLVMVolume;
-(char)hasLVMSnapshot;
-(id)LVMVolumeUUID;
-(id)LVMVolumeName;
-(id)LVMVolumeType;
-(id)LVMVolumeStatus;
-(id)LVMVolumeProperties;
-(id)LVMVolumeExtents;
-(DADiskRef)LVMSnapshot;
-(DADiskRef)LVMSnapshotOf;
-(char)isLVMGroup;
-(id)LVMGroupProperties;
-(unsigned long long)LVMGroupVolumeCount;
-(unsigned long long)LVMGroupFreeSpace;
-(id)LVMGroupExtents;
-(char)isRevertable;
-(id)infoForCoreStorageEncryptedLogicalVolumeDisk;
-(id)conversionProgressForLogicalVolumeDisk;
-(id)coreStorageVolume;
-(id)coreStoragePhysicalVolumeName;
-(id)siblingsInCSLVG;
-(id)physicalDADisksForLogicalVolume;
-(id)busSpecificKeys;
-(char)mountAllowed;
-(char)permissionsEnabled;
-(char)canRepairPermissions;
-(char)supportsLowLevelFormat;
-(char)lvmCanRename;
-(char)lvmCanChangeFormat;
-(char)lvmCanResize;
-(id)lvmMaxVolumeSize;
-(id)lvmMinVolumeSize;
-(id)partitionStartLocation;
-(id)calculateUsedBytes;
-(id)calculateFreeBytes;
-(id)resizeProperties;
-(void)setResizeProperties:(id)arg1 ;
-(char)isHTTPDiskImage;
-(char)isNonAppleDiskImage;
-(char)isFireWireDisk;
-(char)isUSBDisk;
-(char)isATADisk;
-(char)isSCSIDisk;
-(char)isSATADisk;
-(char)isSASDisk;
-(char)isDVDRAM;
-(char)isFibreChannelDisk;
-(char)containUserHomeDirectory;
-(char)parentIsRAIDMaster;
-(char)isEncryptedDiskImage;
-(char)canBeRestoreSource;
-(char)canBeRestoreTarget:(char)arg1 ;
-(char)supportsPacketWriting;
-(char)hasBlankOpticalMedia;
-(char)isTransientDisk;
-(char)supportsLiveResize;
-(id)localizedSMARTStatus:(long long*)arg1 ;
-(id)connectionIDDictionary;
-(id)localizedSocketType;
-(id)localizedProtocol;
-(id)localizedRAIDSetStatus;
-(id)localizedRAIDMemberStatus;
-(id)localizedRAIDSetLevelType;
-(id)localizedMediaType;
-(id)buildWWNString:(id)arg1 ;
-(long long)getDiskImageObject:(void*)arg1 withErrorString:(id*)arg2 ;
-(long long)getDiskImageObjectFromPathOrDiskNode:(void*)arg1 unmountingReadWriteVolumesReturning:(id*)arg2 withErrorString:(id*)arg3 ;
-(long long)getDiskImageObject:(void*)arg1 ;
-(long long)getDiskImageObjectFromPathOrDiskNode:(void*)arg1 ;
-(long long)getDiskImageObjectFromPathOrDiskNode:(void*)arg1 withErrorString:(id*)arg2 ;
-(long long)getDiskImageObjectFromPathOrDiskNode:(void*)arg1 unmountingReadWriteVolumesReturning:(id*)arg2 ;
-(void)updateData:(id)arg1 ;
-(id)UUID;
-(id)protocol;
-(id)blockSize;
-(id)visibleChildren;
-(id)mountPoint;
-(char)canSelect;
-(char)canDrag;
-(id)imageName;
-(id)parentIdentifier;
-(id)mediaType;
-(id)filesystemType;
-(char)canBeVerified;
-(char)canBeRepaired;
-(id)wholeDiskName;
-(char)isRAIDSlice;
-(char)isRAIDSpare;
-(char)isRAIDMaster;
-(void)setChanged:(char)arg1 ;
-(id)mediaName;
-(id)init;
-(void)dealloc;
-(id)description;
-(char)isEqual:(id)arg1 ;
-(id)dictionaryRepresentation;
-(id)displayName;
-(id)device;
-(id)children;
-(char)isEjectable;
-(char)isDiskImage;
-(unsigned long long)freeSpace;
-(void)addChild:(id)arg1 ;
-(id)toolTipString;
-(unsigned long long)totalSize;
-(char)hasChildren;
-(char)isInternal;
-(unsigned long long)flags;
-(void)setDevice:(id)arg1 ;
-(id)deviceName;
-(id)imagePath;
@end

