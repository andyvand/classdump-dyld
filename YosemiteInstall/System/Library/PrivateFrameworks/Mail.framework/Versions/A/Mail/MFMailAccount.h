/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 9:53:23 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/Mail.framework/Versions/A/Mail
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Mail/MFAccount.h>
#import <Mail/MCAccountSetupValidatorDelegate.h>
#import <Mail/MCActivityTarget.h>
#import <Mail/MCMailAccount.h>
#import <Mail/MFMessageDelivererDelegate.h>
#import <Mail/NSFileManagerDelegate.h>

@class NSString, MFMailbox, MCError, NSTimer, MCAccountSetupValidator, NSArray, MCAuthScheme, NSURL;

@interface MFMailAccount : MFAccount <MCAccountSetupValidatorDelegate, MCActivityTarget, MCMailAccount, MFMessageDelivererDelegate, NSFileManagerDelegate> {

	id _mailAccountLock;
	NSString* _path;
	id _mailboxLock;
	MFMailbox* _inboxMailbox;
	MFMailbox* _rootMailbox;
	MFMailbox* _draftsMailbox;
	MFMailbox* _sentMessagesMailbox;
	MFMailbox* _trashMailbox;
	MFMailbox* _junkMailbox;
	MFMailbox* _notesMailbox;
	MFMailbox* _todosMailbox;
	MFMailbox* _outboxMailbox;
	MFMailbox* _archiveMailbox;
	MCError* _lastConnectionError;
	id _cacheChangeLock;
	NSTimer* _cacheWriteTimer;
	id _backgroundActivityFlagsLock;
	char _backgroundFetchInProgress;
	char _cacheHasBeenRead;
	char _mailboxListInitializationInProgress;
	char _needsChecking;
	MCAccountSetupValidator* _validator;

}

@property (assign) char disableRecentsSync; 
@property (assign) char validationRequired; 
@property (readonly) char rootMailboxExists; 
@property (retain) MCAccountSetupValidator * validator;                      //@synthesize validator=_validator - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (copy,readonly) NSString * accountTypeString; 
@property (copy,readonly) NSString * identifier; 
@property (copy) NSString * displayName; 
@property (nonatomic,copy,readonly) NSString * saslProfileName; 
@property (assign) char configureDynamically; 
@property (assign) char allowInsecureAuthentication; 
@property (copy) NSString * canonicalEmailAddress; 
@property (copy) NSString * hostname; 
@property (assign) long long portNumber; 
@property (nonatomic,copy,readonly) NSArray * standardPorts; 
@property (nonatomic,copy,readonly) NSArray * standardSSLPorts; 
@property (assign) long long securityLayerType; 
@property (retain) MCAuthScheme * preferredAuthScheme; 
@property (copy) NSString * username; 
@property (copy) NSString * password; 
@property (copy,readonly) NSString * applePersonID; 
@property (copy,readonly) NSString * appleAuthenticationToken; 
@property (copy,readonly) NSString * googleClientToken; 
@property (nonatomic,readonly) char requiresAuthentication; 
@property (assign) char shouldUseAuthentication; 
@property (assign) char usesSSL; 
@property (readonly) NSURL * subscriptionURL; 
@property (copy,readonly) NSString * subscriptionURLLabel; 
@property (copy) NSString * externalHostname; 
+(id)activeAccounts;
+(void)saveAccountInfoToDefaults;
+(char)haveAccountsBeenConfigured;
+(id)mailAccounts;
+(id)defaultPathForAccountWithHostname:(id)arg1 username:(id)arg2 ;
+(id)defaultPathNameForAccount;
+(void)setAllEmailAddresses:(id)arg1 withFullUserNames:(id)arg2 ;
+(id)defaultPathNameForAccountWithHostname:(id)arg1 username:(id)arg2 ;
+(id)mailboxForFileSystemPath:(id)arg1 create:(char)arg2 ;
+(id)specialMailboxes;
+(id)accountWithPath:(id)arg1 ;
+(id)accountWithSyncableURLString:(id)arg1 includeInactiveAccounts:(char)arg2 ;
+(id)junkMailboxes;
+(id)trashMailboxes;
+(id)sentMessagesMailboxes;
+(id)draftMailboxes;
+(id)inboxMailboxes;
+(id)mailboxForURL:(id)arg1 forceCreation:(char)arg2 syncableURL:(char)arg3 ;
+(id)remoteAccounts;
+(id)allMailboxes;
+(id)accountThatMessageIsFrom:(id)arg1 ;
+(id)_pathComponentForMailboxName:(id)arg1 ;
+(id)_mailboxNameForPathComponent:(id)arg1 ;
+(void)disconnectAllAccounts;
+(id)allEmailAddressesIncludingFullUserName:(char)arg1 ;
+(id)addressesThatReceivedMessage:(id)arg1 ;
+(id)accountContainingEmailAddress:(id)arg1 ;
+(char)_mailAccountsAreInitialized;
+(void)migrateUnreadCountInMailboxCache;
+(id)URLForInfo:(id)arg1 ;
+(void)normalizeMailboxPathComponentsInAllAccounts;
+(id)outboxMailboxes;
+(long long)numberOfDaysToKeepLocalTrash;
+(char)allAccountsDeleteInPlace;
+(void)_addAccountToSortedPaths:(id)arg1 ;
+(void)reloadMailAccounts;
+(id)_mailAccountsIncludingUnknownTypes;
+(void)_setMailAccounts:(id)arg1 reloadingFromStorage:(char)arg2 ;
+(void)_disableMailboxListingNotifications;
+(void)_setupSortedPathsForAccounts:(id)arg1 ;
+(void)resetAllSpecialMailboxes;
+(void)_postMailAccountsHaveChanged;
+(void)_enableMailboxListingNotifications:(char)arg1 ;
+(id)_accountFromArray:(id)arg1 withType:(id)arg2 hostname:(id)arg3 username:(id)arg4 ;
+(void)setMailAccounts:(id)arg1 ;
+(char)setAccountInfo:(id)arg1 forAccountMatchingInfo:(id)arg2 ;
+(id)_activeAccountsFromArray:(id)arg1 ;
+(id)_accountFromArray:(id)arg1 withIdentifier:(id)arg2 ;
+(id)_urlFromObject:(id)arg1 ;
+(void)_updateAccountExistsForSigning;
+(char)accountExistsForSigning;
+(id)_accountContainingEmailAddress:(id)arg1 matchingAddress:(id*)arg2 fullUserName:(id*)arg3 ;
+(id)accountForHeaders:(id)arg1 message:(id)arg2 ;
+(id)accountThatReceivedMessage:(id)arg1 matchingEmailAddress:(id*)arg2 fullUserName:(id*)arg3 ;
+(id)_outboxMailbox;
+(void)_setOutboxMailbox:(id)arg1 ;
+(id)_specialMailboxesUsingBlock:(/*^block*/id)arg1 ;
+(id)_accountWithPath:(id)arg1 relativePath:(id*)arg2 ;
+(id)defaultAccountDirectory;
+(void)_inferMissingCanonicalEmailAddressesForAccounts:(id)arg1 usingEmailAddresses:(id)arg2 ;
+(void)_setOnlineStateOfAllAccountsTo:(char)arg1 ;
+(void)setNewUnreadMessagesReceivedInInbox:(char)arg1 ;
+(char)_mailboxListingNotificationAreEnabled;
+(id)_accountForURL:(id)arg1 includeInactiveAccounts:(char)arg2 ;
+(id)accountWithURLString:(id)arg1 includeInactiveAccounts:(char)arg2 ;
+(id)infoForURL:(id)arg1 ;
+(void)_normalizePathComponentsInMailboxesDictionary:(id)arg1 accountClass:(Class)arg2 ;
+(void)_removeAccountFromSortedPaths:(id)arg1 ;
+(void)deleteMailboxIfEmpty:(id)arg1 ;
+(char)accountsHaveBeenInitialized;
+(void)completeDeferredAccountInitialization;
+(id)allMailAccounts;
+(void)addMailAccount:(id)arg1 ;
+(id)removeMailAccountFromAccountStorageWithIdentifier:(id)arg1 ;
+(void)setIsActive:(char)arg1 forAccountWithIdentifier:(id)arg2 ;
+(void)accountsWereSynced;
+(char)newUnreadMessagesReceivedInInbox;
+(unsigned long long)countOfNewUnreadMessagesReceivedInInbox;
+(void)setCountOfNewUnreadMessagesReceivedInInbox:(unsigned long long)arg1 ;
+(unsigned long long)totalCountOfMessagesReceived;
+(void)setTotalCountOfMessagesReceived:(unsigned long long)arg1 ;
+(id)syncManagedAccountWithMCXCreateIfAbsent:(char)arg1 ;
+(char)onlyGmailAccountsUsingAllMailAsArchiveAreActive;
+(id)existingAccountWithType:(id)arg1 hostname:(id)arg2 username:(id)arg3 ;
+(char)isEmailAddressInAnyAccount:(id)arg1 ;
+(void)resetAccountExistsForSigning;
+(id)accountUsingHeadersFromMessage:(id)arg1 ;
+(id)preferredEmailAddressToReplyToMessage:(id)arg1 ;
+(id)outboxMessageStore:(char)arg1 ;
+(id)archiveMailboxes;
+(id)newAccountWithPath:(id)arg1 ;
+(id)defaultDeliveryAccount;
+(char)isAnyAccountOffline;
+(char)isAnyAccountOnline;
+(void)connectAllAccounts;
+(id)accountsInitializingMailboxList;
+(void)_clearAllAccountBackgroundFetchInProgress;
+(void)synchronouslyEmptyMailboxType:(int)arg1 inAccounts:(id)arg2 ;
+(void)inferMissingCanonicalEmailAddresses;
+(id)_accountForURL:(id)arg1 ;
+(id)accountWithURLString:(id)arg1 ;
+(id)keyPathsForValuesAffecting_URLPersistenceHostname;
+(void)initialize;
+(id)accountWithIdentifier:(id)arg1 ;
-(id)URLString;
-(void)setUsername:(NSString *)arg1 ;
-(void)setHostname:(NSString *)arg1 ;
-(char)isFetching;
-(id)initWithAccountInfo:(id)arg1 ;
-(id)defaultsDictionary;
-(void)_setAccountInfo:(id)arg1 ;
-(void)accountInfoDidChange;
-(void)releaseAllConnections;
-(id)iaSettingsIncludingPassword:(char)arg1 ;
-(char)autodiscoverSettings:(id*)arg1 ;
-(char)connectAndAuthenticate:(id)arg1 ;
-(void)respondToHostBecomingReachable;
-(NSString *)googleClientToken;
-(void)setIsOffline:(char)arg1 ;
-(void)setIsWillingToGoOnline:(char)arg1 ;
-(char)canFetch;
-(id)deliveryAccount;
-(char)deliveryAccountIsLocked;
-(void)completeDeferredInitialization;
-(void)_autodiscoveredSSLSetting:(id)arg1 portNumberSetting:(id)arg2 otherSettingsChanged:(char)arg3 needToResetMailboxURLs:(char)arg4 ;
-(id)rawEmailAddresses;
-(id)emailAliases;
-(id)smtpIdentifier;
-(void)setSMTPIdentifier:(id)arg1 ;
-(void)setDeliveryAccount:(id)arg1 ;
-(id)firstEmailAddress;
-(id)_URLPersistenceHostname;
-(id)dynamicDeliveryAccount;
-(void)setFullUserName:(id)arg1 ;
-(char)validationRequired;
-(void)setValidationRequired:(char)arg1 ;
-(id)backupID;
-(id)mailboxForRelativePath:(id)arg1 isFilesystemPath:(char)arg2 create:(char)arg3 ;
-(void)startBackgroundSynchronization;
-(char)containsMailboxes;
-(id)rootMailbox;
-(id)primaryMailbox;
-(void)fetchSynchronously;
-(id)tildeAbbreviatedPath;
-(id)syncableURLString;
-(id)junkMailboxCreateIfNeeded:(char)arg1 ;
-(id)trashMailboxCreateIfNeeded:(char)arg1 ;
-(id)sentMessagesMailboxCreateIfNeeded:(char)arg1 ;
-(id)draftsMailboxCreateIfNeeded:(char)arg1 ;
-(char)isGmailAccount;
-(id)allMailMailbox;
-(Class)storeClassForMailbox:(id)arg1 ;
-(id)notesMailbox;
-(id)todosMailbox;
-(id)_infoForMatchingURL:(id)arg1 ;
-(id)_URLForInfo:(id)arg1 ;
-(void)setConnectionError:(id)arg1 ;
-(char)resetSpecialMailboxes;
-(id)mailboxPathExtension;
-(id)inboxMailboxCreateIfNeeded:(char)arg1 ;
-(void)synchronizeAllMailboxes;
-(id)storeForMailbox:(id)arg1 ;
-(void)backgroundFetchCompleted;
-(id)allMailboxes;
-(void)didInitializeMailboxList;
-(char)_setChildren:(id)arg1 forMailbox:(id)arg2 ;
-(id)_defaultSpecialMailboxRelativePathForType:(int)arg1 ;
-(id)_specialMailboxRelativePathForType:(int)arg1 ;
-(void)_setSpecialMailboxRelativePath:(id)arg1 forType:(int)arg2 ;
-(char)_readMailboxCache;
-(id)createMailboxWithParent:(id)arg1 displayName:(id)arg2 localizedDisplayName:(id)arg3 ;
-(char)canMailboxBeRenamed:(id)arg1 ;
-(char)renameMailbox:(id)arg1 newDisplayName:(id)arg2 parent:(id)arg3 ;
-(char)canMailboxBeDeleted:(id)arg1 ;
-(char)_deleteMailbox:(id)arg1 reflectToServer:(char)arg2 ;
-(id)validNameForMailbox:(id)arg1 fromDisplayName:(id)arg2 error:(id*)arg3 ;
-(void)_setSpecialMailbox:(id)arg1 forType:(int)arg2 ;
-(char)_assignSpecialMailboxToAppropriateIvar:(id)arg1 forType:(int)arg2 ;
-(char)deleteMailbox:(id)arg1 reflectToServer:(char)arg2 ;
-(void)saveCache;
-(id)remoteTaskQueue;
-(id)_URLPersistenceScheme;
-(id)_URLInternalConnectionScheme;
-(id)_URLExternalConnectionScheme;
-(char)shouldMoveDeletedMessagesToTrash;
-(void)setShouldMoveDeletedMessagesToTrash:(char)arg1 ;
-(char)deleteConvertsStoreToFolder;
-(void)fetchSynchronouslyIsAuto:(id)arg1 ;
-(char)_supportsMailboxListInitialization;
-(void)_synchronouslyLoadListingForParent:(id)arg1 ;
-(char)supportsSlashesInMailboxName;
-(void)messageDeliveryDidFinish:(id)arg1 ;
-(id)remoteFetchQueue;
-(void)newUnreadMessagesHaveBeenReceivedInInbox;
-(void)incrementCountOfNewUnreadMessagesReceivedInInbox:(unsigned long long)arg1 ;
-(void)incrementTotalCountOfMessagesReceived:(unsigned long long)arg1 ;
-(void)_readCustomInfoFromMailboxCache:(id)arg1 ;
-(void)_writeCustomInfoToMailboxCache:(id)arg1 ;
-(void)doRoutineCleanup;
-(void)_clearAllPathBasedCachesAndDelete:(char)arg1 ;
-(char)_validateIfNeeded;
-(void)setCacheIsDirty:(char)arg1 ;
-(id)storeForMailbox:(id)arg1 createIfNeeded:(char)arg2 ;
-(void)boostExistingFetchTo:(long long)arg1 ;
-(id)archiveMailboxCreateIfNeeded:(char)arg1 ;
-(void)setArchiveMailbox:(id)arg1 ;
-(void)setDraftsMailbox:(id)arg1 ;
-(void)setJunkMailbox:(id)arg1 ;
-(void)setSentMessagesMailbox:(id)arg1 ;
-(void)setTrashMailbox:(id)arg1 ;
-(char)mailboxIsRootMailbox:(id)arg1 ;
-(id)_copyMailboxWithParent:(id)arg1 name:(id)arg2 pathComponent:(id)arg3 attributes:(unsigned long long)arg4 existingMailbox:(id)arg5 ;
-(void)_loadMailboxListingIntoCache:(id)arg1 parent:(id)arg2 addedMailboxes:(id)arg3 removedMailboxes:(id)arg4 ;
-(void)_mailboxesWereRemovedFromTree:(id)arg1 withFileSystemPaths:(id)arg2 ;
-(id)_insertMailbox:(id)arg1 intoParent:(id)arg2 withDisplayName:(id)arg3 ;
-(void)_loadEntriesFromFileSystemPath:(id)arg1 parent:(id)arg2 ;
-(id)_mailboxPathPrefix:(char)arg1 ;
-(char)_shouldLogDeleteActivity;
-(void)deleteMessagesFromMailbox:(id)arg1 olderThanNumberOfDays:(long long)arg2 ;
-(void)insertInMailboxes:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(char)storesUnseenCount;
-(void)_synchronizeMailboxListWithFileSystemBeforeImport;
-(id)allMailboxesEvenIfInactive:(char)arg1 ;
-(void)_finishSynchronizingMailboxesAfterImport;
-(id)fullUserName;
-(id)accountDirectory;
-(char)rootMailboxExists;
-(id)createMailboxWithParent:(id)arg1 name:(id)arg2 ;
-(char)shouldAutoFetch;
-(long long)emptyTrashFrequency;
-(char)supportsNormalContainerOnlyMailboxes;
-(char)synchronizesDataWithServer;
-(char)isEditableByUser;
-(char)canParticipateInRules;
-(char)providesAccountInformation;
-(char)isZeroConfiguration;
-(char)isRemoteAccount;
-(char)hasTrashMailbox;
-(char)supportsAppleScript;
-(id)mailboxes;
-(void)setEmptyTrashFrequency:(long long)arg1 ;
-(long long)emptySentMessagesFrequency;
-(void)setEmptySentMessagesFrequency:(long long)arg1 ;
-(long long)emptyJunkFrequency;
-(void)setEmptyJunkFrequency:(long long)arg1 ;
-(void)replaceInMailboxes:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)insertInMailboxes:(id)arg1 ;
-(void)removeFromMailboxesAtIndex:(unsigned long long)arg1 ;
-(char)emptyTrashOnQuit;
-(void)setEmptyTrashOnQuit:(char)arg1 ;
-(char)emptySentMessagesOnQuit;
-(void)setEmptySentMessagesOnQuit:(char)arg1 ;
-(char)emptyJunkOnQuit;
-(void)setEmptyJunkOnQuit:(char)arg1 ;
-(char)_setPath:(id)arg1 ;
-(char)cheapStoreAtPathIsEmpty:(id)arg1 ;
-(id)_outboxMailboxCreateIfNeeded:(char)arg1 ;
-(id)_specialMailboxWithType:(int)arg1 create:(char)arg2 ;
-(void)_deliveryAccountWillBeRemoved:(id)arg1 ;
-(void)_mailboxUserInfoDidChange:(id)arg1 ;
-(void)_postMailAccountsHaveChangedIfNeeded;
-(void)_synchronouslyInvalidateAndDelete:(char)arg1 ;
-(char)_usesMailboxCache;
-(void)_writeMailboxCache;
-(void)_emptySpecialMailboxesIfNeeded;
-(void)saveCacheInBackground;
-(void)_setCacheWriteTimer:(id)arg1 ;
-(void)_synchronizeMailboxListWithFileSystem;
-(char)isInitializingMailboxList;
-(void)fetchAsynchronouslyIsAuto:(char)arg1 ;
-(id)rootMailboxEvenIfInactive:(char)arg1 ;
-(char)_canEmptyMessagesFromMailbox:(id)arg1 ;
-(long long)_emptyFrequencyForKey:(id)arg1 defaultValue:(long long)arg2 ;
-(void)_setEmptyFrequency:(long long)arg1 forKey:(id)arg2 ;
-(void)_emptySpecialMailboxesIfNeededForQuit:(char)arg1 ;
-(id)_notesMailboxUnlessUsingLocal;
-(id)_todosMailboxUnlessUsingLocal;
-(void)invalidateChildrenOfMailbox:(id)arg1 ;
-(void)_resetAllMailboxURLs;
-(id)objectSpecifierForMailbox:(id)arg1 ;
-(void)_validatorFailedToAuthenticate:(id)arg1 ;
-(void)setValidator:(MCAccountSetupValidator *)arg1 ;
-(void)_synchronizeMailboxListWithFileSystemBeforeImport:(char)arg1 ;
-(char)_setChildren:(id)arg1 addedChild:(id)arg2 forMailbox:(id)arg3 ;
-(MCAccountSetupValidator *)validator;
-(void)validator:(id)arg1 didChangeState:(long long)arg2 ;
-(void)validatorDidFail:(id)arg1 ;
-(void)validatorDidFinish:(id)arg1 ;
-(id)delegateApplicationName;
-(char)isValidAccountWithError:(id)arg1 accountBeingEdited:(id)arg2 userCanOverride:(char*)arg3 ;
-(char)hasEmailAddress:(id)arg1 ;
-(id)applescriptFullUserName;
-(void)setApplescriptFullUserName:(id)arg1 ;
-(id)localizedDeliveryAccountIgnoringLockedDelivery:(char)arg1 ;
-(void)setDeliveryAccountIsLocked:(char)arg1 ;
-(id)applescriptEmailAddresses;
-(void)setApplescriptEmailAddresses:(id)arg1 ;
-(void)setShouldAutoFetch:(char)arg1 ;
-(char)disableRecentsSync;
-(void)setDisableRecentsSync:(char)arg1 ;
-(void)deleteAccount;
-(char)canAppendMessages;
-(char)canBeSynchronized;
-(void)willInitializeMailboxList;
-(char)needsChecking;
-(void)setNeedsChecking;
-(void)fetchAsynchronously;
-(char)rootChildrenCanBePromoted;
-(void)setNotesMailbox:(id)arg1 ;
-(void)setToDosMailbox:(id)arg1 ;
-(char)canMoveDeletedMessagesToTrash;
-(void)emptySpecialMailboxesThatNeedToBeEmptiedAtQuit;
-(id)displayNameForMailbox:(id)arg1 ;
-(char)canCreateNewMailboxes;
-(char)canMoveMailboxes;
-(id)connectionError;
-(id)valueInMailboxesWithName:(id)arg1 ;
-(id)objectSpecifierForMessageStore:(id)arg1 ;
-(long long)compareIAOrder:(id)arg1 ;
-(void)_fetchSynchronouslyIfNeeded;
-(id)indicesOfObjectsByEvaluatingObjectSpecifier:(id)arg1 ;
-(void)dealloc;
-(NSString *)description;
-(id)path;
-(void)setIsActive:(char)arg1 ;
-(id)objectSpecifier;
-(id)initWithPath:(id)arg1 ;
-(void)setPath:(id)arg1 ;
-(char)isValid;
-(NSString *)displayName;
-(char)fileManager:(id)arg1 shouldProceedAfterError:(id)arg2 removingItemAtPath:(id)arg3 ;
-(char)fileManager:(id)arg1 shouldProceedAfterError:(id)arg2 removingItemAtURL:(id)arg3 ;
-(id)emailAddresses;
-(void)setEmailAddresses:(id)arg1 ;
-(void)setPortNumber:(long long)arg1 ;
@end

