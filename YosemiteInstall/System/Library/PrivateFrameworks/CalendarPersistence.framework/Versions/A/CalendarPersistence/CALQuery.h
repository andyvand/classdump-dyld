/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 9:55:51 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/CalendarPersistence.framework/Versions/A/CalendarPersistence
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CalendarPersistence/CalendarPersistence-Structs.h>
#import <CalendarPersistence/NSCopying.h>

@class NSString, NSArray;

@interface CALQuery : NSObject <NSCopying> {

	NSString* _indexedString;
	NSArray* _propertyQueries;
	NSArray* _targetRepositories;
	int _entityType;
	NSString* _searchProperty;

}
+(void)initialize;
+(id)queryWithIndexedString:(id)arg1 ;
+(id)queryWithPropertyQueries:(id)arg1 ;
+(id)queryWithPropertyQuery:(id)arg1 ;
+(id)queryWithTargetRepositories:(id)arg1 ;
+(id)queryWithEntityType:(int)arg1 ;
+(id)queryWithIndexedString:(id)arg1 propertyQueries:(id)arg2 ;
+(id)queryWithIndexedString:(id)arg1 targetRepositories:(id)arg2 ;
+(id)queryWithPropertyQuery:(id)arg1 targetRepositories:(id)arg2 ;
+(id)queryWithPropertyQueries:(id)arg1 targetRepositories:(id)arg2 ;
+(id)queryWithIndexedString:(id)arg1 propertyQueries:(id)arg2 targetRepositories:(id)arg3 searchProperty:(id)arg4 ;
-(id)init;
-(void)dealloc;
-(id)description;
-(char)isEqual:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)postChangeNotification:(id)arg1 ;
-(char)isForAllRepositories;
-(id)indexedString;
-(id)searchProperty;
-(int)entityType;
-(id)propertyQueries;
-(id)targetRepositories;
-(char)targetRepositoriesEqualTo:(id)arg1 ;
-(id)initWithIndexedString:(id)arg1 propertyQueries:(id)arg2 targetRepositories:(id)arg3 searchProperty:(id)arg4 ;
-(id)initWithEntityType:(int)arg1 ;
-(id)setEntityType:(int)arg1 ;
-(id)setPropertyQueries:(id)arg1 ;
-(char)matchesPropertyQueriesOnEntity:(id)arg1 ;
-(id)initWithIndexedString:(id)arg1 ;
-(id)initWithPropertyQueries:(id)arg1 ;
-(id)initWithPropertyQuery:(id)arg1 ;
-(id)initWithTargetRepositories:(id)arg1 ;
-(id)initWithIndexedString:(id)arg1 propertyQueries:(id)arg2 ;
-(id)initWithIndexedString:(id)arg1 targetRepositories:(id)arg2 ;
-(id)initWithPropertyQuery:(id)arg1 targetRepositories:(id)arg2 ;
-(id)initWithPropertyQueries:(id)arg1 targetRepositories:(id)arg2 ;
-(id)setIndexedString:(id)arg1 ;
-(id)setPropertyQuery:(id)arg1 ;
-(id)setTargetRepositories:(id)arg1 ;
-(char)matchesRepository:(id)arg1 ;
-(char)matchesPropertyQueriesOnOccurrence:(id)arg1 ;
-(id)setSearchProperty:(id)arg1 ;
@end

