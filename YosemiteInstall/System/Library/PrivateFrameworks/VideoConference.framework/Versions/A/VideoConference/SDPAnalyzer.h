/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 9:54:02 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/VideoConference.framework/Versions/A/VideoConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class NSMutableDictionary, NSString;

@interface SDPAnalyzer : NSObject {

	NSMutableDictionary* _dict;
	NSString* _sdpUsername;

}
-(id)toString;
-(void)setMaxFramerate:(int)arg1 ;
-(void)setAutoDetectBandwidth:(char)arg1 ;
-(int)maxFramerate;
-(char)autoDetectBandwidth;
-(char)hasAudioCodec:(int)arg1 withPeerSDP:(id)arg2 ;
-(char)hasVideoCodec:(int)arg1 withPeerSDP:(id)arg2 ;
-(char)irisOpen;
-(id)initWithViceroyDefaultsUsingZeroes:(char)arg1 ;
-(void)setSDP:(id)arg1 ;
-(id)audioMedia;
-(id)videoMedia;
-(char)useIChatEncryption;
-(id)toStringForVersion:(unsigned)arg1 ;
-(void)buildRTPMap;
-(int)audioPort;
-(int)videoPort;
-(id)hardwareInfo;
-(int)maxImagesize;
-(void)setMaxBandwidth:(int)arg1 ;
-(id)sessionName;
-(void)setSessionName:(id)arg1 ;
-(void)setHardwareInfo:(id)arg1 ;
-(void)appendVideoAttribute:(id)arg1 ;
-(id)payloadString:(int)arg1 isAudio:(char)arg2 ;
-(id)RTPMapString:(int)arg1 isAudio:(char)arg2 ;
-(void)setAudioMediaWithArray:(id)arg1 andAttributesWithArray:(id)arg2 ;
-(char)hasViceroyCompatibleAudioCodec;
-(char)hasAudioCodec:(int)arg1 ;
-(void)setAudioRTPID:(unsigned long long)arg1 ;
-(char)hasViceroyCompatibleVideoCodec;
-(void)setVideoMediaWithArray:(id)arg1 andAttributesWithArray:(id)arg2 ;
-(char)hasVideoCodec:(int)arg1 ;
-(int)rulesFramerate:(int)arg1 ;
-(void)rulesImageSize:(int)arg1 pWidth:(int*)arg2 pHeight:(int*)arg3 ;
-(void)rulesPeerImageSize:(int)arg1 pWidth:(int*)arg2 pHeight:(int*)arg3 ;
-(int)payload:(int)arg1 isAudio:(char)arg2 ;
-(void)setMaxImageSize:(int)arg1 forPayloadType:(int)arg2 ;
-(void)setVideoRTPID:(unsigned long long)arg1 ;
-(void)updateVideoAttributePrefix:(id)arg1 withAppendedValue:(id)arg2 ;
-(int)addressTypeAudio;
-(const char*)ipAudio;
-(int)addressTypeVideo;
-(const char*)ipVideo;
-(int)audioRTCPPort;
-(int)videoRTCPPort;
-(int)maxBandwidth;
-(const char*)ip;
-(id)defaultAudioPayloads:(char)arg1 withUserCount:(int)arg2 ;
-(id)defaultAudioPayloads;
-(id)defaultAudioPayloads:(char)arg1 ;
-(id)SDPUsername;
-(void)resetSDP;
-(void)setOriginWithArray:(id)arg1 ;
-(void)setConnectionWithArray:(id)arg1 ;
-(id)generateVideoMediaArray:(char)arg1 ;
-(id)generateVideoMediaAttributesArray:(char)arg1 ;
-(void)setBandwidthWithString:(id)arg1 ;
-(id)initWithViceroyDefaultsUsingZeroes:(char)arg1 forAudioOnly:(char)arg2 withUserCount:(int)arg3 ;
-(id)sessionString;
-(id)audioStringForVersion:(unsigned)arg1 ;
-(id)videoStringForVersion:(unsigned)arg1 ;
-(id)dataStringForVersion:(unsigned)arg1 ;
-(void)setMediaWithArrayHelper:(id)arg1 mediaArray:(id)arg2 attributesArray:(id)arg3 ;
-(int)addressTypeForConnection:(id)arg1 ;
-(id)videoMediaConnection;
-(id)audioMediaConnection;
-(id)videoMediaAttributes;
-(id)initWithViceroyDefaultsUsingZeroes:(char)arg1 forAudioOnly:(char)arg2 ;
-(id)bandwidth;
-(void)setDataMediaWithArray:(id)arg1 andAttributesWithArray:(id)arg2 ;
-(id)dataMedia;
-(id)audioMediaAttributes;
-(id)dataMediaAttributes;
-(id)sessionAttributes;
-(void)appendAudioAttribute:(id)arg1 ;
-(void)appendSessionAttribute:(id)arg1 ;
-(int)portForMediaHelper:(id)arg1 ;
-(const char*)ipFromConnection:(id)arg1 ;
-(int)dataPort;
-(int)dataRTCPPort;
-(char*)srtpKey;
-(char*)srtpSalt;
-(void)setUseIChatEncryption:(char)arg1 ;
-(unsigned long long)audioRTPID;
-(unsigned long long)videoRTPID;
-(char)hasPureVoice;
-(char)hasH263;
-(void)setMultiPointFlagWithCount:(int)arg1 ;
-(char)hasMultiPointFlag:(int*)arg1 ;
-(id)connection;
-(int)addressType;
-(id)init;
-(void)dealloc;
-(id)initWithString:(id)arg1 ;
-(id)origin;
-(const char*)userName;
@end

