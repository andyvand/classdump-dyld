/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 9:54:22 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol QTImageConsumerDelegateHelper;
#import <QTKit/QTKit-Structs.h>
@class QTCALayerRenderer, QTImageBufferQueue, NSMutableDictionary, QTImageBufferConformer, QTOpenGLContext, CIContext;

@interface QTCAImageQueueBoss : NSObject {

	CAImageQueueRef _caImageQueue;
	QTCALayerRenderer* _renderer;
	char _hasCARenderingContext;
	QTImageBufferQueue* _enqueuedImages;
	int _enqueuedImagesLock;
	NSMutableDictionary* _requiredAttributes;
	QTImageBufferConformer* _imageBufferConformer;
	CFDictionaryRef _pixelBufferRegistrationDictionary;
	int _pixelBufferRegistrationDictionaryLock;
	int _caImageQueueLock;
	QTOpenGLContext* _glContext;
	CVOpenGLBufferPoolRef _bufferPool;
	CIContext* _filterContext;
	id<QTImageConsumerDelegateHelper> _qtImageConsumerDelegate;
	int _qtImageConsumerDelegateLock;

}
+(void)initialize;
-(unsigned long long)collect;
-(void)_setImageConsumerDelegateHelper:(id)arg1 ;
-(void)setHasCARenderingContext:(char)arg1 ;
-(void)setImageBuffer:(CVBufferRef)arg1 forHostTime:(unsigned long long)arg2 ;
-(unsigned long long)shadowQueueOccupancy;
-(CAImageQueueRef)coreAnimationImageQueue;
-(unsigned long long)nextHostTime;
-(unsigned long long)collectNoLock;
-(char)_insertImageBuffer:(CVBufferRef)arg1 forHostTime:(double)arg2 withFlags:(unsigned)arg3 callback:(/*function pointer*/void*)arg4 userInfo:(id)arg5 ;
-(CVBufferRef)_copyPreparedImageBufferForImageBuffer:(CVBufferRef)arg1 ;
-(unsigned long long)_getPixelBufferID:(CVBufferRef)arg1 ;
-(char)hasRenderingContext;
-(unsigned long long)unconsumedCount;
-(char)isDrained;
-(char)isCAImageQueueDrained;
-(unsigned long long)nextHostTimeInCAImageQueue;
-(unsigned long long)latestTimeSampled;
-(unsigned long long)lowWaterHostTime;
-(void)flushImageBuffersAfterHostTime:(unsigned long long)arg1 surplusImages:(id*)arg2 ;
-(void)_pixelBufferBackingWillDeallocate:(void*)arg1 ;
-(id)_imageConsumerDelegateHelper;
-(id)_resolvedGLContext;
-(CVOpenGLBufferPoolRef)_bufferPoolOfWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 ;
-(id)init;
-(void)finalize;
-(void)dealloc;
-(unsigned long long)capacity;
-(void)setOwner:(id)arg1 ;
-(unsigned)displayMask;
-(void)tearDown;
@end

