/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 9:54:57 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <AppKit/NSCopying.h>
#import <AppKit/NSCoding.h>

@class NSString, NSDictionary;

@interface NSPrinter : NSObject <NSCopying, NSCoding> {

	NSString* _printerName;
	void* _printer;
	NSDictionary* _cachedDeviceDescription;
	int _ppdCreationNum;
	void* _ppdNodes;
	void* _ppdPriv;
	id _reserved[3];

}

@property (copy,readonly) NSString * name; 
@property (copy,readonly) NSString * type; 
@property (readonly) long long languageLevel; 
@property (copy,readonly) NSDictionary * deviceDescription; 
+(id)_printerForPrinter:(OpaquePMPrinterRef)arg1 ;
+(id)printerWithName:(id)arg1 ;
+(id)printerNames;
+(id)printerTypes;
+(id)printerWithType:(id)arg1 ;
+(void)_flushCachedCarbonPrintersByName;
+(id)printerWithName:(id)arg1 domain:(id)arg2 includeUnavailable:(char)arg3 ;
-(id)init;
-(void)finalize;
-(void)dealloc;
-(id)description;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(NSString *)name;
-(id)copyWithZone:(NSZone*)arg1 ;
-(NSString *)type;
-(id)domain;
-(NSDictionary *)deviceDescription;
-(id)processKeyword:(char*)arg1 option:(char*)arg2 keyTran:(char*)arg3 arg:(char*)arg4 argTran:(char*)arg5 ;
-(OpaquePMPrinterRef)_printer;
-(id)_compatibility_initWithUnkeyedCoder:(id)arg1 ;
-(CGSize)pageSizeForPaper:(id)arg1 ;
-(id)_initWithName:(id)arg1 printer:(OpaquePMPrinterRef)arg2 ;
-(void)_deallocatePPDStuff;
-(CGSize)sizeForKey:(id)arg1 inTable:(id)arg2 ;
-(SCD_Struct_NS73*)_getNodeForKey:(id)arg1 inTable:(id)arg2 ;
-(id)stringForKey:(id)arg1 inTable:(id)arg2 ;
-(id)_keyListForKeyNode:(SCD_Struct_NS73*)arg1 ;
-(long long)languageLevel;
-(unsigned long long)statusForTable:(id)arg1 ;
-(char)isKey:(id)arg1 inTable:(id)arg2 ;
-(char)booleanForKey:(id)arg1 inTable:(id)arg2 ;
-(float)floatForKey:(id)arg1 inTable:(id)arg2 ;
-(int)intForKey:(id)arg1 inTable:(id)arg2 ;
-(CGRect)rectForKey:(id)arg1 inTable:(id)arg2 ;
-(id)stringListForKey:(id)arg1 inTable:(id)arg2 ;
-(CGRect)imageRectForPaper:(id)arg1 ;
-(char)acceptsBinary;
-(char)isColor;
-(char)isFontAvailable:(id)arg1 ;
-(char)isOutputStackInReverseOrder;
-(id)host;
-(id)note;
-(SCD_Struct_NS73*)_newNode:(long long)arg1 ;
-(id)_freeNode:(SCD_Struct_NS73*)arg1 ;
-(char*)_allocString:(const char*)arg1 ;
-(id)_makeRootNode;
-(SCD_Struct_NS73*)_makeTable:(const char*)arg1 inNode:(SCD_Struct_NS73*)arg2 ;
-(id)_freeNodes;
-(void)_allocatePPDStuffAndParse;
-(id)_appendStringInKeyNode:(SCD_Struct_NS73*)arg1 key:(const char*)arg2 value:(const char*)arg3 ;
-(SCD_Struct_NS73*)_makeKeyNode:(const char*)arg1 inKeyNode:(SCD_Struct_NS73*)arg2 ;
-(id)_appendKey:(const char*)arg1 option:(const char*)arg2 value:(const char*)arg3 inKeyNode:(SCD_Struct_NS73*)arg4 ;
-(id)_setOrderDependency:(char*)arg1 ;
-(id)_setUIConstraints:(char*)arg1 ;
@end

