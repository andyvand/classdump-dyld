/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 9:55:05 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <AppKit/NSView.h>

@class NSToolbarItem, NSToolbarView, NSMutableArray;

@interface NSToolbarItemViewer : NSView {

	NSToolbarItem* _item;
	NSToolbarView* _toolbarView;
	NSMutableArray* _labelViews;
	CGRect _labelRect;
	double _labelHeight;
	CGSize _maxViewerSize;
	CGSize _minViewerSize;
	CGRect _minIconFrame;
	CGRect _minLabelFrame;
	NSToolbarMotion* _motion;
	double _xOriginForLayout;
	double _iconWidthForLayout;
	double _forcibleFrameWidthForLayout;
	struct {
		unsigned drawsIconPart : 1;
		unsigned drawsLabelPart : 1;
		unsigned iconAreaIncludesLabelArea : 1;
		unsigned transparentBackground : 1;
		unsigned labelOnlyShowsAsPopupMenu : 1;
		unsigned inMotion : 1;
		unsigned inRecursiveDisplay : 1;
		unsigned RESERVED1 : 1;
		unsigned needsViewerLayout : 1;
		unsigned needsModeConfiguration : 1;
		unsigned inPaletteView : 1;
		unsigned returnFocusToWindowAfterClick : 1;
		unsigned needsInitialAutovalidation : 1;
		unsigned needsRedrawForChangeInActiveState : 1;
		unsigned watchingBackgroundChangedNotification : 1;
		unsigned accessibilityAddedDescriptionToSubelements : 1;
		unsigned UNUSED : 16;
	}  _tbivFlags;

}

@property (assign,nonatomic) double xOriginForLayout;                         //@synthesize xOriginForLayout=_xOriginForLayout - In the implementation block
@property (assign,nonatomic) double iconWidthForLayout;                       //@synthesize iconWidthForLayout=_iconWidthForLayout - In the implementation block
@property (assign,nonatomic) double forcibleFrameWidthForLayout;              //@synthesize forcibleFrameWidthForLayout=_forcibleFrameWidthForLayout - In the implementation block
-(void)dealloc;
-(id)description;
-(void)setLayer:(id)arg1 ;
-(id)accessibilityHitTest:(CGPoint)arg1 ;
-(char)accessibilityIsIgnored;
-(id)_toolbarView;
-(void)drawRect:(CGRect)arg1 ;
-(id)accessibilityAttributeNames;
-(id)accessibilityActionDescription:(id)arg1 ;
-(id)accessibilityRoleAttribute;
-(char)accessibilityIsFocusedAttributeSettable;
-(void)accessibilitySetFocusedAttribute:(id)arg1 ;
-(id)accessibilityActionNames;
-(void)accessibilityPerformAction:(id)arg1 ;
-(id)accessibilityDescriptionAttribute;
-(char)accessibilityIsDescriptionAttributeSettable;
-(id)accessibilityEnabledAttribute;
-(char)accessibilityIsEnabledAttributeSettable;
-(id)accessibilityChildrenAttribute;
-(void)performClick:(id)arg1 ;
-(void)setFrameOrigin:(CGPoint)arg1 ;
-(void)setNeedsDisplay:(char)arg1 ;
-(void)updateLayer;
-(id)hitTest:(CGPoint)arg1 ;
-(void)becomeKeyWindow;
-(void)resignKeyWindow;
-(id)accessibilityTitleAttribute;
-(char)accessibilityIsTitleAttributeSettable;
-(void)setFrameSize:(CGSize)arg1 ;
-(void)viewWillDraw;
-(char)isOpaque;
-(char)preservesContentDuringLiveResize;
-(char)_shouldDrawFocus;
-(void)_windowChangedKeyState;
-(char)acceptsFirstResponder;
-(void)moveRight:(id)arg1 ;
-(void)moveLeft:(id)arg1 ;
-(char)resignFirstResponder;
-(CGSize)maxSize;
-(void)_recursiveDisplayAllDirtyWithLockFocus:(char)arg1 visRect:(CGRect)arg2 ;
-(char)acceptsFirstMouse:(id)arg1 ;
-(char)becomeFirstResponder;
-(char)needsPanelToBecomeKey;
-(void)viewDidMoveToWindow;
-(void)mouseDown:(id)arg1 ;
-(id)_backgroundColorForFontSmoothing;
-(id)accessibilityValueAttribute;
-(char)accessibilityIsValueAttributeSettable;
-(void)_accessibilityShowMenu:(id)arg1 ;
-(char)mouseDownCanMoveWindow;
-(void)mouseUp:(id)arg1 ;
-(void)viewWillMoveToWindow:(id)arg1 ;
-(void)drawFocusRingMask;
-(CGRect)focusRingMaskBounds;
-(id)_accessibilityParentAdjustedHitTestElement:(id)arg1 atLocation:(id)arg2 ;
-(id)_accessibilityParentAdjustedFocusedUIElement:(id)arg1 ;
-(id)item;
-(CGPoint)destination;
-(char)_wantsLiveResizeToUseCachedImage;
-(void)_captureVisibleIntoLiveResizeCache;
-(CGSRegionObjectRef)_regionForOpaqueDescendants:(CGRect)arg1 forMove:(char)arg2 forUnderTitlebar:(char)arg3 ;
-(const _NSToolbarMetrics*)_metrics;
-(void)_noteToolbarSizeModeChanged;
-(Class)_classToCheckForWantsUpdateLayer;
-(void)_itemLayoutChanged;
-(void)_setToolbarItem:(id)arg1 ;
-(void)_itemEnabledStateChanged;
-(void)_itemChangedLabelOrPaletteLabel;
-(void)_itemChangedToolTip;
-(void)_menuFormRepresentationChanged;
-(char)_isPartitionItem;
-(void)_itemChanged;
-(id)_initialLabelViewToSelectFromDirection:(long long)arg1 ;
-(void)_simulateClickInLabelView:(id)arg1 deferringPopUpsForAccessibility:(char)arg2 ;
-(char)_allowsIndividualLabelViewSelection;
-(char)_shouldDrawSelectionIndicator;
-(long long)_backgroundStyleForLabelCell:(id)arg1 ;
-(id)_labelFont;
-(Class)labelViewClass;
-(void)_setNeedsModeConfiguration:(char)arg1 ;
-(void)_recomputeLabelHeight;
-(void)_updateLabelViewByLabelRect;
-(void)_teardownMotionData;
-(void)_updateLabelViewByLabelRectInWindow:(id)arg1 ;
-(void)_setLabelViewCount:(unsigned long long)arg1 ;
-(double)_widthRequiredForLabelLayout;
-(CGAffineTransform)_getPixelAligningTransformForLayout;
-(void)_configureLabelCellStringValue;
-(void)_computeLayoutInfoForIconViewSize:(CGSize)arg1 frameSize:(CGSize*)arg2 iconFrame:(CGRect*)arg3 labelFrame:(CGRect*)arg4 ;
-(char)_needsModeConfiguration;
-(void)_accessibilityConfigureToolbarItem;
-(void)layoutToFitInMinimumIconSizeInWindow:(id)arg1 ;
-(void)_invalidateLabelViewsWhenLayerBacked:(id)arg1 ;
-(void)_watchBackgroundGradientNotification;
-(void)_stopWatchingBackgroundGradientNotification;
-(void)layoutToFitInIconWidth:(double)arg1 ;
-(char)isInMotion;
-(char)_isSizedSmallerThanMinWidth;
-(char)_hasImageCache;
-(void)_captureVisibleIntoImageCache;
-(void)_drawWithImageCache;
-(char)_useLeopardToolbarSelectionHighlight;
-(char)_useSquareToolbarSelectionHighlight;
-(void)_drawSelectionIndicatorInRect:(CGRect)arg1 clipRect:(CGRect)arg2 ;
-(void)_updateEnableStateOfLabelViews;
-(void)drawSelectionIndicatorInRect:(CGRect)arg1 ;
-(id)_firstLabelView;
-(char)_reallyShouldDrawFocusAroundLabel;
-(char)_supportsSimultaneousSegmentAndLabelTrackingWithEvent:(id)arg1 segment:(long long*)arg2 ;
-(void)_setHighlighted:(char)arg1 pieces:(unsigned long long)arg2 forItemAtIndex:(unsigned long long)arg3 displayNow:(char)arg4 ;
-(char)_acceptsFirstResponderInItem:(id)arg1 ;
-(char)_labelViewIsSelectable:(id)arg1 ;
-(id)_labelViewToSelectInDirection:(long long)arg1 ;
-(void)_selectLabelView:(id)arg1 ;
-(char)_shouldPreventCustomViewFromDraggingWindow:(id)arg1 ;
-(void)_popUpMenuFormRepresentationInLabelView:(id)arg1 ;
-(void)trackMouseForPopupMenuFormRepresentation:(id)arg1 forItem:(id)arg2 forLabelView:(id)arg3 ;
-(void)_segmentedControlDidChangeHighlightDuringTracking:(id)arg1 ;
-(char)_shouldMinimizeWindowForEvent:(id)arg1 ;
-(char)_simultaneousSegmentAndLabelTrackingWithEvent:(id)arg1 forSegmentAtIndex:(long long)arg2 withLabelRect:(CGRect)arg3 ;
-(void)_setNeedsViewerLayout:(char)arg1 ;
-(char)_needsViewerLayout;
-(id)initWithItem:(id)arg1 forToolbarView:(id)arg2 ;
-(void)_clearToolbarView;
-(void)setTransparentBackground:(char)arg1 ;
-(char)transparentBackground;
-(char)_itemCanBeDraggedInTemporaryEditingModeFromPoint:(CGPoint)arg1 ;
-(void)configureForLayoutInDisplayMode:(unsigned long long)arg1 andSizeMode:(unsigned long long)arg2 inToolbarView:(id)arg3 ;
-(void)layoutToFitInMinimumIconSize;
-(void)layoutToFitInViewerFrameHeight:(double)arg1 ;
-(double)frameWidthForIconWidth:(double)arg1 ;
-(CGSize)minViewerSize;
-(CGSize)minIconSize;
-(void)setDestinationRect:(CGRect)arg1 targetIconWidth:(double)arg2 travelTimeInSeconds:(double)arg3 ;
-(void)stepTowardsDestinationWithCurrentTime:(double)arg1 ;
-(void)_startInsertionOptimization;
-(void)_endInsertionOptimization;
-(void)_setHighlighted:(char)arg1 displayNow:(char)arg2 ;
-(double)_spaceRequiredToSatisfySplitViewTrackingForMinimumLeftOrigin:(CGPoint)arg1 inWindow:(id)arg2 ;
-(void)labelOnlyMenuDidSendActionNotification:(id)arg1 ;
-(void)trackMouseForPopupMenuFormRepresentation:(id)arg1 ;
-(void)_beginToolbarEditingMode;
-(void)_endToolbarEditingMode;
-(char)_heightIsFlexible;
-(char)_widthIsFlexible;
-(char)_labelOnlyShowsAsPopupMenu;
-(long long)_itemVisibilityPriority;
-(double)xOriginForLayout;
-(void)setXOriginForLayout:(double)arg1 ;
-(double)iconWidthForLayout;
-(void)setIconWidthForLayout:(double)arg1 ;
-(double)forcibleFrameWidthForLayout;
-(void)setForcibleFrameWidthForLayout:(double)arg1 ;
-(long long)_accessibilityToolbarItemViewerConfiguration;
-(Class)_accessibilityToolbarItemViewerHelperClass;
-(id)_accessibilityToolbarItemLabel;
-(id)_accessibilityTitleElement;
-(id)_accessibilityToolbarItemLabelAtIndex:(unsigned long long)arg1 ;
-(id)_accessibilityLabelElements;
-(char)element:(id)arg1 hasOverriddenAttribute:(id)arg2 ;
-(void)_accessibilityConfigureViewItemToolbarItem;
-(char)_accessibilityIsInCustomizationSheet;
-(char)_accessibilityTreatSegmentedControlAsToolbarButtons:(id)arg1 ;
-(char)_accessibilityTreatButtonAsToolbarButton:(id)arg1 ;
-(char)_accessibilityIsSpaceOrSeparatorItem;
-(char)_accessibilityIsCommonToolbarButtonItem;
@end

