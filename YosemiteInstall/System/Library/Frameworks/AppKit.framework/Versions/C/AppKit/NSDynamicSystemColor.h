/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 9:54:51 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <AppKit/NSCatalogColor.h>

@interface NSDynamicSystemColor : NSCatalogColor
+(void)initialize;
+(void)recacheAllColors:(id)arg1 ;
+(id)labelColor;
+(id)controlShadowColor;
+(id)controlColor;
+(id)controlLightHighlightColor;
+(id)textColor;
+(id)controlTextColor;
+(id)quaternaryLabelColor;
+(id)secondaryLabelColor;
+(id)controlBackgroundColor;
+(id)alternateSelectedControlColor;
+(id)selectedControlColor;
+(id)secondarySelectedControlColor;
+(id)disabledControlTextColor;
+(id)controlDarkShadowColor;
+(id)_alternateDisabledSelectedControlTextColor;
+(id)tertiaryLabelColor;
+(id)alternateSelectedControlTextColor;
+(id)textBackgroundColor;
+(id)selectedControlTextColor;
+(id)windowFrameTextColor;
+(id)selectedTextBackgroundColor;
+(id)selectedTextColor;
+(id)placeholderTextColor;
+(id)controlAlternatingRowColor;
+(id)selectedMenuItemColor;
+(id)selectedMenuItemTextColor;
+(id)highlightColor;
+(id)shadowColor;
+(id)blueControlTintColor;
+(id)graphiteControlTintColor;
+(id)clearControlTintColor;
+(id)controlHighlightColor;
+(id)scrollBarColor;
+(id)gridColor;
+(id)toolTipColor;
+(id)toolTipTextColor;
+(id)knobColor;
+(id)selectedKnobColor;
+(id)windowFrameColor;
+(id)keyboardFocusIndicatorColor;
+(id)progressIndicatorColor;
+(id)headerColor;
+(id)headerTextColor;
+(id)windowBackgroundColor;
+(id)alternateSecondarySelectedControlColor;
+(id)toolbarBackgroundColor;
+(id)systemRedColor;
+(id)systemGreenColor;
+(id)systemBlueColor;
+(id)systemOrangeColor;
+(id)systemYellowColor;
+(id)systemBrownColor;
+(id)systemPinkColor;
+(id)systemPurpleColor;
+(id)systemGrayColor;
+(id)alternateSelectionBlueColor;
+(id)alternateSelectionGraphiteColor;
+(id)linkColor;
+(id)springLoadedOverlayColor;
-(oneway void)release;
-(id)retain;
-(id)autorelease;
-(void)dealloc;
-(void)encodeWithCoder:(id)arg1 ;
-(unsigned long long)retainCount;
-(void)set;
-(CGColorRef)CGColor;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setFill;
-(void)setStroke;
-(id)initWithSelector:(SEL)arg1 ;
-(id)colorUsingColorSpaceName:(id)arg1 device:(id)arg2 ;
-(id)colorUsingColorSpace:(id)arg1 ;
-(char)allowsWeakReference;
-(char)retainWeakReference;
-(void)recacheColor;
-(id)appearanceBasedColor:(id)arg1 ;
@end

