/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 9:57:33 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CoreWLAN/CoreWLAN-Structs.h>
#import <CoreWLAN/NSCopying.h>
#import <CoreWLAN/NSSecureCoding.h>

@class NSDictionary, NSData, NSString, CWChannel;

@interface CWNetwork : NSObject <NSCopying, NSSecureCoding> {

	NSDictionary* _scanRecord;

}

@property (readonly) char supportsEasyConnect; 
@property (readonly) char supportsWPS; 
@property (copy,readonly) NSDictionary * scanRecord; 
@property (readonly) unsigned long long securityType; 
@property (readonly) unsigned long long physicalLayerMode; 
@property (readonly) NSData * bssidData; 
@property (readonly) char isPersonalHotspot; 
@property (readonly) char isPasspoint; 
@property (readonly) long long anqpDomainID; 
@property (readonly) char hasInterworkingIE; 
@property (readonly) long long accessNetworkType; 
@property (readonly) char hasInternet; 
@property (readonly) char isAdditionalStepRequiredForAccess; 
@property (readonly) char isEmergencyServicesReachable; 
@property (readonly) char isUnauthenticatedEmergencyServiceAccessible; 
@property (readonly) long long venueGroup; 
@property (readonly) long long venueType; 
@property (copy,readonly) NSString * hessid; 
@property (readonly) long long aggregateRSSI; 
@property (readonly) NSString * ssid; 
@property (readonly) NSData * ssidData; 
@property (readonly) NSString * bssid; 
@property (readonly) CWChannel * wlanChannel; 
@property (readonly) long long rssiValue; 
@property (readonly) long long noiseMeasurement; 
@property (readonly) NSData * informationElementData; 
@property (readonly) NSString * countryCode; 
@property (readonly) long long beaconInterval; 
@property (readonly) char ibss; 
@property (copy) NSDictionary * scanRecord;                                         //@synthesize scanRecord=_scanRecord - In the implementation block
+(id)sortNetworksByName:(id)arg1 ;
+(id)sortNetworksBySignal:(id)arg1 ;
+(id)sortNetworksByChannel:(id)arg1 ;
+(id)groupNetworksByMode:(id)arg1 ;
+(id)groupNetworksBySecurityType:(id)arg1 ;
+(id)groupNetworksBySignalStrength:(id)arg1 ;
+(id)groupNetworksByBand:(id)arg1 ;
+(id)groupNetworksByName:(id)arg1 ;
+(int)barsForSignal:(int)arg1 ;
+(int)barsForTransmitRate:(int)arg1 maxTransmitRate:(int)arg2 ;
+(int)barsForMappedTransmitRate:(int)arg1 ;
+(int)barsForScanRecord:(id)arg1 ;
+(id)barsInMenuImageName:(int)arg1 ;
+(id)barsImageName:(int)arg1 ;
+(id)organizeNetworks:(id)arg1 intoGroups:(id)arg2 sortedBy:(id)arg3 ;
+(id)sectionTitlesForGroup:(id)arg1 ;
+(id)filterNetworksForEvilTwins:(id)arg1 ;
+(id)filterNetworks:(id)arg1 includingNameSubstring:(id)arg2 ;
+(id)filterNetworks:(id)arg1 excludingNameSubstring:(id)arg2 ;
+(int)barsForSignal:(int)arg1 transmitRate:(int)arg2 maxTransmitRate:(int)arg3 ;
+(int)barsForRSSI:(int)arg1 ;
+(id)defaultSortDescriptors;
+(char)supportsSecureCoding;
-(id)info;
-(char)isSecure;
-(int)bars;
-(char)canSolicitWPS;
-(id)modeString;
-(id)securityString;
-(char)isEnterprise;
-(id)signalInMenuIcon;
-(id)signalIcon;
-(id)lockIcon;
-(char)isSameNetwork:(id)arg1 ;
-(char)isPassword;
-(char)isWPS;
-(char)isInfrastructure;
-(char)isAdHoc;
-(void)rememberEnterpriseUsername:(id)arg1 password:(id)arg2 identity:(id)arg3 ;
-(void)rememberNetworkPassword:(id)arg1 ;
-(void)updateProfileForInterface:(id)arg1 ;
-(char)isOpen;
-(id)channel;
-(char)isPasspoint;
-(id)securityMode;
-(CWChannel *)wlanChannel;
-(NSString *)hessid;
-(unsigned long long)physicalLayerMode;
-(char)ibss;
-(char)isEqualToNetwork:(id)arg1 ;
-(NSDictionary *)scanRecord;
-(id)initWithScanRecord:(id)arg1 ;
-(long long)noiseMeasurement;
-(char)supportsSecurity:(long long)arg1 ;
-(char)supportsPHYMode:(long long)arg1 ;
-(void)setScanRecord:(NSDictionary *)arg1 ;
-(id)unconfiguredBaseStationName:(unsigned char)arg1 ;
-(char)supportsEasyConnect;
-(char)supportsWPS;
-(NSData *)bssidData;
-(char)isPersonalHotspot;
-(long long)anqpDomainID;
-(char)hasInterworkingIE;
-(long long)accessNetworkType;
-(char)hasInternet;
-(char)isAdditionalStepRequiredForAccess;
-(char)isEmergencyServicesReachable;
-(char)isUnauthenticatedEmergencyServiceAccessible;
-(long long)venueGroup;
-(long long)venueType;
-(char)isUnconfiguredBaseStation:(id*)arg1 ;
-(char)isUnconfiguredAccessory;
-(char)isUnconfiguredAirPlayAccessory;
-(char)isUnconfiguredAirPrintAccessory;
-(id)accessoryFriendlyName;
-(char)isAppleSWAP;
-(long long)aggregateRSSI;
-(id)phyMode;
-(id)ieData;
-(id)wirelessProfile;
-(id)noise;
-(long long)beaconInterval;
-(char)isIBSS;
-(id)rssi;
-(NSString *)countryCode;
-(NSString *)bssid;
-(NSData *)informationElementData;
-(NSString *)ssid;
-(long long)rssiValue;
-(NSData *)ssidData;
-(unsigned long long)securityType;
-(void)dealloc;
-(id)description;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(char)isEqual:(id)arg1 ;
-(char)conformsToProtocol:(id)arg1 ;
-(unsigned long long)hash;
-(id)copyWithZone:(NSZone*)arg1 ;
@end

