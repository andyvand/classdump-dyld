/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 9:54:19 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/AddressBook.framework/Versions/A/AddressBook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

typedef struct __CFString* CFStringRef;

typedef struct _NSZone* NSZoneRef;

typedef struct {
	unsigned long long field1;
	id field2;
	unsigned long long field3;
	unsigned long long field4[5];
} SCD_Struct_AB2;

typedef const struct __SCDynamicStore* SCDynamicStoreRef;

typedef struct NSRange {
	unsigned long long location;
	unsigned long long length;
} NSRange;

typedef struct CGSize {
	double width;
	double height;
} CGSize;

typedef struct CGPoint {
	double x;
	double y;
} CGPoint;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct _CFHTTPAuthentication* CFHTTPAuthenticationRef;

typedef struct __CFHTTPMessage* CFHTTPMessageRef;

typedef struct __CFXMLParser* CFXMLParserRef;

typedef struct __CFDictionary* CFDictionaryRef;

typedef struct {
	BOOL field1;
	BOOL field2;
	BOOL field3;
	BOOL field4;
} SCD_Struct_AB12;

typedef struct OpaqueSecAccessRef* OpaqueSecAccessRefRef;

typedef struct {
	long long version;
	/*function pointer*/void* property;
	/*function pointer*/void* title;
	/*function pointer*/void* enabled;
	/*function pointer*/void* selected;
} SCD_Struct_AB14;

typedef struct dispatch_queue_s* dispatch_queue_sRef;

typedef struct __DDScanner* DDScannerRef;

typedef struct __CFArray* CFArrayRef;

typedef struct __MDItem* MDItemRef;

typedef struct dispatch_queue_attr_s* dispatch_queue_attr_sRef;

typedef struct UCollator* UCollatorRef;

typedef struct dispatch_semaphore_s* dispatch_semaphore_sRef;

typedef struct __SecTrust* SecTrustRef;

typedef struct __asl_object_s* asl_object_sRef;

typedef struct {
	id object;
	long long onceToken;
} SCD_Struct_AB24;

typedef struct dispatch_source_s* dispatch_source_sRef;

typedef struct _xpc_activity_s* xpc_activity_sRef;

