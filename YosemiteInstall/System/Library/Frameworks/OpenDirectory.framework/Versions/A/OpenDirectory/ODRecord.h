/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 9:52:39 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <OpenDirectory/OpenDirectory-Structs.h>
@class NSString;

@interface ODRecord : NSObject

@property (nonatomic,copy,readonly) NSString * recordType; 
@property (nonatomic,copy,readonly) NSString * recordName; 
@property (readonly) long long secondsUntilPasswordExpires; 
@property (readonly) long long secondsUntilAuthenticationsExpire; 
+(char)accessInstanceVariablesDirectly;
-(NSString *)recordType;
-(id)valuesForAttribute:(id)arg1 error:(id*)arg2 ;
-(id)recordDetailsForAttributes:(id)arg1 error:(id*)arg2 ;
-(char)verifyPassword:(id)arg1 error:(id*)arg2 ;
-(unsigned long long)_cfTypeID;
-(NSString *)recordName;
-(char)isMemberRecord:(id)arg1 error:(id*)arg2 ;
-(char)setValue:(id)arg1 forAttribute:(id)arg2 error:(id*)arg3 ;
-(char)removeValuesForAttribute:(id)arg1 error:(id*)arg2 ;
-(char)deleteRecordAndReturnError:(id*)arg1 ;
-(char)changePassword:(id)arg1 toPassword:(id)arg2 error:(id*)arg3 ;
-(char)synchronizeAndReturnError:(id*)arg1 ;
-(id)description;
-(id)valueForUndefinedKey:(id)arg1 ;
-(id)policiesAndReturnError:(id*)arg1 ;
-(id)supportedPoliciesAndReturnError:(id*)arg1 ;
-(char)setPolicies:(id)arg1 error:(id*)arg2 ;
-(char)setPolicy:(CFStringRef)arg1 value:(id)arg2 error:(id*)arg3 ;
-(char)removePolicy:(CFStringRef)arg1 error:(id*)arg2 ;
-(char)addAccountPolicy:(id)arg1 toCategory:(id)arg2 error:(id*)arg3 ;
-(char)removeAccountPolicy:(id)arg1 fromCategory:(id)arg2 error:(id*)arg3 ;
-(char)setAccountPolicies:(id)arg1 error:(id*)arg2 ;
-(id)accountPoliciesAndReturnError:(id*)arg1 ;
-(ODRecordRef)__getODRecordRef;
-(id)effectivePoliciesAndReturnError:(id*)arg1 ;
-(char)setNodeCredentials:(id)arg1 password:(id)arg2 error:(id*)arg3 ;
-(char)setNodeCredentialsWithRecordType:(id)arg1 authenticationType:(id)arg2 authenticationItems:(id)arg3 continueItems:(id*)arg4 context:(id*)arg5 error:(id*)arg6 ;
-(char)setNodeCredentialsUsingKerberosCache:(id)arg1 error:(id*)arg2 ;
-(id)passwordPolicyAndReturnError:(id*)arg1 ;
-(char)verifyExtendedWithAuthenticationType:(id)arg1 authenticationItems:(id)arg2 continueItems:(id*)arg3 context:(id*)arg4 error:(id*)arg5 ;
-(char)addValue:(id)arg1 toAttribute:(id)arg2 error:(id*)arg3 ;
-(char)removeValue:(id)arg1 fromAttribute:(id)arg2 error:(id*)arg3 ;
-(char)authenticationAllowedAndReturnError:(id*)arg1 ;
-(char)passwordChangeAllowed:(id)arg1 error:(id*)arg2 ;
-(char)willPasswordExpire:(unsigned long long)arg1 ;
-(char)willAuthenticationsExpire:(unsigned long long)arg1 ;
-(long long)secondsUntilPasswordExpires;
-(long long)secondsUntilAuthenticationsExpire;
-(char)addMemberRecord:(id)arg1 error:(id*)arg2 ;
-(char)removeMemberRecord:(id)arg1 error:(id*)arg2 ;
-(char)isMemberRecordRefresh:(id)arg1 error:(id*)arg2 ;
-(id)enumerateMembersWithOptions:(unsigned)arg1 returnAttributes:(id)arg2 usingBlock:(/*^block*/id)arg3 ;
-(id)enumerateMembershipWithOptions:(unsigned)arg1 returnAttributes:(id)arg2 usingBlock:(/*^block*/id)arg3 ;
@end

