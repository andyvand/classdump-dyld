/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 9:55:22 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <ImageKit/ImageKit-Structs.h>
#import <QuartzCore/CATiledLayer.h>

@class NSURL, NSDictionary, CALayer, IKComposer, CAKeyframeAnimation, NSScrollView, NSClipView, IKImageView, IKKnobLayer, NSString;

@interface IKImageLayer : CATiledLayer {

	NSURL* _url;
	CGImageRef _cgImageRef;
	CGImageRef _cachedImage;
	CGSize _cachedImageSize;
	CGAffineTransform _cachedCTM;
	CGImageSourceRef _isr;
	NSDictionary* _imageProperties;
	char _animateTransition;
	CALayer* _backgroundLayer;
	IKComposer* _composer;
	int _orientationTag;
	unsigned long long _imageIndex;
	CGSize _dpi;
	double _userSpaceScaleFactor;
	CAKeyframeAnimation* _gifAnimation;
	NSScrollView* _ikScrollView;
	NSClipView* _ikClipView;
	IKImageView* _ikImageView;
	IKKnobLayer* _ikKnobLayer;
	CGPoint _eventMouseDownLocation;
	double _imageScalingX;
	double _imageScalingY;
	CGPoint _imageScalingUserScaled;
	double _imageRotation;
	char _nonSquarePixels;
	double _nonSquareWidthFactor;
	double _nonSquareHeightFactor;
	char _canAnimateImage;
	char _isAnimatingImage;
	char _closingDown;
	char _supportsSubsampling;
	char _badImage;
	char _handlingBoundsChanged;
	char _waitingForResetAnchorPoint;
	CGSize _originalImageSize;
	CGRect _startBoundsRect;
	CGAffineTransform _imageTransform;
	opaque_pthread_mutex_t _imageLayerLock;
	char _userDefaultsOverwriteMagnificationFilter;
	char _userDefaultsOverwriteMinificationFilter;
	NSString* _magnificationFilterName;
	NSString* _minificationFilterName;

}

@property (assign) double imageScalingX;                                       //@synthesize imageScalingX=_imageScalingX - In the implementation block
@property (assign) double imageScalingY;                                       //@synthesize imageScalingY=_imageScalingY - In the implementation block
@property (assign) CGPoint imageScalingUserScaled;                             //@synthesize imageScalingUserScaled=_imageScalingUserScaled - In the implementation block
@property (assign) double imageRotation;                                       //@synthesize imageRotation=_imageRotation - In the implementation block
@property (assign) double userSpaceScaleFactor;                                //@synthesize userSpaceScaleFactor=_userSpaceScaleFactor - In the implementation block
@property (assign) char canAnimateImage;                                       //@synthesize canAnimateImage=_canAnimateImage - In the implementation block
@property (assign) char isAnimatingImage;                                      //@synthesize isAnimatingImage=_isAnimatingImage - In the implementation block
@property (assign) char isBadImage;                                            //@synthesize badImage=_badImage - In the implementation block
@property (assign) CGSize originalImageSize;                                   //@synthesize originalImageSize=_originalImageSize - In the implementation block
@property (assign) int orientationTag;                                         //@synthesize orientationTag=_orientationTag - In the implementation block
@property (assign) char nonSquarePixels;                                       //@synthesize nonSquarePixels=_nonSquarePixels - In the implementation block
@property (assign) double nonSquareHeightFactor;                               //@synthesize nonSquareHeightFactor=_nonSquareHeightFactor - In the implementation block
@property (assign) double nonSquareWidthFactor;                                //@synthesize nonSquareWidthFactor=_nonSquareWidthFactor - In the implementation block
@property (assign) char userDefaultsOverwriteMagnificationFilter;              //@synthesize userDefaultsOverwriteMagnificationFilter=_userDefaultsOverwriteMagnificationFilter - In the implementation block
@property (assign) char userDefaultsOverwriteMinificationFilter;               //@synthesize userDefaultsOverwriteMinificationFilter=_userDefaultsOverwriteMinificationFilter - In the implementation block
@property (copy) NSString * magnificationFilterName;                           //@synthesize magnificationFilterName=_magnificationFilterName - In the implementation block
@property (copy) NSString * minificationFilterName;                            //@synthesize minificationFilterName=_minificationFilterName - In the implementation block
+(char)registerLayerWithView:(id)arg1 ;
+(double)fadeDuration;
-(void)zoomOut:(id)arg1 ;
-(void)zoomIn:(id)arg1 ;
-(void)setOriginalImageSize:(CGSize)arg1 ;
-(CGSize)originalImageSize;
-(CGImageRef)cgImage;
-(id)imageProperties;
-(double)rotationAngle;
-(void)setRotationAngle:(double)arg1 ;
-(void)ikMouseDown:(id)arg1 ;
-(void)ikMouseDragged:(id)arg1 ;
-(void)ikMouseUp:(id)arg1 ;
-(int)orientationTag;
-(void)zoomActualSize:(id)arg1 ;
-(void)replaceImage:(CGImageRef)arg1 imageProperties:(id)arg2 imageState:(id)arg3 ;
-(void)rotateImageLeft:(id)arg1 ;
-(void)rotateImageRight:(id)arg1 ;
-(void)setUserDefaultsOverwriteMagnificationFilter:(char)arg1 ;
-(void)setMagnificationFilterName:(NSString *)arg1 ;
-(void)setUserDefaultsOverwriteMinificationFilter:(char)arg1 ;
-(void)setMinificationFilterName:(NSString *)arg1 ;
-(void)setImageScalingX:(double)arg1 ;
-(void)setImageScalingY:(double)arg1 ;
-(void)animateTransition:(id)arg1 ;
-(void)clipViewBoundsChanged:(id)arg1 ;
-(CGSize)transformedScaledImageSize;
-(CGAffineTransform)transformForOrientationAndDPIWithTranslationForWidth:(float)arg1 height:(float)arg2 ;
-(void)autoResizeToRect:(CGRect)arg1 allowZoomIn:(char)arg2 ;
-(CGAffineTransform)transformForOrientationAndDPI;
-(double)imageRotation;
-(void)updateImageLayer;
-(void)setVisibleCenterPoint:(CGPoint)arg1 ;
-(void)resetAnchorPoint:(CGPoint)arg1 ;
-(id)optionsForCGImageSourceCreateImageAtIndex;
-(void)setOrientationTag:(int)arg1 ;
-(void)doSetImage:(CGImageRef)arg1 imageProperties:(id)arg2 imageState:(id)arg3 options:(id)arg4 ;
-(void)createThumbnailWidth:(int)arg1 height:(int)arg2 level:(int)arg3 ;
-(void)_updateLayer:(id)arg1 ;
-(CGImageRef)createSquarePixelCopy:(CGImageRef)arg1 width:(unsigned long long)arg2 height:(unsigned long long)arg3 ;
-(char)userDefaultsOverwriteMagnificationFilter;
-(NSString *)magnificationFilterName;
-(char)userDefaultsOverwriteMinificationFilter;
-(NSString *)minificationFilterName;
-(id)getMagnificationFilter;
-(id)getMinificationFilter;
-(void)resetTransforms;
-(void)doSetImageWithState:(id)arg1 options:(id)arg2 ;
-(char)shouldCacheFullSizeImage;
-(CGPoint)visibleCenterPoint;
-(void)setScalingFactorX:(double)arg1 factorY:(double)arg2 ;
-(void)invalidateCachedCTM;
-(CGAffineTransform)rotationTransform;
-(CGSize)transformedOriginalImageSize;
-(void)setAnchorPointAndKeepFrame:(CGPoint)arg1 ;
-(CGAffineTransform)transformForOrientationAndDPIWithTranslation;
-(double)imageScalingX;
-(double)imageScalingY;
-(void)dumpGeometry:(id)arg1 ;
-(void)updateClipViewBounds:(CGRect)arg1 forVisibleCenter:(CGPoint)arg2 ;
-(void)setScalingFactorX:(double)arg1 factorY:(double)arg2 visibleCenter:(CGPoint)arg3 ;
-(void)setRotationAngle:(double)arg1 centerPoint:(CGPoint)arg2 ;
-(CGRect)limitRect;
-(void)flipImageHorizontal:(id)arg1 ;
-(void)updateOrientationTag:(int)arg1 animate:(char)arg2 reCenter:(char)arg3 ;
-(void)flipImageVertical:(id)arg1 ;
-(void)closingDown;
-(void)ikLayerWasAddedToSuperlayer;
-(char)badImage;
-(CGAffineTransform)transformForOrientationAndDPIWithScaledTranslation;
-(id)ciImage;
-(void)setImageWithURL:(id)arg1 imageState:(id)arg2 options:(id)arg3 ;
-(void)dumpCTM:(CGAffineTransform)arg1 ;
-(void)drawCachedImageInContext:(CGContextRef)arg1 ;
-(void)saveState:(id)arg1 ;
-(void)setImage:(CGImageRef)arg1 imageProperties:(id)arg2 imageState:(id)arg3 options:(id)arg4 ;
-(void)releaseCGImage;
-(void)renderWithRotationsInContext:(CGContextRef)arg1 rect:(CGRect)arg2 ;
-(CGSize)nonAutorotatedOriginalImageSize;
-(void)zoomImageToFit:(id)arg1 ;
-(void)zoomImageToRect:(CGRect)arg1 ;
-(void)setImageZoomFactor:(double)arg1 centerPoint:(CGPoint)arg2 ;
-(void)centerImage;
-(void)scrollToRect:(CGRect)arg1 ;
-(CGPoint)imageScalingUserScaled;
-(void)setImageScalingUserScaled:(CGPoint)arg1 ;
-(void)setImageRotation:(double)arg1 ;
-(char)canAnimateImage;
-(void)setCanAnimateImage:(char)arg1 ;
-(char)isAnimatingImage;
-(void)setIsAnimatingImage:(char)arg1 ;
-(char)isBadImage;
-(void)setIsBadImage:(char)arg1 ;
-(void)setUserSpaceScaleFactor:(double)arg1 ;
-(char)nonSquarePixels;
-(void)setNonSquarePixels:(char)arg1 ;
-(double)nonSquareHeightFactor;
-(void)setNonSquareHeightFactor:(double)arg1 ;
-(double)nonSquareWidthFactor;
-(void)setNonSquareWidthFactor:(double)arg1 ;
-(id)init;
-(void)finalize;
-(void)dealloc;
-(void)setAnchorPoint:(CGPoint)arg1 ;
-(void)setPosition:(CGPoint)arg1 ;
-(void)setBounds:(CGRect)arg1 ;
-(void)setFrame:(CGRect)arg1 ;
-(void)invalidate;
-(void)drawInContext:(CGContextRef)arg1 ;
-(void)renderInContext:(CGContextRef)arg1 ;
-(void)scrollToPoint:(CGPoint)arg1 ;
-(void)setAnimates:(char)arg1 ;
-(char)animates;
-(void)setRotation:(id)arg1 ;
-(double)scalingFactor;
-(double)userSpaceScaleFactor;
-(void)setKnobLayer:(id)arg1 ;
-(CGAffineTransform)imageTransform;
-(void)setup:(id)arg1 ;
-(void)cleanup;
@end

