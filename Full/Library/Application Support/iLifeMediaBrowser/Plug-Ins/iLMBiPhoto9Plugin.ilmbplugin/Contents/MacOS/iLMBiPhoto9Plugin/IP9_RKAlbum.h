/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:08:27 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Library/Application Support/iLifeMediaBrowser/Plug-Ins/iLMBiPhoto9Plugin.ilmbplugin/Contents/MacOS/iLMBiPhoto9Plugin
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iLMBiPhoto9Plugin/iLMBiPhoto9Plugin-Structs.h>
#import <iLMBiPhoto9Plugin/IP9_RKModel.h>

@class NSNumber, NSString, IP9_RKMultiItemQuery, NSMutableArray, IP9_RKCustomSortOrder, NSRecursiveLock, NSMutableDictionary, ILMB_IPHOTO_HgRidList, NSDate, NSSet;

@interface IP9_RKAlbum : IP9_RKModel {

	NSNumber* m_albumType;
	NSNumber* m_albumSubclass;
	NSString* m_name;
	IP9_RKMultiItemQuery* m_userQuery;
	IP9_RKMultiItemQuery* m_filter;
	NSString* m_folderUuid;
	NSString* m_queryFolderUuid;
	NSString* m_posterVersionUuid;
	NSString* m_selectedTrackPathUuid;
	NSString* m_serviceName;
	NSString* m_serviceAccountName;
	NSString* m_serviceFullName;
	int m_colorLabelIndex;
	NSNumber* m_versionCount;
	NSMutableArray* m_imageDateRange;
	IP9_RKCustomSortOrder* m_customSortOrder;
	NSString* m_sortKeyPath;
	unsigned long long m_sortSequenceNumber;
	unsigned m_albumFlags;
	char m_viewStorageDictionaryIsDirty;
	NSRecursiveLock* m_viewStorageDictLock;
	NSMutableDictionary* m_viewStorageDictionary;
	ILMB_IPHOTO_HgRidList* m_selectedVersionIds;
	NSDate* m_createDate;
	CFArrayRef m_observers;
	NSString* m_themeName;
	NSSet* m_projectUuidsInSeachArea;
	ILMB_IPHOTO_HgRidList* m_versionIdsInSearchArea;

}

@property (assign,nonatomic) char viewStorageDictionaryIsDirty; 
+(id)streamAlbumsFromDatabase:(id)arg1 ;
+(id)mutableDictionaryWithPropertyListData:(id)arg1 ;
+(id)manualAlbumsForFolder:(id)arg1 ;
+(id)allPhotosAlbumFromDatabase:(id)arg1 ;
+(id)mutableDictionaryWithData:(id)arg1 ;
+(id)deepCpyMutableContainers:(id)arg1 ;
+(id)supportedFileTypesForAlbumType:(int)arg1 serviceName:(id)arg2 ;
+(id)allAlbumsFromDatabase:(id)arg1 ;
+(id)albumWithName:(id)arg1 inFolder:(id)arg2 ;
+(id)albumsForFolderUuid:(id)arg1 fromDatabase:(id)arg2 ;
+(id)albumsOfSubclass:(long long)arg1 inFolder:(id)arg2 ;
+(id)albumsOfSubclass:(long long)arg1 ;
+(id)dataWithDictionary:(id)arg1 ;
+(id)smartAlbumsForFolder:(id)arg1 ;
+(id)deepCopyMutableContainers:(id)arg1 ;
+(id)builtinAlbumUuids;
+(id)albumsWithType:(int)arg1 inFolder:(id)arg2 ;
+(id)albumsOfType:(int)arg1 serviceName:(id)arg2 ;
+(id)flaggedAlbumFromDatabase:(id)arg1 ;
+(id)trashAlbumFromDatabase:(id)arg1 ;
+(void)cleanViewDictionary:(id)arg1 ;
+(id)builtinSmartAlbumUuids;
+(void)prefetchImageDateRanges:(id)arg1 ;
+(id)albumsForFolder:(id)arg1 ;
+(void)resetAllPhotosAlbumFilterFromDatabase:(id)arg1 ;
+(id)manualAlbumIdsContainingAnyOfVersionIds:(id)arg1 fromDatabase:(id)arg2 ;
+(id)allPlacedPhotosAlbumFromDatabase:(id)arg1 ;
+(id)filterVersionIds:(id)arg1 usingAlbumIds:(id)arg2 fromDatabase:(id)arg3 ;
+(id)excludedFileTypesForAlbumType:(int)arg1 serviceName:(id)arg2 ;
-(id)serviceAccountName;
-(id)serviceFullName;
-(id)posterVersionUuid;
-(id)customSortOrder;
-(char)isBuiltinSmartAlbum;
-(void)cacheViewData:(id)arg1 ;
-(id)versionIds;
-(char)sortAscending;
-(char)isCustomSorted;
-(id)sortKeyPath;
-(char)isMagic;
-(int)albumType;
-(int)albumSubclass;
-(id)versionIdsViaSqlRestrictedToIds:(id)arg1 canceler:(id)arg2 ;
-(id)versionIdsViaSqlRestrictedToIds:(id)arg1 ;
-(void)observeChangeToObject:(id)arg1 forKeyPath:(id)arg2 ;
-(id)projectUuidsInAlbumSearchArea;
-(id)versionIdsInAlbumSearchArea;
-(char)needsVersionCountUpdate;
-(id)versionCountAsNumber;
-(void)addChangeObserver:(id)arg1 ;
-(id)viewStorageDictionary;
-(void)setViewStorageDictionaryIsDirty:(char)arg1 ;
-(void)_storageDictionaryDidChange;
-(char)isImplicitSmartAlbum;
-(id)albumSubclassAsNumber;
-(void)cacheSelectedVersionIds:(id)arg1 ;
-(id)projectForImport;
-(id)newProjectForImportWithName:(id)arg1 ;
-(id)albumTypeAsNumber;
-(char)isDescendantOfFolder:(id)arg1 ;
-(void)setImageDateRange:(id)arg1 ;
-(char)hasImageDateRange;
-(id)allPlacesForContainer;
-(void)removeChangeObserver:(id)arg1 ;
-(void)storeViewStorageDictionary;
-(char)isUserSmartAlbum;
-(char)publishSyncNeeded;
-(id)selectedVersionIds;
-(id)selectedTrackPathUuid;
-(void)clearImageDateRange;
-(void)viewStorageDictionaryLock;
-(char)viewStorageDictionaryIsDirty;
-(void)setValue:(id)arg1 forKey:(id)arg2 forIdentifier:(id)arg3 forSubIdentifier:(id)arg4 ;
-(char)customSortAvailable;
-(unsigned long long)sortSequenceNumber;
-(char)hasNonLibraryPhotos;
-(id)fileSystemSafeName;
-(void)cacheQueryData:(id)arg1 ;
-(id)viewStorageDictionaryCpy;
-(id)valueForKey:(id)arg1 forIdentifier:(id)arg2 ;
-(void)setValue:(id)arg1 forKey:(id)arg2 forIdentifier:(id)arg3 ;
-(id)valueForKey:(id)arg1 forIdentifier:(id)arg2 forSubIdentifier:(id)arg3 ;
-(void)cacheFilterData:(id)arg1 ;
-(id)importGroupsInUse;
-(void)cacheVersionCount:(unsigned long long)arg1 ;
-(void)uncacheSearchArea;
-(id)colorLabelIndexesInUse;
-(id)keywordsInUse;
-(id)imageDatesInUse;
-(unsigned long long)versionCount;
-(id)versionUuids;
-(char)suppliesVersionCount;
-(void)cacheSearchArea;
-(char)isMissing;
-(void)cacheCustomSortAvailable:(char)arg1 ;
-(char)isManualAlbum;
-(void)cacheVersionCountAsNumber:(id)arg1 ;
-(id)viewData;
-(id)queryFolderUuid;
-(void)cacheColorLabelIndex:(id)arg1 ;
-(id)userQuery;
-(id)imageDateRange;
-(void)cacheIsFavorite:(char)arg1 ;
-(id)queryData;
-(void)cachePublishSyncNeeded:(char)arg1 ;
-(id)folderForImport;
-(id)versionIdList;
-(void)cacheSortKeyPath:(id)arg1 ;
-(char)isStreamAlbum;
-(id)folderUuid;
-(void)cacheCreateDate:(id)arg1 ;
-(void)cacheSelectedTrackPathUuid:(id)arg1 ;
-(id)queryFolder;
-(void)cacheSortAscending:(char)arg1 ;
-(void)cacheServiceAccountName:(id)arg1 ;
-(void)cacheFolderUuid:(id)arg1 ;
-(void)cacheAlbumSubclass:(int)arg1 ;
-(void)cachePosterVersionUuid:(id)arg1 ;
-(void)cacheServiceFullName:(id)arg1 ;
-(void)cacheQueryFolderUuid:(id)arg1 ;
-(void)cacheServiceName:(id)arg1 ;
-(id)colorLabelIndex;
-(char)isInTrash;
-(void)cacheIsMagic:(char)arg1 ;
-(void)cacheIsHidden:(char)arg1 ;
-(void)cacheAlbumType:(int)arg1 ;
-(void)cacheIsInTrash:(char)arg1 ;
-(void)cacheName:(id)arg1 ;
-(char)stackPicksOnly;
-(char)isSmartAlbum;
-(void)viewStorageDictionaryUnlock;
-(char)flushModel;
-(id)themeName;
-(id)albumNotInTrash;
-(void)setThemeName:(id)arg1 ;
-(char)shouldShowTrash;
-(char)isSlideshow;
-(id)serviceName;
-(char)isFavorite;
-(id)filter;
-(id)supportedFileTypes;
-(void)dealloc;
-(id)description;
-(char)isHidden;
-(id)name;
-(id)displayName;
-(id)versions;
-(char)isPublished;
-(id)folder;
-(id)createDate;
-(id)filterData;
@end

