/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:08:27 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Library/Application Support/iLifeMediaBrowser/Plug-Ins/iLMBiPhoto9Plugin.ilmbplugin/Contents/MacOS/iLMBiPhoto9Plugin
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iLMBiPhoto9Plugin/iLMBiPhoto9Plugin-Structs.h>
#import <iLMBiPhoto9Plugin/IP9_RKModel.h>

@class NSString, NSNumber, NSData;

@interface IP9_RKPlace : IP9_RKModel {

	NSString* m_defaultName;
	NSNumber* m_recordLocator;
	int m_type;
	double m_geoVersion;
	double m_minLatitude;
	double m_maxLatitude;
	double m_minLongitude;
	double m_maxLongitude;
	NSString* m_centroid;
	double m_createDate;
	double m_modDate;
	NSData* m_boundaryData;
	NSString* m_localizedPlaceName;

}
+(void)prefetchRelationships:(id)arg1 forObjects:(id)arg2 ;
+(id)filterPlaces:(id)arg1 whereContainsPoint:(CGPoint)arg2 ;
+(id)preferredLanguageCode;
+(id)placeOfType:(int)arg1 fromPlaces:(id)arg2 ;
+(id)mostSpecificPlaceFromPlaces:(id)arg1 ;
+(id)smallestPlaceFromPlaces:(id)arg1 ;
+(id)filterPlaces:(id)arg1 byPlaceType:(int)arg2 ;
+(id)allPlacesWithType:(int)arg1 forDatabase:(id)arg2 ;
+(id)placesMatching:(id)arg1 forDatabase:(id)arg2 ;
+(id)orderedPlacesByType:(id)arg1 ;
+(double)distanceFrom:(double)arg1 lng1:(double)arg2 lat2:(double)arg3 lng2:(double)arg4 ;
+(id)placesForLatitude:(double)arg1 longitude:(double)arg2 forDatabase:(id)arg3 ;
+(id)placeIdListForDatabase:(id)arg1 withinMinLatitude:(double)arg2 maxLatitude:(double)arg3 minLongitude:(double)arg4 maxLongitude:(double)arg5 ;
+(id)userDefinedPlacesForLatitude:(double)arg1 longitude:(double)arg2 forDatabase:(id)arg3 ;
+(id)placeForRecordLocator:(id)arg1 forDatabase:(id)arg2 ;
+(id)userDefinedPlacesMatching:(id)arg1 forDatabase:(id)arg2 ;
+(id)placesMatching:(id)arg1 withType:(int)arg2 forDatabase:(id)arg3 ;
+(id)placeIdsMatching:(id)arg1 withLikeFormat:(id)arg2 forDatabase:(id)arg3 ;
+(id)placeIdsMatching:(id)arg1 withLikeFormat:(id)arg2 withType:(int)arg3 forDatabase:(id)arg4 ;
-(id)localizedPlaceName;
-(void)cacheMinLongitude:(double)arg1 maxLongitude:(double)arg2 minLatitude:(double)arg3 maxLatitude:(double)arg4 ;
-(char)boundariesContainsPoint:(CGPoint)arg1 ;
-(char)moreSpecificPlaceType:(int)arg1 ;
-(id)placeNameForLanguage:(id)arg1 ;
-(id)placesContainingPlace;
-(id)parentPlaceOfType:(int)arg1 ;
-(double)createDateAsInterval;
-(double)modDateAsInterval;
-(void)cacheBoundaryData:(id)arg1 ;
-(char)hasCachedLocalizedPlaceName;
-(void)cacheLocalizedPlaceNameIfEmpty:(id)arg1 ;
-(id)initInDatabase:(id)arg1 ;
-(void)cacheMinLongitude:(double)arg1 ;
-(void)cacheMinLatitude:(double)arg1 ;
-(void)cacheMaxLatitude:(double)arg1 ;
-(long long)caseInsensitiveCompareName:(id)arg1 ;
-(char)boundingBoxContainsRect:(CGRect)arg1 ;
-(id)placesContainedWithinPlace;
-(char)placeContainsPoint:(CGPoint)arg1 ;
-(void)cacheMaxLongitude:(double)arg1 ;
-(id)parentCountry;
-(id)recordLocator;
-(id)parentState;
-(char)isLowest;
-(double)geoVersion;
-(id)centroid;
-(id)parentCity;
-(id)placeNames;
-(id)boundaries;
-(id)boundaryData;
-(void)cacheCreateDate:(id)arg1 ;
-(double)maxLongitude;
-(double)maxLatitude;
-(double)minLongitude;
-(id)defaultName;
-(double)minLatitude;
-(char)userDefined;
-(double)boundingBoxArea;
-(void)cacheModDate:(id)arg1 ;
-(void)cacheCreateDateAsInterval:(double)arg1 ;
-(void)cacheUserDefined:(char)arg1 ;
-(void)cacheModDateAsInterval:(double)arg1 ;
-(void)cacheRecordLocator:(id)arg1 ;
-(void)cacheGeoVersion:(double)arg1 ;
-(void)cacheDefaultName:(id)arg1 ;
-(void)cacheCentroid:(id)arg1 ;
-(void)cacheType:(int)arg1 ;
-(void)cacheIsLowest:(char)arg1 ;
-(id)placeTypeKey;
-(double)latitude;
-(double)longitude;
-(char)editable;
-(void)dealloc;
-(id)description;
-(id)name;
-(int)type;
-(CGRect)boundingBox;
-(id)modDate;
-(id)alternateName;
-(id)createDate;
@end

