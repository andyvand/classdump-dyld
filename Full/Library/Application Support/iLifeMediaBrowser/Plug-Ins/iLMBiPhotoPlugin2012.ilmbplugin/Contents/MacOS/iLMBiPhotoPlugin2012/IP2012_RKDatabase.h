/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:08:28 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Library/Application Support/iLifeMediaBrowser/Plug-Ins/iLMBiPhotoPlugin2012.ilmbplugin/Contents/MacOS/iLMBiPhotoPlugin2012
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iLMBiPhotoPlugin2012/ILMB_IPHOTO_2012_HgDatabase.h>

@class NSString, IP2012_RKFolder, IP2012_RKKeywordIndex, IP2012_RKRatingIndex, IP2012_RKVolumeCache, ILMB_IPHOTO_2012_HgLockedDictionary, ILMB_IPHOTO_2012_HgLockedRidList, IP2012_RKFolderIdClosure, IP2012_RKManualAlbumIdClosure, NSSet, ILMB_IPHOTO_2012_HgLockedSet, ILMB_IPHOTO_2012_HgRidList, NSLock, NSNumber;

@interface IP2012_RKDatabase : ILMB_IPHOTO_2012_HgDatabase {

	NSString* m_libraryPath;
	NSString* m_previousUuid;
	NSString* m_applicationIdentifier;
	NSString* m_databaseFilesDirectoryPath;
	NSString* m_mastersDirectoryPath;
	NSString* m_thumbnailsDirectoryPath;
	NSString* m_previewsDirectoryPath;
	NSString* m_attachmentsDirectoryPath;
	NSString* m_masksDirectoryPath;
	NSString* m_pluginsDirectoryPath;
	NSString* m_albumsDirectoryPath;
	NSString* m_foldersDirectoryPath;
	NSString* m_versionsDirectoryPath;
	NSString* m_vaultsDirectoryPath;
	NSString* m_placesDirectoryPath;
	NSString* m_volumesDirectoryPath;
	NSString* m_detectedFacesDirectoryPath;
	NSString* m_faceNamesDirectoryPath;
	NSString* m_faceExternalsDirectoryPath;
	NSString* m_detectedFaceExternalsDirectoryPath;
	int m_options;
	char m_isIPhotoLibrary;
	char m_facesIsEnabled;
	IP2012_RKFolder* m_libraryFolder;
	IP2012_RKKeywordIndex* m_keywordIndex;
	IP2012_RKRatingIndex* m_ratingIndex;
	IP2012_RKVolumeCache* m_volumeCache;
	ILMB_IPHOTO_2012_HgLockedDictionary* m_thumbnailGroupCache;
	ILMB_IPHOTO_2012_HgLockedRidList* m_namedFaceKeysCache;
	IP2012_RKFolderIdClosure* m_folderIdClosure;
	IP2012_RKManualAlbumIdClosure* m_manualAlbumIdClosure;
	NSString* m_lastFaceNameLikePattern;
	NSSet* m_lastFaceNameLikeResult;
	NSString* m_lastPlaceNameLikePattern;
	NSSet* m_lastPlaceNameLikeResult;
	long long m_delayRecountLevel;
	ILMB_IPHOTO_2012_HgLockedSet* m_albumsNeedingRecount;
	ILMB_IPHOTO_2012_HgLockedSet* m_foldersNeedingRecount;
	ILMB_IPHOTO_2012_HgLockedSet* m_albumsNeedViewStorageSave;
	long long m_disallowAutoCommitLevel;
	char m_keywordsHaveUnsavedChanges;
	char m_isEmptyingTrash;
	char m_duringRepair;
	char m_hadFacesDatabase;
	char m_needToNoteMasterChange;
	char m_needToNoteMetadataChange;
	char m_shouldNotifyVaultsOfMasterChange;
	char m_shouldNotifyVaultsOfMetadataChange;
	char m_hasStartedTaskViewTasks;
	ILMB_IPHOTO_2012_HgRidList* m_recentVersionIds;
	char m_startupTasksCompleted;
	NSLock* m_databaseCloseLock;
	long long m_segmentIndex;
	NSLock* m_segmentIndexLock;
	NSLock* m_segmentFreeListLock;
	ILMB_IPHOTO_2012_HgRidList* m_segmentIndexFreeRidList;
	NSNumber* m_segmentIndexLimit;
	long long m_v0Index;
	int m_v0Lock;

}

@property (assign,nonatomic) int options; 
@property (assign,nonatomic) char isEmptyingTrash; 
@property (assign,nonatomic) char duringRepair; 
@property (assign) char startupTasksCompleted; 
@property (assign,nonatomic) char facesIsEnabled; 
@property (nonatomic,retain) NSString * lastFaceNameLikePattern; 
@property (nonatomic,retain) NSSet * lastFaceNameLikeResult; 
@property (nonatomic,retain) NSString * lastPlaceNameLikePattern; 
@property (nonatomic,retain) NSSet * lastPlaceNameLikeResult; 
@property (assign,nonatomic) char shouldNotifyVaultsOfMasterChange; 
@property (assign,nonatomic) char shouldNotifyVaultsOfMetadataChange; 
@property (nonatomic,retain,readonly) NSString * albumsDirectoryPath; 
@property (nonatomic,retain,readonly) NSString * foldersDirectoryPath; 
@property (nonatomic,retain,readonly) NSString * versionsDirectoryPath; 
@property (nonatomic,retain,readonly) NSString * vaultsDirectoryPath; 
@property (nonatomic,retain,readonly) NSString * placesDirectoryPath; 
@property (nonatomic,retain,readonly) NSString * volumesDirectoryPath; 
@property (nonatomic,retain,readonly) NSString * detectedFacesDirectoryPath; 
@property (nonatomic,retain,readonly) NSString * faceNamesDirectoryPath; 
@property (nonatomic,retain,readonly) NSString * faceExternalsDirectoryPath; 
@property (nonatomic,retain,readonly) NSString * detectedFaceExternalsDirectoryPath; 
+(char)projectAtPathIsValid:(id)arg1 ;
+(id)descriptionOfTimeInterval:(double)arg1 ;
+(void)excludeFromTimeMachineBackup:(id)arg1 ;
+(void)ensureDatabaseDirectoriesExist:(id)arg1 ;
+(char)isIPhotoLibraryAtPath:(id)arg1 ;
+(char)requiredDatabaseFilesExist:(id)arg1 ;
+(char)isApertureLibraryAtPath:(id)arg1 ;
+(char)databaseIsCurrentOrCanBeIncrementallyUpgradedAtPath:(id)arg1 error:(id*)arg2 ;
+(void)removeStaleLockFilesAtPath:(id)arg1 ;
+(void)createSymLinksFilesForLibraryPath:(id)arg1 ;
+(char)isIPhotoLibraryCompatibleWithAperture:(id)arg1 ;
+(char)isMissingDatabaseFiles:(id)arg1 ;
+(void)removeDatabaseFileAtPath:(id)arg1 ;
+(char)isExcludedFromTimeMachineBackup:(id)arg1 ;
+(id)stringForPanelStatusWaitingForFS:(char)arg1 PID:(char)arg2 lockedBy:(id)arg3 path:(id)arg4 ;
+(char)databaseVersionIsCurrentAtPath:(id)arg1 error:(id*)arg2 ;
+(id)acquireFSReservationForPath:(id)arg1 ;
+(long long)libraryVersionNumberForPath:(id)arg1 ;
+(void)saveDatabase;
+(unsigned long long)databaseCategory;
+(void)includeInTimeMachineBackup:(id)arg1 ;
+(id)database;
+(void)initialize;
-(void)processShortDelayTasks;
-(void)flushCachedModels;
-(char)duringRepair;
-(id)albumEntity;
-(id)placeEntity;
-(id)placeForVersionEntity;
-(id)versionEntity;
-(id)stackEntryEntity;
-(id)stackStateEntity;
-(id)folderEntity;
-(id)iptcPropertyEntity;
-(id)uniqueStringEntity;
-(id)libraryPath;
-(id)imageProxyStateEntity;
-(id)versionIdsInTrash;
-(id)ratingIndex;
-(void)setLastFaceNameLikePattern:(NSString *)arg1 ;
-(void)setLastFaceNameLikeResult:(NSSet *)arg1 ;
-(NSString *)lastFaceNameLikePattern;
-(NSSet *)lastFaceNameLikeResult;
-(id)placeIdsForVersionId;
-(NSString *)lastPlaceNameLikePattern;
-(NSSet *)lastPlaceNameLikeResult;
-(void)setLastPlaceNameLikeResult:(NSSet *)arg1 ;
-(void)setLastPlaceNameLikePattern:(NSString *)arg1 ;
-(id)albumVersionEntity;
-(void)setNeedToNoteMetadataChange;
-(id)previewsDirectoryPath;
-(id)mastersDirectoryPath;
-(NSString *)versionsDirectoryPath;
-(id)thumbnailsDirectoryPath;
-(id)keywordIdsForVersionId;
-(id)keywordForVersionEntity;
-(id)versionIdsForMasterId;
-(id)otherPropertyEntity;
-(id)exifStringPropertyEntity;
-(id)propertyDatabaseManager;
-(id)exifNumberPropertyEntity;
-(id)thumbnailGroupObjectForGroup:(id)arg1 ;
-(id)initAsClosedDatabase;
-(void)cacheIsIPhotoLibrary:(char)arg1 ;
-(void)noteMasterChange;
-(void)noteMetadataChange;
-(void)loadIsIPhotoLibrary;
-(void)acquireFSReservation;
-(void)setFacesIsEnabled:(char)arg1 ;
-(void)storeViewStorageDictionaries;
-(void)willSaveDatabase;
-(id)ipImageProxyStateEntity;
-(NSString *)volumesDirectoryPath;
-(void)processNeedToNoteMetadataChange;
-(char)shouldNotifyVaultsOfMasterChange;
-(id)foldersNeedingRecount;
-(void)setNeedToNoteMasterChange;
-(id)placeNameEntity;
-(NSString *)albumsDirectoryPath;
-(NSString *)foldersDirectoryPath;
-(NSString *)vaultsDirectoryPath;
-(NSString *)placesDirectoryPath;
-(id)albumsNeedingRecount;
-(void)processNeedToNoteMasterChange;
-(id)volumeEntity;
-(id)facesDatabaseManager;
-(id)faceNameEntity;
-(void)flushAllCachedModels;
-(id)customSortEntryEntity;
-(id)importGroupEntity;
-(id)detectedFaceEntity;
-(void)setShouldNotifyVaultsOfMetadataChange:(char)arg1 ;
-(id)attachmentsDirectoryPath;
-(char)createDatabaseWithOptions:(int)arg1 ;
-(id)keywordEntity;
-(char)hasTrash;
-(void)setShouldNotifyVaultsOfMasterChange:(char)arg1 ;
-(char)shouldNotifyVaultsOfMetadataChange;
-(void)setStartupTasksCompleted:(char)arg1 ;
-(id)detectedFaceExternalEntity;
-(char)startupTasksCompleted;
-(void)clearRecentChanges;
-(void)recreateDamagedDatabaseFiles;
-(id)databaseCloseLock;
-(id)imageAdjustmentEntity;
-(void)setThumbnailsDirectoryPath:(id)arg1 ;
-(id)faceExternalEntity;
-(id)pluginsDirectoryPath;
-(void)runOnceStartupTasks;
-(void)setPreviewsDirectoryPath:(id)arg1 ;
-(char)wasTouchedByCurrentApplication;
-(void)setRecentVersionIds:(id)arg1 ;
-(void)createLibraryInfoPlistFile;
-(void)autoSaveDatabase;
-(void)setMastersDirectoryPath:(id)arg1 ;
-(void)resumeVersionRecounting;
-(void)_createUpgradeProgressPanel;
-(void)setDuringRepair:(char)arg1 ;
-(id)noteEntity;
-(id)attachmentEntity;
-(char)isEmptyingTrash;
-(char)databaseDirectoryExists;
-(void)pauseAutoCommit;
-(char)unlockIfVault;
-(void)pauseVersionRecounting;
-(id)similarFacesEntity;
-(void)testSomething;
-(char)lockIfVault;
-(id)vaultEntity;
-(id)progressString:(int)arg1 ;
-(void)showUpgradeProgress:(id)arg1 upgradeState:(int)arg2 percentComplete:(float)arg3 ;
-(void)writeDataModelVersionWithVersionCount:(char)arg1 ;
-(void)startFaceDetectionOfUndetectedMastersWithReason:(id)arg1 ;
-(id)previousUuid;
-(void)showUpgradeProgress:(id)arg1 upgradeState:(int)arg2 ;
-(id)availableMasterIds;
-(char)isCorrupt;
-(id)imageMaskEntity;
-(id)faceFeatureEntity;
-(id)detectedFaceBlobEntity;
-(id)namedFaceKeysCache;
-(NSString *)detectedFacesDirectoryPath;
-(NSString *)detectedFaceExternalsDirectoryPath;
-(NSString *)faceExternalsDirectoryPath;
-(id)facePropertyEntity;
-(NSString *)faceNamesDirectoryPath;
-(id)versionFaceContentEntity;
-(id)folderIdClosure;
-(id)manualAlbumIdClosure;
-(id)albumsNeedViewStorageSave;
-(id)masksDirectoryPath;
-(char)keywordsHaveUnsavedChanges;
-(void)setKeywordsHaveUnsavedChanges:(char)arg1 ;
-(id)keywordForContainerEntity;
-(id)propertySetEntity;
-(void)beginStartupTasksWithReason:(id)arg1 ;
-(void)cacheApplicationIdentifier:(id)arg1 ;
-(char)wasTouchedByApplication:(id)arg1 ;
-(void)markedTouchedByApplication:(id)arg1 ;
-(id)recentVersionIds;
-(long long)testDatabaseAccess;
-(void)loadApplicationIdentifier;
-(void)markedTouchedByCurrentApplication;
-(void)updateLibraryInfoPlistFile;
-(id)databaseFilesDirectoryPath;
-(id)keywordIndex;
-(id)statisticEntity;
-(id)databaseManager;
-(char)isIPhotoLibrary;
-(char)openDatabaseWithOptions:(int)arg1 ;
-(id)initWithLibraryPath:(id)arg1 ;
-(id)volumeCache;
-(void)repairIndexes;
-(char)createEntities;
-(char)facesIsEnabled;
-(id)imageProxyDatabaseManager;
-(void)_removeUpgradeProgressPanel;
-(void)saveRecentVersionIds;
-(void)setIsEmptyingTrash:(char)arg1 ;
-(void)resumeAutoCommit;
-(id)libraryFolder;
-(id)applicationIdentifier;
-(void)dealloc;
-(int)options;
-(void)setOptions:(int)arg1 ;
-(id)masterEntity;
-(void)closeDatabase;
@end

