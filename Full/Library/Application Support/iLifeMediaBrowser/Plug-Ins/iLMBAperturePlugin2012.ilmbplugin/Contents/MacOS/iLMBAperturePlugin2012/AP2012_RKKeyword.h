/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:08:26 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Library/Application Support/iLifeMediaBrowser/Plug-Ins/iLMBAperturePlugin2012.ilmbplugin/Contents/MacOS/iLMBAperturePlugin2012
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iLMBAperturePlugin2012/AP2012_RKOpenableModel.h>

@class NSString, NSNumber, ILMB_APERTURE_2012_HgRecentChange;

@interface AP2012_RKKeyword : AP2012_RKOpenableModel {

	NSString* m_name;
	NSString* m_searchName;
	NSNumber* m_parentId;
	NSString* m_shortcut;
	unsigned long long m_useCount;
	ILMB_APERTURE_2012_HgRecentChange* m_recentChange;

}

@property (assign,nonatomic) unsigned long long useCount; 
+(id)displayNameFromString:(id)arg1 ;
+(id)makeUniqueName:(id)arg1 forParent:(id)arg2 ;
+(id)keywordsDictionaryForDatabase:(id)arg1 ;
+(id)findKeywordWithString:(id)arg1 ;
+(id)findKeyword:(id)arg1 withParent:(id)arg2 ;
+(id)topLevelKeywords;
+(id)importedKeywordFromDatabase:(id)arg1 ;
+(id)iPhotoHiddenKeywordString;
+(id)iPhotoOriginalKeywordString;
+(id)archiveStringsForKeywords:(id)arg1 ;
+(id)iPhotoEditedKeywordString;
+(id)parentArchiveStringFromString:(id)arg1 ;
+(id)iPhotoFlaggedKeywordString;
+(id)iPhotoConvertedKeywordString;
+(id)convertFromKeypath:(id)arg1 ;
+(id)iPhotoFavoriteKeywordString;
+(id)nameFromArchiveString:(id)arg1 ;
+(void)expandSetToIncludeAllParentIds:(id)arg1 fromDatabase:(id)arg2 ;
+(id)archiveStringsForKeywordIds:(id)arg1 fromDatabase:(id)arg2 ;
+(id)archiveDelimiter;
+(id)importedKeywordString;
+(id)appendString:(id)arg1 aboveArchiveString:(id)arg2 ;
+(id)localeDictionary;
+(long long)compareKeywordName:(id)arg1 toName:(id)arg2 options:(long long)arg3 ;
+(id)cleanKeywordString:(id)arg1 ;
+(id)keywordIdsForParentIds:(id)arg1 fromDatabase:(id)arg2 ;
+(void)expandSetToIncludeAllChildrenIds:(id)arg1 fromDatabase:(id)arg2 ;
+(id)iPhotoKeywordString;
+(id)findKeywordWithString:(id)arg1 fromDatabase:(id)arg2 ;
+(id)iPhotoKeywordFromDatabase:(id)arg1 ;
+(id)findKeyword:(id)arg1 withParent:(id)arg2 fromDatabase:(id)arg3 ;
+(id)rootLevelKeywordsFromDatabase:(id)arg1 ;
+(id)topLevelKeywordsFromDatabase:(id)arg1 ;
+(id)highestKeywordFromCollection:(id)arg1 ;
+(id)findKeyword:(id)arg1 fromDatabase:(id)arg2 ;
+(id)addImportedLabelToArchiveString:(id)arg1 ;
+(id)splitUpMultipleKeywords:(id)arg1 ;
+(id)keywordToAddViaImport:(id)arg1 isIPhotoImport:(char)arg2 fromDatabase:(id)arg3 ;
+(char)isUniqueKeyword:(id)arg1 ;
+(id)directChildrenOfKeywordId:(id)arg1 forDatabase:(id)arg2 ;
+(void)expandSetToIncludeAllChildren:(id)arg1 ;
+(id)keywordsMatchingString:(id)arg1 partial:(char)arg2 ;
+(id)parentNameFromString:(id)arg1 ;
+(id)favoriteKeywordFromDatabase:(id)arg1 ;
+(void)initializeSelectors;
+(id)findKeyword:(id)arg1 ;
+(id)pathExtensions;
+(id)appendString:(id)arg1 belowArchiveString:(id)arg2 ;
+(unsigned long long)countOfUniqueVersionsUsingKeywords:(id)arg1 keywordNamesUsed:(id)arg2 ;
+(id)keywordsToAddViaImport:(id)arg1 isIPhotoImport:(char)arg2 fromDatabase:(id)arg3 ;
+(id)keywordUuidToArchiveStringForKeywordUuids:(id)arg1 fromDatabase:(id)arg2 ;
+(id)_directChildrenDictionary:(id)arg1 fromDatabase:(id)arg2 ;
+(id)localizableRepresentationForDatabase:(id)arg1 ;
+(void)importLocalizableRepresentation:(id)arg1 toDatabase:(id)arg2 ;
+(void)importArchiveDictionary:(id)arg1 toDatabase:(id)arg2 ;
+(void)importStringRepresentation:(id)arg1 toDatabase:(id)arg2 ;
+(id)addKeywordWithString:(id)arg1 ;
+(id)splitUpArray:(id)arg1 viaString:(id)arg2 ;
+(void)keywordsDidChange;
+(id)addKeywordIfMissing:(id)arg1 withParent:(id)arg2 fromDatabase:(id)arg3 withNotification:(char)arg4 ;
+(id)addKeywordWithString:(id)arg1 fromDatabase:(id)arg2 withNotification:(char)arg3 ;
+(id)addKeywordWithInvertedString:(id)arg1 fromDatabase:(id)arg2 withNotification:(char)arg3 ;
+(id)keywordsMatchingString:(id)arg1 partial:(char)arg2 matchLocation:(int)arg3 ;
+(void)_addChildrenOfKeyword:(id)arg1 toDictionary:(id)arg2 localizedDictionary:(id)arg3 fromDatabase:(id)arg4 ;
+(void)_addKeywordsFromDictionary:(id)arg1 parent:(id)arg2 fromDatabase:(id)arg3 ;
+(void)saveKeywordsFromDatabase:(id)arg1 toPath:(id)arg2 ;
+(id)stringByDeletingParent:(id)arg1 ;
+(void)prefetchEmptyUseCountsForDatabase:(id)arg1 ;
+(id)addKeywordsForKeywordStrings:(id)arg1 ;
+(id)iPhotoExternallyEditedKeywordString;
+(id)addKeywordIfMissing:(id)arg1 withParent:(id)arg2 fromDatabase:(id)arg3 ;
+(id)addKeywordIfMissing:(id)arg1 withParent:(id)arg2 ;
+(id)addKeywordWithString:(id)arg1 fromDatabase:(id)arg2 ;
+(id)addKeywordWithInvertedString:(id)arg1 fromDatabase:(id)arg2 ;
+(id)keywordsMatchingString:(id)arg1 partial:(char)arg2 fromStart:(char)arg3 ;
+(id)archiveDictionaryForDatabase:(id)arg1 ;
+(id)stringRepresentationForDatabase:(id)arg1 ;
+(void)saveKeywordsIfChangedForDatabase:(id)arg1 ;
+(void)forceKeywordsToSaveForDatabase:(id)arg1 ;
+(id)nameFromString:(id)arg1 ;
+(id)allKeywordsFromDatabase:(id)arg1 ;
+(void)initialize;
-(void)setRecentChange:(id)arg1 ;
-(id)recentChange;
-(long long)hierarchyLevelCompare:(id)arg1 ;
-(id)initWithName:(id)arg1 parent:(id)arg2 inDatabase:(id)arg3 ;
-(void)updateHasChildren;
-(void)cacheHasChildren:(char)arg1 ;
-(id)countOfVersionsAsNumber;
-(id)invertedArchiveString;
-(id)displayableAncestorString;
-(id)displayablePathString;
-(id)initWithUuid:(id)arg1 name:(id)arg2 parent:(id)arg3 inDatabase:(id)arg4 ;
-(void)notifyChildVersionsOfChange;
-(id)searchName;
-(void)allParents:(id)arg1 ;
-(id)shortcut;
-(unsigned long long)countOfVersions;
-(void)cacheSearchName:(id)arg1 ;
-(long long)hierarchyLevelTR:(long long)arg1 ;
-(id)initWithModelId:(id)arg1 uuid:(id)arg2 name:(id)arg3 parent:(id)arg4 inDatabase:(id)arg5 ;
-(void)notifyVersionsOfChange;
-(void)clearUseCount;
-(id)_selfAndAllChildrenOrdered;
-(unsigned long long)countOfNonOriginalVersions;
-(id)directChildren;
-(id)archiveString;
-(long long)hierarchyLevel;
-(void)cacheParentId:(id)arg1 ;
-(void)cacheShortcut:(id)arg1 ;
-(void)cacheName:(id)arg1 ;
-(id)parentId;
-(unsigned long long)useCount;
-(void)setUseCount:(unsigned long long)arg1 ;
-(id)allChildren;
-(char)isFavorite;
-(id)init;
-(void)dealloc;
-(id)description;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(long long)caseInsensitiveCompare:(id)arg1 ;
-(id)name;
-(id)stringValue;
-(id)keyPath;
-(long long)compare:(id)arg1 ;
-(id)displayName;
-(id)parent;
-(char)hasAncestor:(id)arg1 ;
-(char)hasChildren;
-(id)versions;
-(id)parentName;
@end

