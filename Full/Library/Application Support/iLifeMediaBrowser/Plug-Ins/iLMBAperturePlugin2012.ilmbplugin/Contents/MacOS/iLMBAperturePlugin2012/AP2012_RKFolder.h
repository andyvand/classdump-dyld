/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:08:26 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Library/Application Support/iLifeMediaBrowser/Plug-Ins/iLMBAperturePlugin2012.ilmbplugin/Contents/MacOS/iLMBAperturePlugin2012
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iLMBAperturePlugin2012/AP2012_RKOpenableModel.h>

@class NSString, AP2012_RKCustomSortOrder, NSDate, NSNumber, NSRecursiveLock, NSMutableSet, XTCronJob, NSMutableDictionary, ILMB_APERTURE_2012_HgRecentChange, ILMB_APERTURE_2012_HgLockedSet, NSImage, NSDictionary;

@interface AP2012_RKFolder : AP2012_RKOpenableModel {

	NSString* m_folderPath;
	NSString* m_masterLocation;
	int m_folderType;
	NSString* m_parentFolderUuid;
	NSString* m_name;
	NSString* m_posterVersionUuid;
	NSString* m_implicitAlbumUuid;
	NSString* m_sortKeyPath;
	AP2012_RKCustomSortOrder* m_customSortOrder;
	int m_colorLabelIndex;
	unsigned m_folderFlags;
	NSDate* m_createDate;
	NSNumber* m_versionCount;
	NSDate* m_minImageDate;
	NSDate* m_maxImageDate;
	NSString* m_minImageTimeZoneName;
	NSString* m_maxImageTimeZoneName;
	NSRecursiveLock* m_lock;
	long long m_pendingMasters;
	NSMutableSet* m_currentImports;
	unsigned long long _currentImportsCount;
	NSMutableSet* m_pendingImports;
	unsigned long long _pendingImportsCount;
	XTCronJob* m_importProgressCronJob;
	NSMutableDictionary* m_importProgressByWorkOrderId;
	ILMB_APERTURE_2012_HgRecentChange* m_recentChange;
	ILMB_APERTURE_2012_HgLockedSet* m_directChildFolderCache;
	ILMB_APERTURE_2012_HgLockedSet* m_directChildAlbumCache;
	NSString* m_originalUuid;
	id m_importInfoDictionary;
	NSImage* m_sourceListIcon;
	NSImage* m_sourceListButtonIcon;
	id m_customViewController;

}

@property (nonatomic,retain) NSString * originalUuid; 
@property (nonatomic,retain) NSDictionary * importInfoDictionary; 
+(void)sendModelsCreated:(id)arg1 ;
+(void)sendModelContentsChanged:(id)arg1 ;
+(void)sendModelsDeleted:(id)arg1 ;
+(id)foldersFromDatabase:(id)arg1 withFolderType:(int)arg2 ;
+(void)prefetchImageDateRangesForProjects:(id)arg1 ;
+(id)trashFolderForDatabase:(id)arg1 ;
+(id)folderUuidsForFolder:(id)arg1 ;
+(id)allProjectsWhere:(id)arg1 args:(id)arg2 ;
+(id)allProjectsWhere:(id)arg1 ;
+(id)libraryFolderInDatabase:(id)arg1 ;
+(id)allFoldersFromDatabase:(id)arg1 ;
+(id)folderUuidsForParentUuids:(id)arg1 fromDatabase:(id)arg2 ;
+(id)allProjectsFolderForDatabase:(id)arg1 ;
+(id)builtinSmartAlbumsFolderForDatabase:(id)arg1 createIfMissing:(char)arg2 ;
+(id)sortKeyPathSplitter;
+(id)foldersForFolder:(id)arg1 ;
+(id)projectUuidsForFolder:(id)arg1 ;
+(void)initializeSelectors;
+(id)interestingExtensionsForVault;
+(id)excludedExtensionsForVault;
+(void)undoRedoCopyMasters:(id)arg1 originalMasters:(id)arg2 toProject:(id)arg3 ;
+(id)cpyMasters:(id)arg1 toProject:(id)arg2 ;
+(void)moveMasters:(id)arg1 toProject:(id)arg2 forVersions:(id)arg3 ;
+(void)copyFilesAtPath:(id)arg1 toPath:(id)arg2 ;
+(void)copyFilesAtPath:(id)arg1 toPath:(id)arg2 handler:(id)arg3 object:(id)arg4 ;
+(id)createMagicFolderWithUuid:(id)arg1 name:(id)arg2 forDatabase:(id)arg3 ;
+(id)createMagicProjectWithUuid:(id)arg1 name:(id)arg2 forDatabase:(id)arg3 ;
+(id)publishedProjectsFolderForDatabase:(id)arg1 ;
+(id)newFolderWithName:(id)arg1 inFolder:(id)arg2 ;
+(id)newProjectSubfolderWithName:(id)arg1 inFolder:(id)arg2 ;
+(id)containerUuidsHavingAnyText:(id)arg1 fromDatabase:(id)arg2 ;
+(id)containerUuidsFromDatabase:(id)arg1 where:(id)arg2 ;
+(id)thumbnailPathForThumbnailGroup:(id)arg1 ;
+(id)allProjectsWithNotesWhere:(id)arg1 ;
+(unsigned long long)preFlightCopyMasters:(id)arg1 ;
+(id)_cpyMasters:(id)arg1 toProject:(id)arg2 ;
+(id)folderWithName:(id)arg1 inFolder:(id)arg2 ;
+(id)builtinFolderUuids;
+(id)allProjectsItemUuid;
+(id)projectsForFolder:(id)arg1 ;
+(id)foldersWithFolderType:(int)arg1 ;
+(id)allProjects;
+(void)expandSetToIncludeAllParentFolderUuids:(id)arg1 fromDatabase:(id)arg2 ;
+(void)expandSetToIncludeAllChildrenFolderUuids:(id)arg1 fromDatabase:(id)arg2 ;
+(id)magicFolderWithName:(id)arg1 forDatabase:(id)arg2 ;
+(id)topLevelAlbumsFolderForAlbumType:(int)arg1 ;
+(id)_filterHiddenIfEmptyFrom:(id)arg1 ;
+(id)allProjectsWithNotesWhere:(id)arg1 args:(id)arg2 ;
+(id)foldersForFolder:(id)arg1 folderTypes:(id)arg2 ;
+(id)minMaxImageDatesForProjectUuids:(id)arg1 fromDatabase:(id)arg2 ;
+(id)topLevelAlbumsFolderForAlbumType:(int)arg1 database:(id)arg2 ;
+(id)topLevelAlbumsFolderUuidForAlbumType:(int)arg1 ;
+(id)newFolderWithName:(id)arg1 inFolder:(id)arg2 isMagic:(char)arg3 ;
+(id)newProjectWithName:(id)arg1 inFolder:(id)arg2 ;
+(id)folderUuidsHavingAnyText:(id)arg1 inFolderUuids:(id)arg2 fromDatabase:(id)arg3 ;
+(id)containerUuidsFromDatabase:(id)arg1 where:(id)arg2 args:(id)arg3 ;
+(id)thumbnailPathForThumbnailGroup:(id)arg1 withDatabase:(id)arg2 createDirIfMissing:(char)arg3 ;
+(void)prefetchDirectChildFoldersForDatabase:(id)arg1 ;
+(id)libraryFolder;
+(void)initialize;
+(id)pathExtension;
+(id)allFolders;
-(char)hasSpaceForMasters:(long long)arg1 ;
-(void)versionsWereRemoved;
-(id)nameOrEmptyIfNil;
-(id)minImageTimeZoneName;
-(void)setOriginalUuid:(NSString *)arg1 ;
-(void)setMaxImageDateIfGreater:(id)arg1 ;
-(char)arrangedChildrenIsEmpty;
-(id)captionOrEmptyIfNil;
-(void)unregisterMastersRequired:(long long)arg1 ;
-(id)maxImageTimeZoneName;
-(void)setMinImageDateIfLess:(id)arg1 ;
-(char)registerMastersRequired:(long long)arg1 ;
-(void)setImportInfoDictionary:(NSDictionary *)arg1 ;
-(NSString *)originalUuid;
-(void)setRecentChange:(id)arg1 ;
-(id)recentChange;
-(void)updateMinMaxDateForVersions:(id)arg1 ;
-(id)importMasterAtFullPath:(id)arg1 uuidMapper:(id)arg2 ;
-(void)setButtonIcon:(id)arg1 ;
-(void)recursiveChangeFolderType:(int)arg1 ;
-(void)_updateFoldersForOldFolderPath:(id)arg1 newPath:(id)arg2 ;
-(id)newImportGroup;
-(void)classifyFilesInPath:(id)arg1 fileInfos:(id)arg2 originalVersionInfos:(id)arg3 versionInfos:(id)arg4 imageFilePaths:(id)arg5 ;
-(id)initWithInfoDictionary:(id)arg1 intoParentFolder:(id)arg2 uuidMapper:(id)arg3 ;
-(id)initUnpersistedInDatabase:(id)arg1 folderType:(int)arg2 name:(id)arg3 inFolder:(id)arg4 isMagic:(char)arg5 ;
-(id)initWithName:(id)arg1 inFolder:(id)arg2 inDatabase:(id)arg3 isMagic:(char)arg4 ;
-(id)initWithName:(id)arg1 inFolder:(id)arg2 ;
-(id)ensureProjectExistsForPathComponents:(id)arg1 ;
-(id)availableNameForDuplicateStructure;
-(void)cacheIsHiddenWhenEmpty:(char)arg1 ;
-(id)implicitAlbum;
-(id)localizedNameFromDate:(id)arg1 ;
-(id)posterVersionUuid;
-(id)customSortOrder;
-(char)isBuiltinSmartAlbumFolder;
-(char)sortAscending;
-(id)sortKeyPath;
-(id)imageDateRangeForProject;
-(char)isMagic;
-(int)folderType;
-(void)observeChangeToObject:(id)arg1 forKeyPath:(id)arg2 ;
-(void)cacheAutomaticallyGenerateFullSizePreviews:(char)arg1 ;
-(char)needsVersionCountUpdate;
-(id)versionCountAsNumber;
-(id)projectForImport;
-(id)newProjectForImportWithName:(id)arg1 ;
-(char)isDescendantOfFolder:(id)arg1 ;
-(char)hasImageDateRangeForProject;
-(id)directChildFolders;
-(id)implicitAlbumUuid;
-(char)inBuiltinSmartAlbumFolder;
-(id)allPlacesForContainer;
-(id)purposeFromSortKeyPath;
-(id)arrangedChildrenIgnoringHiddenFlag:(char)arg1 ;
-(id)arrangeChildrenWithCustomOrder:(id)arg1 ;
-(id)parentFolderUuid;
-(char)containsAnyProject;
-(id)libraryRelativePath;
-(void)clearMasterLocationCache;
-(void)clearImageDateRange;
-(void)clearAlbumsCache;
-(void)addToDirectFolderCache:(id)arg1 ;
-(void)removeFromDirectFolderCache:(id)arg1 ;
-(void)clearDirectChildFoldersCache;
-(int)subfolderType;
-(id)fileSystemSafeName;
-(id)availableNameForFolderType:(int)arg1 baseName:(id)arg2 ;
-(char)automaticallyGenerateFullSizePreviews;
-(id)arrangedChildrenLimitedToUuids:(id)arg1 ;
-(char)isProjectSubfolder;
-(char)canSetAsParentFolder:(id)arg1 ;
-(id)folderNotInTrash;
-(id)availableNameForAlbum:(id)arg1 ;
-(id)allAncestorFolders;
-(id)loadSyncInfoForDotMac;
-(void)saveSyncInfoForDotMac:(id)arg1 ;
-(id)directSubfoldersOfFolderTypes:(id)arg1 ;
-(void)cacheVersionCount:(unsigned long long)arg1 ;
-(unsigned long long)versionCount;
-(void)clearMasterLocationCacheForDependentFolders;
-(id)maxImageDate;
-(id)minImageDate;
-(void)cacheMinImageTimeZoneName:(id)arg1 ;
-(void)cacheMaxImageDate:(id)arg1 ;
-(void)cacheMaxImageTimeZoneName:(id)arg1 ;
-(void)cacheMinImageDate:(id)arg1 ;
-(void)updateVersionCount;
-(id)ensureSubfolderExistsForPathComponents:(id)arg1 ;
-(void)setNeedsVersionCountUpdate:(char)arg1 ;
-(char)registerMastersRequiredAsNumber:(id)arg1 ;
-(char)hasSpaceForMastersAsNumber:(id)arg1 ;
-(void)unregisterMastersRequiredAsNumber:(id)arg1 ;
-(void)copyVersions:(id)arg1 uuidMapper:(id)arg2 ;
-(id)initWithAddress:(id)arg1 uuid:(id)arg2 folderType:(int)arg3 name:(id)arg4 inFolder:(id)arg5 inDatabase:(id)arg6 isMagic:(char)arg7 ;
-(id)initWithName:(id)arg1 inFolder:(id)arg2 isMagic:(char)arg3 ;
-(id)initWithFolderType:(int)arg1 name:(id)arg2 inFolder:(id)arg3 inDatabase:(id)arg4 isMagic:(char)arg5 ;
-(id)createImplicitAlbum;
-(void)forcedAddToDirectFolderCache:(id)arg1 ;
-(void)forcedAddToAlbumCache:(id)arg1 ;
-(id)versionIdsForPlaceIdForContainer;
-(id)arrangedChildrenIgnoringHiddenFlag:(char)arg1 includeTrash:(char)arg2 ;
-(char)isTopLevelAlbumsFolder;
-(char)containsAlbumsOfTypes:(id)arg1 ;
-(char)containsAlbumsOtherThanTypes:(id)arg1 ;
-(char)isPublishedAccountProject;
-(id)nameOrDateIfEmptyOrNil;
-(char)hasPendingImports;
-(void)setNeedsVersionCountUpdate;
-(char)isHiddenWhenEmpty;
-(id)masterLocation;
-(void)cacheIsExpanded:(char)arg1 ;
-(char)isMissing;
-(id)folderPath;
-(void)cacheVersionCountAsNumber:(id)arg1 ;
-(void)cacheColorLabelIndex:(id)arg1 ;
-(id)project;
-(id)masters;
-(void)cacheIsFavorite:(char)arg1 ;
-(id)folderForImport;
-(void)cacheParentFolderUuid:(id)arg1 ;
-(void)cacheImplicitAlbumUuid:(id)arg1 ;
-(void)cacheSortKeyPath:(id)arg1 ;
-(void)cacheFolderType:(int)arg1 ;
-(void)cacheCreateDate:(id)arg1 ;
-(long long)hierarchyLevel;
-(void)cacheSortAscending:(char)arg1 ;
-(void)cachePosterVersionUuid:(id)arg1 ;
-(void)cacheFolderPath:(id)arg1 ;
-(id)colorLabelIndex;
-(char)isInTrash;
-(void)cacheIsMagic:(char)arg1 ;
-(void)cacheIsHidden:(char)arg1 ;
-(void)cacheIsInTrash:(char)arg1 ;
-(void)cacheName:(id)arg1 ;
-(id)arrangedChildren;
-(void)removeFromAlbumCache:(id)arg1 ;
-(void)addToAlbumCache:(id)arg1 ;
-(NSDictionary *)importInfoDictionary;
-(id)albumWithName:(id)arg1 ;
-(id)albums;
-(char)isImporting;
-(id)parentFolder;
-(char)isFavorite;
-(char)isProject;
-(id)caption;
-(void)setCaption:(id)arg1 ;
-(void)dealloc;
-(id)description;
-(char)isHidden;
-(id)name;
-(void)setIcon:(id)arg1 ;
-(char)isEmpty;
-(id)displayName;
-(id)parent;
-(char)isExpanded;
-(id)versions;
-(id)valueForUndefinedKey:(id)arg1 ;
-(id)createDate;
@end

