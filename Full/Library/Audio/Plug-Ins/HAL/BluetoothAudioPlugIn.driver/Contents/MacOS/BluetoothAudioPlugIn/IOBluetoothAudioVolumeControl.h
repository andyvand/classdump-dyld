/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:08:31 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Library/Audio/Plug-Ins/HAL/BluetoothAudioPlugIn.driver/Contents/MacOS/BluetoothAudioPlugIn
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <BluetoothAudioPlugIn/BluetoothAudioPlugIn-Structs.h>
#import <BluetoothAudioPlugIn/IOBluetoothAudioControl.h>

@interface IOBluetoothAudioVolumeControl : IOBluetoothAudioControl {

	float _volume;

}

@property (assign) float volume;              //@synthesize volume=_volume - In the implementation block
-(int)getPropertyData:(const AudioObjectPropertyAddress*)arg1 inQualifierDataSize:(unsigned)arg2 inQualifierData:(const void*)arg3 inDataSize:(unsigned)arg4 outDataSize:(unsigned*)arg5 outData:(void*)arg6 ;
-(int)getPropertyDataSize:(const AudioObjectPropertyAddress*)arg1 inputSize:(unsigned)arg2 input:(const void*)arg3 outputSize:(unsigned*)arg4 ;
-(int)isPropertySettable:(const AudioObjectPropertyAddress*)arg1 isSetable:(char*)arg2 ;
-(int)setPropertyData:(const AudioObjectPropertyAddress*)arg1 inQualifierDataSize:(unsigned)arg2 inQualifierData:(const void*)arg3 inDataSize:(unsigned)arg4 inData:(const void*)arg5 ;
-(id)init;
-(void)setVolume:(float)arg1 ;
-(float)volume;
-(unsigned char)hasProperty:(const AudioObjectPropertyAddress*)arg1 ;
@end

