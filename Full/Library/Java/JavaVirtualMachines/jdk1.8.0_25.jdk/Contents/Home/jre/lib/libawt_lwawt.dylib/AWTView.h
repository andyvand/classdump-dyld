/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:08:56 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/libawt_lwawt.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <libawt_lwawt.dylib/libawt_lwawt.dylib-Structs.h>
#import <AppKit/NSView.h>
#import <libawt_lwawt.dylib/NSTextInputClient.h>
#import <libawt_lwawt.dylib/CDragSourceHolder.h>
#import <libawt_lwawt.dylib/CDropTargetHolder.h>

@class NSTrackingArea, CDragSource, CDropTarget;

@interface AWTView : NSView <NSTextInputClient, CDragSourceHolder, CDropTargetHolder> {

	jobjectRef m_cPlatformView;
	NSTrackingArea* rolloverTrackingArea;
	CDragSource* _dragSource;
	CDropTarget* _dropTarget;
	jobjectRef fInputMethodLOCKABLE;
	char fKeyEventsNeeded;
	char fProcessingKeystroke;
	char fEnablePressAndHold;
	char fInPressAndHold;
	char fPAHNeedsToSelect;
	id cglLayer;
	char mouseIsOver;

}

@property (assign,nonatomic) char mouseIsOver; 
@property (nonatomic,retain) id cglLayer; 
@property (retain) CDragSource * _dragSource;               //@synthesize dragSource=_dragSource - In the implementation block
@property (retain) CDropTarget * _dropTarget;               //@synthesize dropTarget=_dropTarget - In the implementation block
-(id)initWithRect:(CGRect)arg1 platformView:(jobjectRef)arg2 windowLayer:(id)arg3 ;
-(CDragSource *)_dragSource;
-(CDropTarget *)_dropTarget;
-(void)set_dropTarget:(CDropTarget *)arg1 ;
-(void)set_dragSource:(CDragSource *)arg1 ;
-(char)replaceAccessibleTextSelection:(id)arg1 ;
-(id)accessibleSelectedTextAsRTFD;
-(id)accessibleSelectedText;
-(id)getAxData:(const JNINativeInterface_*)arg1 ;
-(jobjectRef)awtComponent:(const JNINativeInterface_*)arg1 ;
-(void)deliverJavaKeyEventHelper:(id)arg1 ;
-(void)deliverJavaMouseEvent:(id)arg1 ;
-(void)deliverResize:(CGRect)arg1 ;
-(void)setCglLayer:(id)arg1 ;
-(void)resetTrackingArea;
-(void)setDragSource:(id)arg1 ;
-(void)setDropTarget:(id)arg1 ;
-(id)cglLayer;
-(void)setMouseIsOver:(char)arg1 ;
-(void)abandonInput;
-(void)setInputMethod:(jobjectRef)arg1 ;
-(char)mouseIsOver;
-(void)dealloc;
-(id)accessibilityFocusedUIElement;
-(id)accessibilityHitTest:(CGPoint)arg1 ;
-(char)accessibilityIsIgnored;
-(void)drawRect:(CGRect)arg1 ;
-(id)accessibilityAttributeNames;
-(id)accessibilityAttributeValue:(id)arg1 ;
-(char)performKeyEquivalent:(id)arg1 ;
-(id)validRequestorForSendType:(id)arg1 returnType:(id)arg2 ;
-(void)rightMouseDown:(id)arg1 ;
-(void)doCommandBySelector:(SEL)arg1 ;
-(char)preservesContentDuringLiveResize;
-(char)acceptsFirstResponder;
-(void)keyDown:(id)arg1 ;
-(char)acceptsFirstMouse:(id)arg1 ;
-(char)becomeFirstResponder;
-(unsigned long long)draggingSourceOperationMaskForLocal:(char)arg1 ;
-(void)draggedImage:(id)arg1 beganAt:(CGPoint)arg2 ;
-(void)draggedImage:(id)arg1 endedAt:(CGPoint)arg2 operation:(unsigned long long)arg3 ;
-(char)ignoreModifierKeysWhileDragging;
-(unsigned long long)draggingEntered:(id)arg1 ;
-(unsigned long long)draggingUpdated:(id)arg1 ;
-(void)draggingExited:(id)arg1 ;
-(void)draggingEnded:(id)arg1 ;
-(char)performDragOperation:(id)arg1 ;
-(id)namesOfPromisedFilesDroppedAtDestination:(id)arg1 ;
-(void)scrollWheel:(id)arg1 ;
-(void)viewDidMoveToWindow;
-(void)resetCursorRects;
-(void)mouseDown:(id)arg1 ;
-(void)mouseEntered:(id)arg1 ;
-(void)mouseExited:(id)arg1 ;
-(char)hasMarkedText;
-(NSRange)selectedRange;
-(void)mouseDragged:(id)arg1 ;
-(void)mouseUp:(id)arg1 ;
-(void)resizeWithOldSuperviewSize:(CGSize)arg1 ;
-(void)keyUp:(id)arg1 ;
-(void)updateTrackingAreas;
-(void)rightMouseUp:(id)arg1 ;
-(void)flagsChanged:(id)arg1 ;
-(void)rightMouseDragged:(id)arg1 ;
-(void)otherMouseDown:(id)arg1 ;
-(void)otherMouseDragged:(id)arg1 ;
-(void)otherMouseUp:(id)arg1 ;
-(char)prepareForDragOperation:(id)arg1 ;
-(void)concludeDragOperation:(id)arg1 ;
-(void)draggedImage:(id)arg1 movedTo:(CGPoint)arg2 ;
-(void)mouseMoved:(id)arg1 ;
-(unsigned long long)characterIndexForPoint:(CGPoint)arg1 ;
-(void)unmarkText;
-(id)validAttributesForMarkedText;
-(NSRange)markedRange;
-(long long)conversationIdentifier;
-(char)readSelectionFromPasteboard:(id)arg1 ;
-(void)insertText:(id)arg1 replacementRange:(NSRange)arg2 ;
-(void)setMarkedText:(id)arg1 selectedRange:(NSRange)arg2 replacementRange:(NSRange)arg3 ;
-(char)writeSelectionToPasteboard:(id)arg1 types:(id)arg2 ;
-(id)attributedSubstringForProposedRange:(NSRange)arg1 actualRange:(NSRange*)arg2 ;
-(CGRect)firstRectForCharacterRange:(NSRange)arg1 actualRange:(NSRange*)arg2 ;
@end

