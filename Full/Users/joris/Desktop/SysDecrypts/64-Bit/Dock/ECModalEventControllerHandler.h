/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:58:06 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Users/joris/Desktop/SysDecrypts/64-Bit/Dock
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol ECModalEventHandler;
#import <Dock/Dock-Structs.h>
@class ECModalEventCapture, NSMutableArray, CALayer, NSMapTable;

@interface ECModalEventControllerHandler : NSObject {

	id<ECModalEventHandler> _handler;
	ECModalEventCapture* _mouseDownCapture;
	ECModalEventCapture* _mouseMovedCapture;
	ECModalEventCapture* _dragMovedCapture;
	NSMutableArray* _mouseEnterCaptures;
	NSMutableArray* _mouseDragEnterCaptures;
	NSMutableArray* _dragEnterCaptures;
	CALayer* _mouseDownHitLayer;
	CALayer* _captureLayer;
	NSMutableArray* _mouseUpCompletionBlocks;
	NSMapTable* _preObservers;
	NSMapTable* _postObservers;
	unsigned _mouseWasDragged : 1;
	unsigned _suppressDraggedEnterExits : 1;
	unsigned _usingMouseHysteresis : 1;
	CGPoint _hysteresisMouseLocation;
	long long _lastStage;

}

@property (nonatomic,readonly) id<ECModalEventHandler> handler;                    //@synthesize handler=_handler - In the implementation block
@property (nonatomic,retain) ECModalEventCapture * mouseDownCapture;               //@synthesize mouseDownCapture=_mouseDownCapture - In the implementation block
@property (nonatomic,retain) ECModalEventCapture * mouseMovedCapture;              //@synthesize mouseMovedCapture=_mouseMovedCapture - In the implementation block
@property (nonatomic,retain) ECModalEventCapture * dragMovedCapture;               //@synthesize dragMovedCapture=_dragMovedCapture - In the implementation block
@property (nonatomic,retain) CALayer * mouseDownHitLayer;                          //@synthesize mouseDownHitLayer=_mouseDownHitLayer - In the implementation block
@property (nonatomic,retain) CALayer * captureLayer;                               //@synthesize captureLayer=_captureLayer - In the implementation block
@property (assign,nonatomic) char mouseWasDragged;                                 //@synthesize mouseWasDragged=_mouseWasDragged - In the implementation block
@property (assign,nonatomic) char suppressDraggedEnterExits;                       //@synthesize suppressDraggedEnterExits=_suppressDraggedEnterExits - In the implementation block
@property (assign,nonatomic) long long lastStage;                                  //@synthesize lastStage=_lastStage - In the implementation block
-(void)addCompletionBlockOnMouseUp:(/*^block*/id)arg1 ;
-(void)removeEnterExits;
-(void)setSuppressDraggedEnterExits:(char)arg1 ;
-(char)suppressDraggedEnterExits;
-(id)initWithHandler:(id)arg1 usingMouseHysteresis:(char)arg2 ;
-(void)performMouseUpBlocksWithEvent:(id)arg1 ;
-(void)setMouseDownCapture:(ECModalEventCapture *)arg1 ;
-(void)setMouseDownHitLayer:(CALayer *)arg1 ;
-(void)setMouseMovedCapture:(ECModalEventCapture *)arg1 ;
-(void)exitEnterCaptures;
-(void)setCaptureLayer:(CALayer *)arg1 ;
-(id)observeEvent:(int)arg1 atStage:(unsigned char)arg2 usingSession:(id)arg3 withBlock:(/*^block*/id)arg4 ;
-(ECModalEventCapture *)mouseDownCapture;
-(void)handlePreEventObservers:(id)arg1 ;
-(void)setLastStage:(long long)arg1 ;
-(char)mouseWasDragged;
-(void)mouseMovedAtPoint:(CGPoint)arg1 withEvent:(id)arg2 inLayer:(id)arg3 topLayer:(id)arg4 handler:(id)arg5 window:(id)arg6 ;
-(void)setMouseWasDragged:(char)arg1 ;
-(ECModalEventCapture *)mouseMovedCapture;
-(void)mouseDraggedAtPoint:(CGPoint)arg1 withEvent:(id)arg2 inLayer:(id)arg3 topLayer:(id)arg4 handler:(id)arg5 window:(id)arg6 ;
-(CALayer *)mouseDownHitLayer;
-(void)handlePostEventObservers:(id)arg1 ;
-(void)exitDragEnterCaptures;
-(void)dragMovedAtPoint:(CGPoint)arg1 withEvent:(id)arg2 inLayer:(id)arg3 topLayer:(id)arg4 handler:(id)arg5 window:(id)arg6 ;
-(ECModalEventCapture *)dragMovedCapture;
-(void)setDragMovedCapture:(ECModalEventCapture *)arg1 ;
-(CALayer *)captureLayer;
-(long long)lastStage;
-(void)removeObserver:(id)arg1 ;
-(id<ECModalEventHandler>)handler;
@end

