/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:58:07 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Users/joris/Desktop/SysDecrypts/64-Bit/Dock
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <Dock/Dock-Structs.h>
@class NSString, NSArray, NSDictionary;

@interface _CGSSpace : NSObject {

	unsigned long long _spid;
	unsigned _cid;

}

@property (nonatomic,copy) NSString * name; 
@property (assign,nonatomic) int type; 
@property (nonatomic,copy) NSArray * owners; 
@property (assign,nonatomic) CGSRegionObjectRef shape; 
@property (nonatomic,readonly) CGSRegionObjectRef managedShape; 
@property (assign,nonatomic) CGAffineTransform transform; 
@property (assign,nonatomic) int absoluteLevel; 
@property (nonatomic,copy) NSDictionary * values; 
@property (nonatomic,readonly) unsigned long long spid;                      //@synthesize spid=_spid - In the implementation block
+(id)connection:(unsigned)arg1 windowsWithOwner:(unsigned)arg2 options:(int)arg3 setTags:(unsigned)arg4 clearTags:(unsigned)arg5 spaces:(id)arg6 ;
+(id)connection:(unsigned)arg1 createSpaceWithOptions:(int)arg2 type:(int)arg3 name:(id)arg4 owners:(id)arg5 ;
+(id)connection:(unsigned)arg1 spacesForWindows:(id)arg2 withOptions:(int)arg3 ;
+(void)connection:(unsigned)arg1 removeWindows:(id)arg2 fromSpaces:(id)arg3 ;
+(void)connection:(unsigned)arg1 resetWindows:(id)arg2 ;
+(unsigned)connection:(unsigned)arg1 windowWithRole:(int)arg2 forDisplay:(unsigned)arg3 ;
+(id)connection:(unsigned)arg1 spacesWithOptions:(int)arg2 ;
+(void)connection:(unsigned)arg1 hideSpaces:(id)arg2 ;
+(id)managedSpacesInfo:(unsigned)arg1 ;
+(void)connection:(unsigned)arg1 assignToAllSpaces:(int)arg2 ;
+(void)connection:(unsigned)arg1 unassignProcess:(int)arg2 ;
+(void)connection:(unsigned)arg1 willSwitchSpaces:(id)arg2 ;
+(void)connection:(unsigned)arg1 display:(id)arg2 isAnimating:(char)arg3 ;
+(void)connection:(unsigned)arg1 showSpaces:(id)arg2 ;
+(void)connection:(unsigned)arg1 addWindows:(id)arg2 toSpaces:(id)arg3 ;
+(id)managedSpaces:(unsigned)arg1 ;
+(BOOL)connection:(unsigned)arg1 windowOnManagedSpace:(id)arg2 ;
+(id)connection:(unsigned)arg1 associatedWindows:(unsigned)arg2 ;
-(unsigned long long)spid;
-(void)addWindows:(id)arg1 removingFrom:(int)arg2 ;
-(void)addWindow:(unsigned)arg1 ;
-(void)addWindow:(unsigned)arg1 usingConnection:(unsigned)arg2 ;
-(void)addWindows:(id)arg1 usingConnection:(unsigned)arg2 ;
-(id)windowsWithOwner:(unsigned)arg1 options:(int)arg2 setTags:(unsigned)arg3 clearTags:(unsigned)arg4 ;
-(void)setAbsoluteLevel:(int)arg1 ;
-(void)removeWindows:(id)arg1 ;
-(void)moveAllWindowsToSpace:(id)arg1 ;
-(char)isEqualToSpace:(id)arg1 ;
-(char)containsWindow:(unsigned)arg1 ;
-(void)resetMenuBar;
-(void)addWindows:(id)arg1 ;
-(void)setFrontPSN:(CPSProcessSerNum)arg1 ;
-(void)moveManagedSpaceToIndex:(unsigned)arg1 forDisplay:(id)arg2 ;
-(void)setOwners:(NSArray *)arg1 ;
-(NSArray *)owners;
-(void)preferCurrentDisplay;
-(id)initWithIdentifier:(unsigned long long)arg1 andConnection:(unsigned)arg2 ;
-(void)assignProcess:(int)arg1 ;
-(void)setAsCurrentSpaceForDisplay:(id)arg1 ;
-(CGSRegionObjectRef)managedShape;
-(int)absoluteLevel;
-(void)destroy;
-(CGSRegionObjectRef)shape;
-(void)setShape:(CGSRegionObjectRef)arg1 ;
-(void)addOwner:(int)arg1 ;
-(void)removeOwner:(int)arg1 ;
-(void)setValue:(id)arg1 forKey:(id)arg2 ;
-(id)description;
-(void)setName:(NSString *)arg1 ;
-(NSDictionary *)values;
-(void)setValues:(NSDictionary *)arg1 ;
-(char)isEqual:(id)arg1 ;
-(NSString *)name;
-(int)type;
-(CGAffineTransform)transform;
-(void)setType:(int)arg1 ;
-(void)hide;
-(void)setTransform:(CGAffineTransform)arg1 ;
-(void)show;
@end

