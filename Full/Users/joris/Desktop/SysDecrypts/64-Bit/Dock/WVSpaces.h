/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:58:05 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Users/joris/Desktop/SysDecrypts/64-Bit/Dock
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Dock/Dock-Structs.h>
#import <Dock/DOCKGestureHandler.h>

@protocol OS_dispatch_queue, OS_xpc_object;
@class NSObject, NSMutableDictionary, NSMutableArray, WVSpace, WVDisplaySpaces, NSArray, NSString;

@interface WVSpaces : NSObject <DOCKGestureHandler> {

	NSObject*<OS_dispatch_queue> _preferenceQueue;
	NSMutableDictionary* _appToSpaceTable;
	NSMutableArray* _displaySpaces;
	char _bringSpacesToCurrentSpace;
	WVSpace* _lastSpace;
	WVDisplaySpaces* _dashboardDisplay;
	NSObject*<OS_xpc_object> _fs_connection;
	BOOL _needToUpdateSpaces;
	BOOL _needToUpdateDesktopPicture;
	BOOL _logSpaceSwitchNotifications;

}

@property (nonatomic,readonly) NSArray * allUserSpaces; 
@property (nonatomic,readonly) NSArray * allSpaces; 
@property (nonatomic,readonly) NSArray * currentSpaces; 
@property (nonatomic,readonly) NSArray * displays; 
@property (nonatomic,readonly) WVSpace * dashboardSpace; 
@property (nonatomic,readonly) unsigned dashboardDisplay; 
@property (nonatomic,readonly) BOOL anySwitchingOccuring; 
@property (nonatomic,readonly) char dashboardIsCurrentOnSomeDisplay; 
@property (nonatomic,readonly) BOOL multipleDisplays; 
@property (nonatomic,readonly) NSString * detailedDescription; 
@property (nonatomic,readonly) unsigned messageTraceSpaceCount; 
@property (assign,nonatomic) char bringSpacesToCurrentSpace;                      //@synthesize bringSpacesToCurrentSpace=_bringSpacesToCurrentSpace - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(BOOL)switchToNextSpaceForApplication:(CPSProcessSerNum)arg1 ;
-(void)setBinding:(id)arg1 forBundleID:(id)arg2 ;
-(id)currentSpaceForDisplay:(unsigned)arg1 ;
-(id)infoForBindingMenu:(id)arg1 ;
-(id)bindingForBundleID:(id)arg1 ;
-(id)spaceWithUUID:(id)arg1 ;
-(id)firstUserSpaceForDisplay:(unsigned)arg1 ;
-(BOOL)anySwitchingOccuring;
-(id)currentSpaceOfDisplayThatContainsWindow:(unsigned)arg1 ;
-(void)prepareWindowForMinMax:(unsigned)arg1 duration:(double)arg2 ;
-(NSArray *)allUserSpaces;
-(NSArray *)currentSpaces;
-(void)handleDisplayReconfig;
-(char)dashboardIsCurrentOnSomeDisplay;
-(char)switchToSpaceForApplicationLaunch:(id)arg1 psn:(CPSProcessSerNum)arg2 ;
-(void)applicationDied:(int)arg1 ;
-(unsigned)messageTraceSpaceCount;
-(void)messageTraceBindings;
-(unsigned)dashboardDisplay;
-(WVSpace *)dashboardSpace;
-(void)toggleDashboardSpace:(BOOL)arg1 ;
-(void)disableDashboardSpace;
-(void)enableDashboardSpace:(id)arg1 ;
-(void)dashboardPIDRemoved:(int)arg1 ;
-(void)appOrderedFrontWithNoWindows:(int)arg1 ;
-(BOOL)multipleDisplays;
-(void)switchForWindowDrag:(char)arg1 ;
-(void)dashboardPIDAdded:(int)arg1 ;
-(id)initWithDashboardEnabledState:(int)arg1 ;
-(BOOL)isFluidGesturing;
-(void)fluidGestureEnd:(id)arg1 ;
-(BOOL)fluidGestureStart:(id)arg1 ;
-(void)fluidGestureProgress:(id)arg1 ;
-(id)spacesForDisplayID:(unsigned)arg1 ;
-(id)addUserSpaceForDisplay:(unsigned)arg1 ;
-(BOOL)displayHasMutltipleUserSpaces:(unsigned)arg1 ;
-(id)userSpacesForDisplayID:(unsigned)arg1 ;
-(void)removeUserSpace:(id)arg1 ;
-(BOOL)moveSpace:(id)arg1 afterSpace:(id)arg2 onDisplay:(unsigned)arg3 ;
-(unsigned long long)displayIndexForUserSpace:(id)arg1 ;
-(id)fadeInFloaterForPSN:(CPSProcessSerNum)arg1 onSpace:(id)arg2 display:(unsigned)arg3 ;
-(void)performDelayedSpaceChanges;
-(CGRect)rectForOffscreenWindow:(CGRect)arg1 space:(id)arg2 displaySize:(CGSize)arg3 ;
-(void)setCurrentSpace:(id)arg1 ;
-(void)switchForWindowDragFromKeyboard:(char)arg1 ;
-(char)switchToPreviousSpace:(char)arg1 ;
-(char)switchToNextSpace:(char)arg1 ;
-(char)switchToUserSpace:(unsigned long long)arg1 ;
-(void)_initializeSpaces:(id)arg1 dashboardEnabledState:(int)arg2 ;
-(void)_initializeFullscreen;
-(void)_windowOrderedInOnNonVisisbleSpaceNotification:(id)arg1 ;
-(void)_windowOrderedOutOnNonVisibleSpaceNotification:(id)arg1 ;
-(void)setBringSpacesToCurrentSpace:(char)arg1 ;
-(id)_bindingIdentifierForAppInfo:(id)arg1 ;
-(void)_saveSpacesToDisk;
-(void)_registerAppTableWithWindowServer;
-(void)_updateApplicationWorkspace;
-(void)_msgTakeFullscreen:(id)arg1 dictionary:(id)arg2 ;
-(void)_msgLeaveFullscreen:(id)arg1 dictionary:(id)arg2 ;
-(void)_msgTakeWindowToNewSpace:(id)arg1 dictionary:(id)arg2 ;
-(void)_msgSetNameOfFullscreen:(id)arg1 dictionary:(id)arg2 ;
-(void)_msgCreateFullscreenSpace:(id)arg1 dictionary:(id)arg2 ;
-(void)_msgAssociatePids:(id)arg1 dictionary:(id)arg2 ;
-(void)_msgRemoveFullscreenSpace:(id)arg1 dictionary:(id)arg2 ;
-(void)_msgSetRestoreState:(id)arg1 dictionary:(id)arg2 ;
-(void)_msgActivateNoWindowsInFullscreenSpace:(id)arg1 dictionary:(id)arg2 ;
-(void)_msgAddPidForDashboard:(id)arg1 dictionary:(id)arg2 ;
-(void)_msgRemovePidForDashboard:(id)arg1 dictionary:(id)arg2 ;
-(void)_msgUpdateSpace:(id)arg1 dictionary:(id)arg2 ;
-(void)_msgWindowDidResize:(id)arg1 dictionary:(id)arg2 ;
-(void)_acceptConnection:(id)arg1 ;
-(id)_bindingForUUID:(id)arg1 ;
-(NSArray *)allSpaces;
-(NSArray *)displays;
-(void)switchToLastSpace:(id)arg1 ;
-(id)currentSpaceforDisplayUUID:(id)arg1 ;
-(id)firstUserSpaceForDisplayUUID:(id)arg1 ;
-(id)userSpaceAtIndex:(unsigned long long)arg1 ;
-(unsigned)displayForSPID:(unsigned long long)arg1 ;
-(id)spacesForDisplay:(id)arg1 ;
-(BOOL)canAddUserSpaceForDisplay:(unsigned)arg1 ;
-(void)spaceDisplayFinishedAnimating;
-(unsigned)displayIDForSpace:(id)arg1 ;
-(void)addDelayedSpaceChangeForAllDisplays:(/*^block*/id)arg1 ;
-(CPSProcessSerNum)setCurrentPSNandFocus:(id)arg1 forSpace:(id)arg2 display:(unsigned)arg3 ;
-(CPSProcessSerNum)topPSNFromWindows:(id)arg1 ofSpace:(id)arg2 display:(unsigned)arg3 ;
-(char)bringSpacesToCurrentSpace;
-(NSString *)detailedDescription;
@end

