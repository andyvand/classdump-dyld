/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:58:13 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Users/joris/Desktop/SysDecrypts/64-Bit/mds
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <mds/mds-Structs.h>
#import <mds/MDSStoreImporterQueue.h>

@class StoreImporterQueueCoding, NSMutableArray;

@interface MDSStoreImporterQueueV2 : MDSStoreImporterQueue {

	StoreImporterQueueCoding* _innerQueue;
	char _canceled;
	SCD_Struct_MD33 _peekedQueueEntry;
	char _hasPeekedQueueEntry;
	char _didPlayBack;
	char _playbackError;
	long long _recoverTime;
	SStackRef _peekBuffer;
	long long _highestOidSeenInJournal;
	unsigned long long _impliedRetirement;
	unsigned long long _serialNumberPush;
	unsigned long long _transactionIdPop;
	unsigned long long _serialNumberPop;
	long long _approximateTimePop;
	int _countLastTimePushedThrough;
	long long _lastTimePushedThrough;
	char _partialPath[64];
	int _masterFD;
	int _journalFD;
	char _emptyJournal;
	unsigned long long _transactionIdToPush;
	char _didPushEndMarker;
	NSMutableArray* _journalArray;
	int _ignoreRetirementCount;
	int _playedbackCount;
	int _prepoppedCount;
	int _preretiredCount;
	int _pushedCount;
	int _poppedCount;
	int _retiredCount;
	int _duplicatePlaybackCount;
	unsigned long long _lastSerialNumberRetired;
	unsigned long long _firstSerialNumberPushed;
	int _journalDescriptor;
	char* _journalBuffer;
	unsigned long long _journalBufferUsed;
	char _fmwBusy;
	char _takePowerAssertionOnThreshold;
	char _powerAssertionHeld;

}
-(int)popUser:(int)arg1 items:(SCD_Struct_MD33*)arg2 andVSD:(id*)arg3 ;
-(void)pushBack:(SCD_Struct_MD33*)arg1 ;
-(void)journalPreRetire:(int)arg1 ;
-(char)journalRetire:(int)arg1 ;
-(void)journalAndPushUser:(unsigned)arg1 group:(unsigned)arg2 oid:(long long)arg3 pid:(int)arg4 withKernelTimeStamp:(unsigned long long)arg5 ;
-(void)detachForRelease;
-(void)journalAndPushUser:(unsigned)arg1 group:(unsigned)arg2 andOid:(long long)arg3 objectType:(int)arg4 importLevel:(int)arg5 flags:(int)arg6 withTimeStamp:(long long)arg7 ;
-(void)syncJournal;
-(id)initWithVSD:(id)arg1 masterFD:(int)arg2 clear:(char)arg3 name:(const char*)arg4 importSource:(int)arg5 updateBlock:(/*^block*/id)arg6 transactionBlock:(/*^block*/id)arg7 replayBlock:(/*^block*/id)arg8 ;
-(char)journalPlaybackError;
-(long long)journalPlaybackEndingTime;
-(int)prePop:(int)arg1 popBlock:(/*^block*/id)arg2 ;
-(unsigned long long)kernelTimeFromCIR:(SCD_Struct_St45*)arg1 ;
-(void)ignoreRetirement:(int)arg1 ;
-(int)pushedCount;
-(void)flushJournal;
-(int)playedbackCount;
-(int)prepoppedCount;
-(int)preretiredCount;
-(int)poppedCount;
-(int)queueCount;
-(int)retiredCount;
-(int)duplicatePlaybackCount;
-(char)itemComplete;
-(void)internalDetachForRelease:(char)arg1 ;
-(void)journalAndPushTransactionId:(int)arg1 atTime:(long long)arg2 ;
-(void)journalAndPushEndMarkerAtTime:(long long)arg1 ;
-(char)didPlayback;
-(long long)highestOidFromJournal;
-(void)waitForBackupClear:(/*^block*/id)arg1 ;
-(void)backupCancel:(int)arg1 ;
-(void)emptyQueue;
-(void)addFileToJournalsArray:(id)arg1 ;
-(void)updateAndCleanJournalsArray:(char)arg1 ;
-(void)internalFlushJournal;
-(char)parseJournalFile:(int)arg1 duplicateArray:(RLEOIDArrayRef)arg2 recoverTime:(long long*)arg3 transactionBlock:(/*^block*/id)arg4 replayBlock:(/*^block*/id)arg5 ;
-(id)initWithVSD:(id)arg1 masterFD:(int)arg2 clear:(char)arg3 name:(const char*)arg4 importSource:(int)arg5 updateBlock:(/*^block*/id)arg6 transactionBlock:(/*^block*/id)arg7 replayBlock:(/*^block*/id)arg8 isBackupQueue:(BOOL)arg9 ;
-(void)internalRecordJournalData:(char*)arg1 ofLength:(unsigned long long)arg2 ;
-(void)prepareEmptyJournal:(long long)arg1 ;
-(char)pushIndexForUser:(unsigned)arg1 group:(unsigned)arg2 filter:(SCD_Struct_MD31)arg3 andOid:(long long)arg4 flags:(int)arg5 whenDone:(/*^block*/id)arg6 ;
-(void)dealloc;
-(void)dropPowerAssertion;
-(void)takePowerAssertion;
@end

