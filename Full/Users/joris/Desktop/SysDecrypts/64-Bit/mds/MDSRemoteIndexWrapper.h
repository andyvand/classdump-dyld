/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:58:14 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Users/joris/Desktop/SysDecrypts/64-Bit/mds
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <mds/mds-Structs.h>
#import <mds/MDSTwoFaceMachPortObject.h>
#import <mds/MDSIndexWrapper.h>
#import <mds/MDSPSIDStoreWrapper.h>

@protocol MDSWrapperDelegate, OS_dispatch_queue;
@class NSObject, MDSLeafQueueContext, MDSLocalIndexWrapper;

@interface MDSRemoteIndexWrapper : MDSTwoFaceMachPortObject <MDSIndexWrapper, MDSPSIDStoreWrapper> {

	id<MDSWrapperDelegate> _delegate;
	unsigned long long _delegateQueueToken;
	NSObject*<OS_dispatch_queue> _delegateBackgroundQueue;
	MDSLeafQueueContext* _workQueues;
	unsigned _machPort;
	unsigned _remotePort;
	unsigned _backgroundRemotePort;
	int _masterFd;
	int _spindle;
	BOOL closed;
	BOOL closing;
	BOOL open;
	BOOL opening;
	BOOL _hasOutstandingPermissions;
	CFDictionaryRef _locked_replyBlocks;
	CFDictionaryRef _locked_statusReplyBlocks;
	CFDictionaryRef _locked_openReplyBlocks;
	CFDictionaryRef _locked_closeReplyBlocks;
	CFDictionaryRef _locked_synchedOpBlocks;
	CFDictionaryRef _locked_fdBlocks;
	CFDictionaryRef _locked_gatherReplyBlocks;
	/*^block*/id _locked_scancountblock;
	unsigned long long _scancountid;
	opaque_pthread_mutex_t _blockLock;
	SCD_Struct_MD66* _volumeParams;
	SI_PersistentIDStoreRef _psidStore;
	BOOL _userAccess;
	CFSetRef _localTasks;
	MDSLocalIndexWrapper* _localIndexWrapper;
	SCD_Struct_MD67* _storeInfo;
	PossibleMovesHolder_s* _dirMoves;
	PossibleMovesHolder_s* _fileMoves;
	PossibleMovesHolder_s* _healthChecks;

}
+(void)shutdownProcess;
+(void)startProcessTermination;
+(void)cullAccessToken:(SCD_Struct_MD1)arg1 ;
+(void)setDebugLevels:(MDPlistBytesRef)arg1 ;
-(void)invalidateRunLoopSources;
-(void)preHeatPermissions:(RLEOIDArrayRef)arg1 ;
-(void)preHeatPermissionCache:(char)arg1 ;
-(SI_PersistentIDStoreRef)persistentIDStore;
-(void)performSynchedOpWithSpec:(int)arg1 block:(/*^block*/id)arg2 ;
-(int)minimizeDiskSpace;
-(void)preHeatIndex:(id)arg1 ;
-(void)blowPermCache;
-(BOOL)hasOutstandingPermissions;
-(CFStringRef)copySchedulerDump;
-(void)_preHeat:(RLEOIDArrayRef)arg1 forUser:(id)arg2 ;
-(void)likelyShutdown:(BOOL*)arg1 ;
-(void)processEvents:(char*)arg1 length:(unsigned long long)arg2 shutdown:(BOOL)arg3 ;
-(char*)getFastPathForOid:(long long)arg1 buffer:(char*)arg2 ;
-(void)issueCommand:(int)arg1 ;
-(void)setStoreProperty:(void*)arg1 forKey:(CFStringRef)arg2 ;
-(void*)copyStorePropertyForKey:(CFStringRef)arg1 ;
-(void)getTextCacheWithAccessToken:(id)arg1 forOids:(long long*)arg2 count:(unsigned long long)arg3 replyBlock:(/*^block*/id)arg4 ;
-(int)syncIndex;
-(int)syncIndexVacuumIfNeeded;
-(int)indexInactive;
-(char*)getRealPathForOid:(long long)arg1 buffer:(char*)arg2 ;
-(void)fetchAttributes:(CFArrayRef)arg1 forOIDArray:(MDStoreOIDArrayRef)arg2 correlationID:(unsigned long long)arg3 taskID:(unsigned)arg4 requestID:(int)arg5 storeToken:(id)arg6 accessToken:(id)arg7 flags:(unsigned)arg8 replyBlock:(/*^block*/id)arg9 ;
-(void)fetchAttributeNamesForOIDArray:(MDStoreOIDArrayRef)arg1 correlationID:(unsigned long long)arg2 taskID:(unsigned)arg3 requestID:(int)arg4 storeToken:(id)arg5 accessToken:(id)arg6 flags:(unsigned)arg7 replyBlock:(/*^block*/id)arg8 ;
-(void)fetchQueryResultsForTaskID:(unsigned)arg1 correlationID:(unsigned long long)arg2 storeToken:(id)arg3 replyBlock:(/*^block*/id)arg4 ;
-(char)hasPersistentUUID;
-(long long)oidForCPath:(const char*)arg1 hint:(long long)arg2 flags:(int)arg3 ;
-(void)rename:(const char*)arg1 to:(const char*)arg2 ;
-(void)handOverOutstandingBackupPermChecks;
-(int)deleteAttributes:(long long*)arg1 count:(long long)arg2 ;
-(id)initWithDelegate:(id)arg1 queue:(unsigned long long)arg2 backgroundQueue:(id)arg3 spindle:(int)arg4 ;
-(void)flushPossibleMoves;
-(int)openIndexWithFileDescriptor:(int)arg1 parameters:(id)arg2 docCounts:(SCD_Struct_MD25*)arg3 signature:(char)arg4 ;
-(void)shutdownIndex;
-(void)startPreheatScheduler;
-(double)getRecoverTimeStamp;
-(void)addQueryResults:(MDStoreOIDArrayRef)arg1 plistBytes:(MDPlistBytesRef)arg2 correlationID:(unsigned long long)arg3 forTaskID:(unsigned)arg4 ;
-(void)openQueryWithParams:(id)arg1 correlationID:(unsigned long long)arg2 taskID:(unsigned)arg3 requestID:(int)arg4 storeToken:(id)arg5 accessToken:(id)arg6 filter:(id)arg7 flags:(unsigned)arg8 replyBlock:(/*^block*/id)arg9 ;
-(void)closeQueryForTaskID:(unsigned)arg1 correlationID:(unsigned long long)arg2 requestID:(int)arg3 storeToken:(id)arg4 replyBlock:(/*^block*/id)arg5 ;
-(void)storeAttributes:(MDPlistBytesRef)arg1 forOIDArray:(MDStoreOIDArrayRef)arg2 withImporterInfoArray:(id)arg3 correlationID:(unsigned long long)arg4 taskID:(unsigned)arg5 requestID:(int)arg6 storeToken:(id)arg7 accessToken:(id)arg8 flags:(int)arg9 source:(int)arg10 transactionID:(unsigned long long)arg11 qos:(unsigned)arg12 replyBlock:(/*^block*/id)arg13 ;
-(void)storeAttributesFromImporter:(MDPlistBytesRef)arg1 forOIDs:(MDStoreOIDArrayRef)arg2 withParents:(MDStoreOIDArrayRef)arg3 withImporterInfoArray:(id)arg4 correlationID:(unsigned long long)arg5 taskID:(unsigned)arg6 requestID:(int)arg7 storeToken:(id)arg8 accessToken:(id)arg9 flags:(int)arg10 source:(int)arg11 transactionID:(unsigned long long)arg12 qos:(unsigned)arg13 replyBlock:(/*^block*/id)arg14 ;
-(BOOL)suitableForPermissonPreheat;
-(void)dirtyPermissionCache;
-(void)flushPermissionCache;
-(int)serialize:(int)arg1 ;
-(void)scanQueuesDrained;
-(void)initialIndexingStarted;
-(int)initialIndexingEnded:(unsigned long long)arg1 ;
-(void)setScanCount:(unsigned long long)arg1 fullScan:(BOOL)arg2 replyBlock:(/*^block*/id)arg3 ;
-(void)setCount:(unsigned long long)arg1 forTransaction:(unsigned long long)arg2 flags:(int)arg3 ;
-(void)possibleMove:(long long)arg1 to:(long long)arg2 ;
-(void)possibleFileMove:(long long)arg1 to:(long long)arg2 ;
-(void)possibleMoveFiles:(long long*)arg1 count:(long long)arg2 ;
-(void)healthCheck:(long long)arg1 directory:(int)arg2 systemFile:(int)arg3 ;
-(long long)largestOid;
-(unsigned long long)maxTransactionId;
-(int)calculateSize:(/*function pointer*/void*)arg1 context:(void*)arg2 ;
-(void)processOutstandingPermChecks;
-(void)restorePermissionCache:(BOOL)arg1 ;
-(void)checkSizes:(long long)arg1 ;
-(BOOL)getParentsForOids:(long long*)arg1 count:(long long)arg2 buffer:(long long*)arg3 ;
-(BOOL)isLocalPSIDStore;
-(id)copySpindleWorkQueueForPolicy:(unsigned)arg1 ;
-(void)setVolumeParams:(SCD_Struct_MD68*)arg1 ;
-(void)indexerDeath:(id)arg1 ;
-(void)killAllTasks;
-(void)setOpenStatusBlock:(/*^block*/id)arg1 forTaskID:(unsigned)arg2 ;
-(void)setGatherBlock:(/*^block*/id)arg1 forTaskID:(unsigned)arg2 ;
-(/*^block*/id)takeGatherBlockForTaskID:(unsigned)arg1 ;
-(void)setCloseStatusBlock:(/*^block*/id)arg1 forTaskID:(unsigned)arg2 ;
-(void)setBlock:(/*^block*/id)arg1 forTaskID:(unsigned)arg2 ;
-(/*^block*/id)takeBlockForTaskID:(unsigned)arg1 ;
-(void)fetchAttributesHelper:(int)arg1 items:(MDStoreOIDArrayRef)arg2 nameArray:(CFArrayRef)arg3 correlationID:(unsigned long long)arg4 taskID:(unsigned)arg5 requestID:(int)arg6 storeToken:(id)arg7 accessToken:(id)arg8 flags:(unsigned)arg9 plist:(MDPlistBytesRef)arg10 replyBlock:(/*^block*/id)arg11 ;
-(void)setStatusBlock:(/*^block*/id)arg1 forTaskID:(unsigned)arg2 ;
-(/*^block*/id)takeStatusBlockForTaskID:(unsigned)arg1 ;
-(BOOL)setFDBlock:(/*^block*/id)arg1 forID:(long long)arg2 ;
-(/*^block*/id)takeFDBlockForID:(long long)arg1 ;
-(BOOL)setSyncBlock:(/*^block*/id)arg1 forID:(long long)arg2 ;
-(/*^block*/id)takeSyncBlockForID:(long long)arg1 ;
-(/*^block*/id)takeOpenStatusBlockForTaskID:(unsigned)arg1 ;
-(/*^block*/id)takeCloseStatusBlockForTaskID:(unsigned)arg1 ;
-(CFUUIDRef)uuid;
-(void)setMachPort:(unsigned)arg1 ;
-(unsigned)machPort;
-(void)setDelegate:(id)arg1 ;
-(void)dealloc;
-(void)close:(char)arg1 ;
-(void)setRootPath:(const char*)arg1 ;
-(void)shutdown;
@end

