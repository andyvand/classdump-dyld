/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:58:13 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Users/joris/Desktop/SysDecrypts/64-Bit/mds
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <mds/mds-Structs.h>
@class NSString, MDSDisk, NSMutableSet, NSMutableDictionary;

@interface MDSVolumeConfig : NSObject {

	NSString* _configPath;
	NSString* _configLegacyPath;
	NSString* _prefix;
	MDCredential _credential;
	MDSDisk* _mdsDisk;
	int _legacySearchLevel;
	char _legacyBootstrap;
	char _didBootstrap;
	char _loadedNewConfig;
	char _migrated;
	char _isReadOnly;
	char _hasRootStore;
	char _hasVersionOccludedRootStore;
	char _hasFSAtCreationRootStore;
	char _isExclusionsModified;
	char _isBackupLegacy;
	char _defaultIsLegacy;
	int _configType;
	NSMutableSet* _masterExclusions;
	char _exclusionsModified;
	NSMutableDictionary* _masterVolumeConfig;
	NSMutableDictionary* _masterStores;
	char _masterStoresModified;
	NSMutableDictionary* _masterOptions;
	NSMutableDictionary* _legacyStores;
	char _legacyStoresModifed;
	NSMutableDictionary* _workingStoresByUUID;
	NSMutableDictionary* _olderVersionsByUUID;
	NSMutableDictionary* _uuidsByPartialPath;

}
-(void)iterateAllConfigs:(/*^block*/id)arg1 ;
-(id)exclusions;
-(id)initWithConfigDirectoryPath:(id)arg1 legacyPath:(id)arg2 credential:(MDCredential)arg3 prefix:(id)arg4 defaultLegacy:(char)arg5 isBackupLegacy:(char)arg6 isReadOnly:(char)arg7 mdsDisk:(id)arg8 ;
-(void)mergeConfig:(id)arg1 atPartialPath:(id)arg2 ;
-(id)attributesForStoreUUIDKey:(id)arg1 ;
-(id)partialPathForStoreUUIDKey:(id)arg1 ;
-(int)policySearchForStoreUUIDKey:(id)arg1 ;
-(char)isLegacyStoreUUIDKey:(id)arg1 ;
-(id)findStoreUUIDWithPartialPath:(id)arg1 ;
-(id)storeUUIDKeys;
-(id)olderVersionStoreUUIDKeys;
-(char)hasConfigDirectoryPath;
-(void)setConfigDirectoryPath:(id)arg1 legacyPath:(id)arg2 ;
-(void)setConfigType:(int)arg1 ;
-(void)addExclusion:(id)arg1 ;
-(void)removeExclusion:(id)arg1 ;
-(id)addStoreWithPartialPath:(id)arg1 policySearch:(int)arg2 forBackupKind:(int)arg3 ;
-(char)updateStoreUUIDKeyForVersion:(id)arg1 ;
-(void)updateStoreUUIDKey:(id)arg1 ;
-(void)removeStoreUUIDKey:(id)arg1 ;
-(void)setPolicySearch:(int)arg1 forStoreUUIDKey:(id)arg2 processName:(id)arg3 attributes:(id)arg4 ;
-(char)isExclusion:(id)arg1 ;
-(void)iterateAllExclusions:(/*^block*/id)arg1 ;
-(int)highestPolicySearch;
-(char)didBootstrap;
-(void)setAnnotation:(id)arg1 forKey:(id)arg2 ;
-(id)addStoreWithPartialPath:(id)arg1 policySearch:(int)arg2 ;
-(char)isLegacy;
-(char)isRootStoreOccludedAtLoad;
-(char)isRootStoreFSAtCreation;
-(char)setLegacySearchLevel:(int)arg1 ;
-(char)loadedNewConfig;
-(char)isUUIDKeyKnown:(id)arg1 ;
-(id)systemVersionString;
-(char)saveOldConfig;
-(char)saveNewConfig:(char)arg1 ;
-(void)ensureWorkingObjects;
-(char)loadNewConfig;
-(char)loadOldConfig:(int)arg1 ;
-(MDCredential)credential;
-(void)dealloc;
-(char)load;
-(char)isModified;
-(char)save;
@end

