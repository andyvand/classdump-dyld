/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:58:13 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Users/joris/Desktop/SysDecrypts/64-Bit/mds
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <mds/mds-Structs.h>
#import <mds/MDSStore.h>
#import <mds/MDSStore.h>
#import <mds/MDSVolumeStore.h>

@protocol OS_dispatch_source;
@class MDSDisk, MDSVolumeStoreDescriptor, NSObject, NSString;

@interface MDSDistantStore : MDSStore <MDSStore, MDSVolumeStore> {

	MDSDisk* _disk;
	MDSVolumeStoreDescriptor* _vsd;
	CFDictionaryRef _channelProperties;
	CFDictionaryRef _peerProperties;
	CFDictionaryRef _properties;
	CFUUIDRef _uuid;
	unsigned _tokenID;
	CFStringRef _localPath;
	CFStringRef _localPathPrefix;
	CFStringRef _storePath;
	CFStringRef _storePathPrefix;
	NSObject*<OS_dispatch_source> _recycleTimer;
	char _didStoreBringUpFail;
	_MDSChannel* _channel;
	CFDictionaryRef _channelAccessTokenCache;
	NSString* comment;

}

@property (retain) NSString * comment; 
-(void)internal_startup;
-(CFDictionaryRef)getProperties;
-(id)mdsDisk;
-(unsigned)storeTokenID;
-(unsigned)fsonlyTokenID;
-(int)searchLevel;
-(char)openStore;
-(void)vsdInitialized;
-(void)closeStore:(/*^block*/id)arg1 ;
-(id)getStoreInfo:(unsigned)arg1 ;
-(void)fetchAttributes:(CFArrayRef)arg1 forOIDArray:(MDStoreOIDArrayRef)arg2 correlationID:(unsigned long long)arg3 taskID:(unsigned)arg4 requestID:(int)arg5 storeToken:(id)arg6 accessToken:(id)arg7 flags:(unsigned)arg8 replyBlock:(/*^block*/id)arg9 ;
-(void)fetchAttributeNamesForOIDArray:(MDStoreOIDArrayRef)arg1 correlationID:(unsigned long long)arg2 taskID:(unsigned)arg3 requestID:(int)arg4 storeToken:(id)arg5 accessToken:(id)arg6 flags:(unsigned)arg7 replyBlock:(/*^block*/id)arg8 ;
-(void)openQueryWithParams:(CFDictionaryRef)arg1 correlationID:(unsigned long long)arg2 taskID:(unsigned)arg3 requestID:(int)arg4 storeToken:(id)arg5 accessToken:(id)arg6 flags:(unsigned)arg7 replyBlock:(/*^block*/id)arg8 ;
-(void)closeQueryForTaskID:(unsigned)arg1 correlationID:(unsigned long long)arg2 requestID:(int)arg3 storeToken:(id)arg4 accessToken:(id)arg5 replyBlock:(/*^block*/id)arg6 ;
-(void)fetchQueryResultsForTaskID:(unsigned)arg1 correlationID:(unsigned long long)arg2 storeToken:(id)arg3 replyBlock:(/*^block*/id)arg4 ;
-(void)storeAttributes:(MDPlistBytesRef)arg1 forOIDArray:(MDStoreOIDArrayRef)arg2 correlationID:(unsigned long long)arg3 taskID:(unsigned)arg4 requestID:(int)arg5 storeToken:(id)arg6 accessToken:(id)arg7 qos:(unsigned)arg8 replyBlock:(/*^block*/id)arg9 ;
-(void)storeAttributesFromImporter:(MDPlistBytesRef)arg1 forOIDs:(MDStoreOIDArrayRef)arg2 correlationID:(unsigned long long)arg3 taskID:(unsigned)arg4 requestID:(int)arg5 storeToken:(id)arg6 accessToken:(id)arg7 qos:(unsigned)arg8 replyBlock:(/*^block*/id)arg9 ;
-(void)closeAllTasks;
-(void)queueRecycle:(id)arg1 ;
-(void)processScope:(CFStringRef)arg1 intoArray:(CFArrayRef)arg2 ;
-(CFArrayRef)createScopeArray:(CFArrayRef)arg1 recurse:(char)arg2 ;
-(void)channelFailed;
-(void)fetchAllAttributeNamesForOIDArray:(MDStoreOIDArrayRef)arg1 correlationID:(unsigned long long)arg2 taskID:(unsigned)arg3 requestID:(int)arg4 storeToken:(id)arg5 accessToken:(id)arg6 replyBlock:(/*^block*/id)arg7 ;
-(void)fetchAllAttributes:(CFArrayRef)arg1 forOIDArray:(MDStoreOIDArrayRef)arg2 correlationID:(unsigned long long)arg3 taskID:(unsigned)arg4 requestID:(int)arg5 storeToken:(id)arg6 accessToken:(id)arg7 replyBlock:(/*^block*/id)arg8 ;
-(CFDictionaryRef)rewriteQueryParams:(CFDictionaryRef)arg1 ;
-(char)hasPersistentUUID;
-(id)initWithChannel:(_MDSChannel*)arg1 storeDescriptor:(id)arg2 ;
-(void)closeQueryForTaskIDAtShutdown:(unsigned)arg1 correlationID:(unsigned long long)arg2 requestID:(int)arg3 accessToken:(id)arg4 replyBlock:(/*^block*/id)arg5 ;
-(CFUUIDRef)uuid;
-(const char*)partialPath;
-(id)accessToken;
-(void)dealloc;
-(id)description;
-(int)device;
-(NSString *)comment;
-(void)setComment:(NSString *)arg1 ;
-(void)shutdown;
@end

