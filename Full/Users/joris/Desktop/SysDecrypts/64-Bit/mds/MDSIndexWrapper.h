/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:58:14 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Users/joris/Desktop/SysDecrypts/64-Bit/mds
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <mds/mds-Structs.h>
#import <mds/MDSDiskStoreHelper.h>
#import <mds/MDSIndexWrapper.h>

@protocol MDSIndexWrapper
@required
-(void)preHeatPermissions:(RLEOIDArrayRef)arg1;
-(void)preHeatPermissionCache:(char)arg1;
-(SI_PersistentIDStoreRef)persistentIDStore;
-(void)performSynchedOpWithSpec:(int)arg1 block:(/*^block*/id)arg2;
-(int)minimizeDiskSpace;
-(void)preHeatIndex:(id)arg1;
-(void)blowPermCache;
-(CFStringRef)copySchedulerDump;
-(void)_preHeat:(RLEOIDArrayRef)arg1 forUser:(id)arg2;
-(void)likelyShutdown:(BOOL*)arg1;
-(void)processEvents:(char*)arg1 length:(unsigned long long)arg2 shutdown:(BOOL)arg3;
-(void)issueCommand:(int)arg1;
-(void)setStoreProperty:(void*)arg1 forKey:(CFStringRef)arg2;
-(void*)copyStorePropertyForKey:(CFStringRef)arg1;
-(void)getTextCacheWithAccessToken:(id)arg1 forOids:(long long*)arg2 count:(unsigned long long)arg3 replyBlock:(/*^block*/id)arg4;
-(int)syncIndex;
-(int)syncIndexVacuumIfNeeded;
-(int)indexInactive;
-(void)fetchAttributes:(CFArrayRef)arg1 forOIDArray:(MDStoreOIDArrayRef)arg2 correlationID:(unsigned long long)arg3 taskID:(unsigned)arg4 requestID:(int)arg5 storeToken:(id)arg6 accessToken:(id)arg7 flags:(unsigned)arg8 replyBlock:(/*^block*/id)arg9;
-(void)fetchAttributeNamesForOIDArray:(MDStoreOIDArrayRef)arg1 correlationID:(unsigned long long)arg2 taskID:(unsigned)arg3 requestID:(int)arg4 storeToken:(id)arg5 accessToken:(id)arg6 flags:(unsigned)arg7 replyBlock:(/*^block*/id)arg8;
-(void)fetchQueryResultsForTaskID:(unsigned)arg1 correlationID:(unsigned long long)arg2 storeToken:(id)arg3 replyBlock:(/*^block*/id)arg4;
-(char)hasPersistentUUID;
-(int)deleteAttributes:(long long*)arg1 count:(long long)arg2;
-(void)flushPossibleMoves;
-(int)openIndexWithFileDescriptor:(int)arg1 parameters:(id)arg2 docCounts:(SCD_Struct_MD25*)arg3 signature:(char)arg4;
-(void)shutdownIndex;
-(void)startPreheatScheduler;
-(double)getRecoverTimeStamp;
-(void)addQueryResults:(MDStoreOIDArrayRef)arg1 plistBytes:(MDPlistBytesRef)arg2 correlationID:(unsigned long long)arg3 forTaskID:(unsigned)arg4;
-(void)openQueryWithParams:(id)arg1 correlationID:(unsigned long long)arg2 taskID:(unsigned)arg3 requestID:(int)arg4 storeToken:(id)arg5 accessToken:(id)arg6 filter:(id)arg7 flags:(unsigned)arg8 replyBlock:(/*^block*/id)arg9;
-(void)closeQueryForTaskID:(unsigned)arg1 correlationID:(unsigned long long)arg2 requestID:(int)arg3 storeToken:(id)arg4 replyBlock:(/*^block*/id)arg5;
-(void)storeAttributes:(MDPlistBytesRef)arg1 forOIDArray:(MDStoreOIDArrayRef)arg2 withImporterInfoArray:(id)arg3 correlationID:(unsigned long long)arg4 taskID:(unsigned)arg5 requestID:(int)arg6 storeToken:(id)arg7 accessToken:(id)arg8 flags:(int)arg9 source:(int)arg10 transactionID:(unsigned long long)arg11 qos:(unsigned)arg12 replyBlock:(/*^block*/id)arg13;
-(void)storeAttributesFromImporter:(MDPlistBytesRef)arg1 forOIDs:(MDStoreOIDArrayRef)arg2 withParents:(MDStoreOIDArrayRef)arg3 withImporterInfoArray:(id)arg4 correlationID:(unsigned long long)arg5 taskID:(unsigned)arg6 requestID:(int)arg7 storeToken:(id)arg8 accessToken:(id)arg9 flags:(int)arg10 source:(int)arg11 transactionID:(unsigned long long)arg12 qos:(unsigned)arg13 replyBlock:(/*^block*/id)arg14;
-(BOOL)suitableForPermissonPreheat;
-(void)dirtyPermissionCache;
-(void)flushPermissionCache;
-(int)serialize:(int)arg1;
-(void)scanQueuesDrained;
-(void)initialIndexingStarted;
-(int)initialIndexingEnded:(unsigned long long)arg1;
-(void)setScanCount:(unsigned long long)arg1 fullScan:(BOOL)arg2 replyBlock:(/*^block*/id)arg3;
-(void)setCount:(unsigned long long)arg1 forTransaction:(unsigned long long)arg2 flags:(int)arg3;
-(void)possibleMove:(long long)arg1 to:(long long)arg2;
-(void)possibleFileMove:(long long)arg1 to:(long long)arg2;
-(void)possibleMoveFiles:(long long*)arg1 count:(long long)arg2;
-(void)healthCheck:(long long)arg1 directory:(int)arg2 systemFile:(int)arg3;
-(long long)largestOid;
-(unsigned long long)maxTransactionId;
-(int)calculateSize:(/*function pointer*/void*)arg1 context:(void*)arg2;
-(void)processOutstandingPermChecks;
-(void)restorePermissionCache:(BOOL)arg1;
-(void)checkSizes:(long long)arg1;
-(CFUUIDRef)uuid;
-(void)setDelegate:(id)arg1;
-(void)close:(char)arg1;

@end

#import <mds/MDSPSIDStoreWrapper.h>

@protocol OS_dispatch_queue, OS_dispatch_source;
@class NSObject, NSMapTable, NSString, MDSPathFilter, NSMutableArray;

@interface MDSIndexWrapper : MDSDiskStoreHelper <MDSIndexWrapper, MDSPSIDStoreWrapper> {

	double _shutDownNotificationTime;
	MDCredential _psidStoreCredential;
	NSObject*<OS_dispatch_queue> _permCacheQueue;
	NSMapTable* _lockedPermCaches;
	NSMapTable* _lockedScopeCaches;
	NSMapTable* _lockedUserCtxCaches;
	RLEOIDArrayRef _outstandingPermChecks;
	BOOL _isBackupStore;
	BOOL _isBackup;
	BOOL _isMobileBackup;
	BOOL _legacyIndex;
	BOOL _didSerializePermissionCache;
	int _serializePermissionFd;
	SCD_Struct_MD56 _permissionJournal;
	BOOL _permCacheDirty;
	opaque_pthread_mutex_t _contextObjectLock;
	CFDictionaryRef _contextObjectDictionary;
	BOOL _repairRequested;
	NSString* _debugWhyBaseTime;
	MDSPathFilter* _filter;
	int _searchLevel;
	unsigned long long _powerToken;
	BOOL _closed;
	BOOL _closing;
	PossibleMovesHolder_s* _dirMoves;
	PossibleMovesHolder_s* _fileMoves;
	PossibleMovesHolder_s* _healthChecks;
	int _openCancel;
	NSMutableArray* _waitingQueries;
	SI_PersistentIDStoreRef _psidStore;
	SIRef _index;
	NSObject*<OS_dispatch_source> _liveUpdateTimer;
	BOOL _liveUpdateTimerSuspended;

}
+(void)_logLevelChanged;
+(void)initialize;
-(void)preHeatPermissions:(RLEOIDArrayRef)arg1 ;
-(void)preHeatPermissionCache:(char)arg1 ;
-(SI_PersistentIDStoreRef)persistentIDStore;
-(void)performSynchedOpWithSpec:(int)arg1 block:(/*^block*/id)arg2 ;
-(int)minimizeDiskSpace;
-(void)preHeatIndex:(id)arg1 ;
-(void)blowPermCache;
-(CFStringRef)copySchedulerDump;
-(void)_preHeat:(RLEOIDArrayRef)arg1 forUser:(id)arg2 ;
-(void)likelyShutdown:(BOOL*)arg1 ;
-(void)processEvents:(char*)arg1 length:(unsigned long long)arg2 shutdown:(BOOL)arg3 ;
-(char*)getFastPathForOid:(long long)arg1 buffer:(char*)arg2 ;
-(void)issueCommand:(int)arg1 ;
-(void)setStoreProperty:(void*)arg1 forKey:(CFStringRef)arg2 ;
-(void*)copyStorePropertyForKey:(CFStringRef)arg1 ;
-(void)getTextCacheWithAccessToken:(id)arg1 forOids:(long long*)arg2 count:(unsigned long long)arg3 replyBlock:(/*^block*/id)arg4 ;
-(int)syncIndex;
-(int)syncIndexVacuumIfNeeded;
-(int)indexInactive;
-(char*)getRealPathForOid:(long long)arg1 buffer:(char*)arg2 ;
-(void)fetchAttributes:(CFArrayRef)arg1 forOIDArray:(MDStoreOIDArrayRef)arg2 correlationID:(unsigned long long)arg3 taskID:(unsigned)arg4 requestID:(int)arg5 storeToken:(id)arg6 accessToken:(id)arg7 flags:(unsigned)arg8 replyBlock:(/*^block*/id)arg9 ;
-(void)fetchAttributeNamesForOIDArray:(MDStoreOIDArrayRef)arg1 correlationID:(unsigned long long)arg2 taskID:(unsigned)arg3 requestID:(int)arg4 storeToken:(id)arg5 accessToken:(id)arg6 flags:(unsigned)arg7 replyBlock:(/*^block*/id)arg8 ;
-(void)fetchQueryResultsForTaskID:(unsigned)arg1 correlationID:(unsigned long long)arg2 storeToken:(id)arg3 replyBlock:(/*^block*/id)arg4 ;
-(void)setObject:(id)arg1 forTaskID:(unsigned)arg2 ;
-(char)hasPersistentUUID;
-(long long)oidForCPath:(const char*)arg1 hint:(long long)arg2 flags:(int)arg3 ;
-(void)rename:(const char*)arg1 to:(const char*)arg2 ;
-(void)runInternalQuery:(id)arg1 scopes:(id)arg2 valueList:(id)arg3 flags:(int)arg4 block:(/*^block*/id)arg5 ;
-(void)startDirStatChangeWithOids:(long long*)arg1 count:(long long)arg2 ;
-(id)lockedCopyPermissionsCacheForToken:(id)arg1 allowCreate:(char)arg2 ;
-(id)copyPermissionsCacheForToken:(id)arg1 allowCreate:(char)arg2 ;
-(void)setScopeCache:(id)arg1 forAccessToken:(id)arg2 ;
-(SIUserCtxRef)copyCachedUserCtxForToken:(id)arg1 allowCreate:(char)arg2 ;
-(id)copyPermissionsCacheForToken:(id)arg1 ;
-(id)copyScopeCacheForToken:(id)arg1 scope:(CFStringRef)arg2 ;
-(void)addToOutStandingPermChecksLocked:(long long*)arg1 count:(long long)arg2 ;
-(void)addToOutStandingPermChecks:(long long*)arg1 count:(long long)arg2 ;
-(BOOL)moveFiles:(char*)arg1 count:(long long)arg2 ;
-(void)updatePermCacheForFiles:(long long*)arg1 count:(int)arg2 deletes:(char)arg3 noCopy:(char)arg4 ;
-(BOOL)moveDirectories:(char*)arg1 count:(long long)arg2 ;
-(void)setPermissionsCache:(id)arg1 forAccessToken:(id)arg2 ;
-(void)_replayPermJournal:(int)arg1 offset:(long long)arg2 ;
-(void)removeScopeCacheForToken:(id)arg1 ;
-(SIUserCtxRef)createUserContextForToken:(id)arg1 needsPermissions:(BOOL)arg2 forScope:(CFStringRef)arg3 noCache:(BOOL)arg4 ;
-(void)_flushPermissionJournal;
-(void)_appendPermissionJournal:(char)arg1 count:(unsigned long long)arg2 items:(long long*)arg3 ;
-(void)restorePermCache:(BOOL)arg1 ;
-(BOOL)_serializePermissionCache:(int)arg1 desc:(int*)arg2 ;
-(char)issueQuery:(id)arg1 ;
-(void)finishQueryState:(id)arg1 ;
-(void)removeObjectForTaskID:(unsigned)arg1 correlationID:(unsigned long long)arg2 ;
-(SCD_Struct_MD21*)volumeInfo:(id)arg1 ;
-(int)openIndexWithFileDescriptor:(int)arg1 parameters:(id)arg2 docCounts:(SCD_Struct_MD25*)arg3 signature:(char)arg4 forceFSOnly:(BOOL)arg5 ;
-(int)deleteAttributes:(long long*)arg1 count:(long long)arg2 ;
-(void)transferAttributesFrom:(long long)arg1 to:(long long)arg2 transferCallback:(/*function pointer*/void*)arg3 ctx:(void*)arg4 forShutdown:(BOOL)arg5 ;
-(id)initWithDelegate:(id)arg1 queue:(unsigned long long)arg2 backgroundQueue:(id)arg3 spindle:(int)arg4 ;
-(id)copyObjectForTaskID:(unsigned)arg1 correlationID:(unsigned long long)arg2 ;
-(id)objectForTaskID:(unsigned)arg1 correlationID:(unsigned long long)arg2 ;
-(void)onQueueIssueQuery:(id)arg1 ;
-(void)flushPossibleMoves;
-(void)possibleMovesForFiles:(PossibleFileMoves_s*)arg1 fileCount:(unsigned long long)arg2 directories:(PossibleFileMoves_s*)arg3 dirCount:(unsigned long long)arg4 ;
-(void)healthCheckFiles:(PossibleFileMoves_s*)arg1 count:(unsigned long long)arg2 ;
-(int)openIndexWithFileDescriptor:(int)arg1 parameters:(id)arg2 docCounts:(SCD_Struct_MD25*)arg3 signature:(char)arg4 ;
-(void)shutdownIndex;
-(void)startPreheatScheduler;
-(double)getRecoverTimeStamp;
-(void)addQueryResults:(MDStoreOIDArrayRef)arg1 plistBytes:(MDPlistBytesRef)arg2 correlationID:(unsigned long long)arg3 forTaskID:(unsigned)arg4 ;
-(void)openQueryWithParams:(id)arg1 correlationID:(unsigned long long)arg2 taskID:(unsigned)arg3 requestID:(int)arg4 storeToken:(id)arg5 accessToken:(id)arg6 filter:(id)arg7 flags:(unsigned)arg8 replyBlock:(/*^block*/id)arg9 ;
-(void)closeQueryForTaskID:(unsigned)arg1 correlationID:(unsigned long long)arg2 requestID:(int)arg3 storeToken:(id)arg4 replyBlock:(/*^block*/id)arg5 ;
-(void)storeAttributes:(MDPlistBytesRef)arg1 forOIDArray:(MDStoreOIDArrayRef)arg2 withImporterInfoArray:(id)arg3 correlationID:(unsigned long long)arg4 taskID:(unsigned)arg5 requestID:(int)arg6 storeToken:(id)arg7 accessToken:(id)arg8 flags:(int)arg9 source:(int)arg10 transactionID:(unsigned long long)arg11 qos:(unsigned)arg12 replyBlock:(/*^block*/id)arg13 ;
-(void)storeAttributesFromImporter:(MDPlistBytesRef)arg1 forOIDs:(MDStoreOIDArrayRef)arg2 withParents:(MDStoreOIDArrayRef)arg3 withImporterInfoArray:(id)arg4 correlationID:(unsigned long long)arg5 taskID:(unsigned)arg6 requestID:(int)arg7 storeToken:(id)arg8 accessToken:(id)arg9 flags:(int)arg10 source:(int)arg11 transactionID:(unsigned long long)arg12 qos:(unsigned)arg13 replyBlock:(/*^block*/id)arg14 ;
-(BOOL)suitableForPermissonPreheat;
-(void)dirtyPermissionCache;
-(void)flushPermissionCache;
-(int)serialize:(int)arg1 ;
-(void)scanQueuesDrained;
-(void)initialIndexingStarted;
-(int)initialIndexingEnded:(unsigned long long)arg1 ;
-(void)setScanCount:(unsigned long long)arg1 fullScan:(BOOL)arg2 replyBlock:(/*^block*/id)arg3 ;
-(void)setCount:(unsigned long long)arg1 forTransaction:(unsigned long long)arg2 flags:(int)arg3 ;
-(void)possibleMove:(long long)arg1 to:(long long)arg2 ;
-(void)possibleFileMove:(long long)arg1 to:(long long)arg2 ;
-(void)possibleMoveFiles:(long long*)arg1 count:(long long)arg2 ;
-(void)healthCheck:(long long)arg1 directory:(int)arg2 systemFile:(int)arg3 ;
-(long long)largestOid;
-(unsigned long long)maxTransactionId;
-(int)calculateSize:(/*function pointer*/void*)arg1 context:(void*)arg2 ;
-(void)processOutstandingPermChecks;
-(void)restorePermissionCache:(BOOL)arg1 ;
-(void)checkSizes:(long long)arg1 ;
-(BOOL)getParentsForOids:(long long*)arg1 count:(long long)arg2 buffer:(long long*)arg3 ;
-(BOOL)isLocalPSIDStore;
-(void)removePermissionsCacheForToken:(id)arg1 ;
-(void)notePermChange:(long long)arg1 ;
-(void)noteGlobalPermChange;
-(void)closeQueryForTaskIDAtShutdown:(unsigned)arg1 correlationID:(unsigned long long)arg2 requestID:(int)arg3 storeToken:(id)arg4 replyBlock:(/*^block*/id)arg5 ;
-(void)gatheringEndedForTask:(unsigned)arg1 ;
-(void)updateTime:(double)arg1 forTask:(unsigned)arg2 ;
-(SCD_Struct_MD1)lastInterestingAccessToken;
-(void)startup;
-(CFUUIDRef)uuid;
-(char)cancelQuery:(id)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(void)dealloc;
-(void)close:(char)arg1 ;
-(void)setRootPath:(const char*)arg1 ;
@end

