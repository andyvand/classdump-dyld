/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:58:14 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Users/joris/Desktop/SysDecrypts/64-Bit/mds
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <mds/mds-Structs.h>
#import <mds/MDSObject.h>

@protocol OS_dispatch_queue, OS_dispatch_source;
@class MDSVolume, MDSPathFilter, NSObject, FMWCache, MDSBulkIndexEventProxy, MDSBulkPSIDConverter, NSMutableArray;

@interface MDSVolumeFMWQueue : MDSObject {

	MDSVolume* _volume;
	MDSPathFilter* _pathFilter;
	NSObject*<OS_dispatch_queue> _recursiveWalkQueue;
	unsigned _serialNumber;
	unsigned _miniSerialNumber;
	unsigned _prepopSerialNumber;
	unsigned _popSerialNumber;
	FMWCache* _cache;
	MDSBulkIndexEventProxy* _bulkIndexEventProxy;
	MDSBulkPSIDConverter* _bulkPSIDConverter;
	int _workInflightToBulkConverter;
	int _incomingEventCount;
	int _avoidedEventCount;
	SQueueRef _eventQueue;
	void* _pushedEventsPointer;
	unsigned long long _pushedEventsLength;
	int _pushedEventsCount;
	void* _miniEventBasePointer;
	int _timerState;
	NSObject*<OS_dispatch_source> _pushFlushTimer;
	NSMutableArray* _safeSaveArray;

}
-(void)pushFMWEvent:(SCD_Struct_MD41*)arg1 withFilter:(id)arg2 isLocalOnly:(char)arg3 ;
-(void)flushFMWEvents;
-(void)addRunLoopSources;
-(void)invalidateRunLoopSources;
-(unsigned)qosClass;
-(id)initWithVolume:(id)arg1 ;
-(void)stage2:(int)arg1 oidArray:(long long*)arg2 eventsPointer:(void*)arg3 eventsLength:(unsigned long long)arg4 ;
-(void)updateCacheEntryForEvent:(SCD_Struct_MD64*)arg1 isSource:(char)arg2 oid:(long long)arg3 vsd:(id)arg4 isCreate:(char)arg5 isImport:(char)arg6 isFinderInfo:(char)arg7 isSetAttr:(char)arg8 isPermissionChange:(char)arg9 trackingCodeKind:(int)arg10 trackingCode:(SCD_Struct_FM62*)arg11 isSafeSave:(char)arg12 oldOid:(long long)arg13 ;
-(void)processRecursiveWalkOids:(int)arg1 oidArray:(long long*)arg2 withEventQueue:(SQueueRef)arg3 ;
-(void)recursiveWalkFrom:(const char*)arg1 to:(const char*)arg2 force:(char)arg3 flat:(char)arg4 credential:(MDCredential)arg5 completion:(/*^block*/id)arg6 ;
-(id)eventDelete:(SCD_Struct_MD64*)arg1 oidArray:(long long*)arg2 sourceVsd:(id)arg3 ;
-(id)eventRename:(SCD_Struct_MD64*)arg1 oidArray:(long long*)arg2 sourceVsd:(id)arg3 destinationVsd:(id)arg4 ;
-(void)eventXAttrModified:(SCD_Struct_MD64*)arg1 oidArray:(long long*)arg2 sourceVsd:(id)arg3 ;
-(void)eventContentModified:(SCD_Struct_MD64*)arg1 oidArray:(long long*)arg2 sourceVsd:(id)arg3 ;
-(void)eventExchangeObjects:(SCD_Struct_MD64*)arg1 oidArray:(long long*)arg2 sourceVsd:(id)arg3 destinationVsd:(id)arg4 ;
-(void)eventPermissionsChange:(SCD_Struct_MD64*)arg1 oidArray:(long long*)arg2 sourceVsd:(id)arg3 ;
-(char)isSafeSaveCompletion:(SCD_Struct_MD64*)arg1 pathBufferOut:(char*)arg2 pathLengthOut:(unsigned long long*)arg3 inoHintOut:(unsigned long long*)arg4 isTefConversionOut:(char*)arg5 ;
-(void)recordSafeSaveCandidate:(SCD_Struct_MD64*)arg1 isTef:(char)arg2 ;
-(char)isSafeSave:(SCD_Struct_MD64*)arg1 pathBuffer:(char*)arg2 pathLength:(unsigned long long*)arg3 inoHint:(unsigned long long*)arg4 suppressRenameSafeSave:(char*)arg5 isTefConversion:(char*)arg6 ;
-(int)testTrackingFileRename:(SCD_Struct_MD64*)arg1 uuidBytes:(SCD_Struct_FM62*)arg2 ;
-(void)handleTimer;
-(void)stage1:(void*)arg1 length:(unsigned long long)arg2 eventCount:(unsigned long long)arg3 ;
-(void)dealloc;
@end

