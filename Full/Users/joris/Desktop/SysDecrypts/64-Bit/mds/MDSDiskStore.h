/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:58:13 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Users/joris/Desktop/SysDecrypts/64-Bit/mds
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <mds/mds-Structs.h>
#import <mds/MDSStore.h>
#import <mds/MDSStore.h>
#import <mds/MDSVolumeStore.h>
#import <mds/MDSWrapperDelegate.h>

@protocol OS_dispatch_source, MDSIndexWrapperMDSPSIDStoreWrapper, OS_dispatch_queue;
@class NSString, MDSAccessToken, NSDictionary, NSMutableSet, MDSExclusionQueue, NSObject, NSMutableArray, NSMutableDictionary, MDSVolumeStoreDescriptor, MDSDisk, MDSStoreImporterQueue, MDSBulkQueue;

@interface MDSDiskStore : MDSStore <MDSStore, MDSVolumeStore, MDSWrapperDelegate> {

	char* _partialPath;
	char _isExcluded;
	int _searchLevel;
	RLEOIDArrayRef _reimportOidArray;
	int _storeGenerationValue;
	int _storeGenerationHash;
	int _repairQueueState;
	char _syncQueueWaitingOnRepairQueue;
	long long _powerHolds;
	unsigned long long _powerToken;
	double _powerLockRefreshTime;
	int _masterFD;
	long long _openTimeStamp;
	int _renamePlaybackGoodCount;
	int _renamePlaybackBadCount;
	int _renamesBeginLiveCount;
	int _renamesEndLiveCount;
	int _renamesEndPlaybackCount;
	char _requestedPrescanPause;
	char _vsdInitialized;
	char _storeScanPermitted;
	char _avoidedCatchupScan;
	char _fsEventsScanRequest;
	long long _scanBaseTime;
	long long _fsEventsScanTime;
	char _storeIsLive;
	char _policyChange;
	char _policyChangeRebuild;
	char _policyChangeErase;
	int _policyChangeNewSearchPolicy;
	char _policyChangeReplyOldStyle;
	int _availability;
	char _orderedStoreClosure;
	char _shuttingDown;
	char _importingPausedClient;
	char _writeShutdownTime;
	opaque_pthread_mutex_t _avoidBusyTimeLock;
	opaque_pthread_cond_t _avoidBusyTimeConditional;
	char _queueDrainComplete;
	char _indexingWhenMadeAvailable;
	MDCredential _volumeCredential;
	MDSAccessToken* _accessToken;
	NSDictionary* _localRules;
	NSMutableSet* _localExclusions;
	unsigned _storeTokenIds[2];
	char _powerAssertSync;
	char _powerAssertRepair;
	long long _recoveryTime;
	long long _scanCompleteTime;
	int _retiredTotalFModWatch;
	int _retiredTotalScan;
	char _repairRequested;
	char _repairComplete;
	char _fullyRetiredScan;
	char _fullyRetiredRepair;
	char _finalImportReceived;
	char _mdsyncActive;
	char _healthCheckActive;
	char _performingHealthCheck;
	char _healthCheckAwaitingDarkWake;
	int _dealingWithMigrationDeadLetterQueue;
	int _dealingWithHealthCheckQueue;
	char _migrationActive;
	char _fullHealthCheck;
	char _forceHealthCheck;
	char _handlingExclusionChange;
	MDSExclusionQueue* _exclusionQueue;
	char _seenByLeopard;
	char _fullyIndexedBySnowLeopard;
	char _hasReceiptFiles;
	char _receiptsProcessed;
	char _hasInstallResults;
	char _hasBackupRepairFiles;
	char _shouldProcessReceipts;
	double _openDuration;
	double _createDuration;
	double _durationBeforeRegistration;
	char _prescanRequested;
	char _prescanAvoidedOrComplete;
	char _bootcacheComplete;
	char _syncScanCompeleteDefered;
	int _simulateScanCompleteCounter;
	int _scanCompleteCounter;
	int _pushedTransactionId;
	int _spindleReservedVolumeHistory;
	int _totalImportsSet;
	int _totalLiveImportsSet;
	int _totalSyncImportsSet;
	int _totalRepairImportsSet;
	int _totalPrescanImportsSet;
	unsigned long long _totalLiveImportTime;
	unsigned long long _totalSyncImportTime;
	unsigned long long _totalRepairImportTime;
	unsigned long long _totalPrescanImportTime;
	unsigned _syncScanPort;
	int _scanRequestId;
	SCD_Struct_MD28* _importSortBuffer;
	int _importSortRecordsAllocated;
	int _importSortRecordsUsed;
	int _savedImportSortRecordsUsed;
	int _savedActualScanCount;
	long long _fullScanRequestTime;
	long long _scanRequestTime;
	long long _scanEndTime;
	long long _indexingCompleteTime;
	long long _highestOid;
	int _maximumPossibleScanCount;
	int _actualScanCount;
	int _duplicateScanCount;
	int _alreadyQueuedCount;
	int _pushedScanCount;
	char _mdsyncPath[1024];
	char _mdsyncForceFswScan;
	SIUINT64SetRef _journaledInoSet;
	CFUUIDRef _fsEventsUUID;
	char _fsEventsMatch;
	NSObject*<OS_dispatch_source> _syncTimer;
	char _syncTimerHasFired;
	NSObject*<OS_dispatch_source> _closeTimer;
	BOOL _busy;
	NSMutableArray* _deferredForAC;
	NSObject*<OS_dispatch_source> _deferredForACTimer;
	BOOL _calledScanCount;
	BOOL _waitingForTransactionId;
	int _scanIndexTransactionId;
	int _indexRepairCount;
	NSMutableSet* _importRenamedDirectories;
	char _isLastSyncGood;
	int _spindleReservedForIndexSync;
	int _spindleReservedForVolumeScan;
	long long _genCount;
	long long _commitCount;
	NSString* _debugWhyBaseTime;
	NSString* _debugWhyBaseTimeExisting;
	NSString* _debugWhyOpenFailure;
	int _rc1;
	int _rc2;
	long long _debug_liveCount;
	long long _debug_scanCount;
	double _reservationStartTime;
	BOOL _cabFormat;
	BOOL _storeShutdownInProgress;
	double _shutDownNotificationTime;
	/*^block*/id _shutdownCompletionBlock;
	NSMutableDictionary* _lastInfoRequestDictionary;
	NSObject*<MDSIndexWrapper>*<MDSPSIDStoreWrapper> _wrappedIndex;
	NSObject*<OS_dispatch_queue> _spindleQueueHighPriority;
	NSObject*<OS_dispatch_queue> _spindleQueueMediumPriority;
	NSObject*<OS_dispatch_queue> _spindleQueueLowPriority;
	MDSVolumeStoreDescriptor* _vsd;
	MDSDisk* _mdsDisk;
	MDSStoreImporterQueue* _queueArray[13];
	CFDictionaryRef _mailKnownItemDictionary;
	MDSBulkQueue* _fileChangeQueue;
	char _currentlyScanning;
	char _currentlyIndexing;
	char _currentlyPrescanning;
	char _fullScanRequested;
	NSString* comment;

}

@property (retain) NSString * comment; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
-(BOOL)blocksShutdown;
-(void)addRunLoopSources;
-(void)invalidateRunLoopSources;
-(void)preHeatPermissions:(RLEOIDArrayRef)arg1 ;
-(void)preHeatPermissionCache:(char)arg1 ;
-(id)getMDSWriteAttr;
-(void)trackFinished:(id)arg1 canceled:(BOOL)arg2 ;
-(id)rootScope;
-(int)backupActive;
-(void)_indexShutdownComplete;
-(void)syncWithCounts:(SCD_Struct_MD25)arg1 canceled:(BOOL)arg2 ;
-(void)preSyncWithCounts:(SCD_Struct_MD25)arg1 ;
-(void)reopenIndex:(const char*)arg1 ;
-(void)reimport:(long long)arg1 withUser:(id)arg2 withFlags:(int)arg3 ;
-(BOOL)repairIndex:(long long)arg1 type:(int)arg2 flags:(int)arg3 ;
-(void)holdImports;
-(void)resumeImports;
-(void)performSynchedOpWithSpec:(int)arg1 block:(/*^block*/id)arg2 ;
-(void)recycleStoreAction:(id)arg1 ;
-(void)transferFromQueue:(id)arg1 toQueue:(id)arg2 ;
-(void)internal_startup;
-(void)makeOurselvesUnavailable;
-(void)openIndex;
-(void)tryToAttachImporterQueue:(id)arg1 ;
-(void)preHeatIndex:(id)arg1 ;
-(void)handleImportingPause:(id)arg1 ;
-(void)handleLogin:(id)arg1 ;
-(void)handleLikelyShutdownNotification:(id)arg1 ;
-(void)droppedFMWEvents:(id)arg1 ;
-(void)onACNotification:(id)arg1 ;
-(void)unregisterSyncScanPort;
-(int)backupFinishing;
-(void)mergeInfo:(id)arg1 queueIndex:(int)arg2 name:(id)arg3 euid:(unsigned)arg4 ;
-(void)_preHeat:(RLEOIDArrayRef)arg1 forUser:(id)arg2 ;
-(CFDictionaryRef)getProperties;
-(void)fixupItemsOnce:(BOOL)arg1 ;
-(void)fixImportFailures:(BOOL)arg1 ;
-(void)fixVCards;
-(void)fixupGroups;
-(void)deferableHealthCheck:(BOOL)arg1 ;
-(void)fixupMail:(BOOL)arg1 ;
-(void)syncStore:(char)arg1 ;
-(void)setStoreProperty:(void*)arg1 forKey:(CFStringRef)arg2 ;
-(void*)copyStorePropertyForKey:(CFStringRef)arg1 ;
-(id)mdsDisk;
-(unsigned)storeTokenID;
-(unsigned)fsonlyTokenID;
-(int)searchLevel;
-(char)openStore;
-(void)vsdInitialized;
-(void)closeStore:(/*^block*/id)arg1 ;
-(id)getStoreInfo:(unsigned)arg1 ;
-(SCD_Struct_MD1)tokenIDForUID:(unsigned)arg1 GID:(unsigned)arg2 ;
-(void)preHeatPermissionsForStore:(id)arg1 items:(RLEOIDArrayRef)arg2 ;
-(void)preHeatPermissionsForStore:(id)arg1 initial:(char)arg2 ;
-(void)finishedWithOutstandingPermChecks:(id)arg1 ;
-(void)trackFinished:(id)arg1 code:(id)arg2 canceled:(BOOL)arg3 ;
-(id)rootScope:(id)arg1 ;
-(BOOL)backupActive:(id)arg1 ;
-(void)indexShutdownComplete:(id)arg1 result:(int)arg2 ;
-(void)finishedForStore:(id)arg1 task:(unsigned)arg2 requestID:(unsigned)arg3 result:(int)arg4 ;
-(void)assertPower:(id)arg1 description:(id)arg2 ;
-(void)releasePower:(id)arg1 ;
-(void)scheduleWake:(id)arg1 darkwake:(BOOL)arg2 description:(id)arg3 callback:(/*^block*/id)arg4 ;
-(int)syncStore:(id)arg1 counts:(SCD_Struct_MD25)arg2 canceled:(BOOL)arg3 ;
-(int)preSyncStore:(id)arg1 counts:(SCD_Struct_MD25)arg2 ;
-(void)recycleIndex:(id)arg1 message:(const char*)arg2 ;
-(void)reimportForStore:(id)arg1 item:(long long)arg2 withFlags:(int)arg3 accessToken:(SCD_Struct_MD1)arg4 ;
-(BOOL)repairForStore:(id)arg1 item:(long long)arg2 type:(int)arg3 flags:(int)arg4 ;
-(void)holdImports:(id)arg1 ;
-(void)resumeImports:(id)arg1 ;
-(void)gatheringEnded:(id)arg1 taskID:(unsigned)arg2 ;
-(void)pushSafeSaveForStore:(id)arg1 data:(CFDictionaryRef)arg2 to:(long long)arg3 forUser:(unsigned)arg4 andGroup:(unsigned)arg5 ;
-(id)accessTokenForUid:(unsigned)arg1 gid:(unsigned)arg2 ;
-(id)getMDSWriteAttr:(id)arg1 ;
-(void)updateTime:(id)arg1 time:(double)arg2 taskID:(unsigned)arg3 ;
-(unsigned)backgroundPort;
-(id)initWithStoreDescriptor:(id)arg1 ;
-(void)lowDiskNotification:(id)arg1 ;
-(char)isScanning;
-(void)recycleStore;
-(void)prepareForFModWatchWithCounts:(SCD_Struct_MD25)arg1 ;
-(char)avoidBusyTimeAsync;
-(void)preSyncWithRetireCounts:(SCD_Struct_MD25)arg1 ;
-(void)finishedSyncWithRetireCounts:(SCD_Struct_MD25)arg1 ;
-(void)flushJournalsForSync;
-(void)textSnippetFDs:(id)arg1 xpc:(id)arg2 forOidArray:(long long*)arg3 andOidArrayCount:(unsigned long long)arg4 ;
-(void)fetchAttributes:(CFArrayRef)arg1 forOIDArray:(MDStoreOIDArrayRef)arg2 correlationID:(unsigned long long)arg3 taskID:(unsigned)arg4 requestID:(int)arg5 storeToken:(id)arg6 accessToken:(id)arg7 flags:(unsigned)arg8 replyBlock:(/*^block*/id)arg9 ;
-(void)fetchAttributeNamesForOIDArray:(MDStoreOIDArrayRef)arg1 correlationID:(unsigned long long)arg2 taskID:(unsigned)arg3 requestID:(int)arg4 storeToken:(id)arg5 accessToken:(id)arg6 flags:(unsigned)arg7 replyBlock:(/*^block*/id)arg8 ;
-(void)openQueryWithParams:(CFDictionaryRef)arg1 correlationID:(unsigned long long)arg2 taskID:(unsigned)arg3 requestID:(int)arg4 storeToken:(id)arg5 accessToken:(id)arg6 flags:(unsigned)arg7 replyBlock:(/*^block*/id)arg8 ;
-(void)closeQueryForTaskID:(unsigned)arg1 correlationID:(unsigned long long)arg2 requestID:(int)arg3 storeToken:(id)arg4 accessToken:(id)arg5 replyBlock:(/*^block*/id)arg6 ;
-(void)fetchQueryResultsForTaskID:(unsigned)arg1 correlationID:(unsigned long long)arg2 storeToken:(id)arg3 replyBlock:(/*^block*/id)arg4 ;
-(void)storeAttributes:(MDPlistBytesRef)arg1 forOIDArray:(MDStoreOIDArrayRef)arg2 correlationID:(unsigned long long)arg3 taskID:(unsigned)arg4 requestID:(int)arg5 storeToken:(id)arg6 accessToken:(id)arg7 qos:(unsigned)arg8 replyBlock:(/*^block*/id)arg9 ;
-(void)storeAttributesFromImporter:(MDPlistBytesRef)arg1 forOIDs:(MDStoreOIDArrayRef)arg2 correlationID:(unsigned long long)arg3 taskID:(unsigned)arg4 requestID:(int)arg5 storeToken:(id)arg6 accessToken:(id)arg7 qos:(unsigned)arg8 replyBlock:(/*^block*/id)arg9 ;
-(char)hasPersistentUUID;
-(void)finishLastImport:(id)arg1 ;
-(void)cleanStoreDirectory:(char)arg1 at:(int)arg2 ;
-(char)queryForTaskOwner:(id)arg1 backupOids:(/*^block*/id)arg2 ;
-(void)postDelayRescan:(id)arg1 ;
-(void)requestSyncScanOf:(char*)arg1 forceFswScan:(char)arg2 ;
-(void)mdsyncWorkerDeath:(id)arg1 ;
-(void)requestSyncScanOf:(const char*)arg1 forceFswScan:(char)arg2 healthCheck:(char)arg3 ;
-(void)syncScanCompleteDefered;
-(void)syncScanCompleteDeferedContinue;
-(void)fullHealthCheck;
-(void)targetedHealthCheck:(id)arg1 ;
-(void)prepareForSyncScanWithCounts:(SCD_Struct_MD25)arg1 ;
-(int)preScanDirectory:(const char*)arg1 subPath:(const char*)arg2 withFilter:(id)arg3 forRoot:(unsigned)arg4 limit:(int)arg5 onlyApps:(char)arg6 naiveBundleCheckFallback:(char)arg7 ;
-(void)pauseSyncScan:(char)arg1 ;
-(void)reimportFlushWithFlags:(int)arg1 ;
-(void)imprintFSEventsUUID;
-(void)whenNotOnBattery:(/*^block*/id)arg1 ;
-(char)openIndexFailedCleanup:(const char*)arg1 shouldErase:(char)arg2 ;
-(void)doFixup:(CFDictionaryRef)arg1 propertyKey:(CFStringRef)arg2 ;
-(void)fixIndexDuplicateOids:(BOOL)arg1 ;
-(void)fixMissingDeletes:(BOOL)arg1 ;
-(void)fixMissingDeletesForSDB:(BOOL)arg1 ;
-(void)_deferableFixup:(BOOL)arg1 ;
-(void)deferableFixup:(BOOL)arg1 ;
-(void)kickOffExclusionHandling;
-(void)makeOurselvesUnavailableComplete;
-(void)closeIndexComplete;
-(id)setScanBaseTimeMsg:(id)arg1 success:(char)arg2 ;
-(int)generateStoreUUIDHash:(CFUUIDRef)arg1 ;
-(char)checkStoreGenerationWithUUID:(CFUUIDRef)arg1 ;
-(char)validateIndexVersion;
-(char)validatMediaUUID;
-(char)validateScanComplete;
-(void)validateFSEventsUUID;
-(void)setupInitialProperties;
-(char)calculateBaseTime:(int)arg1 baseTimeOut:(long long*)arg2 ;
-(void)writeStoreGeneration:(CFUUIDRef)arg1 ;
-(void)prepareForExclusions;
-(void)makeOurselvesAvailableComplete:(SCD_Struct_MD25)arg1 ;
-(void)closeIndex;
-(void)writeShutdownTime;
-(void)sizeItem:(long long)arg1 filter:(id)arg2 ;
-(CFUUIDRef)uuid;
-(id)accessToken;
-(void)dealloc;
-(int)device;
-(NSString *)comment;
-(void)setComment:(NSString *)arg1 ;
-(void)shutdown;
@end

