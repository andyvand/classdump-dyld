/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:58:13 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Users/joris/Desktop/SysDecrypts/64-Bit/mds
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <mds/mds-Structs.h>
#import <mds/MDSTaskOwnerObject.h>
#import <mds/MDSReorderBufferDelegate.h>

@protocol OS_dispatch_source;
@class NSMutableSet, MDBinaryHeap, NSMutableDictionary, NSMutableArray, NSCountedSet, MDSImporterProxy, NSObject, NSString;

@interface MDSImporterManager : MDSTaskOwnerObject <MDSReorderBufferDelegate> {

	NSMutableSet* _queueSet;
	MDBinaryHeap* _importerQueuePriorityBandHeap;
	NSMutableDictionary* _priorityBandMap;
	NSMutableDictionary* _queuesBlockedByBusySpindle;
	NSMutableSet* _queuesBlockedByReorderSize;
	NSMutableSet* _queuesBlockedFromTaskIssueSet;
	NSMutableArray* _queuesBlockedFromTaskIssue;
	NSMutableDictionary* _workArrayBySpindle;
	NSMutableArray* _workForSpindleInOrder;
	NSCountedSet* _activeImporterCountBySpindle;
	CFDictionaryRef _importersByUser;
	MDSImporterProxy* _defaultUserProxy;
	double _timeSpentBlockedOnTaskCount;
	double _timeBecameBlockedOnTaskCount;
	double _totalTimeBlockedOnReorderBuffer;
	double _timeSpindleBecameBusy;
	double _totalTimeBusySpindle;
	char _spindleBusyCount;
	char _blocked;
	char _blockedOnTaskCount;
	char _blockedOnWorkSize;
	char _importerServiceQueueSuspended;
	char _requestedStoreQueueEvaluation;
	int _totalWrangleCount;
	long long _totalImportersInFlight;
	int _totalTaskCount;
	unsigned long long _totalWorkSize;
	NSCountedSet* _spindlesKeptReserved;
	NSCountedSet* _publicSpindlesKeptReserved;
	NSCountedSet* _trackingCodesImported;
	NSCountedSet* _trackingCodesDiskStore;
	NSMutableDictionary* _completionTimeByTrackingCode;
	NSMutableDictionary* _callbackSetByTrackingCodes;
	NSMutableDictionary* _utiTypeByExtension;
	NSObject*<OS_dispatch_source> _likelyShutdownTimeoutTimer;
	NSObject*<OS_dispatch_source> _importerPerformanceMessageTimer;
	char _likelyShutdownMode;
	int _systemAdvisoryToken;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)importerManager;
+(id)importerManagerQueue;
+(void)beginImportTiming;
+(CFArrayRef)copyEndImportTimingResults;
+(void)importTime:(unsigned long long)arg1 contentType:(char*)arg2 forPath:(char*)arg3 ;
+(void)initialize;
-(void)addRunLoopSources;
-(void)invalidateRunLoopSources;
-(void)finishTask:(id)arg1 withStatus:(int)arg2 ;
-(id)startTaskQueue;
-(unsigned)qosClass;
-(void)releaseSpindle:(int)arg1 ;
-(void)handleLikelyShutdownNotification:(id)arg1 ;
-(void)importerQueue:(id)arg1 blockedOnReorder:(char)arg2 ;
-(void)handleSystemLoadAdvisory:(id)arg1 ;
-(void)handleAuditLevelChange:(id)arg1 ;
-(void)trackingCodeImported:(id)arg1 when:(double)arg2 queue:(id)arg3 ;
-(char)updateBlockedOnState;
-(void)storeQueueEvaluation:(int)arg1 ;
-(void)scheduleSizingOfItem:(id)arg1 ;
-(char)requestReorderEvaluation;
-(id)findPriorityBandForImporterQueue:(id)arg1 ;
-(id)importerInfoForWork:(id)arg1 ;
-(void)issueTask:(id)arg1 withAccessToken:(id)arg2 ;
-(void)issueUpgradeTask:(id)arg1 withAccessToken:(id)arg2 ;
-(char)isQueueSpindleLowSeek:(id)arg1 ;
-(void)sendPendingWorkToImporter;
-(int)maxAllowedWorkOnQueueSpindle:(id)arg1 ;
-(void)sendWorkToImporter:(id)arg1 unitOfWork:(id)arg2 replyBlock:(/*^block*/id)arg3 ;
-(void)enqueueWorkToImporter:(id)arg1 unitOfWork:(id)arg2 replyBlock:(/*^block*/id)arg3 ;
-(void)handleDetachedQueue:(id)arg1 ;
-(char)updateReorderArray:(id)arg1 why:(int)arg2 ;
-(id)importerProxyForUser:(unsigned)arg1 ;
-(void)postWrangleUnitOfWork:(id)arg1 accessToken:(id)arg2 ;
-(char)tryToPopQueue:(id)arg1 ;
-(void)trackingCodeDiskStore:(id)arg1 when:(double)arg2 ;
-(char)isQueueSpindleBusy:(id)arg1 ;
-(void)markQueue:(id)arg1 onSpindleBusy:(char)arg2 ;
-(char)isSpindleReserved:(int)arg1 ;
-(void)likelyShutdownTimeoutCallback;
-(void)reserveSpindle:(int)arg1 ;
-(id)init;
-(void)dealloc;
@end

