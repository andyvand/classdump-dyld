/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:58:13 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Users/joris/Desktop/SysDecrypts/64-Bit/mds
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <mds/mds-Structs.h>
#import <mds/MDSTaskOwnerObject.h>
#import <mds/MDSPeer.h>

@protocol MDSPeer
@required
-(void)fetchAttributeNamesForOIDArray:(MDStoreOIDArrayRef)arg1 context:(id)arg2;
-(void)fetchAttributes:(CFArrayRef)arg1 forOIDArray:(MDStoreOIDArrayRef)arg2 context:(id)arg3;
-(void)fetchAllAttributeNamesForOIDArray:(MDStoreOIDArrayRef)arg1 context:(id)arg2;
-(void)fetchAllAttributes:(CFArrayRef)arg1 forOIDArray:(MDStoreOIDArrayRef)arg2 context:(id)arg3;
-(void)openQueryWithParams:(CFDictionaryRef)arg1 forContext:(id)arg2;
-(void)closeQueryForContext:(id)arg1;
-(void)fetchQueryResultsForContext:(id)arg1;
-(void)fetchPropertiesForContext:(id)arg1;
-(void)storeAttributes:(CFArrayRef)arg1 forOIDArray:(MDStoreOIDArrayRef)arg2 context:(id)arg3;

@end


@class MDSStoreToken, NSProxy;

@interface MDSPeer : MDSTaskOwnerObject <MDSPeer> {

	MDSStoreToken* _storeToken;
	CFDictionaryRef _channelParams;
	CFDictionaryRef _taskIDMap;
	NSProxy* _protocolChecker;

}

@property (readonly) NSProxy * protocolChecker; 
-(void)finishTask:(id)arg1 withStatus:(int)arg2 ;
-(void)internal_startup;
-(void)storeRemoved:(id)arg1 ;
-(id)initForStore:(id)arg1 withChannelParams:(CFDictionaryRef)arg2 ;
-(void)channelPeerDeath:(id)arg1 ;
-(unsigned)registerTask:(id)arg1 forContext:(id)arg2 ;
-(void)fetchAttributeNamesForOIDArray:(MDStoreOIDArrayRef)arg1 context:(id)arg2 ;
-(void)fetchAttributes:(CFArrayRef)arg1 forOIDArray:(MDStoreOIDArrayRef)arg2 context:(id)arg3 ;
-(void)fetchAllAttributeNamesForOIDArray:(MDStoreOIDArrayRef)arg1 context:(id)arg2 ;
-(void)fetchAllAttributes:(CFArrayRef)arg1 forOIDArray:(MDStoreOIDArrayRef)arg2 context:(id)arg3 ;
-(void)openQueryWithParams:(CFDictionaryRef)arg1 forContext:(id)arg2 ;
-(id)taskForContext:(id)arg1 ;
-(void)closeQueryForContext:(id)arg1 ;
-(void)fetchQueryResultsForContext:(id)arg1 ;
-(void)fetchPropertiesForContext:(id)arg1 ;
-(void)storeAttributes:(CFArrayRef)arg1 forOIDArray:(MDStoreOIDArrayRef)arg2 context:(id)arg3 ;
-(unsigned)startTaskPort;
-(NSProxy *)protocolChecker;
-(void)dealloc;
-(void)shutdown;
@end

