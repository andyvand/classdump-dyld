/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:58:13 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Users/joris/Desktop/SysDecrypts/64-Bit/mds
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <mds/mds-Structs.h>
@class MDSDisk, NSMutableDictionary, NSString;

@interface MDSDiskStorePolicy : NSObject {

	MDSDisk* _volumeDisk;
	NSMutableDictionary* _predicates;
	int _defaultPolicyLocation;
	int _defaultPolicyAsk;
	int _defaultPolicyControl;
	int _defaultPolicyControlBackupStore;
	int _defaultSearchLevel;
	int _defaultSearchLevelBackupStore;
	int _minimumSearchLevel;
	int _minimumSearchLevelBackupStore;
	int _maximumSearchLevel;
	int _maximumSearchLevelBackupStore;
	char _isLocal;
	char _disallowFSOnly;
	MDCredential _volumeCredential;
	MDCredential _localCredential;
	NSString* _localName;
	char _neverIndex;
	char _neverIndexUnlessRootFS;
	char _isBackupVolume;
	char _isLowDiskSpace;

}
+(id)obtainPolicyRules;
+(char)isSystemServer;
+(int)policySearchFromString:(id)arg1 ;
+(id)policyStringFromPolicySearch:(int)arg1 ;
-(char)isBackupVolume;
-(int)policyLocation;
-(id)copyVolumePathForItem:(id)arg1 ;
-(id)copySpotlightDirectoryPathForItem:(id)arg1 ;
-(int)defaultSearchLevel;
-(int)policyAsk;
-(int)policyControl;
-(int)maximumSearchLevel;
-(id)initWithDisk:(id)arg1 forHomes:(char)arg2 forceFSOnly:(char)arg3 forceDefaultIndex:(char)arg4 ;
-(void)setPredicate:(id)arg1 value:(char)arg2 ;
-(int)evaluateFor:(id)arg1 using:(id)arg2 against:(id)arg3 defaultValue:(int)arg4 expressions:(id)arg5 ;
-(id)indexMDSDisk;
-(id)copyHome:(id)arg1 spotlightDirectoryPathForItem:(id)arg2 ;
-(id)copySpotlightVersionDirectoryPathForItem:(id)arg1 legacy:(char)arg2 ;
-(id)copyHome:(id)arg1 spotlightVersionDirectoryPathForItem:(id)arg2 legacy:(char)arg3 ;
-(id)copyStore:(id)arg1 directoryPathForItem:(id)arg2 legacy:(char)arg3 ;
-(char)isNeverIndex;
-(char)isNeverIndexUnlessRootFS;
-(int)minimumSearchLevel;
-(int)effectiveSearchLevel:(int)arg1 isBackup:(char)arg2 ;
-(id)volumeMDSDisk;
-(id)copyPredicates;
-(id)findSpotlightDirectory:(char)arg1 credential:(const MDCredential*)arg2 ;
-(id)findSpotlightVersionDirectory:(char)arg1 credential:(const MDCredential*)arg2 legacy:(char)arg3 ;
-(id)findHome:(id)arg1 spotlightDirectory:(char)arg2 credential:(const MDCredential*)arg3 ;
-(id)findHome:(id)arg1 spotlightVersionDirectory:(char)arg2 credential:(const MDCredential*)arg3 legacy:(char)arg4 ;
-(id)findStore:(id)arg1 directory:(char)arg2 credential:(const MDCredential*)arg3 legacy:(char)arg4 ;
-(int)readLegacySearchLevelFrom:(id)arg1 ;
-(void)dealloc;
-(void)resolve;
@end

