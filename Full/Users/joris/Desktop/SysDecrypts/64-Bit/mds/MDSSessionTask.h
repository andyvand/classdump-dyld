/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:58:13 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Users/joris/Desktop/SysDecrypts/64-Bit/mds
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <mds/mds-Structs.h>
#import <mds/MDSExternalTask.h>

@protocol MDSPSIDStoreWrapper;
@class MDSTaskOwnerObject, MDSStoreImporterQueue, MDSPathFilter, NSObject;

@interface MDSSessionTask : MDSExternalTask {

	MDSTaskOwnerObject* _owner;
	char _sourcePath[1024];
	char _targetPath[1024];
	MDSStoreImporterQueue* _backupQueue;
	MDSPathFilter* _volumeFilter;
	NSObject*<MDSPSIDStoreWrapper> _psidStore;
	unsigned _storeToken;
	unsigned long long _storeQueueToken;
	unsigned long long _targetVolumeQueueToken;
	unsigned long long _sourceVolumeQueueToken;
	unsigned _backupBeginReplyPort;
	unsigned _indexFileReplyPort;
	unsigned _backupEndReplyPort;
	int _finalStatus;
	char _taskFailed;
	char _unexpectedDetach;
	char _didBegin;
	char _didTryToEnd;
	char _hadBeginReplyPort;
	char _hadEndReplyPort;
	int _filesIndexed;

}
-(id)initForOwner:(id)arg1 sourcePath:(const char*)arg2 targetPath:(const char*)arg3 ;
-(void)finishWithStatus:(int)arg1 ;
-(void)scheduleWithCallbackPort:(unsigned)arg1 accessToken:(id)arg2 ;
-(void)storeRemoved:(id)arg1 ;
-(void)setQueue:(id)arg1 oids:(long long*)arg2 oidCount:(long long)arg3 ;
-(void)setStoreToken:(unsigned)arg1 storeQueueToken:(unsigned long long)arg2 psidStore:(id)arg3 filter:(id)arg4 result:(int)arg5 ;
-(int)prepareTargetVolume;
-(void)setSourceVolumeQueue:(unsigned long long)arg1 ;
-(void)setTargetVolumeQueue:(unsigned long long)arg1 ;
-(char)useSourcePath;
-(int)prepareSourceVolume;
-(void)setBackupBeginPort:(unsigned)arg1 ;
-(void)prepare:(id)arg1 ;
-(void)begin:(id)arg1 rpyPort:(unsigned)arg2 callbackPort:(unsigned)arg3 ;
-(void)setBackupEndPort:(unsigned)arg1 ;
-(void)backupClear;
-(void)end:(unsigned)arg1 ;
-(int)indexFile:(char*)arg1 targetPath:(char*)arg2 backupAttr:(id)arg3 replyBlock:(/*^block*/id)arg4 ;
-(id)primaryQueueForItem:(char*)arg1 filterValue:(SCD_Struct_MD31)arg2 ;
-(id)secondaryQueueForItem:(char*)arg1 filterValue:(SCD_Struct_MD31)arg2 ;
-(void)setSecondaryQueue:(id)arg1 ;
-(BOOL)wantOids;
-(BOOL)goodOid:(long long)arg1 ;
-(BOOL)needsJournal;
-(void)dealloc;
-(void)begin;
-(int)source;
-(void)end;
-(void)setQueue:(id)arg1 ;
@end

