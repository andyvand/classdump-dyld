/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:58:11 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Users/joris/Desktop/SysDecrypts/64-Bit/Finder
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Finder/Finder-Structs.h>
#import <AppKit/NSTitlebarAccessoryViewController.h>
#import <Finder/NSDraggingDestination.h>
#import <Finder/TSpringDelegate.h>
#import <Finder/TStdAlertSheetClientProtocol.h>
#import <Finder/TValidatorClientProtocol.h>

@class TBrowserWindowController, TSpringController, TTabViewSingleLineView, NSString;

@interface TTabViewController : NSTitlebarAccessoryViewController <NSDraggingDestination, TSpringDelegate, TStdAlertSheetClientProtocol, TValidatorClientProtocol> {

	TNSRef<TTabViewSingleLineView *> _singleLineView;
	long long _validatorID;
	double _originalHeight;
	BOOL _addingTab;
	BOOL _closingTab;
	BOOL _tearingDown;
	BOOL _animatingTabMerge;
	BOOL _trackChanges;
	BOOL _initialTabViewReveal;
	BOOL _containerWasFirstResponder;
	BOOL _shouldFlashScrollers;
	BOOL _didReinsertTab;
	int _tabVisibility;
	TBrowserWindowController* _windowController;
	TSpringController* _springController;

}

@property (assign,nonatomic) TBrowserWindowController * windowController;              //@synthesize windowController=_windowController - In the implementation block
@property (assign,nonatomic) int tabVisibility;                                        //@synthesize tabVisibility=_tabVisibility - In the implementation block
@property (assign,nonatomic) BOOL addingTab;                                           //@synthesize addingTab=_addingTab - In the implementation block
@property (assign,nonatomic) BOOL closingTab;                                          //@synthesize closingTab=_closingTab - In the implementation block
@property (assign,nonatomic) BOOL tearingDown;                                         //@synthesize tearingDown=_tearingDown - In the implementation block
@property (assign,nonatomic) BOOL animatingTabMerge;                                   //@synthesize animatingTabMerge=_animatingTabMerge - In the implementation block
@property (nonatomic,retain) TSpringController * springController;                     //@synthesize springController=_springController - In the implementation block
@property (assign,nonatomic) BOOL trackChanges;                                        //@synthesize trackChanges=_trackChanges - In the implementation block
@property (assign,nonatomic) BOOL initialTabViewReveal;                                //@synthesize initialTabViewReveal=_initialTabViewReveal - In the implementation block
@property (assign,nonatomic) BOOL containerWasFirstResponder;                          //@synthesize containerWasFirstResponder=_containerWasFirstResponder - In the implementation block
@property (nonatomic,readonly) long long validatorID;                                  //@synthesize validatorID=_validatorID - In the implementation block
@property (assign,nonatomic) double originalHeight;                                    //@synthesize originalHeight=_originalHeight - In the implementation block
@property (assign,nonatomic) BOOL shouldFlashScrollers;                                //@synthesize shouldFlashScrollers=_shouldFlashScrollers - In the implementation block
@property (assign,nonatomic) BOOL didReinsertTab;                                      //@synthesize didReinsertTab=_didReinsertTab - In the implementation block
@property (nonatomic,retain) TTabViewSingleLineView * singleLineView; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)defaultTabState;
+(BOOL)tabDrag:(id)arg1 didOriginateInWindow:(id)arg2 ;
-(void)setIsMergingTabs;
-(void)setAnimatingTabMerge:(BOOL)arg1 ;
-(void)finishAnimatingTabMerge;
-(id)makeTabWithTarget:(const TFENode*)arg1 makeActive:(BOOL)arg2 addAfterActiveTab:(BOOL)arg3 ;
-(id)firstContainerWithTarget:(const TFENode*)arg1 ;
-(void)closeActiveTab;
-(void)closeTrashTabs;
-(long long)tabCount;
-(int)tabVisibility;
-(double)heightForVisibility;
-(id)containerStateForAllTabs;
-(void)configureWithWindowState:(id)arg1 targetPath:(const TFENodeVector*)arg2 windowController:(id)arg3 ;
-(void)configureContainerForActiveTab;
-(void)activeTabTargetDidChange;
-(void)closeOrRetargetContainerForTarget:(const TFENode*)arg1 toPath:(const TFENodeVector*)arg2 browserValidatorID:(long long)arg3 ;
-(BOOL)tearingDown;
-(id)activeTab;
-(void)setActiveTab:(id)arg1 ;
-(BOOL)animatingTabMerge;
-(id)addTabForContainer:(id)arg1 ;
-(void)getGlobalTabRectsForContainers:(const vector<TBrowserContainerController *, std::__1::allocator<TBrowserContainerController *> >*)arg1 proposedRects:(vector<CGRect, std::__1::allocator<CGRect> >*)arg2 ;
-(void)setSingleLineView:(TTabViewSingleLineView *)arg1 ;
-(void)setTabVisibility:(int)arg1 ;
-(void)updateICloudTabs;
-(BOOL)initialTabViewReveal;
-(void)setInitialTabViewReveal:(BOOL)arg1 ;
-(void)closeOtherTabs:(id)arg1 persistState:(BOOL)arg2 ;
-(void)closeTab:(id)arg1 ;
-(id)tabForContainer:(id)arg1 ;
-(BOOL)canSelectPreviousTab;
-(void)selectPreviousTab;
-(BOOL)canSelectNextTab;
-(void)selectNextTab;
-(id)contextMenuTab;
-(id)containerStateForTab:(id)arg1 ;
-(void)targetWillChangeForContainer:(id)arg1 ;
-(void)targetDidChangeForContainer:(id)arg1 ;
-(void)configureSearchBannersForAllTabs;
-(BOOL)windowShouldClose;
-(void)saveScrollPositionForAllTabs;
-(void)springRefreshNode:(const TFENode*)arg1 ;
-(void)springNode:(const TFENode*)arg1 globalMouse:(const CGPoint*)arg2 spawnNewWindow:(BOOL)arg3 ;
-(double)originalHeight;
-(void)requestUpdateViewLayout;
-(void)swapTab:(long long)arg1 with:(long long)arg2 ;
-(void)setDidReinsertTab:(BOOL)arg1 ;
-(BOOL)tabDropped:(id)arg1 atIndex:(long long)arg2 ;
-(BOOL)didReinsertTab;
-(BOOL)tabDropped:(id)arg1 atScreenPoint:(CGPoint)arg2 ;
-(void)addTabForNode:(const TFENode*)arg1 ;
-(void)setTearingDown:(BOOL)arg1 ;
-(void)setShouldFlashScrollers:(BOOL)arg1 ;
-(void)setOriginalHeight:(double)arg1 ;
-(BOOL)addTabWithContainerState:(id)arg1 ;
-(id)addTabForTargetPath:(const TFENodeVector*)arg1 windowState:(id)arg2 activate:(BOOL)arg3 ;
-(void)persistTabState;
-(double)heightForVisibility:(BOOL)arg1 ;
-(TTabViewSingleLineView *)singleLineView;
-(void)configureContainerViewForTab:(id)arg1 makeFirstResponder:(BOOL)arg2 ;
-(BOOL)closingTab;
-(BOOL)addingTab;
-(BOOL)shouldFlashScrollers;
-(void)setContainerWasFirstResponder:(BOOL)arg1 ;
-(void)setAddingTab:(BOOL)arg1 ;
-(void)removeContainerViewForTab:(id)arg1 ;
-(BOOL)containerWasFirstResponder;
-(id)tabForNode:(const TFENode*)arg1 ;
-(id)addTabForTargetPath:(const TFENodeVector*)arg1 windowState:(id)arg2 activate:(BOOL)arg3 atIndex:(long long)arg4 ;
-(TFENodeVector*)buildTargetPath:(id)arg1 ;
-(void)replaceTemporaryTabTarget:(const TFENode*)arg1 withResolvedNode:(const TFENode*)arg2 ;
-(void)closeTabForContainer:(id)arg1 ;
-(void)setClosingTab:(BOOL)arg1 ;
-(id)moveContainerHere:(id)arg1 fromTabView:(id)arg2 toIndex:(long long)arg3 ;
-(id)containerStateForActiveTab;
-(BOOL)trackChanges;
-(void)setTrackChanges:(BOOL)arg1 ;
-(BOOL)isTabDrag:(id)arg1 ;
-(void)_closeTab:(id)arg1 ;
-(long long)validatorID;
-(void)aboutToTearDown;
-(void)stdAlertSheetCancelButtonPressed;
-(void)stdAlertSheetOKButtonPressed;
-(void)windowDidActivate;
-(void)windowDidDeactivate;
-(TSpringController *)springController;
-(id)activeContainer;
-(void)possibleSpringTargetNode:(const TFENode*)arg1 ;
-(id)allContainers;
-(CGSize)minimumContentSize;
-(CGSize)idealContentSize;
-(void)setSpringController:(TSpringController *)arg1 ;
-(id)init;
-(void)dealloc;
-(TBrowserWindowController *)windowController;
-(void)update;
-(void)setWindowController:(TBrowserWindowController *)arg1 ;
-(unsigned long long)draggingEntered:(id)arg1 ;
-(unsigned long long)draggingUpdated:(id)arg1 ;
-(void)draggingExited:(id)arg1 ;
-(void)draggingEnded:(id)arg1 ;
-(char)performDragOperation:(id)arg1 ;
-(void)concludeDragOperation:(id)arg1 ;
-(id)tabView;
-(void)tabViewDidChangeNumberOfTabViewItems:(id)arg1 ;
-(void)tabView:(id)arg1 willSelectTabViewItem:(id)arg2 ;
-(void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2 ;
-(double)fullScreenMinHeight;
@end

