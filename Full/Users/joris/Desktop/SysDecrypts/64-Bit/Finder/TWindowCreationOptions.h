/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:58:08 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Users/joris/Desktop/SysDecrypts/64-Bit/Finder
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <Finder/Finder-Structs.h>
@class TBaseBrowserWindowController;

@interface TWindowCreationOptions : NSObject {

	TNSRef<TBaseBrowserWindowController *> _targetWindowController;
	TFENodeVector* _nodesToSelect;
	int _spawnOption;
	BOOL _makeActive;
	int _reuseFrontWindow;
	int _closeSpawningWindow;
	int _invertBrowseInPlace;
	shared_ptr<ISpawnOrigin>* _spawnOrigin;
	BOOL _forceContainerWindow;
	BOOL _inheritBrowseStateFromTarget;
	BOOL _sendFolderAction;
	BOOL _ignoreExisting;

}

@property (assign,nonatomic) TBaseBrowserWindowController * targetWindowController; 
@property (assign,nonatomic) int spawnOption;                                                    //@synthesize spawnOption=_spawnOption - In the implementation block
@property (assign,nonatomic) BOOL makeActive;                                                    //@synthesize makeActive=_makeActive - In the implementation block
@property (assign,nonatomic) int reuseFrontWindow;                                               //@synthesize reuseFrontWindow=_reuseFrontWindow - In the implementation block
@property (assign,nonatomic) int closeSpawningWindow;                                            //@synthesize closeSpawningWindow=_closeSpawningWindow - In the implementation block
@property (assign,nonatomic) int invertBrowseInPlace;                                            //@synthesize invertBrowseInPlace=_invertBrowseInPlace - In the implementation block
@property (assign,nonatomic) shared_ptr<ISpawnOrigin>* spawnOrigin;                              //@synthesize spawnOrigin=_spawnOrigin - In the implementation block
@property (assign,nonatomic) BOOL forceContainerWindow;                                          //@synthesize forceContainerWindow=_forceContainerWindow - In the implementation block
@property (assign,nonatomic) BOOL inheritBrowseStateFromTarget;                                  //@synthesize inheritBrowseStateFromTarget=_inheritBrowseStateFromTarget - In the implementation block
@property (assign,nonatomic) BOOL sendFolderAction;                                              //@synthesize sendFolderAction=_sendFolderAction - In the implementation block
@property (assign,nonatomic) BOOL ignoreExisting;                                                //@synthesize ignoreExisting=_ignoreExisting - In the implementation block
+(id)optionsForModifiers:(unsigned long long)arg1 windowController:(id)arg2 ;
+(id)defaultWindowOptions;
+(id)optionsForModifiers:(unsigned long long)arg1 windowController:(id)arg2 allowTabs:(BOOL)arg3 ;
+(id)windowOptions:(id)arg1 spawnOption:(int)arg2 ;
-(void)setTargetWindowController:(TBaseBrowserWindowController *)arg1 ;
-(void)setSpawnOption:(int)arg1 ;
-(void)setMakeActive:(BOOL)arg1 ;
-(void)setReuseFrontWindow:(int)arg1 ;
-(void)setCloseSpawningWindow:(int)arg1 ;
-(void)setInvertBrowseInPlace:(int)arg1 ;
-(void)setSpawnOrigin:(shared_ptr<ISpawnOrigin>*)arg1 ;
-(void)setForceContainerWindow:(BOOL)arg1 ;
-(void)setInheritBrowseStateFromTarget:(BOOL)arg1 ;
-(void)setSendFolderAction:(BOOL)arg1 ;
-(void)setIgnoreExisting:(BOOL)arg1 ;
-(int)spawnOption;
-(TBaseBrowserWindowController *)targetWindowController;
-(void)setNodesToSelect:(const TFENodeVector*)arg1 ;
-(void)getNodesToSelect:(TFENodeVector*)arg1 ;
-(BOOL)makeActive;
-(int)reuseFrontWindow;
-(int)closeSpawningWindow;
-(int)invertBrowseInPlace;
-(shared_ptr<ISpawnOrigin>*)spawnOrigin;
-(BOOL)forceContainerWindow;
-(BOOL)inheritBrowseStateFromTarget;
-(BOOL)sendFolderAction;
-(BOOL)ignoreExisting;
@end

