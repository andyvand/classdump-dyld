/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:58:08 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Users/joris/Desktop/SysDecrypts/64-Bit/Finder
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Finder/Finder-Structs.h>
#import <Finder/TUpdateLayerView.h>
#import <Finder/TShrinkToFitDelegateProtocol.h>
#import <Finder/TTrackingAreaOwnerProtocol.h>

@protocol TDesktopViewDelegateProtocol;
@class TDesktopViewDataSource, TDesktopGridLayoutController, TDesktopIconSpatialDataController, TDesktopBandSelectionController, TDesktopInlinePreviewController, NSString;

@interface TDesktopView : TUpdateLayerView <TShrinkToFitDelegateProtocol, TTrackingAreaOwnerProtocol> {

	TDesktopViewDataSource* _dataSource;
	TDesktopGridLayoutController* _gridLayoutController;
	TDesktopIconSpatialDataController* _spatialDataController;
	TDesktopBandSelectionController* _bandSelectionController;
	TDesktopInlinePreviewController* _inlinePreviewController;
	TNSRef<TShrinkToFitController *> _stfController;
	TFENode* _nodeBeingEdited;
	TNSRef<TUpdateLayerView *> _bandSelectionView;
	TNSRef<TDesktopIcon *> _anchoredDesktopIcon;
	unordered_map<TFENode, TNSRef<TDesktopIcon *>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<TDesktopIcon *> > > >* _nodeToIconMap;
	unsigned long long _dataSourceCountCache;
	id<TDesktopViewDelegateProtocol> _delegate;
	unsigned long long _delegateRespondsTo;
	TFENode* _pendingNodeToEdit;
	TNSRef<TRenameOperation *> _pendingRenameOp;
	TFENode* _pendingNodeToSnap;
	BOOL _keepArranged;
	BOOL _snapToGrid;
	BOOL _ignoringSpatialDataChanges;
	BOOL _layoutIsDirty;
	BOOL _layoutIsSuspended;

}

@property (assign) TDesktopViewDataSource * dataSource; 
@property (assign) TDesktopGridLayoutController * gridLayoutController; 
@property (assign) TDesktopIconSpatialDataController * spatialDataController; 
@property (assign) TDesktopBandSelectionController * bandSelectionController; 
@property (assign) TDesktopInlinePreviewController * inlinePreviewController; 
@property (assign) id<TDesktopViewDelegateProtocol> delegate; 
@property (assign) BOOL keepArranged; 
@property (assign) BOOL snapToGrid;                                                        //@synthesize snapToGrid=_snapToGrid - In the implementation block
@property (assign) unsigned long long iconSize; 
@property (assign) unsigned long long textSize; 
@property (assign) double gridSpacing; 
@property (getter=isTitleOnBottom) BOOL titleOnBottom; 
@property (getter=isSubtitleEnabled) BOOL subtitleEnabled; 
@property (readonly) BOOL isLayoutDirty; 
@property (assign) BOOL layoutIsSuspended; 
@property (assign) CGRect globalBandSelectionFrame; 
@property (assign) BOOL ignoringSpatialDataChanges;                                        //@synthesize ignoringSpatialDataChanges=_ignoringSpatialDataChanges - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)layoutIfDirty;
-(void)setGridLayoutController:(TDesktopGridLayoutController *)arg1 ;
-(void)setSpatialDataController:(TDesktopIconSpatialDataController *)arg1 ;
-(void)setBandSelectionController:(TDesktopBandSelectionController *)arg1 ;
-(void)setInlinePreviewController:(TDesktopInlinePreviewController *)arg1 ;
-(CGPoint)convertPointFromDesktop:(const CGPoint*)arg1 ;
-(TDesktopGridLayoutController *)gridLayoutController;
-(CGRect)anchoredDesktopIconFlippedFrame;
-(void)markLayoutDirty;
-(id)desktopIconForNode:(const TFENode*)arg1 ;
-(CGPoint)invalidLocalAnchorPoint;
-(BOOL)keepArranged;
-(CGPoint)anchorPointFromSpatialDataForNode:(const TFENode*)arg1 ;
-(BOOL)ignoringSpatialDataChanges;
-(CGPoint)convertPointToDesktop:(const CGPoint*)arg1 ;
-(BOOL)updateAnchoredGridCellFrame;
-(void)spatialDataChangedNotification:(id)arg1 ;
-(void)configureAnchoredDesktopIconForNode:(const TFENode*)arg1 ;
-(id)_dragFlockingImageComponentsForDesktopIcon:(id)arg1 ;
-(id)hitTestInIconOrText:(const CGPoint*)arg1 ;
-(id)_hitTest:(const CGPoint*)arg1 desktopIconHitTest:(/*^block*/id)arg2 ;
-(id)hitTestInText:(const CGPoint*)arg1 ;
-(TFENode*)nodeForDesktopIcon:(id)arg1 ;
-(TFENode*)nodeAtPoint:(const CGPoint*)arg1 ;
-(BOOL)isTitleOnBottom;
-(void)setTitleOnBottom:(BOOL)arg1 ;
-(BOOL)isSubtitleEnabled;
-(void)setSubtitleEnabled:(BOOL)arg1 ;
-(void)inlineProgressCancelButtonPressed:(id)arg1 ;
-(CGRect)anchoredDesktopIconFrame;
-(id)createDesktopIconAtAnchorPoint:(const CGPoint*)arg1 title:(id)arg2 subtitle:(id)arg3 isHidden:(BOOL)arg4 ;
-(void)addDesktopIcon:(id)arg1 forDataSourceItem:(id)arg2 toSuperviewOnly:(BOOL)arg3 ;
-(void)groupAsFolderAddPlaceholderDesktopIcon:(const TFENode*)arg1 atDesktopAnchorPoint:(const CGPoint*)arg2 ;
-(void)removeDesktopIcon:(id)arg1 node:(const TFENode*)arg2 nodeWasDeleted:(BOOL)arg3 fromSuperviewOnly:(BOOL)arg4 ;
-(void)showDesktopIcon:(id)arg1 ;
-(id)accessibilitySelectedChildrenAttributeValue;
-(BOOL)isLayoutDirty;
-(void)_setLayoutDirty:(BOOL)arg1 ;
-(void)pendingNodeToEditHasAppeared:(TFENode*)arg1 pendingRenameOp:(TNSRef<TRenameOperation *>*)arg2 ;
-(BOOL)layoutIsSuspended;
-(CGPoint)_anchorPointForNode:(const TFENode*)arg1 orKeepArrangedIndex:(unsigned long long)arg2 ;
-(void)hideDesktopIcon:(id)arg1 node:(const TFENode*)arg2 nodeWasDeleted:(BOOL)arg3 ;
-(void)updateDesktopIconBindings:(id)arg1 withDataSourceItem:(id)arg2 ;
-(void)handlePendingSnapToGridDuringLayout:(vector<CGPoint, std::__1::allocator<CGPoint> >*)arg1 :(map<TFENode, DataBrowserItemSpatialData, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, DataBrowserItemSpatialData> > >*)arg2 :(const CGRect*)arg3 ;
-(void)setIgnoringSpatialDataChanges:(BOOL)arg1 ;
-(TDesktopIconSpatialDataController *)spatialDataController;
-(TDesktopBandSelectionController *)bandSelectionController;
-(void)inlinePreviewEnabledStateChanged:(BOOL)arg1 ;
-(const unordered_map<TFENode, TNSRef<TDesktopIcon *>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<TDesktopIcon *> > > >*)nodeToIconMapPriv;
-(void)displayConfigurationChanged;
-(void)snapNodeToGridNowOrLater:(const TFENode*)arg1 ;
-(CGPoint)anchorPointForNode:(const TFENode*)arg1 ;
-(BOOL)isNode:(const TFENode*)arg1 hidden:(BOOL*)arg2 ;
-(BOOL)setNode:(const TFENode*)arg1 hidden:(BOOL)arg2 ;
-(DataBrowserItemSpatialData)spatialDataFromViewSpatialData:(const DataBrowserItemSpatialData*)arg1 ;
-(void)setKeepArranged:(BOOL)arg1 ;
-(CGRect)globalBandSelectionFrame;
-(void)setGlobalBandSelectionFrame:(CGRect)arg1 ;
-(void)setSpringBlinkingOff:(BOOL)arg1 forNode:(const TFENode*)arg2 ;
-(id)dragFlockingImageComponentsForNode:(const TFENode*)arg1 ;
-(TFENode*)dropTargetNodeAtPoint:(const CGPoint*)arg1 ;
-(void)getNodes:(TFENodeVector*)arg1 inLocalFrame:(const CGRect*)arg2 boundsCheckOnly:(BOOL)arg3 ;
-(id)anchoredDesktopIconPriv;
-(BOOL)inlinePreviewIsVisible:(BOOL)arg1 forNode:(const TFENode*)arg2 ;
-(void)groupAsFolderAnimateNodes:(const TFENodeVector*)arg1 withDesktopAnchorPoints:(const vector<CGPoint, std::__1::allocator<CGPoint> >*)arg2 intoFolder:(const TFENode*)arg3 atDesktopAnchorPoint:(const CGPoint*)arg4 ;
-(void)groupAsFolderUndoAnimateNodes:(const TFENodeVector*)arg1 withDesktopAnchorPoints:(const vector<CGPoint, std::__1::allocator<CGPoint> >*)arg2 outOfFolder:(const TFENode*)arg3 atDesktopAnchorPoint:(const CGPoint*)arg4 ;
-(CGRect)convertRectFromDesktop:(const CGRect*)arg1 ;
-(CGRect)convertRectToDesktop:(const CGRect*)arg1 ;
-(void)accessibilityGetNodes:(TFENodeVector*)arg1 forUIElements:(id)arg2 ;
-(void)setLayoutIsSuspended:(BOOL)arg1 ;
-(BOOL)snapToGrid;
-(void)setSnapToGrid:(BOOL)arg1 ;
-(unsigned long long)textSize;
-(void)initCommon;
-(BOOL)containsNode:(const TFENode*)arg1 ;
-(void)stopEditing:(BOOL)arg1 ;
-(BOOL)shrinkToFitTextViewAboutToOpen;
-(void)shrinkToFitTextViewAboutToClose;
-(void)shrinkToFitTextViewEditingComplete:(id)arg1 ;
-(CGRect)frameForNode:(const TFENode*)arg1 ;
-(CGRect)iconFrameForNode:(const TFENode*)arg1 ;
-(BOOL)startEditingNodeNowOrLater:(const TFENode*)arg1 renameOp:(id)arg2 ;
-(void)prepareForMenu:(id)arg1 withEvent:(id)arg2 ;
-(void)willOpenMenu:(id)arg1 withEvent:(id)arg2 ;
-(BOOL)startEditingWithNode:(const TFENode*)arg1 renameOp:(id)arg2 afterDelay:(BOOL)arg3 ;
-(double)gridSpacing;
-(void)setTextSize:(unsigned long long)arg1 ;
-(void)setGridSpacing:(double)arg1 ;
-(TDesktopInlinePreviewController *)inlinePreviewController;
-(void)setDelegate:(id<TDesktopViewDelegateProtocol>)arg1 ;
-(void)dealloc;
-(char)accessibilityIsIgnored;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(id)accessibilityAttributeNames;
-(id)accessibilityAttributeValue:(id)arg1 ;
-(TFENode*)target;
-(id<TDesktopViewDelegateProtocol>)delegate;
-(void)setFrameSize:(CGSize)arg1 ;
-(void)viewWillDraw;
-(char)acceptsFirstResponder;
-(char)acceptsFirstMouse:(id)arg1 ;
-(unsigned long long)draggingEntered:(id)arg1 ;
-(unsigned long long)draggingUpdated:(id)arg1 ;
-(void)draggingExited:(id)arg1 ;
-(void)draggingEnded:(id)arg1 ;
-(char)performDragOperation:(id)arg1 ;
-(void)mouseDown:(id)arg1 ;
-(void)setDataSource:(TDesktopViewDataSource *)arg1 ;
-(char)canBecomeKeyView;
-(TDesktopViewDataSource *)dataSource;
-(void)updateDraggingItemsForDrag:(id)arg1 ;
-(char)prepareForDragOperation:(id)arg1 ;
-(void)concludeDragOperation:(id)arg1 ;
-(char)wantsPeriodicDraggingUpdates;
-(unsigned long long)iconSize;
-(void)setIconSize:(unsigned long long)arg1 ;
@end

