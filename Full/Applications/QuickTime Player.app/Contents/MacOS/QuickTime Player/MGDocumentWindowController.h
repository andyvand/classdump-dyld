/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:50:46 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/QuickTime Player.app/Contents/MacOS/QuickTime Player
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <QuickTime Player/QuickTime Player-Structs.h>
#import <AppKit/NSWindowController.h>
#import <QuickTime Player/NSWindowDelegate.h>
#import <QuickTime Player/NSUserInterfaceValidations.h>

@protocol MGVisualContentContainer;
@class MGDocumentViewController, NSMapTable, NSDate, NSString;

@interface MGDocumentWindowController : NSWindowController <NSWindowDelegate, NSUserInterfaceValidations> {

	MGDocumentViewController*<MGVisualContentContainer> _currentMainViewController;
	CGRect _savedNonFullScreenWindowFrame;
	CGSize _currentNaturalContentSize;
	CGPoint _cascadeTopLeftPoint;
	unsigned long long _cascadeIndex;
	double _windowContentScaleFactor;
	NSMapTable* _mainViewLayoutConstraintsMapTable;
	NSDate* _fullScreenUseDate;
	double _fullScreenUseTimeInterval[2];
	id _popoverWillShowObserver;
	id _popoverDidCloseObserver;
	unsigned _isFullScreen : 1;
	unsigned _isAnimatingFullScreen : 1;
	unsigned _didDisableSuddenTermination : 1;
	unsigned _needsResizeAfterFullScreenExit : 1;
	unsigned _isInInit : 1;
	unsigned _hasAttachedSheet : 1;
	unsigned _inVersionBrowser : 1;
	unsigned _isPopoverShown : 1;
	unsigned _hasUserSize : 1;
	unsigned _hasSetInitialSizeForViewController : 1;
	unsigned _isFloating : 1;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,getter=isFullScreen,nonatomic) char fullScreen; 
@property (assign,getter=isFloating,nonatomic) char floating; 
+(id)keyPathsForValuesAffectingContentResizable;
+(id)keyPathsForValuesAffectingContentFullScreenCapable;
+(void)initialize;
-(void)logFullScreenUse;
-(void)toggleFloating:(id)arg1 ;
-(id)currentMainViewController;
-(CGSize)adjustedNaturalContentSize;
-(CGSize)maximumWindowContentSizeOnScreen:(id)arg1 ;
-(CGSize)minimumWindowContentSize;
-(void)increaseSize:(id)arg1 ;
-(void)decreaseSize:(id)arg1 ;
-(void)updateTitlebarVisibility;
-(void)removeDocumentViewsFromWindow;
-(void)addDocumentViewsToWindow;
-(void)setCurrentMainViewController:(id)arg1 ;
-(void)resizeWindowToFitContent;
-(char)isShowingDocumentModalInterface;
-(char)isContentFullScreenCapable;
-(CGSize)unconstrainedMinimumWindowContentSize;
-(CGSize)maximumWindowContentSize;
-(char)isContentResizable;
-(void)setWindowFrameWithSuggestedTopLeftPoint:(CGPoint)arg1 suggestedContentSize:(CGSize)arg2 centered:(char)arg3 onScreen:(id)arg4 animate:(char)arg5 ;
-(CGSize)naturalWindowContentSizeOnScreen:(id)arg1 ;
-(CGSize)preferredWindowContentSizeForSuggestedWindowContentSize:(CGSize)arg1 ;
-(void)setWindowContentSize:(CGSize)arg1 centered:(char)arg2 onScreen:(id)arg3 animate:(char)arg4 ;
-(void)stepWindowSize:(long long)arg1 ;
-(void)setFullScreen:(char)arg1 duration:(double)arg2 screen:(id)arg3 ;
-(void)setFullScreen:(char)arg1 ;
-(void)fitToScreen:(id)arg1 ;
-(void)actualSize:(id)arg1 ;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)encodeRestorableStateWithCoder:(id)arg1 ;
-(void)restoreStateWithCoder:(id)arg1 ;
-(char)validateUserInterfaceItem:(id)arg1 ;
-(unsigned long long)draggingEntered:(id)arg1 ;
-(unsigned long long)draggingUpdated:(id)arg1 ;
-(void)draggingExited:(id)arg1 ;
-(void)draggingEnded:(id)arg1 ;
-(char)performDragOperation:(id)arg1 ;
-(id)initWithWindow:(id)arg1 ;
-(void)magnifyWithEvent:(id)arg1 ;
-(void)setWindow:(id)arg1 ;
-(void)synchronizeWindowTitleWithDocumentName;
-(void)setDocument:(id)arg1 ;
-(char)prepareForDragOperation:(id)arg1 ;
-(void)concludeDragOperation:(id)arg1 ;
-(char)wantsPeriodicDraggingUpdates;
-(char)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2 ;
-(void)windowDidFailToEnterFullScreen:(id)arg1 ;
-(id)customWindowsToExitFullScreenForWindow:(id)arg1 ;
-(void)window:(id)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2 ;
-(id)customWindowsToEnterFullScreenForWindow:(id)arg1 onScreen:(id)arg2 ;
-(void)window:(id)arg1 startCustomAnimationToEnterFullScreenOnScreen:(id)arg2 withDuration:(double)arg3 ;
-(void)windowDidFailToExitFullScreen:(id)arg1 ;
-(void)window:(id)arg1 willEncodeRestorableState:(id)arg2 ;
-(void)window:(id)arg1 didDecodeRestorableState:(id)arg2 ;
-(void)windowDidResize:(id)arg1 ;
-(void)windowDidMove:(id)arg1 ;
-(void)windowWillBeginSheet:(id)arg1 ;
-(void)windowDidEndSheet:(id)arg1 ;
-(void)windowWillEnterVersionBrowser:(id)arg1 ;
-(void)windowDidExitVersionBrowser:(id)arg1 ;
-(char)shouldCascadeWindows;
-(char)isFloating;
-(void)setFloating:(char)arg1 ;
-(id)_windowBackgroundColorForFullScreenMode:(id)arg1 ;
-(id)windowTitleForDocumentDisplayName:(id)arg1 ;
-(char)isFullScreen;
@end

