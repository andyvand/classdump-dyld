/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:50:47 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/QuickTime Player.app/Contents/MacOS/QuickTime Player
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <QuickTime Player/QuickTime Player-Structs.h>
#import <QuickTime Player/MGRecordingDocument.h>
#import <QuickTime Player/MGInspectionAttributeContainer.h>
#import <QuickTime Player/MGScreenSelectorDelegate.h>
#import <QuickTime Player/NSMenuDelegate.h>

@protocol OS_dispatch_semaphore;
@class NSStatusItem, MGScreenRecordingDocumentViewController, AVCaptureScreenInput, MGCaptureCompressionPreset, MGScreenSelector, NSWindow, CALayer, NSObject, MGCaptureDeviceSelectionController, MGCaptureAudioPreviewOutput, NSArray, NSScreen, NSURL, NSString, AVPlayer;

@interface MGScreenRecordingDocument : MGRecordingDocument <MGInspectionAttributeContainer, MGScreenSelectorDelegate, NSMenuDelegate> {

	NSStatusItem* _statusItem;
	MGScreenRecordingDocumentViewController* _mainViewController;
	AVCaptureScreenInput* _captureScreenInput;
	MGCaptureCompressionPreset* _compressionPreset;
	MGScreenSelector* _screenSelector;
	id _hotKeyMonitor;
	char _isInitiallySetup;
	char _isClosing;
	char _isWorkspaceInactive;
	NSWindow* _fullscreenWindow;
	CALayer* _windowAnimationLayer;
	long long _windowAnimationBehavior;
	CGRect _windowAnimationViewInitialFrame;
	NSObject*<OS_dispatch_semaphore> _menuBarEnterAnimationSemaphore;
	NSObject*<OS_dispatch_semaphore> _menuBarExitAnimationSemaphore;
	MGCaptureDeviceSelectionController* _captureDeviceSelectionController;
	MGCaptureAudioPreviewOutput* _captureAudioPreviewOutput;
	NSArray* _availableCompressionPresets;
	NSScreen* _selectedScreen;
	NSURL* _outputFileURL;
	CGRect _cropRect;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) NSString * inspectionTitle; 
@property (readonly) NSArray * inspectionAttributes; 
@property (readonly) NSArray * inspectionInformation; 
@property (readonly) NSString * displayName; 
@property (readonly) AVPlayer * player; 
@property (nonatomic,readonly) MGCaptureDeviceSelectionController * captureDeviceSelectionController;              //@synthesize captureDeviceSelectionController=_captureDeviceSelectionController - In the implementation block
@property (nonatomic,readonly) MGCaptureAudioPreviewOutput * captureAudioPreviewOutput;                            //@synthesize captureAudioPreviewOutput=_captureAudioPreviewOutput - In the implementation block
@property (nonatomic,readonly) NSArray * availableCompressionPresets;                                              //@synthesize availableCompressionPresets=_availableCompressionPresets - In the implementation block
@property (nonatomic,retain) MGCaptureCompressionPreset * compressionPreset; 
@property (retain) NSScreen * selectedScreen;                                                                      //@synthesize selectedScreen=_selectedScreen - In the implementation block
@property (assign) CGRect cropRect;                                                                                //@synthesize cropRect=_cropRect - In the implementation block
@property (copy) NSURL * outputFileURL;                                                                            //@synthesize outputFileURL=_outputFileURL - In the implementation block
+(id)keyPathsForValuesAffectingInspectionAttributes;
+(void)initialize;
-(void)viewControllerDidLoadView:(id)arg1 ;
-(id)mainViewController;
-(id)initWithRecordingType:(unsigned long long)arg1 ;
-(NSString *)inspectionTitle;
-(NSArray *)inspectionAttributes;
-(NSArray *)inspectionInformation;
-(void)stopScreenRecording:(id)arg1 ;
-(void)updateCaptureSessionRunningState;
-(MGCaptureCompressionPreset *)compressionPreset;
-(id)baseOutputFileName;
-(void)setCompressionPreset:(MGCaptureCompressionPreset *)arg1 ;
-(void)workspaceSessionDidResignActive:(id)arg1 ;
-(void)workspaceSessionDidBecomeActive:(id)arg1 ;
-(void)showStatusItem;
-(void)cleanUpRecording;
-(void)removeStatusItem;
-(void)screenSelector:(id)arg1 didSelectRect:(CGRect)arg2 ofScreen:(id)arg3 ;
-(void)screenSelectorDidCancel:(id)arg1 ;
-(void)prepareToStartRecording;
-(char)startWritingDataToURL:(id)arg1 error:(id*)arg2 ;
-(void)stopWritingData;
-(MGCaptureAudioPreviewOutput *)captureAudioPreviewOutput;
-(NSArray *)availableCompressionPresets;
-(void)setOutputFileURL:(NSURL *)arg1 ;
-(void)handlePauseCommand:(id)arg1 ;
-(void)handleResumeCommand:(id)arg1 ;
-(id)currentAudioRecordingDevice;
-(id)currentVideoRecordingDevice;
-(id)currentAudioCompression;
-(id)currentMovieCompression;
-(id)currentScreenCompression;
-(void)setCurrentAudioRecordingDevice:(id)arg1 ;
-(void)setCurrentVideoRecordingDevice:(id)arg1 ;
-(void)setCurrentAudioCompression:(id)arg1 ;
-(void)setCurrentMovieCompression:(id)arg1 ;
-(id)currentTimeInSeconds;
-(void)setCurrentTimeInSeconds:(id)arg1 ;
-(void)setCurrentScreenCompression:(id)arg1 ;
-(unsigned long long)dataSize;
-(id)naturalDimensions;
-(unsigned long long)dataRate;
-(MGCaptureDeviceSelectionController *)captureDeviceSelectionController;
-(void)setMuted:(char)arg1 ;
-(char)playing;
-(void)setSelectedScreen:(NSScreen *)arg1 ;
-(NSScreen *)selectedScreen;
-(NSURL *)outputFileURL;
-(void)captureOutput:(id)arg1 didFinishRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3 error:(id)arg4 ;
-(void)captureOutput:(id)arg1 didStartRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3 ;
-(void)setCropRect:(CGRect)arg1 ;
-(char)muted;
-(id)durationInSeconds;
-(CGRect)cropRect;
-(id)init;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)close;
-(void)setVolume:(float)arg1 ;
-(float)volume;
-(void)setLoops:(char)arg1 ;
-(char)loops;
-(void)setRate:(float)arg1 ;
-(float)rate;
@end

