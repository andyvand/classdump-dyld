/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:50:46 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/QuickTime Player.app/Contents/MacOS/QuickTime Player
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <QuickTime Player/QuickTime Player-Structs.h>
@class AVCaptureSession, NSMutableSet, NSSet, NSString, AVCaptureDevice;

@interface MGCaptureDeviceSelectionController : NSObject {

	AVCaptureSession* _captureSession;
	NSMutableSet* _ownedDeviceInputs;
	CFDictionaryRef _videoDevicesWithErrors;
	CFDictionaryRef _audioDevicesWithErrors;
	NSMutableSet* _inUseDevices;
	NSMutableSet* _disconnectedDeviceUniqueIDs;
	NSSet* _connectedVideoDevices;
	NSSet* _connectedAudioDevices;
	NSString* _autosaveName;

}

@property (nonatomic,readonly) AVCaptureSession * captureSession;              //@synthesize captureSession=_captureSession - In the implementation block
@property (nonatomic,readonly) NSSet * availableVideoDevices; 
@property (nonatomic,readonly) NSSet * availableAudioDevices; 
@property (nonatomic,retain) AVCaptureDevice * videoDevice; 
@property (nonatomic,retain) AVCaptureDevice * audioDevice; 
@property (nonatomic,readonly) char hasDevicesWithErrors; 
@property (nonatomic,copy) NSString * autosaveName; 
+(id)_autosavePropertyListUserDefaultsKeyForAutosaveName:(id)arg1 ;
+(id)keyPathsForValuesAffectingAvailableVideoDevices;
+(id)keyPathsForValuesAffectingAvailableAudioDevices;
+(char)automaticallyNotifiesObserversOfVideoDevice;
+(id)keyPathsForValuesAffectingVideoDevice;
+(char)automaticallyNotifiesObserversOfAudioDevice;
+(id)keyPathsForValuesAffectingAudioDevice;
-(char)_attemptToReopenAndAddDevice:(id)arg1 error:(id*)arg2 ;
-(id)addedDevicesWithDeviceInputPortMediaType:(id)arg1 ;
-(char)openAndAddDevice:(id)arg1 forMediaType:(id)arg2 excludingMediaType:(id)arg3 error:(id*)arg4 ;
-(void)_startAutosavingDevice:(id)arg1 ;
-(void)_stopAutosavingDevice:(id)arg1 ;
-(void)closeAndRemoveDevice:(id)arg1 forMediaType:(id)arg2 excludingMediaType:(id)arg3 ;
-(id)addDevicesWithMediaType:(id)arg1 usingAutosaveName:(id)arg2 passingTest:(/*^block*/id)arg3 ;
-(id)addAudioDevicesUsingAutosaveName:(id)arg1 passingTest:(/*^block*/id)arg2 ;
-(id)addVideoDevicesUsingAutosaveName:(id)arg1 passingTest:(/*^block*/id)arg2 ;
-(id)_autosavePropertyListUserDefaultsKey;
-(void)_updateAutosaveInfoInUserDefaultsForDevice:(id)arg1 ;
-(id)setAudioDeviceUsingAutosaveName:(id)arg1 passingTest:(/*^block*/id)arg2 ;
-(id)setVideoDeviceUsingAutosaveName:(id)arg1 passingTest:(/*^block*/id)arg2 ;
-(void)devicesDidChange:(id)arg1 ;
-(id)videoDevices;
-(void)removeVideoDevicesObject:(id)arg1 ;
-(id)audioDevices;
-(void)removeAudioDevicesObject:(id)arg1 ;
-(void)_handleError:(id)arg1 forDevice:(id)arg2 mediaType:(id)arg3 ;
-(void)_clearErrorForDevice:(id)arg1 mediaType:(id)arg2 ;
-(void)addVideoDevicesObject:(id)arg1 ;
-(AVCaptureDevice *)videoDevice;
-(void)addAudioDevicesObject:(id)arg1 ;
-(AVCaptureDevice *)audioDevice;
-(id)initWithCaptureSession:(id)arg1 ;
-(NSSet *)availableVideoDevices;
-(NSSet *)availableAudioDevices;
-(void)setVideoDevice:(AVCaptureDevice *)arg1 ;
-(void)setAudioDevice:(AVCaptureDevice *)arg1 ;
-(char)hasDevicesWithErrors;
-(id)errorForDevice:(id)arg1 ;
-(void)_refreshDevices;
-(AVCaptureSession *)captureSession;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)setAutosaveName:(NSString *)arg1 ;
-(NSString *)autosaveName;
@end

