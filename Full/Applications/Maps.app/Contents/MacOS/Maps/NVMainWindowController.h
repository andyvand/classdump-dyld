/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:39:43 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Maps.app/Contents/MacOS/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <AppKit/NSWindowController.h>
#import <Maps/MKMapViewDelegate.h>
#import <Maps/NSSharingServicePickerDelegate.h>
#import <Maps/NSSharingServiceDelegate.h>
#import <Maps/NSWindowDelegate.h>
#import <Maps/NSTextFieldDelegate.h>
#import <Maps/CNContactPickerDelegate.h>
#import <Maps/CNPrivateContactPickerDelegate.h>
#import <Maps/NSPopoverDelegate.h>
#import <Maps/NVCoreLocationErrorPresenterDelegate.h>
#import <Maps/GEOResourceManifestTileGroupObserver.h>
#import <Maps/NVQuickRouteButtonViewDelegate.h>
#import <Maps/NVFlyoverTourButtonViewDelegate.h>
#import <Maps/NVAnnouncementViewDelegate.h>
#import <Maps/NVMapViewGestureRecognizerDelegate.h>
#import <Maps/NVSuggesterDelegate.h>
#import <Maps/NSMenuDelegate.h>
#import <Maps/NSGestureRecognizerDelegate.h>

@protocol OS_dispatch_group;
@class MKMapView, NVSearchField, NSButton, NSSegmentedControl, NVMessageBezelView, NVSearchController, NSLayoutConstraint, NVToolbarItem, NVAnnouncementView, NSArray, NVBookmarksViewController, NVSearchManager, NVRouteManager, NVTopShadowView, NSPopover, NSMutableArray, NSMenu, CNContactPickerSection, NVPlaceCardController, NSString, NSError, NSDate, NVSearchQuery, NVQuickRouteButtonViewController, NVFlyoverTourButtonViewController, NSEvent, NSObject, MKLabelMarker, NVPlace, NSOrderedSet, CNContactPicker, NVSideViewController, NVReportAProblemChooserWindowController, NSMutableSet, NVRoute, MapsActivity;

@interface NVMainWindowController : NSWindowController <MKMapViewDelegate, NSSharingServicePickerDelegate, NSSharingServiceDelegate, NSWindowDelegate, NSTextFieldDelegate, CNContactPickerDelegate, CNPrivateContactPickerDelegate, NSPopoverDelegate, NVCoreLocationErrorPresenterDelegate, GEOResourceManifestTileGroupObserver, NVQuickRouteButtonViewDelegate, NVFlyoverTourButtonViewDelegate, NVAnnouncementViewDelegate, NVMapViewGestureRecognizerDelegate, NVSuggesterDelegate, NSMenuDelegate, NSGestureRecognizerDelegate> {

	MKMapView* mapView;
	NVSearchField* locationField;
	NSButton* shareButton;
	NSButton* bookmarksButton;
	NSSegmentedControl* mapTypeSegmentedControl;
	NSButton* userLocationButton;
	NVMessageBezelView* messageBezelView;
	NVSearchController* searchController;
	NSLayoutConstraint* bezelMessageViewTopConstraint;
	NVToolbarItem* _mapViewStyle;
	NVAnnouncementView* _announcementView;
	NSArray* _announcementViewConstraints;
	char _showLabels;
	NVBookmarksViewController* bookmarksViewController;
	NVBookmarksViewController* recentsViewController;
	NVSearchManager* _searchManager;
	NVRouteManager* _routeManager;
	NVTopShadowView* _topShadowView;
	NSPopover* _currentPopover;
	NSMutableArray* _searchSuggestionResults;
	char _needsToCenterOnUserLocationUpdate;
	char _showLocationErrors;
	NSMenu* _contextualMenu;
	CNContactPickerSection* _recentsSection;
	CNContactPickerSection* _bookmarksSection;
	char _bookmarksInUse;
	NSMutableArray* _postTileLoadingBlocks;
	char _isRenderingMap;
	NVPlaceCardController* _infoCardController;
	NSString* _bezelMessage;
	NSError* _bezelError;
	char _mapLoadedWithoutError;
	char _searchFieldIsFirstReponder;
	double _detailCardClosedTimeIntervalSinceReferenceDate;
	NSDate* _dateSinceLastMapViewportChange;
	NSDate* _dateSinceMapWindowBecameKey;
	NVSearchQuery* _lastQuery;
	char _displayingLocationErrorMessage;
	int _currentPickerMode;
	NVQuickRouteButtonViewController* _quickRouteButtonViewController;
	NVFlyoverTourButtonViewController* _flyoverTourButtonViewController;
	char _flyoverTourRunning;
	NSString* _flyoverTourLabel;
	unsigned long long _flyoverTourStartMode;
	NSEvent* _flyoverAnnouncementEventMonitor;
	NSObject*<OS_dispatch_group> _menuLabelMarkerResolveGroup;
	MKLabelMarker* _menuLabelMarker;
	CGPoint _menuPointInMapView;
	char _showsCloseButtonInBezel;
	char _dropsPinOnSearch;
	char _sharing;
	NVPlace* _selectedPinPlace;
	NSOrderedSet* displayedPinPlaces;
	CNContactPicker* bookmarksPopoverController;
	NVSideViewController* sideViewController;
	NVPlace* _droppedPinPlace;
	NVReportAProblemChooserWindowController* _currentReportAProblemController;
	NSOrderedSet* _pinPlacesToPrint;
	NVPlace* _selectedSearchPlaceToAnimate;
	NSMutableSet* _activeTrackingAreas;
	NVRoute* _bezelMessageRoute;
	NSButton* _directionsToggleButton;

}

@property (readonly) MKMapView * mapView; 
@property (assign) unsigned long long mapType; 
@property (assign) char imageryEnabled; 
@property (assign) char showLabels; 
@property (assign) long long labelTextSize; 
@property (assign) char useLargeTextSize; 
@property (readonly) char canLocalizeLabels; 
@property (readonly) char canResizeLabels; 
@property (readonly) char canToggleTraffic; 
@property (readonly) char canSnapToNorth; 
@property (readonly) char canEnter3DMode; 
@property (assign) char mode3D; 
@property (readonly) NVRouteManager * routeManager; 
@property (nonatomic,readonly) NVSearchField * locationField; 
@property (nonatomic,readonly) NSString * fallbackWindowTitle; 
@property (retain) NSDate * dateSinceLastMapViewportChange;                                                          //@synthesize dateSinceLastMapViewportChange=_dateSinceLastMapViewportChange - In the implementation block
@property (retain) NSDate * dateSinceMapWindowBecameKey;                                                             //@synthesize dateSinceMapWindowBecameKey=_dateSinceMapWindowBecameKey - In the implementation block
@property (nonatomic,retain) MapsActivity * mapsActivity; 
@property (readonly) NSButton * bookmarksButton; 
@property (getter=isDirectionsViewVisible,readonly) char directionsViewVisible; 
@property (__weak) NVSideViewController * sideViewController; 
@property (assign) char dropsPinOnSearch;                                                                            //@synthesize dropsPinOnSearch=_dropsPinOnSearch - In the implementation block
@property (copy) NSOrderedSet * displayedPinPlaces; 
@property (getter=areDisplayedPinsVisible,readonly) char displayedPinsVisible; 
@property (retain) NVPlace * selectedPinPlace;                                                                       //@synthesize selectedPinPlace=_selectedPinPlace - In the implementation block
@property (getter=isSelectedPinVisible,readonly) char selectedPinVisible; 
@property (retain) NVPlace * droppedPinPlace;                                                                        //@synthesize droppedPinPlace=_droppedPinPlace - In the implementation block
@property (getter=isDroppedPinVisible,readonly) char droppedPinVisible; 
@property (getter=isSharing) char sharing;                                                                           //@synthesize sharing=_sharing - In the implementation block
@property (nonatomic,retain) NVReportAProblemChooserWindowController * currentReportAProblemController;              //@synthesize currentReportAProblemController=_currentReportAProblemController - In the implementation block
@property (nonatomic,readonly) unsigned long long printTypeForCurrentState; 
@property (nonatomic,retain) NSOrderedSet * pinPlacesToPrint;                                                        //@synthesize pinPlacesToPrint=_pinPlacesToPrint - In the implementation block
@property (__weak) NVToolbarItem * mapViewStyle;                                                                     //@synthesize mapViewStyle=_mapViewStyle - In the implementation block
@property (retain) CNContactPicker * bookmarksPopoverController; 
@property (retain) NVPlace * selectedSearchPlaceToAnimate;                                                           //@synthesize selectedSearchPlaceToAnimate=_selectedSearchPlaceToAnimate - In the implementation block
@property (retain) NSMutableSet * activeTrackingAreas;                                                               //@synthesize activeTrackingAreas=_activeTrackingAreas - In the implementation block
@property (nonatomic,copy) NSString * bezelMessage;                                                                  //@synthesize bezelMessage=_bezelMessage - In the implementation block
@property (nonatomic,retain) NSError * bezelError;                                                                   //@synthesize bezelError=_bezelError - In the implementation block
@property (assign,nonatomic) char showsCloseButtonInBezel;                                                           //@synthesize showsCloseButtonInBezel=_showsCloseButtonInBezel - In the implementation block
@property (assign,nonatomic,__weak) NVRoute * bezelMessageRoute;                                                     //@synthesize bezelMessageRoute=_bezelMessageRoute - In the implementation block
@property (assign,nonatomic,__weak) NSButton * directionsToggleButton;                                               //@synthesize directionsToggleButton=_directionsToggleButton - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(char)supportsCustomLocation;
+(void)updateSearchQuerySubtitle:(id)arg1 syncedSearchQuery:(id)arg2 inRect:(SCD_Struct_NV6)arg3 center:(SCD_Struct_NV5)arg4 ;
+(id)_windowTitleFromMapItem:(id)arg1 visibleMapRect:(SCD_Struct_NV6)arg2 ;
+(id)keyPathsForValuesAffectingImageryEnabled;
+(id)keyPathsForValuesAffectingCanSnapToNorth;
+(id)keyPathsForValuesAffectingCanEnter3DMode;
+(id)keyPathsForValuesAffectingUseLargeTextSize;
+(id)keyPathsForValuesAffectingCanLocalizeLabels;
+(id)keyPathsForValuesAffectingCanResizeLabels;
+(id)keyPathsForValuesAffectingCanToggleTraffic;
+(id)keyPathsForValuesAffectingDirectionsViewVisible;
+(id)keyPathsForValuesAffectingCanAddToBookmarks;
+(id)keyPathsForValuesAffectingCanRemoveFromBookmarks;
+(id)keyPathsForValuesAffectingIsMapViewCenteredOnUserLocation;
+(id)keyPathsForValuesAffectingDroppedPinVisible;
+(id)keyPathsForValuesAffectingSelectedPinVisible;
+(id)keyPathsForValuesAffectingDisplayedPinsVisible;
-(void)dropPinAtCoordinate:(SCD_Struct_NV5)arg1 ;
-(NVPlace *)droppedPinPlace;
-(void)setDroppedPinPlace:(NVPlace *)arg1 ;
-(void)showDirectionsFromString:(id)arg1 toString:(id)arg2 directionMode:(unsigned long long)arg3 fromURL:(char)arg4 ;
-(void)startSearchForString:(id)arg1 animated:(char)arg2 source:(int)arg3 ;
-(void)showLocations:(id)arg1 ;
-(NSButton *)bookmarksButton;
-(id)mapViewSnapthotImageWithCurrentlyVisibleControls;
-(NSOrderedSet *)pinPlacesToPrint;
-(NVRouteManager *)routeManager;
-(void)coreLocationErrorPresenter:(id)arg1 failedRecoveringFromError:(id)arg2 ;
-(void)announcementViewButtonWasClicked:(id)arg1 ;
-(id)acceptedDraggedElementUTIsForDropTargetSearchField:(id)arg1 ;
-(char)dropTargetSearchField:(id)arg1 performDragOperation:(id)arg2 ;
-(char)ignoreRecentsSearchesForSuggester:(id)arg1 ;
-(id)additionalPlacesForSuggester:(id)arg1 ;
-(SCD_Struct_NV6)searchMapRect;
-(NSDate *)dateSinceLastMapViewportChange;
-(void)setDateSinceLastMapViewportChange:(NSDate *)arg1 ;
-(char)canDropPinAtPoint:(CGPoint)arg1 inView:(id)arg2 ;
-(void)saveLastViewport;
-(void)saveLastViewOptions;
-(char)openURL:(id)arg1 sourceApplication:(id)arg2 ;
-(void)schedulePostTileLoadingBlock:(/*^block*/id)arg1 ;
-(void)presentFlyoverAnnouncement:(id)arg1 tourInfo:(id)arg2 tourId:(unsigned long long)arg3 ;
-(void)presentRPProblemResolution:(id)arg1 ;
-(void)showPlaceOrTrip:(id)arg1 ;
-(void)restoreLastViewport;
-(void)restoreLastViewOptions;
-(id)configuredSharingController;
-(char)isSharing;
-(void)mapStyleChanged:(id)arg1 ;
-(void)mapModeChanged:(id)arg1 ;
-(char)imageryEnabled;
-(void)updateToolbarVisibility;
-(char)canRemoveFromBookmarks;
-(void)flashBezelMessage:(id)arg1 duration:(double)arg2 ;
-(void)updatePinPlacesToPrint;
-(id)mapViewSnapthotImageForSharing;
-(void)printOrExport:(char)arg1 optionalPath:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(char)canAddToBookmarks;
-(unsigned long long)printTypeForCurrentState;
-(NSString *)fallbackWindowTitle;
-(id)_traits;
-(void)flyoverTourButtonViewClicked:(id)arg1 ;
-(void)deleteDroppedPin:(id)arg1 ;
-(void)showDirectionsFrom:(id)arg1 directionMode:(unsigned long long)arg2 cleanupSearchResults:(char)arg3 ;
-(void)showDirectionsTo:(id)arg1 directionMode:(unsigned long long)arg2 cleanupSearchResults:(char)arg3 ;
-(void)showFlyoverTourForSearchResult:(id)arg1 ;
-(void)quickRouteButtonViewClicked:(id)arg1 ;
-(char)isFullscreen;
-(void)removeDroppedPinPlace;
-(void)showInfoCard:(id)arg1 ;
-(void)setDropsPinOnSearch:(char)arg1 ;
-(void)setDateSinceMapWindowBecameKey:(NSDate *)arg1 ;
-(void)updateSettingsView;
-(char)enableShowsUserLocationIfPossible;
-(void)updateLocationButtonState;
-(void)locationChanged:(id)arg1 ;
-(void)setBezelMessage:(id)arg1 error:(id)arg2 showsCloseButton:(char)arg3 ;
-(void)refreshWindowTitleAfterShortDelay;
-(void)networkReachabilityChanged;
-(void)_updateCurrentEnvironmentName;
-(NSError *)bezelError;
-(void)closeBezelMessage:(id)arg1 ;
-(NVSideViewController *)sideViewController;
-(void)setDisplayedPinPlaces:(NSOrderedSet *)arg1 ;
-(CNContactPicker *)bookmarksPopoverController;
-(void)setBookmarksPopoverController:(CNContactPicker *)arg1 ;
-(char)isMapViewCenteredOnUserLocation;
-(void)setShowLabels:(char)arg1 ;
-(void)_stopFlyoverTourAnimation;
-(void)selectedRouteChanged;
-(void)selectSelectedSearchPlaceNow;
-(void)setSelectedSearchPlaceToAnimate:(NVPlace *)arg1 ;
-(void)updateRouteIfNecessary:(id)arg1 ;
-(void)updateRouteBezelIfNecessary;
-(void)updateToggleDirectionsStateIfNecessary;
-(void)showDirectionsFrom:(id)arg1 to:(id)arg2 directionMode:(unsigned long long)arg3 cleanupSearchResults:(char)arg4 ;
-(NVPlace *)selectedSearchPlaceToAnimate;
-(NVPlace *)selectedPinPlace;
-(MapsActivity *)mapsActivity;
-(void)unsafeRestoreStateWithCoder:(id)arg1 ;
-(void)setMapsActivity:(MapsActivity *)arg1 ;
-(id)mapsActivityWithFidelity:(unsigned long long)arg1 ;
-(void)setMapsActivity:(id)arg1 assumedSourceFidelity:(unsigned long long)arg2 ;
-(char)isDirectionsViewVisible;
-(void)_notePlaceChanged:(id)arg1 ;
-(void)showInfoCardForPlace:(id)arg1 annotationView:(id)arg2 ;
-(void)showPlaces:(id)arg1 animated:(char)arg2 allowToChangeRegion:(char)arg3 removeOtherPlaceAnnotations:(char)arg4 selectAnnotation:(char)arg5 ignoreSearchField:(char)arg6 completion:(/*^block*/id)arg7 ;
-(void)invalidateRestorableStateAndActivityState;
-(char)showLabels;
-(void)toggleLabels:(id)arg1 ;
-(void)toggleTraffic:(id)arg1 ;
-(void)toggle3DMode:(id)arg1 ;
-(char)mode3D;
-(id)settingsMenu;
-(void)setMode3D:(char)arg1 ;
-(char)openMapsURL:(id)arg1 ;
-(char)handleURLWithMapItems:(id)arg1 options:(id)arg2 urlScheme:(id)arg3 sourceApplication:(id)arg4 ;
-(char)launchWithOptions:(id)arg1 ;
-(char)launchIntoDirectionsWithMapItems:(id)arg1 options:(id)arg2 ;
-(char)launchIntoRAPForMapItem:(id)arg1 options:(id)arg2 ;
-(char)launchIntoSearchWithMapItems:(id)arg1 options:(id)arg2 ;
-(NSDate *)dateSinceMapWindowBecameKey;
-(id)makeSearchContextForMapRect:(SCD_Struct_NV6)arg1 source:(int)arg2 field:(id)arg3 ;
-(SCD_Struct_NV6)regionForCoordinate:(SCD_Struct_NV5)arg1 ;
-(id)_escapedString:(id)arg1 ;
-(void)startSearchForQuery:(id)arg1 animated:(char)arg2 source:(int)arg3 externalQuery:(char)arg4 ;
-(SCD_Struct_NV6)mapRectForLaunchOptions:(id)arg1 places:(id)arg2 ;
-(void)reportAProblemWithPlace:(id)arg1 ;
-(void)changeViewPortWithLaunchOptions:(id)arg1 places:(id)arg2 ;
-(char)location:(id)arg1 isNearDestination:(id)arg2 ;
-(char)isCurrentLocationVisible;
-(NSOrderedSet *)displayedPinPlaces;
-(char)_isAnnotationVisible:(id)arg1 ;
-(id)relevantOriginForRouteWithDestination:(id)arg1 ;
-(void)clearSearchResultsAndDirections;
-(void)_searchString:(id)arg1 completion:(id)arg2 query:(id)arg3 animated:(char)arg4 source:(int)arg5 ;
-(id)makeSearchContextForSource:(int)arg1 field:(id)arg2 ;
-(void)centerOnUserLocation:(id)arg1 ;
-(void)centerMapToUserLocation;
-(void)showPlace:(id)arg1 animated:(char)arg2 completion:(/*^block*/id)arg3 ;
-(void)displaySearchPlaces:(id)arg1 searchQuery:(id)arg2 warnIfNone:(char)arg3 ;
-(double)toolbarHeight;
-(void)clearSearchResultsAndDirectionsKeepingSearchField:(char)arg1 ;
-(void)_searchString:(id)arg1 completion:(id)arg2 query:(id)arg3 animated:(char)arg4 source:(int)arg5 externalQuery:(char)arg6 ;
-(void)showPlaces:(id)arg1 animated:(char)arg2 allowToChangeRegion:(char)arg3 removeOtherPlaceAnnotations:(char)arg4 selectAnnotation:(char)arg5 completion:(/*^block*/id)arg6 ;
-(void)clearDroppedPinPlace;
-(char)dropsPinOnSearch;
-(void)changeRegionToDisplayResultsInMapRect:(SCD_Struct_NV6)arg1 adjustRegion:(char)arg2 avoidChangingRegion:(char)arg3 animated:(char)arg4 completion:(/*^block*/id)arg5 ;
-(char)visibleMapRectIsSuitableForMapRect:(SCD_Struct_NV6)arg1 ;
-(void)showPlaces:(id)arg1 animated:(char)arg2 allowToChangeRegion:(char)arg3 defaultMapRect:(SCD_Struct_NV6)arg4 removeOtherPlaceAnnotations:(char)arg5 selectAnnotation:(char)arg6 ignoreSearchField:(char)arg7 completion:(/*^block*/id)arg8 ;
-(void)startSearchForQuery:(id)arg1 animated:(char)arg2 source:(int)arg3 ;
-(void)setBezelMessageRoute:(NVRoute *)arg1 ;
-(NVRoute *)bezelMessageRoute;
-(void)setBezelMessage:(id)arg1 error:(id)arg2 showsCloseButton:(char)arg3 width:(double)arg4 textAlignment:(unsigned long long)arg5 ;
-(void)setBezelMessage:(NSString *)arg1 ;
-(void)setBezelError:(NSError *)arg1 ;
-(void)setShowsCloseButtonInBezel:(char)arg1 ;
-(NSString *)bezelMessage;
-(char)showsCloseButtonInBezel;
-(void)setImageryEnabled:(char)arg1 ;
-(NSButton *)directionsToggleButton;
-(void)updateLeftCalloutAccessoryView;
-(char)isDroppedPinVisible;
-(void)addDroppedPinPlace:(id)arg1 animated:(char)arg2 selectAnnotation:(char)arg3 ;
-(void)setSelectedPinPlace:(NVPlace *)arg1 ;
-(void)cancelSelectSelectedSearchPlace;
-(void)setCurrentReportAProblemController:(NVReportAProblemChooserWindowController *)arg1 ;
-(NVReportAProblemChooserWindowController *)currentReportAProblemController;
-(void)didEndReportAProblemSheet:(id)arg1 returnCode:(long long)arg2 contextInfo:(void*)arg3 ;
-(id)mapViewSnapthotImageWithCompass:(char)arg1 scale:(char)arg2 zoomControls:(char)arg3 sideView:(char)arg4 ;
-(void)_copyMapSnapshot:(char)arg1 link:(char)arg2 ;
-(void)setSharing:(char)arg1 ;
-(void)updateWindowTitle;
-(id)checkForInternetError:(id)arg1 ;
-(void)firePostTileLoadingBlocks;
-(id)bezelMessageForError:(id)arg1 ;
-(id)_accessoryViewForPlace:(id)arg1 ;
-(void)_geocodeIfNecessary:(id)arg1 ;
-(id)makeInfoButton;
-(id)makeQuickRouteButtonWithPlace:(id)arg1 ;
-(char)detailInfoCardWasJustClosed;
-(void)showTrafficIncident:(id)arg1 ;
-(void)showRPFixDetailsForPlace:(id)arg1 ;
-(id)_ratingViewWithPlace:(id)arg1 ;
-(id)makeFlyoverTourButton;
-(void)getDirectionsToDroppedPin;
-(id)_actionMenuItemsForLabelMarker:(id)arg1 ;
-(void)dropPinAtCursorLocation;
-(void)getDirectionsToCursorLocation;
-(void)newWindowAtCursorLocation;
-(id)_dropPinAtCursorLocationAnimated:(char)arg1 ;
-(void)setPinPlacesToPrint:(NSOrderedSet *)arg1 ;
-(void)_presentAnnouncementAnimated:(char)arg1 withTitle:(id)arg2 button:(id)arg3 userInfo:(id)arg4 ;
-(id)_announcementView;
-(void)_hideAnnouncementViewAnimated:(char)arg1 ;
-(void)_presentAnnouncementViewAnimated:(char)arg1 ;
-(id)_announcementViewConstraints;
-(void)dropPin:(id)arg1 ;
-(char)isSelectedPinVisible;
-(void)toggleDirections:(id)arg1 ;
-(void)updateFlyoverTourControlView;
-(void)actionMenuShowPlaceCard:(id)arg1 ;
-(void)actionMenuDrivingDirections:(id)arg1 ;
-(void)actionMenuWalkingDirections:(id)arg1 ;
-(void)actionMenuCallPlace:(id)arg1 ;
-(void)actionMenuAddToFavorites:(id)arg1 ;
-(unsigned long long)_directionsTransportTypeForMode:(unsigned long long)arg1 ;
-(char)canSnapToNorth;
-(char)useLargeTextSize;
-(void)setUseLargeTextSize:(char)arg1 ;
-(char)canLocalizeLabels;
-(char)canResizeLabels;
-(char)canToggleTraffic;
-(void)showContact:(id)arg1 address:(id)arg2 ;
-(void)launchFlyoverPreview:(id)arg1 ;
-(id)sharedBookmarksManager;
-(void)addToBookmarks:(id)arg1 ;
-(void)removeFromBookmarks:(id)arg1 ;
-(void)setBezelMessageForCurrentRoute:(id)arg1 error:(id)arg2 showsCloseButton:(char)arg3 ;
-(void)infoCardControllerDidClose:(id)arg1 ;
-(void)requestDiscreteGraphicsTimeExtension;
-(void)printMap:(id)arg1 ;
-(void)toggleDropPin:(id)arg1 ;
-(char)areDisplayedPinsVisible;
-(void)snapMapToNorth:(id)arg1 ;
-(void)toggleScale:(id)arg1 ;
-(void)endFlyoverTour:(id)arg1 ;
-(void)actionMenuDropPin:(id)arg1 ;
-(void)actionMenuDirections:(id)arg1 ;
-(void)setSideViewController:(NVSideViewController *)arg1 ;
-(NVToolbarItem *)mapViewStyle;
-(void)setMapViewStyle:(NVToolbarItem *)arg1 ;
-(NSMutableSet *)activeTrackingAreas;
-(void)setActiveTrackingAreas:(NSMutableSet *)arg1 ;
-(void)setDirectionsToggleButton:(NSButton *)arg1 ;
-(void)contactPicker:(id)arg1 didShowSectionWithIdentifier:(id)arg2 ;
-(char)showsScale;
-(void)_locationManagerApprovalDidChange:(id)arg1 ;
-(void)mapView:(id)arg1 longMouseDownPressedAtCoordinate:(SCD_Struct_NV5)arg2 ;
-(char)mapView:(id)arg1 shouldSelectAnnotation:(id)arg2 ;
-(char)mapView:(id)arg1 shouldSelectLabelMarker:(id)arg2 ;
-(char)mapView:(id)arg1 handleClickAtPoint:(CGPoint)arg2 ;
-(id)mapView:(id)arg1 menuForEvent:(id)arg2 ;
-(void)mapView:(id)arg1 willSelectLabelMarker:(id)arg2 ;
-(void)mapViewWillStartFlyoverTour:(id)arg1 ;
-(void)mapView:(id)arg1 didStopFlyoverTourCompleted:(char)arg2 ;
-(void)mapView:(id)arg1 flyoverTourLabelDidChange:(id)arg2 ;
-(void)mapViewDidChangeVisibleRegion:(id)arg1 ;
-(id)mapView:(id)arg1 painterForVKOverlay:(id)arg2 ;
-(void)mapView:(id)arg1 didDeselectLabelMarker:(id)arg2 ;
-(CGRect)visibleBoundsForMapView:(id)arg1 ;
-(void)setLabelTextSize:(long long)arg1 ;
-(long long)labelTextSize;
-(id)infoCardController;
-(void)reportAProblem:(id)arg1 ;
-(void)focusSearchField:(id)arg1 ;
-(void)contactPicker:(id)arg1 didChooseContact:(id)arg2 key:(id)arg3 value:(id)arg4 ;
-(void)contactPickerDidClose:(id)arg1 ;
-(unsigned long long)mapType;
-(char)localizeLabels;
-(void)setLocalizeLabels:(char)arg1 ;
-(void)setMapType:(unsigned long long)arg1 ;
-(char)canEnter3DMode;
-(void)resourceManifestManager:(id)arg1 didChangeActiveTileGroup:(id)arg2 fromOldTileGroup:(id)arg3 ;
-(NVSearchField *)locationField;
-(id)searchManager;
-(void)mapView:(id)arg1 regionWillChangeAnimated:(char)arg2 ;
-(void)mapView:(id)arg1 regionDidChangeAnimated:(char)arg2 ;
-(void)mapViewDidFailLoadingMap:(id)arg1 withError:(id)arg2 ;
-(void)mapViewWillStartRenderingMap:(id)arg1 ;
-(void)mapViewDidFinishRenderingMap:(id)arg1 fullyRendered:(char)arg2 ;
-(id)mapView:(id)arg1 viewForAnnotation:(id)arg2 ;
-(void)mapView:(id)arg1 didAddAnnotationViews:(id)arg2 ;
-(void)mapView:(id)arg1 didSelectAnnotationView:(id)arg2 ;
-(void)mapView:(id)arg1 didDeselectAnnotationView:(id)arg2 ;
-(void)mapViewWillStartLocatingUser:(id)arg1 ;
-(void)mapViewDidStopLocatingUser:(id)arg1 ;
-(void)mapView:(id)arg1 didUpdateUserLocation:(id)arg2 ;
-(void)mapView:(id)arg1 didFailToLocateUserWithError:(id)arg2 ;
-(void)mapView:(id)arg1 annotationView:(id)arg2 didChangeDragState:(unsigned long long)arg3 fromOldState:(unsigned long long)arg4 ;
-(id)mapView:(id)arg1 rendererForOverlay:(id)arg2 ;
-(id)sharingService:(id)arg1 sharedItemsFromProposedItems:(id)arg2 ;
-(void)contactPicker:(id)arg1 didSearchForString:(id)arg2 ;
-(void)_updateEdgeInsets;
-(void)clearRoutes;
-(void)share:(id)arg1 ;
-(MKMapView *)mapView;
-(void)dealloc;
-(char)respondsToSelector:(SEL)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)windowDidBecomeKey:(id)arg1 ;
-(void)encodeRestorableStateWithCoder:(id)arg1 ;
-(void)restoreStateWithCoder:(id)arg1 ;
-(id)initWithWindow:(id)arg1 ;
-(void)copy:(id)arg1 ;
-(void)awakeFromNib;
-(void)windowWillClose:(id)arg1 ;
-(void)updateUserActivityState:(id)arg1 ;
-(void)restoreUserActivityState:(id)arg1 ;
-(CGRect)confinementRectForMenu:(id)arg1 onScreen:(id)arg2 ;
-(void)performFindPanelAction:(id)arg1 ;
-(unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2 ;
-(void)windowDidResize:(id)arg1 ;
-(void)windowWillEnterFullScreen:(id)arg1 ;
-(void)windowDidEnterFullScreen:(id)arg1 ;
-(void)windowWillExitFullScreen:(id)arg1 ;
-(void)windowDidExitFullScreen:(id)arg1 ;
-(void)windowDidLoad;
-(void)sharingService:(id)arg1 willShareItems:(id)arg2 ;
-(void)sharingService:(id)arg1 didFailToShareItems:(id)arg2 error:(id)arg3 ;
-(void)sharingService:(id)arg1 didShareItems:(id)arg2 ;
-(CGRect)sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2 ;
-(id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(CGRect*)arg3 ;
-(id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long*)arg3 ;
-(void)copyLink:(id)arg1 ;
-(void)popoverDidShow:(id)arg1 ;
-(void)popoverWillClose:(id)arg1 ;
-(void)popoverDidClose:(id)arg1 ;
-(id)forwardingTargetForSelector:(SEL)arg1 ;
@end

