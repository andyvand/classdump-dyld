/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:39:42 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Maps.app/Contents/MacOS/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <Maps/MapsDebugViewControllerDelegate.h>
#import <Maps/MapsPushDaemonProxyObserver.h>
#import <Maps/NSApplicationDelegate.h>
#import <Maps/NSMenuDelegate.h>
#import <Maps/NSUserNotificationCenterDelegate.h>
#import <Maps/MKLocationManagerObserver.h>

@class NSMenuItem, NVSharingController, NSMenu, NVMainWindowController, NSString;

@interface NVAppDelegate : NSObject <MapsDebugViewControllerDelegate, MapsPushDaemonProxyObserver, NSApplicationDelegate, NSMenuDelegate, NSUserNotificationCenterDelegate, MKLocationManagerObserver> {

	NSMenuItem* alwayShowLabelsMenuItem;
	NSMenuItem* pppTestMenuItem;
	NVSharingController* _currentSharingController;
	char _displayingLocationErrorMessage;
	char _hasVisibleReportAProblemSheet;
	NSMenu* _navigoMenu;
	NSMenu* _viewMenu;
	NSMenuItem* _usesMilesForDistanceMenuItem;
	NSMenuItem* _usesKmForDistanceMenuItem;
	NSMenuItem* _reportAProblemMenuItem;

}

@property (assign,nonatomic) char hasVisibleReportAProblemSheet;                        //@synthesize hasVisibleReportAProblemSheet=_hasVisibleReportAProblemSheet - In the implementation block
@property (readonly) NVMainWindowController * currentMainWindowController; 
@property (assign) char alwaysShowToolbar; 
@property (__weak) NSMenu * navigoMenu;                                                 //@synthesize navigoMenu=_navigoMenu - In the implementation block
@property (__weak) NSMenu * viewMenu;                                                   //@synthesize viewMenu=_viewMenu - In the implementation block
@property (__weak) NSMenuItem * usesMilesForDistanceMenuItem;                           //@synthesize usesMilesForDistanceMenuItem=_usesMilesForDistanceMenuItem - In the implementation block
@property (__weak) NSMenuItem * usesKmForDistanceMenuItem;                              //@synthesize usesKmForDistanceMenuItem=_usesKmForDistanceMenuItem - In the implementation block
@property (__weak) NSMenuItem * reportAProblemMenuItem;                                 //@synthesize reportAProblemMenuItem=_reportAProblemMenuItem - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)handleURLEvent:(id)arg1 withReplyEvent:(id)arg2 ;
-(id)currentMainWindowControllerCreateIfNeeded:(char)arg1 ;
-(id)createNewMapDocument;
-(void)_updateDistanceUnits;
-(void)receivedGEOAnnouncement:(id)arg1 ;
-(id)allPPTTests;
-(void)runPPTTestFromMenuItem:(id)arg1 ;
-(void)checkLocationServicesState;
-(void)runPPTTestFromURL:(id)arg1 ;
-(char)application:(id)arg1 runTest:(id)arg2 options:(id)arg3 ;
-(NVMainWindowController *)currentMainWindowController;
-(char)isShareMenu:(id)arg1 ;
-(NSMenu *)navigoMenu;
-(NSMenuItem *)reportAProblemMenuItem;
-(NSMenuItem *)usesKmForDistanceMenuItem;
-(NSMenuItem *)usesMilesForDistanceMenuItem;
-(void)_updateDistanceUnitMenuItems;
-(char)alwaysShowToolbar;
-(void)setAlwaysShowToolbar:(char)arg1 ;
-(id)allMainWindowControllers;
-(id)allVisibleMapViewsForDebugController:(id)arg1 ;
-(void)pushDaemonProxyReceivedNotificationData:(id)arg1 forType:(id)arg2 recordIdentifier:(id)arg3 ;
-(char)locationActionsShouldBeEnabled;
-(void)openNewMapWindow:(id)arg1 ;
-(void)updateDistancesUnit:(id)arg1 ;
-(void)toggleAlwaysShowToolbar:(id)arg1 ;
-(char)hasVisibleReportAProblemSheet;
-(void)setHasVisibleReportAProblemSheet:(char)arg1 ;
-(void)setNavigoMenu:(NSMenu *)arg1 ;
-(NSMenu *)viewMenu;
-(void)setViewMenu:(NSMenu *)arg1 ;
-(void)setUsesMilesForDistanceMenuItem:(NSMenuItem *)arg1 ;
-(void)setUsesKmForDistanceMenuItem:(NSMenuItem *)arg1 ;
-(void)setReportAProblemMenuItem:(NSMenuItem *)arg1 ;
-(void)didFinishDrawingTiles:(id)arg1 ;
-(void)setupFullyDrawnNotification:(SEL)arg1 ;
-(id)mainVKMapView;
-(void)jumpToCupertino;
-(char)runPanZoomTest:(id)arg1 options:(id)arg2 ;
-(char)runCirclePanTest:(id)arg1 options:(id)arg2 ;
-(char)runVKTest:(id)arg1 options:(id)arg2 ;
-(char)runSwitchTest:(id)arg1 options:(id)arg2 ;
-(char)runPounceToNavTest:(id)arg1 options:(id)arg2 ;
-(char)runCapture:(id)arg1 options:(id)arg2 ;
-(char)runStylesheetTest:(id)arg1 options:(id)arg2 ;
-(char)runFlyoverTourTest:(id)arg1 options:(id)arg2 ;
-(char)runMapsTest:(id)arg1 options:(id)arg2 ;
-(void)startTimingFps:(id)arg1 ;
-(void)animateCircle:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)setupForVKTest:(id)arg1 options:(id)arg2 ;
-(void)circlePanLoadFinished;
-(void)startResizeWindowTest:(id)arg1 ;
-(void)didFinishJumping:(id)arg1 ;
-(void)didFinishJumpingForCapture:(id)arg1 ;
-(void)finishedFps:(id)arg1 ;
-(void)switchToMapType:(unsigned long long)arg1 ;
-(void)jumpToCoords:(SCD_Struct_NV9)arg1 pitch:(double)arg2 yaw:(double)arg3 ;
-(void)checkFullyDrawnForCapture;
-(void)checkFullyDrawn;
-(void)panLoadFinished;
-(void)doPostLaunchTestSetup;
-(void)jumpToBayArea;
-(void)closeAllWindows:(id)arg1 ;
-(void)applicationDidFinishLaunching:(id)arg1 ;
-(void)applicationDidResignActive:(id)arg1 ;
-(void)applicationWillTerminate:(id)arg1 ;
-(void)locationManagerDidPauseLocationUpdates:(id)arg1 ;
-(void)locationManagerDidResumeLocationUpdates:(id)arg1 ;
-(void)userNotificationCenter:(id)arg1 didActivateNotification:(id)arg2 ;
-(char)userNotificationCenter:(id)arg1 shouldPresentNotification:(id)arg2 ;
-(void)locationManagerUpdatedLocation:(id)arg1 ;
-(void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2 ;
-(void)locationManagerDidReset:(id)arg1 ;
-(char)locationManagerShouldPauseLocationUpdates:(id)arg1 ;
-(id)init;
-(void)dealloc;
-(void)application:(id)arg1 willEncodeRestorableState:(id)arg2 ;
-(char)applicationOpenUntitledFile:(id)arg1 ;
-(unsigned long long)applicationShouldTerminate:(id)arg1 ;
-(void)application:(id)arg1 didDecodeRestorableState:(id)arg2 ;
-(char)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(char)arg2 ;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)awakeFromNib;
-(char)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(/*^block*/id)arg3 ;
-(long long)numberOfItemsInMenu:(id)arg1 ;
-(char)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long long)arg3 shouldCancel:(char)arg4 ;
-(void)menuWillOpen:(id)arg1 ;
-(void)menuDidClose:(id)arg1 ;
@end

