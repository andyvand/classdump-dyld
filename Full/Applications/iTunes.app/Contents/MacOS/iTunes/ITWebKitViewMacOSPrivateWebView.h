/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:12:56 AM Central European Standard Time
* Operating System: Versie 10.10.2 (build 14C109)
* Image Source: /Applications/iTunes.app/Contents/MacOS/iTunes
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <iTunes/iTunes-Structs.h>
#import <WebKitLegacy/WebView.h>
#import <iTunes/ITViewAssociating.h>

@interface ITWebKitViewMacOSPrivateWebView : WebView <ITViewAssociating> {

	weak_ptr<ITWebKitViewMacOS>* mOwningITWebKitView;

}
-(shared_ptr<ITView>*)associatedITView;
-(id)_childWebClipView;
-(id)_childWebScrollView;
-(char)enableLinenBackground;
-(id)initWithFrame:(CGRect)arg1 owningITWebKitView:(shared_ptr<ITWebKitViewMacOS>*)arg2 ;
-(void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5 ;
-(void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2 ;
-(void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2 ;
-(void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3 ;
-(id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5 ;
-(void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 ;
-(char)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 ;
-(void)webView:(id)arg1 didFailProvisionalLoadWithError:(id)arg2 forFrame:(id)arg3 ;
-(void)trackSwipeWithEvent:(id)arg1 ;
-(unsigned long long)webView:(id)arg1 dragDestinationActionMaskForDraggingInfo:(id)arg2 ;
-(id)webView:(id)arg1 contextMenuItemsForElement:(id)arg2 defaultMenuItems:(id)arg3 ;
-(void)drawRect:(CGRect)arg1 ;
-(void)setFrameSize:(CGSize)arg1 ;
-(char)isOpaque;
-(void)scrollWheel:(id)arg1 ;
-(void)setBoundsSize:(CGSize)arg1 ;
-(char)mouseDownCanMoveWindow;
-(char)wantsScrollEventsForSwipeTrackingOnAxis:(long long)arg1 ;
-(void)webViewFocus:(id)arg1 ;
-(void)webViewUnfocus:(id)arg1 ;
-(unsigned long long)webView:(id)arg1 dragSourceActionMaskForPoint:(CGPoint)arg2 ;
-(void)webView:(id)arg1 resource:(id)arg2 didReceiveResponse:(id)arg3 fromDataSource:(id)arg4 ;
-(id)webView:(id)arg1 plugInViewWithArguments:(id)arg2 ;
-(void)webView:(id)arg1 didClearWindowObject:(id)arg2 forFrame:(id)arg3 ;
-(void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2 ;
-(void)webView:(id)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(id)arg3 ;
-(void)webView:(id)arg1 resource:(id)arg2 didFailLoadingWithError:(id)arg3 fromDataSource:(id)arg4 ;
-(void)webView:(id)arg1 decidePolicyForNewWindowAction:(id)arg2 request:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5 ;
@end

