/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:18:28 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Install OS X Yosemite.app/Contents/PlugIns/IA.bundle/Contents/MacOS/IA
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <IA/NSNetServiceBrowserDelegate.h>
#import <IA/NSNetServiceDelegate.h>

@class NSNetServiceBrowser, NSMutableArray, NSString, NSNumber, OSWebServerController, NSArray, NSConditionLock, NSMutableDictionary;

@interface OSLANPackageService : NSObject <NSNetServiceBrowserDelegate, NSNetServiceDelegate> {

	id _delegate;
	NSNetServiceBrowser* _browser;
	NSMutableArray* _waitingRequests;
	NSString* _serviceType;
	NSString* _serviceID;
	char _promiscuousMode;
	NSString* _webRoot;
	NSString* _webUser;
	NSNumber* _webPort;
	OSWebServerController* _webServer;
	NSArray* _anticipatedPkgRefs;
	NSArray* _availablePkgRefs;
	char _runClientServiceThread;
	NSConditionLock* _tickleLock;
	NSMutableDictionary* _activeClientsByControlFD;
	double _idleNotifyInterval;

}

@property (readonly) NSString * serviceType;                        //@synthesize serviceType=_serviceType - In the implementation block
@property (readonly) NSString * serviceID;                          //@synthesize serviceID=_serviceID - In the implementation block
@property (assign) char promiscuousMode;                            //@synthesize promiscuousMode=_promiscuousMode - In the implementation block
@property (readonly) NSNumber * webPort;                            //@synthesize webPort=_webPort - In the implementation block
@property (assign) double idleNotifyInterval;                       //@synthesize idleNotifyInterval=_idleNotifyInterval - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
-(char)_recvCompletelyOnSocket:(int)arg1 bytes:(const void*)arg2 length:(unsigned long long)arg3 ;
-(id)_findAvailablePortFrom:(id)arg1 ;
-(void)_activeClientsByControlFDerviceThread;
-(char)_sendQueryResponseOnSocket:(int)arg1 ;
-(char)startWithDelegate:(id)arg1 ;
-(id)initWithServiceType:(id)arg1 serviceID:(id)arg2 webRoot:(id)arg3 webPort:(id)arg4 webUser:(id)arg5 ;
-(void)setAnticipatedPackageReferences:(id)arg1 ;
-(void)addAvailablePackageReference:(id)arg1 ;
-(char)_sendCompletelyOnSocket:(int)arg1 bytes:(const void*)arg2 length:(unsigned long long)arg3 ;
-(char)_isLocalhost:(id)arg1 ;
-(void)setAvailablePackageReferences:(id)arg1 ;
-(double)idleNotifyInterval;
-(void)setIdleNotifyInterval:(double)arg1 ;
-(NSNumber *)webPort;
-(char)promiscuousMode;
-(void)setPromiscuousMode:(char)arg1 ;
-(void)netServiceDidResolveAddress:(id)arg1 ;
-(void)netService:(id)arg1 didNotResolve:(id)arg2 ;
-(void)netServiceBrowser:(id)arg1 didNotSearch:(id)arg2 ;
-(void)netServiceBrowser:(id)arg1 didFindService:(id)arg2 moreComing:(char)arg3 ;
-(void)netServiceBrowser:(id)arg1 didRemoveService:(id)arg2 moreComing:(char)arg3 ;
-(NSString *)serviceID;
-(void)dealloc;
-(void)stop;
-(NSString *)description;
-(NSString *)serviceType;
@end

