/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 10:59:22 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Utilities/Boot Camp Assistant.app/Contents/MacOS/Boot Camp Assistant
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <Boot Camp Assistant/Boot Camp Assistant-Structs.h>
@interface DAUtilities : NSObject
+(long long)numberOfInternalDisks;
+(int)systemSuitable;
+(char)usbInstallationSupported;
+(char)is32BitSupported;
+(char)isUEFISupport;
+(char)isWindows7Only;
+(char)isWindows8Only;
+(char)isESDRequired;
+(void)addView:(id)arg1 toTabView:(id)arg2 atIndex:(int)arg3 ;
+(char)restartForLV;
+(id)localizedStringWithLong:(long long)arg1 ;
+(void)checkWindowsISOImage:(id)arg1 isWindows7:(char*)arg2 isWindows8OrLater:(char*)arg3 is64Bit:(char*)arg4 ;
+(char)hasSingleFAT:(DADiskRef)arg1 ;
+(char)hasEnoughSpace:(DADiskRef)arg1 ;
+(int)checkBootableUSBDrive:(DADiskRef)arg1 bootDisk:(_DADisk*)arg2 supportUEFI:(char)arg3 isWindows7:(char*)arg4 isWindows8OrLater:(char*)arg5 is64Bit:(char*)arg6 ;
+(int)blessCD:(DADiskRef)arg1 supportUEFI:(char)arg2 isWindows7:(char*)arg3 isWindows8OrLater:(char*)arg4 is64Bit:(char*)arg5 ;
+(char)isBootCampESDPresent;
+(id)enumerateUSBDrives;
+(int)driveSuitable:(DADiskRef)arg1 minMac:(long long)arg2 minOther:(long long)arg3 delegate:(id)arg4 capacity:(long long*)arg5 usedSize:(long long*)arg6 minSize:(long long*)arg7 mode:(int*)arg8 caseNumber:(int*)arg9 isGPTPartition:(char)arg10 ;
+(char)hasOpticalDrive;
+(id)internalDisks;
+(char)canErase:(DADiskRef)arg1 ;
+(char)isStartupTopDisk:(DADiskRef)arg1 ;
+(char)isWindowsOnly:(DADiskRef)arg1 ;
+(id)getDiskName:(DADiskRef)arg1 ;
+(id)getDiskIcon:(DADiskRef)arg1 ;
+(long long)getUnpartitionedCapacity:(DADiskRef)arg1 ;
+(char)canPartition:(DADiskRef)arg1 ;
+(char)canUnpartition:(DADiskRef)arg1 ;
+(int)blessCurrentStartupDisk;
+(id)externalDisks;
+(void)doPartitionOperation:(DADiskRef)arg1 size:(id)arg2 delegate:(id)arg3 isGPTPartition:(char)arg4 ;
+(char)enableJournaling;
+(void)doEraseOperation:(DADiskRef)arg1 delegate:(id)arg2 isGPTPartition:(char)arg3 ;
+(char)getCapacities:(DADiskRef)arg1 capacity:(float*)arg2 used:(float*)arg3 ;
+(void)getPartitions:(id)arg1 from:(DADiskRef)arg2 efi:(_DADisk*)arg3 hfs:(_DADisk*)arg4 msReserved:(_DADisk*)arg5 msdos:(_DADisk*)arg6 abt:(_DADisk*)arg7 cst:(_DADisk*)arg8 ;
+(void)advanceProgress:(id)arg1 newValue:(double)arg2 ;
+(void)doWindowsFormat:(DADiskRef)arg1 delegate:(id)arg2 ;
+(void)clearBootFlagForUSBDrives;
+(DADiskRef)getStartupTopDisk:(id)arg1 ;
+(char)isUEFIBootSupport;
+(char)vistaBootingSupported;
+(DADiskRef)getCoreStoragePVForLV:(id)arg1 disk:(DADiskRef)arg2 ;
+(char)canUnpartition:(DADiskRef)arg1 mergedCapacity:(long long*)arg2 ;
+(char)isCSPVDiskOrChildren:(DADiskRef)arg1 ;
+(char)containsRAID:(id)arg1 disk:(DADiskRef)arg2 ;
+(DADiskRef)getCoreStorageLVForPV:(id)arg1 disk:(DADiskRef)arg2 ;
+(int)blessCDWithDriveHint:(DADiskRef)arg1 supportUEFI:(char)arg2 isWindows7:(char*)arg3 isWindows8OrLater:(char*)arg4 is64Bit:(char*)arg5 ;
+(char)checkInstallationMedia:(id)arg1 isWindows7:(char*)arg2 isWindows8OrLater:(char*)arg3 is64Bit:(char*)arg4 ;
+(unsigned long long)numericVersionWithMajor:(id)arg1 minor:(id)arg2 ;
+(id)getModelNameVersion:(id)arg1 versionNumber:(unsigned long long*)arg2 ;
+(id)volumeNamesForDisk:(DADiskRef)arg1 ;
+(DADiskRef)getStartupDisk:(id)arg1 ;
+(char)canInstall:(DADiskRef)arg1 ;
+(void)doUnpartitionOperation:(DADiskRef)arg1 delegate:(id)arg2 ;
+(id)getDiskNameString:(DADiskRef)arg1 ;
+(void)restart;
+(void)quit;
@end

