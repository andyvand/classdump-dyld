/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 10:59:22 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Utilities/Boot Camp Assistant.app/Contents/MacOS/Boot Camp Assistant
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Boot Camp Assistant/Boot Camp Assistant-Structs.h>
#import <AppKit/NSWindowController.h>
#import <Boot Camp Assistant/DMAsyncDelegate.h>
#import <Boot Camp Assistant/NSApplicationDelegate.h>
#import <Boot Camp Assistant/NSWindowDelegate.h>
#import <Boot Camp Assistant/SUSoftwareUpdateControllerDelegate.h>
#import <Boot Camp Assistant/NSTextFieldDelegate.h>

@class NSView, NSButton, NSTabView, DATextView, NSMatrix, NSScrollView, DAMatrix, NSTextField, DAIconView, DAPartitionView, NSProgressIndicator, NSImageView, NSString, imagePathField, NSPopUpButton, NSMutableArray, NSNumber, PDFView, SUSoftwareUpdateController, NSError, SUPredicateInstallController, NSPredicate, NSOperationQueue;

@interface DAWindowController : NSWindowController <DMAsyncDelegate, NSApplicationDelegate, NSWindowDelegate, SUSoftwareUpdateControllerDelegate, NSTextFieldDelegate> {

	NSView* downloadPage;
	NSButton* continueButton;
	NSTabView* tabView;
	NSView* introductionPage;
	NSView* selectOptionsPage;
	NSView* partitionPage;
	NSView* unpartitionPage;
	NSView* welcomebackPage;
	NSView* selectDiskPage;
	NSView* selectInstallPage;
	NSView* createUSBDrivePage;
	NSView* taskStatusPage;
	DATextView* introduction;
	NSMatrix* taskRadioGroup;
	NSMatrix* downloadRadioGroup;
	NSMatrix* createDiskRadioGroup;
	NSScrollView* diskScrollView;
	DAMatrix* diskMatrixView;
	NSTextField* diskMessage;
	NSMatrix* diskRadioGroup;
	NSButton* diskGoBackButton;
	NSButton* diskOKButton;
	NSScrollView* selectInstallScrollView;
	DAMatrix* selectInstallMatrixView;
	NSTextField* selectInstallMessage;
	NSButton* selectInstallOKButton;
	DAIconView* partitionIconView;
	NSTextField* partitionNameView;
	DAPartitionView* partitionView;
	NSTextField* partitionStatusView;
	NSProgressIndicator* partitionProgressBar;
	NSImageView* partition32GBIconView;
	NSTextField* partition32GBMessageView;
	DAIconView* unpartitionIconView;
	NSTextField* unpartitionNameView;
	DAPartitionView* unpartitionView;
	NSTextField* unpartitionStatusView;
	NSProgressIndicator* unpartitionProgressBar;
	NSButton* partitionDivideEquallyButton;
	NSButton* partitionUse32GBButton;
	NSButton* partitionOKButton;
	NSButton* partitionGoBackButton;
	NSButton* unpartitionOKButton;
	NSButton* unpartitionGoBackButton;
	NSButton* installQuitButton;
	NSButton* installGoBackButton;
	NSProgressIndicator* downloadProgressBar;
	NSProgressIndicator* saveDownloadProgressBar;
	NSProgressIndicator* taskProgressBar;
	NSTextField* taskState;
	NSButton* stopButton;
	NSString* windowsImagePath;
	NSTextField* noOpticalDrive;
	NSTextField* noOpticalDriveMore;
	DAIconView* warningIconView;
	DAIconView* warningIconView1;
	NSButton* downloadButton;
	long long downloadButtonState;
	NSButton* createUSBDriveButton;
	long long createUSBDriveButtonState;
	NSButton* includeDownloadButton;
	long long includeDownloadButtonState;
	NSButton* windowsPartitionButton;
	long long windowsPartitionButtonState;
	NSButton* optionOKButton;
	NSTextField* installWindows;
	imagePathField* ISOImage;
	NSPopUpButton* selectUSBDrive;
	NSMutableArray* externUSBDrives;
	char createUSBDrive;
	char stopUSBDrive;
	DADiskRef bootDisk;
	NSScrollView* usbDriveScrollView;
	DAMatrix* usbDriveMatrixView;
	NSTextField* createUSBDriveText;
	NSScrollView* usbDriveScrollViewForDownload;
	DAMatrix* usbDriveMatrixViewForDownload;
	NSTextField* createUSBDrivePageText;
	NSTextField* downloadText;
	NSTextField* exitTitle;
	NSTextField* exitMessage;
	int page;
	int previousPage;
	int mode;
	char hasMultipleDisks;
	long long operation;
	NSString* lastPartitionOutput;
	DADiskRef targetDisk;
	long long minSize;
	long long diskCapacity;
	long long usedSize;
	NSNumber* selectedSize;
	int caseNumber;
	PDFView* pdfView;
	SUSoftwareUpdateController* _updateController;
	char _observeCanStartUpdate;
	NSError* _showingError;
	SUPredicateInstallController* installController;
	NSPredicate* _predicate;
	NSString* _updateStatus;
	int selectedOption;
	CFRunLoopTimerRef progressTimer;
	CFRunLoopTimerRef saveProgressTimer;
	CFRunLoopTimerRef copyWidnowsProgressTimer;
	double simulatedProgress;
	NSOperationQueue* queue;
	int saveStatus;
	NSString* destinationPath;
	NSString* destinationDirectory;
	int totalFiles;
	int currentFile;
	int progressTasks;
	char diskOperationInProgress;
	char quitBCAClicked;
	char UEFISupport;
	char UEFIInstall;
	char is32BitSupported;
	char usbBoot;
	char autoUnattend;
	char isWindows7Only;
	char isWindows8Only;
	char isESDRequired;
	char repairESPInProgress;
	int dmAsyncError;
	NSString* title;
	NSString* message;

}

@property (retain) NSPredicate * predicate;                                             //@synthesize predicate=_predicate - In the implementation block
@property (readonly) NSString * cacheStatus; 
@property (retain,readonly) SUSoftwareUpdateController * updateController;              //@synthesize updateController=_updateController - In the implementation block
@property (copy) NSString * updateStatus;                                               //@synthesize updateStatus=_updateStatus - In the implementation block
@property (retain) NSError * showingError;                                              //@synthesize showingError=_showingError - In the implementation block
@property (assign) char observeCanStartUpdate;                                          //@synthesize observeCanStartUpdate=_observeCanStartUpdate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)showFatalAlert:(id)arg1 messageKey:(id)arg2 ;
-(void)showIntroductionPage;
-(void)_showAlertOnMainThread;
-(void)showSelectOptionsPage;
-(void)showCreateUSBDrivePage;
-(void)showDownloadPage;
-(void)installWindows;
-(void)setTargetDisk:(DADiskRef)arg1 ;
-(void)showAlert:(id)arg1 messageKey:(id)arg2 ;
-(void)showEraseWarning;
-(void)downloadBootcamp;
-(int)determineMode:(DADiskRef)arg1 ;
-(void)showPartitionPage;
-(void)eraseDisk:(char)arg1 ;
-(void)showUnpartitionPage;
-(void)showClearBootFlagWarning;
-(void)partitionDisk:(char)arg1 ;
-(void)unpartitionDisk;
-(void)showSelectDiskPage;
-(void)diskSelected:(id)arg1 ;
-(void)installSelected:(id)arg1 ;
-(void)doPartitionOperation:(DADiskRef)arg1 size:(id)arg2 delegate:(id)arg3 isGPTPartition:(char)arg4 ;
-(void)doPartitionOperation;
-(void)doUnpartitionOperation;
-(void)setBootSectors;
-(void)copyWindowsImage;
-(void)startCopyWindowsProgressTimer;
-(void)showWelcomeBackPage;
-(void)pageLayoutDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void*)arg3 ;
-(id)loadPDFDocumentation;
-(void)setupStringsPerCacheStatus;
-(void)setUpdateStatus:(NSString *)arg1 ;
-(void)updateProgressBar;
-(void)showDownloadWarning:(id)arg1 messageKey:(id)arg2 contextInfo:(void*)arg3 ;
-(void)startSaveProgressTimer;
-(void)saveDownload;
-(void)updateSaveProgressBar;
-(void)RemoveBootcampDownload;
-(void)updateCopyWindowsProgressBar;
-(void)startDownload;
-(void)downloadWarningDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void*)arg3 ;
-(void)showTaskStatusPage;
-(void)startProgressTimer;
-(void)eraseWarningDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void*)arg3 ;
-(void)clearBootFlagWarningDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void*)arg3 ;
-(void)showAlertOnMainThread:(id)arg1 messageKey:(id)arg2 ;
-(BOOL)CleanupESP:(DADiskRef)arg1 ;
-(void)partitionOperation;
-(void)unpartitionOperation;
-(int)repairESP:(id)arg1 Disk:(DADiskRef)arg2 NewESP:(BOOL)arg3 ;
-(void)showAboutBox:(id)arg1 ;
-(void)continueButtonClicked:(id)arg1 ;
-(void)backButtonClicked:(id)arg1 ;
-(void)divideEquallyButtonClicked:(id)arg1 ;
-(void)use32GBButtonClicked:(id)arg1 ;
-(void)quitButtonClicked:(id)arg1 ;
-(void)showSelectInstallPage;
-(void)showInstallWarning:(id)arg1 messageKey:(id)arg2 contextInfo:(void*)arg3 ;
-(void)printDocumentation;
-(void)stopButtonClicked:(id)arg1 ;
-(char)launchCLITool;
-(void)openISOImage:(id)arg1 ;
-(void)optionClicked:(id)arg1 ;
-(NSString *)cacheStatus;
-(char)textShouldBeginEditing:(id)arg1 textShouldBeginEditing:(id)arg2 ;
-(void)BCAOnOffProgress:(id)arg1 ;
-(void)viewGuide:(id)arg1 ;
-(NSError *)showingError;
-(void)setShowingError:(NSError *)arg1 ;
-(char)observeCanStartUpdate;
-(void)setObserveCanStartUpdate:(char)arg1 ;
-(void)download:(id)arg1 ;
-(void)predicateInstallDidComplete:(id)arg1 ;
-(void)predicateInstallUserDidCancel:(id)arg1 ;
-(void)predicateInstall:(id)arg1 didFailWithError:(id)arg2 ;
-(void)softwareUpdateDidBegin:(id)arg1 ;
-(void)softwareUpdate:(id)arg1 didChangeProgress:(double)arg2 currentState:(long long)arg3 estimatedTimeForState:(double)arg4 ;
-(void)softwareUpdateDidFinish:(id)arg1 ;
-(void)softwareUpdateWasCancelled:(id)arg1 ;
-(void)softwareUpdate:(id)arg1 didFailWithError:(id)arg2 ;
-(char)softwareUpdate:(id)arg1 shouldContinueWithNonProductionCatalogAtURL:(id)arg2 ;
-(void)dmAsyncStartedForDisk:(DADiskRef)arg1 ;
-(void)dmAsyncProgressForDisk:(DADiskRef)arg1 barberPole:(char)arg2 percent:(float)arg3 ;
-(void)dmAsyncMessageForDisk:(DADiskRef)arg1 string:(id)arg2 dictionary:(id)arg3 ;
-(void)dmAsyncFinishedForDisk:(DADiskRef)arg1 mainError:(int)arg2 detailError:(int)arg3 dictionary:(id)arg4 ;
-(id)init;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)showHelp:(id)arg1 ;
-(void)controlTextDidChange:(id)arg1 ;
-(void)awakeFromNib;
-(void)setPredicate:(NSPredicate *)arg1 ;
-(void)alertDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void*)arg3 ;
-(char)windowShouldClose:(id)arg1 ;
-(void)_didPresentErrorWithRecovery:(char)arg1 contextInfo:(void*)arg2 ;
-(NSPredicate *)predicate;
-(char)applicationShouldTerminateAfterLastWindowClosed:(id)arg1 ;
-(NSString *)updateStatus;
-(SUSoftwareUpdateController *)updateController;
@end

