/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 10:35:21 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Utilities/AirPort Utility.app/Contents/MacOS/AirPort Utility
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AirPort Utility/AirPort Utility-Structs.h>
#import <AirPort Utility/NSNetServiceBrowserDelegate.h>
#import <AirPort Utility/NSNetServiceDelegate.h>

@class NSMutableDictionary, NSString;

@interface NetworkDeviceInfoDiscovery : NSObject <NSNetServiceBrowserDelegate, NSNetServiceDelegate> {

	NSMutableDictionary* _masterSearchDict;
	id _delegate;
	NSString* _currentInterface;

}

@property (assign,nonatomic) id<NetworkDeviceDiscoveryDelegate> delegate; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initalizeQueues;
-(void)ipv4Resolved:(id)arg1 toHostname:(id)arg2 ;
-(void)pingNetwork:(id)arg1 withSubnet:(id)arg2 ;
-(void)startBonjourSearchForServicesWithInfo:(SCD_Struct_Ne11*)arg1 inDomain:(id)arg2 onInterface:(id)arg3 ;
-(id)getResolvedServiceDictFromSearchInfo:(id)arg1 forServiceName:(id)arg2 ;
-(void)sendUpdatedDevicesToDelegate:(id)arg1 ;
-(void)startDiscovery:(id)arg1 ;
-(void)seekInfoForMACAddress:(id)arg1 onInterface:(id)arg2 ;
-(void)seekInfoForIPv4Address:(id)arg1 onInterface:(id)arg2 ;
-(void)netServiceWillResolve:(id)arg1 ;
-(void)netServiceDidResolveAddress:(id)arg1 ;
-(void)netService:(id)arg1 didNotResolve:(id)arg2 ;
-(void)netService:(id)arg1 didUpdateTXTRecordData:(id)arg2 ;
-(void)netServiceBrowserWillSearch:(id)arg1 ;
-(void)netServiceBrowserDidStopSearch:(id)arg1 ;
-(void)netServiceBrowser:(id)arg1 didNotSearch:(id)arg2 ;
-(void)netServiceBrowser:(id)arg1 didFindService:(id)arg2 moreComing:(char)arg3 ;
-(void)netServiceBrowser:(id)arg1 didRemoveService:(id)arg2 moreComing:(char)arg3 ;
-(void)stopDiscovery;
-(id)init;
-(void)setDelegate:(id<NetworkDeviceDiscoveryDelegate>)arg1 ;
-(void)dealloc;
-(id<NetworkDeviceDiscoveryDelegate>)delegate;
@end

