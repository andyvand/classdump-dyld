/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 10:35:21 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Utilities/AirPort Utility.app/Contents/MacOS/AirPort Utility
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AirPort Utility/AirPort Utility-Structs.h>
#import <AirPort Utility/AssistantCallbackController.h>
#import <AirPort Utility/SetupUIConfigDelegateResult.h>
#import <AirPort Utility/AutoGuessSetup.h>
#import <AirPort Utility/BaseStationSetup.h>
#import <AirPort Utility/SettingsProtocol.h>

@class NSDictionary, NSMutableSet, NSString, NSDate;

@interface AUSetupController : AssistantCallbackController <SetupUIConfigDelegateResult, AutoGuessSetup, BaseStationSetup, SettingsProtocol> {

	id _context;
	SettingsContextRef _settingsContext;
	NSMutableSet* _settingsDelegates;
	NSString* _settingsKeyToEdit;
	char _autoJoinState;
	char _scanningState;
	char _busy;
	char _initializedBasePasswordFlag;
	char _performingManualRead;
	char _needToNilBonjour;
	BSConfigurationContextRef _configContext;
	NSMutableSet* _setupDelegates;
	id _uiConfigDelegate;
	NSString* _autoGuessSetupRecommendation;
	NSDictionary* _lastInstrumentation;
	char _rememberDiskPassword;
	NSDate* _lastHeardFromDevice;
	NSString* _lastSystemName;
	NSString* _lastDNSName;
	NSString* _keychainBasePassword;
	NSString* _keychainWiFiPassword;
	NSString* _keychainDiskPassword;
	NSString* _wifiNameTwoFour;
	NSString* _wifiNameFive;
	char _activeTask;

}

@property (nonatomic,readonly) NSMutableSet * setupDelegates;                                    //@synthesize setupDelegates=_setupDelegates - In the implementation block
@property (assign,nonatomic) id<SetupUIConfigDelegate> uiConfigDelegate;                         //@synthesize uiConfigDelegate=_uiConfigDelegate - In the implementation block
@property (assign,nonatomic) id context;                                                         //@synthesize context=_context - In the implementation block
@property (nonatomic,retain) NSString * autoGuessSetupRecommendation;                            //@synthesize autoGuessSetupRecommendation=_autoGuessSetupRecommendation - In the implementation block
@property (nonatomic,retain) NSDictionary * lastInstrumentation;                                 //@synthesize lastInstrumentation=_lastInstrumentation - In the implementation block
@property (nonatomic,retain) NSDictionary * bonjourRecord; 
@property (nonatomic,retain) NSString * newestFirmwareVersion; 
@property (nonatomic,retain) NSDictionary * retiredFWInfo; 
@property (nonatomic,readonly) NSDictionary * retiredOverrides; 
@property (assign,nonatomic) char rememberBasePassword; 
@property (assign,nonatomic) char rememberWiFiPassword; 
@property (assign,nonatomic) char rememberDiskPassword;                                          //@synthesize rememberDiskPassword=_rememberDiskPassword - In the implementation block
@property (nonatomic,retain) NSString * keychainBasePassword; 
@property (nonatomic,retain) NSString * keychainWiFiPassword; 
@property (nonatomic,retain) NSString * keychainDiskPassword; 
@property (nonatomic,readonly) NSDate * lastHeardFromDevice;                                     //@synthesize lastHeardFromDevice=_lastHeardFromDevice - In the implementation block
@property (nonatomic,retain) NSString * lastSystemName;                                          //@synthesize lastSystemName=_lastSystemName - In the implementation block
@property (nonatomic,retain) NSString * lastDNSName;                                             //@synthesize lastDNSName=_lastDNSName - In the implementation block
@property (nonatomic,retain) NSString * wifiNameTwoFour;                                         //@synthesize wifiNameTwoFour=_wifiNameTwoFour - In the implementation block
@property (nonatomic,retain) NSString * wifiNameFive;                                            //@synthesize wifiNameFive=_wifiNameFive - In the implementation block
@property (assign,nonatomic) char activeTask;                                                    //@synthesize activeTask=_activeTask - In the implementation block
@property (retain) NSDictionary * restoreRecommendation; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSMutableSet * settingsDelegates;                                 //@synthesize settingsDelegates=_settingsDelegates - In the implementation block
@property (nonatomic,copy) NSString * settingsKeyToEdit;                                         //@synthesize settingsKeyToEdit=_settingsKeyToEdit - In the implementation block
@property (assign,nonatomic) id<SettingsValueDelegate> settingsValueDelegate; 
@property (assign,nonatomic) id<SettingsFunctionDelegate> settingsFunctionDelegate; 
@property (assign,nonatomic) id<AssistantCallbackUIDelegate> uiDelegate; 
+(id)setupController;
+(void)initialize;
-(int)closeAllConnections;
-(id)targetBaseInfoDict;
-(int)setupFromAutoguessRecommendation:(id)arg1 withOptions:(id)arg2 ;
-(int)updateSettingsAsync;
-(NSMutableSet *)setupDelegates;
-(int)taskRestoreDefaultsAsync:(char)arg1 ;
-(int)taskRestartAsync;
-(BaseStationRef)bsRef;
-(int)getValue:(id*)arg1 forSettingPath:(id)arg2 ;
-(id)validateAllSettingsAndGetErrors;
-(int)snapshotPop:(char)arg1 ;
-(int)snapshotPush;
-(int)performFunctionWithParamDict:(id)arg1 ;
-(id)validateSettingsAndGetErrors:(id)arg1 ;
-(id)possibleValuesForSettingKey:(id)arg1 andMetadataKey:(id)arg2 includeHiddenValues:(char)arg3 ;
-(int)setValue:(id)arg1 forBSSetting:(int)arg2 ;
-(int)setValue:(id)arg1 forSettingKey:(id)arg2 ;
-(int)getValue:(id*)arg1 forBSSetting:(int)arg2 ;
-(char)hasACPFeature:(unsigned)arg1 ;
-(char)rememberBasePassword;
-(int)getValue:(id*)arg1 forSettingKey:(id)arg2 ;
-(char)rememberWiFiPassword;
-(int)setValue:(id)arg1 forSettingPath:(id)arg2 ;
-(long long)ethernetPortCount;
-(char)rememberDiskPassword;
-(int)subclassAssistantCallback:(AssistantCallbackContext*)arg1 ;
-(int)closeAllConnections:(char)arg1 ;
-(void)setLastDNSName:(NSString *)arg1 ;
-(void)setLastSystemName:(NSString *)arg1 ;
-(void)setAutoGuessSetupRecommendation:(NSString *)arg1 ;
-(void)setLastInstrumentation:(NSDictionary *)arg1 ;
-(void)setSettingsKeyToEdit:(NSString *)arg1 ;
-(char)activeTask;
-(void)handleCopyAllSettingsUpdateThread:(id)arg1 ;
-(void)handleSettingsUpdate:(id)arg1 ;
-(void)handleSettingsDelegatesClosed;
-(id<SetupUIConfigDelegate>)uiConfigDelegate;
-(int)copyValue:(id*)arg1 forBSSetting:(int)arg2 ;
-(int)copyValue:(id*)arg1 forSettingPath:(id)arg2 ;
-(int)stateForProblem:(unsigned)arg1 ;
-(void)setRememberBasePassword:(char)arg1 ;
-(void)setRememberWiFiPassword:(char)arg1 ;
-(void)setRememberDiskPassword:(char)arg1 ;
-(int)readPropertyListFromBaseAsync:(id)arg1 ;
-(void)handleBusyStart;
-(void)setupWiFiState;
-(int)refreshSettings;
-(NSDictionary *)bonjourRecord;
-(void)updateRememberKeychainFlagsButSkipBasePassword:(char)arg1 ;
-(void)loadKeychainBasePassword;
-(void)loadKeychainWirelessPassword;
-(void)loadKeychainDiskPassword;
-(void)deleteKeychainBasePassword;
-(int)updateKeychainWithPasswords;
-(void)saveKeychainBasePassword;
-(void)saveKeychainWirelessPassword;
-(void)saveKeychainDiskPassword;
-(void)setKeychainBasePassword:(NSString *)arg1 ;
-(id)bestKeychainMACAddress;
-(NSString *)keychainBasePassword;
-(void)setKeychainDiskPassword:(NSString *)arg1 ;
-(NSString *)lastSystemName;
-(NSString *)lastDNSName;
-(NSString *)keychainDiskPassword;
-(void)setWifiNameTwoFour:(NSString *)arg1 ;
-(void)setWifiNameFive:(NSString *)arg1 ;
-(void)setKeychainWiFiPassword:(NSString *)arg1 ;
-(NSString *)keychainWiFiPassword;
-(NSString *)wifiNameTwoFour;
-(NSString *)wifiNameFive;
-(void)setActiveTask:(char)arg1 ;
-(int)rpcWPSStartAsync:(char)arg1 dayPass:(char)arg2 timeout:(unsigned)arg3 ;
-(int)rpcWPSAllowClientAsync:(id)arg1 ;
-(int)rpcWPSStopAsync;
-(int)rpcRenewDHCPLeaseAsync;
-(void)setupUIConfigResult:(int)arg1 withOptions:(id)arg2 ;
-(int)setupWithTargetNetwork:(id)arg1 ;
-(int)setupWithTargetBaseStation:(id)arg1 andSettings:(id)arg2 ;
-(char)hasSettingsLevel:(int)arg1 ;
-(int)settingsLevel;
-(char)hasEditMode;
-(id)snapshotChangedKeys;
-(void)snapshotResetAll;
-(char)snapshotDirty;
-(id)allKeychainMACAddresses;
-(char)isValidValue:(id)arg1 forSettingKey:(id)arg2 andMetadataKey:(id)arg3 andRecord:(id)arg4 ;
-(char)isValidMetaDataRecord:(id)arg1 atIndex:(unsigned long long)arg2 forSettingKey:(id)arg3 ;
-(char)isConflictingValue:(id)arg1 forSettingKey:(id)arg2 andMetadataKey:(id)arg3 andMetaDataIndex:(unsigned long long)arg4 conflictBodyKey:(id*)arg5 conflictAlertPromptKey:(id*)arg6 ;
-(id)possibleValuesForSubproperty:(id)arg1 includeHiddenValues:(char)arg2 ;
-(int)ignoreProblemCode:(unsigned)arg1 ;
-(int)unIgnoreProblemCode:(unsigned)arg1 ;
-(int)setSettingsLevel:(int)arg1 ;
-(int)beginEdit;
-(int)endEdit:(char)arg1 ;
-(unsigned)taskCode;
-(int)busyState;
-(NSMutableSet *)settingsDelegates;
-(NSString *)settingsKeyToEdit;
-(id<SettingsValueDelegate>)settingsValueDelegate;
-(void)setSettingsValueDelegate:(id<SettingsValueDelegate>)arg1 ;
-(id<SettingsFunctionDelegate>)settingsFunctionDelegate;
-(void)setSettingsFunctionDelegate:(id<SettingsFunctionDelegate>)arg1 ;
-(int)cancelTask;
-(int)cancelSetup;
-(int)copyValueNew:(id*)arg1 forSettingPath:(id)arg2 ;
-(int)copyValueOrig:(id*)arg1 forSettingPath:(id)arg2 ;
-(long long)unignoredProblemCount;
-(int)joinAsync;
-(int)joinAndBrowseAsync;
-(int)readAllPropertiesFromBaseAsync;
-(void)updateRememberKeychainFlagsIfInitializing;
-(int)updateKeychainWithPasswordsWithStatus:(int)arg1 ;
-(void)deleteKeychainDiskPassword;
-(void)deleteKeychainWirelessPassword;
-(int)rpcSystemInterfacesAsync;
-(int)rpcStartRemoteBrowse:(id)arg1 withService:(id)arg2 ;
-(int)rpcRefreshBSSettingAsync:(int)arg1 ;
-(int)rpcDisconnectAllDiskUsersWithMessageAsync:(id)arg1 ;
-(int)taskUploadFirmwareAsync:(id)arg1 ;
-(int)taskEraseDiskAsync:(id)arg1 ;
-(int)taskArchiveDiskAsync:(id)arg1 ;
-(int)setMonitorForChanges:(char)arg1 ;
-(NSDate *)lastHeardFromDevice;
-(void)setBonjourRecord:(NSDictionary *)arg1 ;
-(SettingsContextRef)settingsContext;
-(NSString *)newestFirmwareVersion;
-(void)setNewestFirmwareVersion:(NSString *)arg1 ;
-(NSDictionary *)retiredFWInfo;
-(void)setRetiredFWInfo:(NSDictionary *)arg1 ;
-(NSDictionary *)retiredOverrides;
-(id)icloudKitClientString;
-(void)setUiConfigDelegate:(id<SetupUIConfigDelegate>)arg1 ;
-(NSString *)autoGuessSetupRecommendation;
-(NSDictionary *)lastInstrumentation;
-(void)handleRefreshDelegates:(id)arg1 ;
-(void)resetWiFiState;
-(void)handleSettingRefresh:(id)arg1 status:(int)arg2 ;
-(char)performingManualRead;
-(void)handleBusyComplete;
-(void)updateLastHeardFromDevice;
-(void)handleSetupComplete:(int)arg1 ;
-(void)handleTaskComplete;
-(void)logChangesToCCL;
-(char)isMonitoring;
-(int)taskState;
-(id)init;
-(void)dealloc;
-(id)context;
-(char)isEditing;
-(char)hasChanges;
-(char)dirty;
-(void)setContext:(id)arg1 ;
@end

