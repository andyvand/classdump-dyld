/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 10:35:22 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Utilities/AirPort Utility.app/Contents/MacOS/AirPort Utility
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AirPort Utility/AirPort Utility-Structs.h>
#import <AirPort Utility/AUSubproperty.h>

@class NSArray, NSString;

@interface AUPortMapping : AUSubproperty {

	NSArray* types;
	NSArray* services;
	NSString* description;
	char firewallEntryIsIPv6;
	char enableMapping;
	NSString* publicUDP;
	NSString* publicTCP;
	NSString* privateIP;
	NSString* privateUDP;
	NSString* privateTCP;
	char advertiseGlobally;
	NSString* serviceName;
	NSString* serviceType;
	char beingObserved;
	char ipv6AllowAll;
	NSString* ipv6Address;
	NSString* tcpPorts;
	NSString* udpPorts;

}

@property (assign,nonatomic) NSArray * types; 
@property (assign,nonatomic) NSArray * services; 
@property (nonatomic,retain) NSString * description; 
@property (assign,nonatomic) char enableMapping; 
@property (assign,nonatomic) char firewallEntryIsIPv6; 
@property (nonatomic,retain) NSString * publicUDP; 
@property (nonatomic,retain) NSString * publicTCP; 
@property (nonatomic,retain) NSString * privateIP; 
@property (nonatomic,retain) NSString * privateUDP; 
@property (nonatomic,retain) NSString * privateTCP; 
@property (assign,nonatomic) char advertiseGlobally; 
@property (nonatomic,retain) NSString * serviceName; 
@property (nonatomic,retain) NSString * serviceType; 
@property (assign,nonatomic) char beingObserved; 
@property (nonatomic,retain) NSString * ipv6Address; 
@property (assign,nonatomic) char ipv6AllowAll; 
@property (nonatomic,retain) NSString * tcpPorts; 
@property (nonatomic,retain) NSString * udpPorts; 
+(id)sharedFirewallServices;
+(id)sharedTypes;
-(id)saveData;
-(char)beingObserved;
-(void)setBeingObserved:(char)arg1 ;
-(char)firewallEntryIsIPv6;
-(NSString *)privateIP;
-(void)setPrivateIP:(NSString *)arg1 ;
-(void)setFirewallEntryIsIPv6:(char)arg1 ;
-(void)setIpv6Address:(NSString *)arg1 ;
-(void)setIpv6AllowAll:(char)arg1 ;
-(void)setTcpPorts:(NSString *)arg1 ;
-(void)setUdpPorts:(NSString *)arg1 ;
-(void)setEnableMapping:(char)arg1 ;
-(void)setPublicUDP:(NSString *)arg1 ;
-(void)setPublicTCP:(NSString *)arg1 ;
-(void)setPrivateTCP:(NSString *)arg1 ;
-(void)setPrivateUDP:(NSString *)arg1 ;
-(void)setAdvertiseGlobally:(char)arg1 ;
-(char)enableMapping;
-(NSString *)publicUDP;
-(NSString *)publicTCP;
-(NSString *)privateUDP;
-(NSString *)privateTCP;
-(char)advertiseGlobally;
-(char)ipv6AllowAll;
-(NSString *)ipv6Address;
-(NSString *)tcpPorts;
-(NSString *)udpPorts;
-(void)setWithServiceDictionary:(id)arg1 setDescription:(char)arg2 ;
-(void)setWithServiceDictionary:(id)arg1 ;
-(NSArray *)services;
-(NSString *)serviceName;
-(void)setTypes:(NSArray *)arg1 ;
-(void)setServices:(NSArray *)arg1 ;
-(id)init;
-(void)dealloc;
-(NSString *)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(NSArray *)types;
-(char)isValid;
-(void)setServiceName:(NSString *)arg1 ;
-(void)setDescription:(NSString *)arg1 ;
-(void)setServiceType:(NSString *)arg1 ;
-(NSString *)serviceType;
@end

