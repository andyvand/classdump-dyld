/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 10:35:20 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Utilities/AirPort Utility.app/Contents/MacOS/AirPort Utility
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AirPort Utility/AirPort Utility-Structs.h>
#import <AirPort Utility/AUDataModel.h>

@class NSArray, NSString, AUInternetOptions;

@interface AUInternetModel : AUDataModel {

	NSArray* internetOptionsSettings;
	char loadingData;
	NSArray* configureViaValues;
	NSArray* pppoeConnectionStyleValues;
	NSArray* ipv6ConfigurationMethods;
	NSArray* pppoeIdleDisconnectValues;
	NSArray* ipv6WANModes;
	NSString* wanIPAddress;
	long long connectionMethod;
	NSString* subnetMask;
	NSString* routerAddress;
	NSString* primaryDNSServer;
	NSString* secondaryDNSServer;
	NSString* wanDomainName;
	NSString* currentPrimaryDNSServer;
	NSString* currentSecondaryDNSServer;
	NSString* currentWANDomainName;
	NSString* ipv6PrimaryDNSAddress;
	NSString* ipv6CurrentPrimaryDNSAddress;
	NSString* ipv6SecondaryDNSAddress;
	NSString* ipv6CurrentSecondaryDNSAddress;
	NSString* ipv6WANAddressToDisplay;
	NSString* pppoeAccountName;
	NSString* pppoeAccountPassword;
	NSString* pppoeServiceName;
	char connected;
	AUInternetOptions* internetOptions;
	char wideAreaBonjourSupported;
	char canShowWideAreaBonjourUI;
	NSString* _dynamicWanIPAddress;
	NSString* _dynamicSubnetMask;
	NSString* _dynamicRouterAddress;

}

@property (nonatomic,readonly) NSArray * internetOptionsSettingsToValidate; 
@property (assign,nonatomic) char loadingData; 
@property (nonatomic,retain) NSArray * configureViaValues; 
@property (nonatomic,retain) NSArray * pppoeConnectionStyleValues; 
@property (nonatomic,retain) NSArray * pppoeIdleDisconnectValues; 
@property (nonatomic,retain) NSArray * ipv6ConfigurationMethods; 
@property (nonatomic,retain) NSArray * ipv6WANModes; 
@property (assign,nonatomic) long long connectionMethod; 
@property (nonatomic,retain) NSString * wanIPAddress; 
@property (nonatomic,retain) NSString * subnetMask; 
@property (nonatomic,retain) NSString * routerAddress; 
@property (nonatomic,retain) NSString * dynamicWanIPAddress;                             //@synthesize dynamicWanIPAddress=_dynamicWanIPAddress - In the implementation block
@property (nonatomic,retain) NSString * dynamicSubnetMask;                               //@synthesize dynamicSubnetMask=_dynamicSubnetMask - In the implementation block
@property (nonatomic,retain) NSString * dynamicRouterAddress;                            //@synthesize dynamicRouterAddress=_dynamicRouterAddress - In the implementation block
@property (nonatomic,retain) NSString * primaryDNSServer; 
@property (nonatomic,retain) NSString * secondaryDNSServer; 
@property (nonatomic,retain) NSString * wanDomainName; 
@property (nonatomic,retain) NSString * currentPrimaryDNSServer; 
@property (nonatomic,retain) NSString * currentSecondaryDNSServer; 
@property (nonatomic,retain) NSString * currentWANDomainName; 
@property (nonatomic,retain) NSString * ipv6PrimaryDNSAddress; 
@property (nonatomic,retain) NSString * ipv6CurrentPrimaryDNSAddress; 
@property (nonatomic,retain) NSString * ipv6SecondaryDNSAddress; 
@property (nonatomic,retain) NSString * ipv6CurrentSecondaryDNSAddress; 
@property (nonatomic,retain) NSString * ipv6WANAddressToDisplay; 
@property (assign,nonatomic) char connected; 
@property (nonatomic,retain) NSString * pppoeAccountName; 
@property (nonatomic,retain) NSString * pppoeAccountPassword; 
@property (nonatomic,retain) NSString * pppoeServiceName; 
@property (nonatomic,retain) AUInternetOptions * internetOptions; 
@property (assign,nonatomic) char wideAreaBonjourSupported; 
@property (assign,nonatomic) char canShowWideAreaBonjourUI; 
-(char)saveData;
-(AUInternetOptions *)internetOptions;
-(NSString *)currentPrimaryDNSServer;
-(NSString *)currentSecondaryDNSServer;
-(NSString *)currentWANDomainName;
-(NSString *)ipv6CurrentPrimaryDNSAddress;
-(NSString *)ipv6CurrentSecondaryDNSAddress;
-(long long)connectionMethod;
-(NSArray *)internetOptionsSettingsToValidate;
-(NSString *)pppoeAccountName;
-(NSString *)pppoeServiceName;
-(void)setConfigureViaValues:(NSArray *)arg1 ;
-(void)setWanIPAddress:(NSString *)arg1 ;
-(void)setSubnetMask:(NSString *)arg1 ;
-(void)setRouterAddress:(NSString *)arg1 ;
-(void)setPrimaryDNSServer:(NSString *)arg1 ;
-(void)setSecondaryDNSServer:(NSString *)arg1 ;
-(void)setWanDomainName:(NSString *)arg1 ;
-(void)setPppoeAccountName:(NSString *)arg1 ;
-(void)setPppoeAccountPassword:(NSString *)arg1 ;
-(void)setPppoeServiceName:(NSString *)arg1 ;
-(void)setInternetOptions:(AUInternetOptions *)arg1 ;
-(void)setDynamicWanIPAddress:(NSString *)arg1 ;
-(void)setDynamicSubnetMask:(NSString *)arg1 ;
-(void)setDynamicRouterAddress:(NSString *)arg1 ;
-(void)setCurrentPrimaryDNSServer:(NSString *)arg1 ;
-(void)setCurrentSecondaryDNSServer:(NSString *)arg1 ;
-(void)setCurrentWANDomainName:(NSString *)arg1 ;
-(void)setIpv6WANAddressToDisplay:(NSString *)arg1 ;
-(void)setIpv6PrimaryDNSAddress:(NSString *)arg1 ;
-(void)setIpv6CurrentPrimaryDNSAddress:(NSString *)arg1 ;
-(void)setIpv6SecondaryDNSAddress:(NSString *)arg1 ;
-(void)setIpv6CurrentSecondaryDNSAddress:(NSString *)arg1 ;
-(void)setPppoeConnectionStyleValues:(NSArray *)arg1 ;
-(void)setPppoeIdleDisconnectValues:(NSArray *)arg1 ;
-(void)setIpv6ConfigurationMethods:(NSArray *)arg1 ;
-(void)setIpv6WANModes:(NSArray *)arg1 ;
-(NSArray *)configureViaValues;
-(NSArray *)ipv6WANModes;
-(NSArray *)pppoeConnectionStyleValues;
-(NSArray *)pppoeIdleDisconnectValues;
-(NSArray *)ipv6ConfigurationMethods;
-(NSString *)wanIPAddress;
-(void)setConnectionMethod:(long long)arg1 ;
-(NSString *)subnetMask;
-(NSString *)routerAddress;
-(NSString *)primaryDNSServer;
-(NSString *)secondaryDNSServer;
-(NSString *)wanDomainName;
-(NSString *)ipv6PrimaryDNSAddress;
-(NSString *)ipv6SecondaryDNSAddress;
-(NSString *)pppoeAccountPassword;
-(void)setUpConfigureViaValues;
-(void)setUpIPv6ConfigurationMethods;
-(void)adjustShowIPv6ConnectionSharingForIPv6Config:(int)arg1 ipv6Mode:(int)arg2 ;
-(void)adjustShowEditIPv6LANIPAddressForIPv6Config:(int)arg1 ipv6Mode:(int)arg2 shareIPConnection:(char)arg3 ;
-(void)adjustIPv6WANAddressToDisplayForIPv6Config:(int)arg1 ipv6WANAddress:(id)arg2 ipv6CurrentWANAddress:(id)arg3 ;
-(void)setWideAreaBonjourSupported:(char)arg1 ;
-(char)wideAreaBonjourSupported;
-(void)setCanShowWideAreaBonjourUI:(char)arg1 ;
-(char)canShowWideAreaBonjourUI;
-(void)_loadDataUsingGetValueForBSSettingFromDataSource:(id)arg1 ;
-(void)_loadDataUsingGetValueForSettingKeyFromDataSource:(id)arg1 ;
-(void)setLoadingData:(char)arg1 ;
-(void)loadDataFromDataSource:(id)arg1 ;
-(char)loadingData;
-(void)adjustShowIPv6TunnelRemoteAddressForIPv6Config:(int)arg1 ipv6Mode:(int)arg2 ;
-(NSString *)ipv6WANAddressToDisplay;
-(NSString *)dynamicWanIPAddress;
-(NSString *)dynamicSubnetMask;
-(NSString *)dynamicRouterAddress;
-(char)connected;
-(id)errors;
-(void)setConnected:(char)arg1 ;
-(id)init;
-(void)dealloc;
-(char)valid;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)didChangeValueForKey:(id)arg1 ;
-(void)loadData;
@end

