/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:23:02 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Utilities/Keychain Access.app/Contents/MacOS/Keychain Access
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <Keychain Access/Keychain Access-Structs.h>
@class SFKeychain, NSString, NSLock, NSMutableArray, NSMapTable;

@interface KeychainStore : NSObject {

	OpaqueSecKeychainRefRef _secKeychainRef;
	SFKeychain* _keychain;
	NSString* _storeHandle;
	NSLock* _filteredTableLock;
	NSMutableArray* _allKeychainItems;
	NSMapTable* _filteredTable;
	NSMutableArray* _cachedIdentities;
	NSLock* _lock;
	int _state;
	char _isLogicalSearchStore;
	char _isCloudKeychainStore;
	char _inBatchMode;
	char _showExpiredCerts;

}
+(id)storeForKeychainRef:(OpaqueSecKeychainRefRef)arg1 ;
+(char)isStoreForKeychainRefInCache:(OpaqueSecKeychainRefRef)arg1 ;
+(id)storeForSearchString:(id)arg1 ;
+(char)isSystemKeychainRef:(OpaqueSecKeychainRefRef)arg1 ;
+(char)isRemoteKeychainRef:(OpaqueSecKeychainRefRef)arg1 ;
+(id)secKeychainRefToStoreHandle:(OpaqueSecKeychainRefRef)arg1 ;
+(id)cachedStore:(id)arg1 ;
+(id)registerAvailableStore:(id)arg1 ;
+(id)secSearchToStoreHandle:(id)arg1 ;
+(char)isSystemRootCertificates:(id)arg1 ;
+(id)iconForKeychainRef:(OpaqueSecKeychainRefRef)arg1 ;
+(char)isCloudKeychain:(id)arg1 ;
+(id)displayNameForKeychainRef:(OpaqueSecKeychainRefRef)arg1 ;
+(void)removeStoreFromCache:(id)arg1 ;
+(void)initialize;
-(OpaqueSecKeychainRefRef)secKeychainRef;
-(char)isCloudKeychain;
-(char)isSmartCard;
-(char)isFileBased;
-(char)isPhysicallyPresent;
-(char)itemIsIdentity:(id)arg1 ;
-(char)canModify;
-(void)setShowExpiredCerts:(char)arg1 ;
-(id)keychainItemsFilteredUsingAttributes:(id)arg1 ;
-(id)noteKeychainItems:(id)arg1 ;
-(id)keyKeychainItems:(id)arg1 ;
-(id)certKeychainItems:(id)arg1 ;
-(id)identityKeychainItems:(id)arg1 ;
-(id)passwordKeychainItems:(id)arg1 ;
-(id)keychainItemsFilteredUsingClass:(unsigned)arg1 attributes:(id)arg2 ;
-(void)fetchAllKeychainItemsSynchronously;
-(id)storeHandle;
-(char)isLogicalSearchStore;
-(void)openKeychainAsynchronously;
-(void)copyKeychainItems:(id)arg1 cut:(BOOL)arg2 ;
-(void)pasteKeychainItems;
-(char)clipboardHasItems;
-(void)toggleLock;
-(id)uniqueTrustedCertificatesInSelection:(id)arg1 ;
-(int)removeTrustSettingsInSelection:(id)arg1 ;
-(void)deleteKeychainItems:(id)arg1 ;
-(void)toggleLock:(id)arg1 ;
-(void)makeDefault;
-(void)updateSearchItemsSynchronously;
-(id)keyItemFromIdentityItem:(id)arg1 ;
-(id)certificateItemFromIdentityItem:(id)arg1 ;
-(char)isSystemRootCertificates;
-(BOOL)isKeychainDefault;
-(id)initWithSearch:(id)arg1 ;
-(void)keychainAddNotification:(id)arg1 ;
-(void)keychainDeleteNotification:(id)arg1 ;
-(void)keychainUpdateNotification:(id)arg1 ;
-(void)keychainEnteredBatchModeNotification:(id)arg1 ;
-(void)keychainLeftBatchModeNotification:(id)arg1 ;
-(void)keychainTrustSettingsChangedNotification:(id)arg1 ;
-(void)_cacheAllKeychainItems;
-(char)itemHasTrustSettings:(id)arg1 ;
-(void)_sortKeychainItemList:(id)arg1 usingAttributes:(id)arg2 ;
-(void)_rebuildFilteredKeychainItemList;
-(void)_releaseAllKeychainItems;
-(id)_keyKeychainItemsByKeyOrItemClass:(id)arg1 itemClass:(unsigned)arg2 attributes:(id)arg3 ;
-(void)deleteKeychainItemsSynchronously:(id)arg1 ;
-(void)_cacheIdentities;
-(id)_getIdentityItemForKeychainItem:(id)arg1 ;
-(OpaqueSecIdentityRefRef)_getIdentityRefForKeychainItem:(id)arg1 ;
-(char)isLocked:(id)arg1 ;
-(char)isSystemKeychainStore;
-(void)_cacheAllKeychainItemsFromSearch;
-(void)_cacheAllKeychainItemsFromKeychain;
-(char)_cacheAllKeychainItemsFromKeychain:(id)arg1 ;
-(void)addKeychainItemToStore:(id)arg1 ;
-(char)isViewableItem:(id)arg1 ;
-(id)nsKeychainItemToKeychainItem:(id)arg1 ;
-(id)nsKeychainItemToIdentityKeychainItem:(id)arg1 ;
-(void)_keychainEnteredBatchMode;
-(void)_keychainLeftBatchMode;
-(id)allKeychainItems;
-(unsigned long long)indexOfKeychainItem:(id)arg1 ;
-(id)newKeychainItem:(id)arg1 account:(id)arg2 password:(id)arg3 ;
-(id)newSecureNoteItem:(id)arg1 note:(id)arg2 ;
-(char)isRemoteKeychainStore;
-(int)storeState;
-(unsigned long long)totalCount;
-(void)release;
-(void)dealloc;
-(id)icon;
-(char)isLocked;
-(void)removeObjectIdenticalTo:(id)arg1 ;
-(id)initWithRef:(OpaqueSecKeychainRefRef)arg1 ;
@end

