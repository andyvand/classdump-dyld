/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:29:26 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Utilities/Terminal.app/Contents/MacOS/Terminal
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Terminal/Terminal-Structs.h>
#import <AppKit/NSTabView.h>
#import <Terminal/NSAnimationDelegate.h>
#import <Terminal/NSMenuDelegate.h>

@class TTTabViewItem, NSImage, NSTimer, NSAnimation, NSString;

@interface TTTabView : NSTabView <NSAnimationDelegate, NSMenuDelegate> {

	CGRect _newTabButtonRect;
	CGRect _overflowImageRect;
	CGRect _tabFrame;
	TTTabViewItem* _draggedTab;
	TTTabViewItem* _draggedTabOnCloseImage;
	unsigned long long _draggedTabInitialIndex;
	CGPoint _lastMouseDownLocation;
	double _tabDraggedXOffset;
	double _tabDraggedYOffset;
	double _tabDraggedXOffsetBeyondBounds;
	char _showOverflowTabMenu;
	char _isShowingOverflowMenu;
	char _isMouseOffScreen;
	char _isTabViewOnBottom;
	char _showTabIfOnlyOneInDesktopScreen;
	char _showTabIfOnlyOneInFullScreen;
	char _isRegisteredForDragEvents;
	NSImage* _newTabButtonImage;
	NSImage* _overflowTabMenuImage;
	NSImage* _draggingImage;
	NSTimer* _draggingSelectTabTimer;
	double TT_TAB_FRAME_BOTTOM;
	char _haveTabWidthMax;
	long long _tabWidthMax;
	long long _tabWidthMin;
	NSAnimation* _activeAnimation;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)keyPathsForValuesAffectingShowTabIfOnlyOne;
-(void)setShowTabIfOnlyOneInDesktopScreen:(char)arg1 ;
-(void)setShowTabIfOnlyOneInFullScreen:(char)arg1 ;
-(void)setTabViewOnBottom:(char)arg1 ;
-(char)showsTabs;
-(CGSize)contentSizeForFrameSize:(CGSize)arg1 ;
-(CGPoint)recenterMouseInFloatingTab:(CGPoint)arg1 ;
-(void)setDraggedTab:(id)arg1 ;
-(CGRect)tabFrame;
-(void)registerForDragEvents;
-(CGPoint)reverseRecenterMouseInFloatingTab:(CGPoint)arg1 ;
-(void)setTabDraggedXOffset:(double)arg1 ;
-(void)unregisterForDragEvents;
-(char)tabViewOnBottom;
-(char)showTabIfOnlyOne;
-(void)stopActiveAnimation;
-(void)setShowTabIfOnlyOne:(char)arg1 ;
-(void)addTabViewItem:(id)arg1 atPoint:(CGPoint)arg2 ;
-(char)showTabIfOnlyOneInDesktopScreen;
-(char)showTabIfOnlyOneInFullScreen;
-(double)tabDraggedXOffset;
-(CGRect)resizeRectToFitInsideBounds:(CGRect)arg1 ;
-(long long)indexOfLastVisibleTabViewItem;
-(id)draggedTab;
-(void)initTabFrame;
-(void)setOverflowTabMenuImage:(id)arg1 ;
-(void)setNewTabButtonImage:(id)arg1 ;
-(void)invalidateDraggingSelectTabTimer;
-(void)removeTabViewTooltips;
-(void)windowDidChangeKey:(id)arg1 ;
-(void)startSpringBackAnimation:(id)arg1 ;
-(void)unhighlightTabs;
-(void)draggingSelectTabTimer:(id)arg1 ;
-(void)scheduleDraggingSelectTabTimer:(long long)arg1 ;
-(id)folderItemsFromPasteboard:(id)arg1 ;
-(char)isValidDrag:(id)arg1 operation:(unsigned long long*)arg2 validCount:(long long*)arg3 ;
-(void)updateDraggingSelectTabTimer:(id)arg1 ;
-(void)highlightTab:(id)arg1 ;
-(void)resizeWindowToAccountForTabsBeingDisplayed:(int)arg1 ;
-(double)_tabBarheight;
-(void)drawBorderAndBackground;
-(CGRect)rectForTabViewItem:(long long)arg1 forNumberOfTabs:(long long)arg2 ;
-(void)startTabReorderAnimation:(id)arg1 ;
-(void)drawTabOverflowMenuImage;
-(void)drawNewTabButtonImage;
-(void)selectTabFromMenu:(id)arg1 ;
-(void)updateTabBarVisibility:(char)arg1 ;
-(char)isTabViewItemInOverflowMenu:(id)arg1 ;
-(double)tabDraggedYOffset;
-(id)lineColor;
-(CGSize)frameSizeForContentSize:(CGSize)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(void)dealloc;
-(void)setFrame:(CGRect)arg1 ;
-(char)accessibilityIsIgnored;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)drawRect:(CGRect)arg1 ;
-(id)delegate;
-(void)animationDidEnd:(id)arg1 ;
-(char)isFlipped;
-(char)acceptsFirstResponder;
-(void)draggedImage:(id)arg1 endedAt:(CGPoint)arg2 operation:(unsigned long long)arg3 ;
-(unsigned long long)draggingEntered:(id)arg1 ;
-(unsigned long long)draggingUpdated:(id)arg1 ;
-(void)draggingExited:(id)arg1 ;
-(void)draggingEnded:(id)arg1 ;
-(char)performDragOperation:(id)arg1 ;
-(id)menuForEvent:(id)arg1 ;
-(void)mouseDown:(id)arg1 ;
-(void)mouseDragged:(id)arg1 ;
-(void)mouseUp:(id)arg1 ;
-(void)viewWillMoveToWindow:(id)arg1 ;
-(void)menuNeedsUpdate:(id)arg1 ;
-(char)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long long)arg3 shouldCancel:(char)arg4 ;
-(void)updateDraggingItemsForDrag:(id)arg1 ;
-(char)prepareForDragOperation:(id)arg1 ;
-(char)wantsPeriodicDraggingUpdates;
-(void)draggedImage:(id)arg1 movedTo:(CGPoint)arg2 ;
-(CGRect)contentRect;
-(void)mouseMoved:(id)arg1 ;
-(void)viewDidEndLiveResize;
-(id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(CGPoint)arg3 userData:(void*)arg4 ;
-(void)removeTabViewItem:(id)arg1 ;
-(id)selectedTabViewItem;
-(void)selectTabViewItem:(id)arg1 ;
-(CGRect)_tabRectAdjustedForOverlap:(CGRect)arg1 ;
-(id)tabViewItemAtPoint:(CGPoint)arg1 ;
-(void)addTabViewItem:(id)arg1 ;
-(void)selectNextTabViewItem:(id)arg1 ;
-(void)selectPreviousTabViewItem:(id)arg1 ;
@end

