/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:29:26 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Utilities/Terminal.app/Contents/MacOS/Terminal
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Terminal/Terminal-Structs.h>
#import <AppKit/NSWindowController.h>
#import <Terminal/TTTabViewDelegate.h>
#import <Terminal/TTBlinking.h>

@class NSMenu, TTTabView, NSMutableArray, TTTabController, TTTabViewItem, NSTimer, NSWindow, NSString;

@interface TTWindowController : NSWindowController <TTTabViewDelegate, TTBlinking> {

	NSMenu* _contextualMenuForSelection;
	NSMenu* _contextualMenuForTabItems;
	NSMenu* _contextualMenuForTabView;
	TTTabView* _tabView;
	NSMutableArray* _tabControllers;
	unsigned long long _windowProfileID;
	TTTabController* _selectedTabController;
	TTWindowController* _draggedController;
	TTWindowController* _receiverController;
	TTTabViewItem* _draggedTab;
	NSTimer* _draggingOrderFrontTimer;
	NSWindow* _draggingSacrificialWindow;
	char _isBeingDragged;
	id _delegate;
	CGRect _idealContentRect;
	long long _geometryUpdateDepth;
	char _closeDialogExpected;
	CGPoint _cascadePoint;
	char _hasAssignedFrame;

}

@property (assign) char hasAssignedFrame;                           //@synthesize hasAssignedFrame=_hasAssignedFrame - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
-(void)invalidateDraggingOrderFrontTimer;
-(void)setSelectedTabController:(id)arg1 ;
-(id)_proxyIconForNonValidatedURL:(id)arg1 ;
-(id)tabControllers;
-(CGSize)tabContentSize;
-(char)isGeometryUpdateInProgress;
-(void)setGeometryUpdateInProgress:(char)arg1 ;
-(id)selectedTabController;
-(void)updateAutosaveName;
-(id)findWindowControllerAtPoint:(CGPoint)arg1 ;
-(void)setIsBeingDragged:(char)arg1 ;
-(void)closeWindowIfNoMoreTabs;
-(void)updateWindowGeometry;
-(void)addExistingTabViewItem:(id)arg1 atPoint:(CGPoint)arg2 ;
-(char)isBeingDragged;
-(void)draggingOrderFrontTimer:(id)arg1 ;
-(void)updateRepresentedURL;
-(char)_isTerminalBackgroundOpaque;
-(void)_makeWindowOpaque;
-(double)_blurForWindow;
-(void)updateDockTileBadge;
-(void)updateDockTile;
-(void)closeOtherTabs:(id)arg1 ;
-(void)toggleTabBarShown:(id)arg1 ;
-(void)moveTabToNewWindow:(id)arg1 ;
-(void)mergeAllWindows:(id)arg1 ;
-(void)splitActivePane:(id)arg1 ;
-(id)_targetPane;
-(void)closeActivePane:(id)arg1 ;
-(int)countOfTabsThatNeedClosePrompt;
-(void)displayWindowCloseSheet:(int)arg1 ;
-(void)switchAllTabsToMainScreen;
-(void)autoCloseAllTabs;
-(id)warningNamesForProcesses:(id)arg1 ;
-(void)closeSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void*)arg3 ;
-(char)_windowShouldBeOpaque;
-(id)makeTabWithProfile:(id)arg1 customFont:(id)arg2 command:(id)arg3 runAsShell:(char)arg4 restorable:(char)arg5 workingDirectory:(id)arg6 sessionClass:(id)arg7 restoreSession:(id)arg8 ;
-(id)resolveTargetTabControllerForSender:(id)arg1 ;
-(void)autoCloseSpecificTab:(id)arg1 ;
-(void)tabView:(id)arg1 didCloseTabViewItem:(id)arg2 ;
-(void)addExistingTabViewItem:(id)arg1 ;
-(void)moveTabViewItemToThisWindow:(id)arg1 fromWindowController:(id)arg2 ;
-(void)moveTabViewItemToNewWindow:(id)arg1 ;
-(void)inspectTabWithController:(id)arg1 ;
-(void)scanForDirtyTabControllers;
-(void)removeTabController:(id)arg1 ;
-(char)shouldCloseTabViewItem:(id)arg1 ;
-(void)tabView:(id)arg1 didDragTabViewItemOutOfWindow:(id)arg2 toPoint:(CGPoint)arg3 ;
-(void)tabView:(id)arg1 draggingTabViewItemOutOfWindow:(id)arg2 toPoint:(CGPoint)arg3 ;
-(void)tabView:(id)arg1 didDropTabViewItemOutOfWindow:(CGPoint)arg2 ;
-(void)blinker:(id)arg1 didBlink:(char)arg2 ;
-(void)setWindowProfileID:(unsigned long long)arg1 ;
-(unsigned long long)windowProfileID;
-(void)updateAllTitles;
-(void)applyProfileToAllShellsInWindow:(id)arg1 ;
-(void)closeTab:(id)arg1 ;
-(void)inspectTab:(id)arg1 ;
-(void)newTabAtDirectoryURL:(id)arg1 ;
-(id)makeTabWithProfile:(id)arg1 ;
-(void)setCloseDialogExpected:(char)arg1 ;
-(char)closeDialogExpected;
-(id)contextualMenuForSelection;
-(id)contextualMenuForTabItems;
-(id)contextualMenuForTabView;
-(void)settingsPickerDidSelectProfile:(id)arg1 ;
-(id)thumbnailOfSize:(CGSize)arg1 forProfile:(id)arg2 ;
-(char)hasAssignedFrame;
-(void)setHasAssignedFrame:(char)arg1 ;
-(void)newTab:(id)arg1 ;
-(unsigned long long)numberOfTabs;
-(void)updateTitle;
-(void)selectNextTab:(id)arg1 ;
-(void)selectPreviousTab:(id)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(id)delegate;
-(char)validateMenuItem:(id)arg1 ;
-(CGSize)contentSize;
-(char)acceptsFirstResponder;
-(id)initWithWindow:(id)arg1 ;
-(CGSize)windowWillResize:(id)arg1 toSize:(CGSize)arg2 ;
-(void)awakeFromNib;
-(void)windowWillClose:(id)arg1 ;
-(id)windowNibName;
-(char)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long long)arg3 shouldCancel:(char)arg4 ;
-(char)windowShouldClose:(id)arg1 ;
-(CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(CGRect)arg2 ;
-(CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(CGRect)arg3 ;
-(char)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2 ;
-(char)window:(id)arg1 shouldDragDocumentWithEvent:(id)arg2 from:(CGPoint)arg3 withPasteboard:(id)arg4 ;
-(CGSize)window:(id)arg1 willUseFullScreenContentSize:(CGSize)arg2 ;
-(void)window:(id)arg1 willEncodeRestorableState:(id)arg2 ;
-(void)windowDidResize:(id)arg1 ;
-(void)windowDidBecomeMain:(id)arg1 ;
-(void)windowDidResignMain:(id)arg1 ;
-(void)windowWillMiniaturize:(id)arg1 ;
-(void)swipeWithEvent:(id)arg1 ;
-(id)tabView;
-(void)removeTabViewItem:(id)arg1 ;
-(void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2 ;
@end

