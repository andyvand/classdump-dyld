/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:29:26 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Utilities/Terminal.app/Contents/MacOS/Terminal
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AppKit/NSApplication.h>
#import <Terminal/NSApplicationDelegate.h>
#import <Terminal/NSMenuDelegate.h>
#import <Terminal/NSPathControlDelegate.h>
#import <Terminal/NSUserInterfaceItemSearching.h>

@class NSMutableIndexSet, NSMutableDictionary, NSMenu, NSMutableArray, NSDictionary, NSString, TTWorkspace, TTWindow, TTWindowController, NSMenuItem, NSPanel;

@interface TTApplication : NSApplication <NSApplicationDelegate, NSMenuDelegate, NSPathControlDelegate, NSUserInterfaceItemSearching> {

	NSMutableIndexSet* _availableEquivalents;
	NSMutableDictionary* _windowEquivalents;
	NSMenu* _equivalentsMenu;
	NSMutableArray* _windowsToPromptForCloseArray;
	char _shouldPerformStartupAction;
	char _isTerminating;
	NSDictionary* _initialEnvironment;
	char _illegalShell;
	NSString* _defaultShell;
	NSString* _termType;
	TTWorkspace* _currentWorkspace;
	TTWindow* _mainTerminalWindow;
	TTWindowController* _mainTerminalWindowController;
	NSMenuItem* _closeWindowMenuItem;
	NSMenuItem* _closeAllMenuItem;
	NSMenuItem* _closeTabMenuItem;
	NSMenuItem* _closeOtherTabsMenuItem;
	NSMenuItem* _servicesMenuItem;
	NSMenuItem* _helpMenuItem;
	NSMenu* _newWindowMenu;
	NSMenu* _newTabMenu;
	NSMenu* _newWindowDockMenu;
	NSMenu* _copySpecialMenu;
	unsigned long long _userAlertCount;
	char _isUpdatingUserAlert;
	NSMenu* _workspacesMenu;
	int _lowSwapSpaceWatcherKQueueFD;
	char _terminateLowSwapSpaceWatcher;
	NSPanel* _lowSwapSpaceWindow;
	NSPanel* _lowAddressSpaceWindow;
	char isInEmergencyMemoryConservationModeForLowSwapSpace;

}

@property (readonly) char isInEmergencyMemoryConservationMode; 
@property (assign,nonatomic) char isInEmergencyMemoryConservationModeForLowSwapSpace; 
@property (readonly) NSDictionary * initialEnvironment;                                            //@synthesize initialEnvironment=_initialEnvironment - In the implementation block
@property (assign) char shouldPerformStartupAction;                                                //@synthesize shouldPerformStartupAction=_shouldPerformStartupAction - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(char)isRunningInInstallEnvironment;
+(id)alertSoundURL;
+(char)shouldUseVisualBeep;
+(void)initialize;
-(NSDictionary *)initialEnvironment;
-(void)cancelAlertUser:(unsigned long long)arg1 ;
-(id)mainTerminalWindow;
-(id)currentWorkspace;
-(void)continueTermination:(id)arg1 ;
-(void)cancelTermination:(id)arg1 ;
-(void)updateShellMenu;
-(char)modifiersPressedForNewTerminalWithSameCommand;
-(void)profileMenuNeedsUpdate:(id)arg1 withAction:(SEL)arg2 ;
-(id)defaultShell;
-(void)applyProfileToAllWindowControllers:(id)arg1 ;
-(char)openFolder:(id)arg1 inNewTab:(char)arg2 ;
-(void)openManPageForString:(id)arg1 ;
-(void)searchManPagesForString:(id)arg1 ;
-(void)searchManPagesForSelection:(id)arg1 ;
-(void)alertUser;
-(void)openManPageForSelection:(id)arg1 ;
-(char)isInEmergencyMemoryConservationMode;
-(void)setDefaultShell:(id)arg1 ;
-(id)makeWindowControllerWithProfile:(id)arg1 ;
-(id)importDefaultSettingsOverwritingExisting:(char)arg1 onlyNewer:(char)arg2 ;
-(char)importSettingsFiles:(id)arg1 overwritingExisting:(char)arg2 profiles:(id*)arg3 workspaces:(id*)arg4 error:(id*)arg5 ;
-(void)_dismissLowSpacePanel:(id)arg1 ;
-(void)setSecureKeyboardEntryFromDefaults;
-(void)handleWindowKeyChange:(id)arg1 ;
-(void)initLowSwapSpaceWatcher;
-(void)_updateAlertBadge;
-(void)_doAlertUser;
-(void)_doCancelAlertUser;
-(void)_delayedDoAlertUser;
-(void)_delayedDoCancelAlertUser;
-(void)profileMenuNeedsUpdate:(id)arg1 ;
-(void)copySpecialMenuNeedsUpdate:(id)arg1 ;
-(void)workspaceMenuNeedsUpdate:(id)arg1 ;
-(char)shouldPerformStartupAction;
-(unsigned long long)registerProfileID:(id)arg1 ;
-(void)updateWindowMenu;
-(void)setShouldPerformStartupAction:(char)arg1 ;
-(void)setSecureKeyboardEntry:(char)arg1 ;
-(id)importTermFile:(id)arg1 ;
-(char)importSettingsFiles:(id)arg1 overwritingExisting:(char)arg2 onlyNewer:(char)arg3 profiles:(id*)arg4 workspaces:(id*)arg5 error:(id*)arg6 ;
-(void)commitPreferenceChanges;
-(id)frontmostTerminalWindow;
-(id)makeWindowControllerWithProfile:(id)arg1 customFont:(id)arg2 command:(id)arg3 runAsShell:(char)arg4 restorable:(char)arg5 workingDirectory:(id)arg6 ;
-(void)newShell:(id)arg1 ;
-(char)newShell:(id)arg1 withProfile:(id)arg2 ;
-(void)toggleInspectorPanel:(id)arg1 ;
-(void)terminateLowSpaceWatcher;
-(id)_localizedSenderNameForAppleEvent:(id)arg1 ;
-(void)_revealPathControlObject:(id)arg1 ;
-(void)_revealPathControl:(id)arg1 ;
-(char)_shouldOpenFile:(id)arg1 ;
-(char)openSettingsFile:(id)arg1 ;
-(char)openTermFile:(id)arg1 ;
-(char)openCommandFile:(id)arg1 ;
-(int)checkKnownHostName:(id)arg1 ;
-(void)openWorkspaceRepresentation:(id)arg1 ;
-(void)addWindowController:(id)arg1 withProfileID:(int)arg2 ;
-(void)toggleSecureKeyboardEntry:(id)arg1 ;
-(void)sneakilyOrderFrontFontPanel:(id)arg1 ;
-(void)toggleProfileInspector:(id)arg1 ;
-(void)openWorkspace:(id)arg1 ;
-(void)saveWorkspace:(id)arg1 ;
-(void)showPreferencesWindow:(id)arg1 ;
-(id)keyEquivalentForProfileID:(unsigned long long)arg1 ;
-(unsigned long long)keyEquivalentModifierMaskForProfileID:(unsigned long long)arg1 ;
-(void)releaseProfileID:(unsigned long long)arg1 ;
-(void)changeStyleForCopy:(id)arg1 ;
-(void)setIsInEmergencyMemoryConservationModeForLowSwapSpace:(char)arg1 ;
-(void)handleReceivedLowSwapSpaceSetNotification;
-(void)handleReceivedLowSwapSpaceClearedNotification;
-(void)watchForLowSwapSpace;
-(id)manPageReferenceFromString:(id)arg1 ;
-(id)manPathForFind;
-(void)connectToServer:(id)arg1 ;
-(void)newTerminalAtFolder:(id)arg1 userData:(id)arg2 error:(id*)arg3 ;
-(void)newCommand:(id)arg1 ;
-(void)showHelpAnchorWithTag:(id)arg1 ;
-(void)openManPage:(id)arg1 userData:(id)arg2 error:(id*)arg3 ;
-(void)searchManPages:(id)arg1 userData:(id)arg2 error:(id*)arg3 ;
-(char)isInEmergencyMemoryConservationModeForLowSwapSpace;
-(id)handleDoScriptCommand:(id)arg1 ;
-(void)handleGetURLScriptCommand:(id)arg1 ;
-(id)scriptSettings;
-(void)setScriptSettings:(id)arg1 ;
-(void)insertInScriptSettings:(id)arg1 ;
-(id)scriptDefaultSettings;
-(void)setScriptDefaultSettings:(id)arg1 ;
-(id)scriptStartupSettings;
-(void)setScriptStartupSettings:(id)arg1 ;
-(void)applicationDidFinishLaunching:(id)arg1 ;
-(void)applicationWillBecomeActive:(id)arg1 ;
-(void)applicationWillResignActive:(id)arg1 ;
-(void)applicationDidResignActive:(id)arg1 ;
-(void)newTab:(id)arg1 ;
-(void)migrateDefaults;
-(void)searchForItemsWithSearchString:(id)arg1 resultLimit:(long long)arg2 matchedItemHandler:(/*^block*/id)arg3 ;
-(id)localizedTitlesForItem:(id)arg1 ;
-(id)localizedCategoryForItem:(id)arg1 ;
-(void)performActionForItem:(id)arg1 ;
-(id)init;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)finishLaunching;
-(void)sendEvent:(id)arg1 ;
-(char)application:(id)arg1 openTempFile:(id)arg2 ;
-(char)application:(id)arg1 openFile:(id)arg2 ;
-(char)applicationShouldOpenUntitledFile:(id)arg1 ;
-(unsigned long long)applicationShouldTerminate:(id)arg1 ;
-(char)validateMenuItem:(id)arg1 ;
-(char)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(char)arg2 ;
-(void)addWindowsItem:(id)arg1 title:(id)arg2 filename:(char)arg3 ;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)awakeFromNib;
-(void)didPresentErrorWithRecovery:(char)arg1 contextInfo:(void*)arg2 ;
-(void)open:(id)arg1 ;
-(char)openFile:(id)arg1 ;
-(void)addWindowController:(id)arg1 ;
-(char)pathControl:(id)arg1 shouldDragPathComponentCell:(id)arg2 withPasteboard:(id)arg3 ;
-(void)orderFrontStandardAboutPanel:(id)arg1 ;
-(char)openURL:(id)arg1 ;
-(void)removeWindowsItem:(id)arg1 ;
-(void)changeWindowsItem:(id)arg1 title:(id)arg2 filename:(char)arg3 ;
-(void)updateWindowsItem:(id)arg1 ;
@end

