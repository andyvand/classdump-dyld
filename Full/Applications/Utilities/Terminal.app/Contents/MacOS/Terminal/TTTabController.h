/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:29:26 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Utilities/Terminal.app/Contents/MacOS/Terminal
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Terminal/Terminal-Structs.h>
#import <Terminal/NSSplitViewDelegate.h>

@protocol TTOutputDecoder, TTEventEncoder;
@class TTTabViewItem, TTPane, TTSplitView, TTShell, TTLogicalScreen, NSObject, TTProfile, NSString, NSURL, NSFont;

@interface TTTabController : NSObject <NSSplitViewDelegate> {

	TTTabViewItem* _tab;
	TTPane* activePane;
	TTSplitView* splitView;
	char splitInProgress;
	char joinInProgress;
	TTShell* _shell;
	TTLogicalScreen* _logicalScreen;
	NSObject*<TTOutputDecoder> _outputDecoder;
	NSObject*<TTOutputDecoder> _encodingConverter;
	NSObject*<TTEventEncoder> _eventEncoder;
	TTProfile* _profile;
	NSString* _customCommand;
	char _isCustomCommandRunAsShell;
	char _isCustomCommandRestorable;
	char _isScrollbackRestorable;
	NSURL* _commandWorkingDirectoryURL;
	NSString* _commandScript;
	NSURL* _windowTitleDerivedURL;
	NSURL* _tabTitleDerivedURL;
	NSFont* _customFont;
	TTProfile* _scriptingProfile;

}

@property (retain,readonly) NSString * customCommand;                                            //@synthesize customCommand=_customCommand - In the implementation block
@property (getter=isCustomCommandRunAsShell,readonly) char customCommandRunAsShell;              //@synthesize isCustomCommandRunAsShell=_isCustomCommandRunAsShell - In the implementation block
@property (getter=isCustomCommandRestorable,readonly) char customCommandRestorable;              //@synthesize isCustomCommandRestorable=_isCustomCommandRestorable - In the implementation block
@property (getter=isScrollbackRestorable) char scrollbackRestorable;                             //@synthesize isScrollbackRestorable=_isScrollbackRestorable - In the implementation block
@property (retain,readonly) NSURL * commandWorkingDirectoryURL;                                  //@synthesize commandWorkingDirectoryURL=_commandWorkingDirectoryURL - In the implementation block
@property (retain,readonly) NSString * commandScript;                                            //@synthesize commandScript=_commandScript - In the implementation block
@property (readonly) TTPane * activePane; 
@property (readonly) TTSplitView * splitView; 
@property (readonly) NSURL * effectiveRepresentedURL; 
@property (readonly) NSURL * effectiveWorkingDirectoryURL; 
@property (assign) unsigned long long rowCount; 
@property (assign) unsigned long long columnCount; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)keyPathsForValuesAffectingRowCount;
+(id)keyPathsForValuesAffectingColumnCount;
+(char)automaticallyNotifiesObserversOfWindowTitleDerivedURL;
+(char)automaticallyNotifiesObserversOfTabTitleDerivedURL;
+(id)keyPathsForValuesAffectingEffectiveRepresentedURL;
+(id)keyPathsForValuesAffectingEffectiveWorkingDirectoryURL;
+(id)keyPathsForValuesAffectingCustomTitle;
+(id)keyPathsForValuesAffectingCustomTabTitle;
+(id)keyPathsForValuesAffectingTitle;
-(id)logicalScreen;
-(void)writeDirectToScreen:(id)arg1 ;
-(void)reapShell:(char)arg1 ;
-(id)identifyingTitle;
-(NSURL *)effectiveRepresentedURL;
-(void)setGeometryToProfile:(id)arg1 ;
-(void)sizeToFit:(CGRect)arg1 ;
-(TTPane *)activePane;
-(char)tabShouldClose;
-(void)setGeometryToFrame:(CGRect)arg1 ;
-(NSString *)customCommand;
-(char)needsClosePrompt;
-(void)closeSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void*)arg3 ;
-(id)customFont;
-(char)isCustomCommandRunAsShell;
-(char)isCustomCommandRestorable;
-(char)isScrollbackRestorable;
-(NSURL *)effectiveWorkingDirectoryURL;
-(void)setScrollbackRestorable:(char)arg1 ;
-(void)splitPane:(id)arg1 ;
-(void)closePane:(id)arg1 ;
-(id)initWithProfile:(id)arg1 customFont:(id)arg2 columnCount:(long long)arg3 rowCount:(long long)arg4 command:(id)arg5 runAsShell:(char)arg6 restorable:(char)arg7 workingDirectory:(id)arg8 sessionClass:(id)arg9 restoreSession:(id)arg10 ;
-(void)setTab:(id)arg1 ;
-(void)setActivePane:(TTPane *)arg1 ;
-(char)validateRowCount:(id*)arg1 error:(id*)arg2 ;
-(char)validateColumnCount:(id*)arg1 error:(id*)arg2 ;
-(NSURL *)commandWorkingDirectoryURL;
-(void)setCustomFont:(id)arg1 ;
-(void)writeLineDirectToScreen:(id)arg1 withAttributes:(SCD_Struct_TT5)arg2 ;
-(void)writeLineDirectToScreen:(id)arg1 ;
-(id)cdCommandForDirectory:(id)arg1 ;
-(void)shellDidReceiveData:(id)arg1 ;
-(void)initViews;
-(void)emulatorDidDecodeData:(id)arg1 ;
-(CGSize)inactiveContentSize;
-(void)setWindowTitleDerivedURL:(id)arg1 ;
-(void)setTabTitleDerivedURL:(id)arg1 ;
-(void)detachPane:(id)arg1 ;
-(id)tabTitle;
-(id)_tabTitleIncludesProcessName:(char*)arg1 ;
-(id)_defaultWindowTitle;
-(id)customTabTitle;
-(id)_titleIncludingTab:(char)arg1 includingProcess:(char)arg2 ;
-(void)_deriveURLFromCustomTitle:(id)arg1 ;
-(void)updateDirtyLinesFromLogicalScreen;
-(id)outputDecoder;
-(id)encodingConverter;
-(id)eventEncoder;
-(id)windowTitleDerivedURL;
-(id)tabTitleDerivedURL;
-(void)setCustomFontOverride:(id)arg1 ;
-(void)setCustomTabTitle:(id)arg1 ;
-(NSString *)commandScript;
-(id)handleDoScriptCommand:(id)arg1 ;
-(void)prepareScriptingProfile;
-(unsigned long long)scriptNumberOfRows;
-(void)setScriptNumberOfRows:(unsigned long long)arg1 ;
-(unsigned long long)scriptNumberOfColumns;
-(void)setScriptNumberOfColumns:(unsigned long long)arg1 ;
-(id)scriptCursorColor;
-(void)setScriptCursorColor:(id)arg1 ;
-(id)scriptBackgroundColor;
-(void)setScriptBackgroundColor:(id)arg1 ;
-(id)scriptNormalTextColor;
-(void)setScriptNormalTextColor:(id)arg1 ;
-(id)scriptBoldTextColor;
-(void)setScriptBoldTextColor:(id)arg1 ;
-(id)scriptContents;
-(id)scriptHistory;
-(char)scriptBusy;
-(id)scriptProcesses;
-(char)scriptSelected;
-(void)setScriptSelected:(char)arg1 ;
-(id)scriptCleanCommands;
-(void)setScriptCleanCommands:(id)arg1 ;
-(char)scriptTitleDisplaysDeviceName;
-(void)setScriptTitleDisplaysDeviceName:(char)arg1 ;
-(char)scriptTitleDisplaysShellPath;
-(void)setScriptTitleDisplaysShellPath:(char)arg1 ;
-(char)scriptTitleDisplaysWindowSize;
-(void)setScriptTitleDisplaysWindowSize:(char)arg1 ;
-(char)scriptTitleDisplaysFileName;
-(void)setScriptTitleDisplaysFileName:(char)arg1 ;
-(char)scriptTitleDisplaysCustomTitle;
-(void)setScriptTitleDisplaysCustomTitle:(char)arg1 ;
-(id)scriptCustomTitle;
-(void)setScriptCustomTitle:(id)arg1 ;
-(id)scriptTTY;
-(id)scriptFontName;
-(void)setScriptFontName:(id)arg1 ;
-(int)scriptFontSize;
-(void)setScriptFontSize:(int)arg1 ;
-(char)scriptFontAntialiasing;
-(void)setScriptFontAntialiasing:(char)arg1 ;
-(void)setRowCount:(unsigned long long)arg1 ;
-(void)setColumnCount:(unsigned long long)arg1 ;
-(id)shell;
-(void)updateTitle;
-(id)fullTitle;
-(id)profile;
-(void)setProfile:(id)arg1 ;
-(void)setCustomTitle:(id)arg1 ;
-(id)customTitle;
-(unsigned long long)rowCount;
-(id)init;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(id)title;
-(id)windowController;
-(id)objectSpecifier;
-(CGSize)contentSize;
-(TTSplitView *)splitView;
-(double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3 ;
-(double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3 ;
-(double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3 ;
-(void)splitView:(id)arg1 resizeSubviewsWithOldSize:(CGSize)arg2 ;
-(void)splitViewDidResizeSubviews:(id)arg1 ;
-(unsigned long long)columnCount;
-(id)tabViewItem;
@end

