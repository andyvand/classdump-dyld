/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 10:43:31 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Utilities/Audio MIDI Setup.app/Contents/MacOS/Audio MIDI Setup
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Audio MIDI Setup/Audio MIDI Setup-Structs.h>
#import <AppKit/NSWindowController.h>

@class SpeakerConfigurationView, NSTextField, NSMatrix, NSText, NSPopUpButton, NSScrollView, NSView, NSButton, NSWindow, NSMutableArray;

@interface SpeakerConfigurationController : NSWindowController {

	SpeakerConfigurationView* uiConfigurationView;
	NSTextField* uiDeviceNameString;
	NSMatrix* uiOutputFormatMatrix;
	NSText* uiSurroundTypeTitle;
	NSPopUpButton* uiSurroundFormatPopUp;
	NSScrollView* uiStreamMatrixContainer;
	NSView* uiStreamConfigContainer;
	NSButton* uiApplyButton;
	NSWindow* window;
	char mConfigurationHasBeenChanged;
	CAAudioHardwareDevice* mDevice;
	unsigned char mDeviceSection;
	NSButton* mStreamButtonTemplate;
	NSMatrix* mStreamMatrix;
	AudioStreamList* mAudioStreamList;
	unsigned mDeviceChannelCount;
	float mSCCYOffset;
	char mUserIsConfiguringSurround;
	/*function pointer*/void* mIOProcID;
	NSMutableArray* mAvailableChannels;
	unsigned mTestAudioChannelIndex;
	unsigned mTestAudioCurrentCycle;
	unsigned mTestAudioMaxCycles;
	char mTestIsRunning;
	float* mPinkBuffer;
	float toneVolumeAdjustment;

}

@property (readonly) unsigned testAudioChannelIndex; 
@property (readonly) float* pinkBuffer; 
@property (assign) unsigned testAudioCurrentCycle; 
@property (readonly) unsigned testAudioMaxCycles; 
@property (readonly) CAAudioHardwareDevice* device; 
@property (readonly) /*function pointer*/void* ioProcID; 
@property (assign) char testIsRunning; 
@property (readonly) float toneVolumeAdjustment; 
+(char)stereoConfigurationSupportedForDevice:(CAAudioHardwareDevice*)arg1 section:(unsigned char)arg2 ;
+(char)multichannelConfigurationSupportedForDevice:(CAAudioHardwareDevice*)arg1 section:(unsigned char)arg2 ;
-(void)setAudioDevice:(CAAudioHardwareDevice*)arg1 section:(unsigned char)arg2 ;
-(void)cleanupForCurrentDevice;
-(unsigned)testAudioChannelIndex;
-(float*)pinkBuffer;
-(unsigned)testAudioCurrentCycle;
-(unsigned)testAudioMaxCycles;
-(float)toneVolumeAdjustment;
-(/*function pointer*/void*)ioProcID;
-(void)setTestIsRunning:(char)arg1 ;
-(void)setTestAudioCurrentCycle:(unsigned)arg1 ;
-(void)privUpdateTestEnabledStatus;
-(AudioChannelLayout*)privGetACLForPreferredChannelsForStereo;
-(void)privUIEnableStreamsBasedOnLayout:(AudioChannelLayout*)arg1 ;
-(void)privUIEnableStreamsBasedOnSelection;
-(void)privMakeSheetDirty:(id)arg1 ;
-(int)privSelectedOutputFormat;
-(void)privSetupUIForOutputFormat:(int)arg1 withLayout:(AudioChannelLayout*)arg2 ;
-(void)privSynchronizePopUpWithOutputFormat:(int)arg1 ;
-(void)privSynchronizeUIWithSetOutputFormat;
-(void)privTestSpeakerConfiguration:(id)arg1 ;
-(void)iaOutputFormatSelected:(id)arg1 ;
-(void)stopTestIfRunning;
-(void)privIAStreamSelectionChanged;
-(unsigned)privChannelsRequiredForSelectedOutputFormat;
-(int)privUnselectedOutputFormat;
-(char)privApplyStereoConfiguration;
-(char)privApplySurroundConfiguration;
-(char)applySpeakerConfiguration:(char)arg1 ;
-(char)testIsRunning;
-(char)saveChangesIfNecessary;
-(void)iaSurroundFormatChanged:(id)arg1 ;
-(void)iaContextualHelpButtonPressed:(id)arg1 ;
-(void)iaApplyButtonPressed:(id)arg1 ;
-(void)iaDoneButtonPressed:(id)arg1 ;
-(id)init;
-(void)dealloc;
-(char)validateMenuItem:(id)arg1 ;
-(void)awakeFromNib;
-(id)windowNibName;
-(CAAudioHardwareDevice*)device;
@end

