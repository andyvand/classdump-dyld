/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 10:43:31 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Utilities/Audio MIDI Setup.app/Contents/MacOS/Audio MIDI Setup
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Audio MIDI Setup/Audio MIDI Setup-Structs.h>
#import <AppKit/NSWindowController.h>
#import <Audio MIDI Setup/NSTextFieldDelegate.h>
#import <Audio MIDI Setup/NSTabViewDelegate.h>

@class NSTextField, NSComboBox, NSColorWell, NSButton, IconView, NSView, NSTabView, NSWindow, MIDIChannelMatrixView, NSMatrix, NSTableView, NSStepper, NSString, NSMutableDictionary, MessageView, MIDIDeviceWidget, NSMutableArray, NSTabViewItem;

@interface MIDIPropertyWindowController : NSWindowController <NSTextFieldDelegate, NSTabViewDelegate> {

	NSTextField* uiDeviceNameTitle;
	NSTextField* uiDeviceName;
	NSTextField* uiDeviceMfrTitle;
	NSComboBox* uiDeviceMfr;
	NSTextField* uiDeviceModelTitle;
	NSComboBox* uiDeviceModel;
	NSColorWell* uiWidgetColorWell;
	NSButton* uiDeviceState;
	NSButton* uiWidgetIconButton;
	NSTextField* uiIconBrowserText;
	IconView* uiIconView;
	NSView* uiIconViewContainer;
	NSTextField* uiMorePropertiesTitle;
	NSButton* uiMorePropertiesButton;
	NSTabView* uiMorePropertiesView;
	NSButton* uiContextualHelpButton;
	NSButton* uiApplyButton;
	NSButton* uiRevertButton;
	NSWindow* window;
	MIDIChannelMatrixView* uiReceiveChannelMatrixView;
	NSTextField* uiReceiveChannelMaxString;
	NSMatrix* uiReceiveParameterMatrix;
	MIDIChannelMatrixView* uiTransmitChannelMatrixView;
	NSTextField* uiTransmitChannelMaxString;
	NSMatrix* uiTransmitParameterMatrix;
	NSMatrix* uiFeatureMatrix;
	NSTextField* uiSysExID;
	NSTextField* uiPortHelpText;
	NSTableView* uiPortTableView;
	NSButton* uiAddPortButton;
	NSButton* uiRemovePortButton;
	NSTextField* uiPortNameString;
	NSTextField* uiMIDIInConnectorCount;
	NSStepper* uiMIDIInConnectorStepper;
	NSTextField* uiMIDIOutConnectorCount;
	NSStepper* uiMIDIOutConnectorStepper;
	NSString* mPrefsKey;
	NSMutableDictionary* mPrefsDictionary;
	NSView* mSwappableViewSuperview;
	MessageView* mInterfacePropertyMessage;
	MessageView* mIACPropertyMessage;
	NSView* mInterfacePropertyStorage;
	char mSheetIsExpanded;
	char mIconViewIsDisplaying;
	CGRect mMorePropertiesViewExpandedFrame;
	float mMorePropertiesViewHeight;
	MIDIDeviceWidget* mCurrentWidget;
	int mWidgetUID;
	NSString* mLastMfrSelected;
	NSString* mLastModelSelected;
	NSString* mIconPath;
	MIDIDeviceDBPropertyList* mProps;
	char* mInvisibleDatabasePropertyMask;
	char mShouldUpdateColor;
	NSMutableArray* mPortList;
	char mRemovePrefsOnWindowClose;
	char mWindowShouldCloseAfterUserResponse;
	char mTabViewShouldChangeAfterUserResponse;
	NSTabViewItem* mCachedTabViewItem;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)restoreAndShowAllInspectorsFromPrefs;
+(id)getInspectorForDevice:(id)arg1 ;
+(void)showAllInspectors:(char)arg1 ;
+(void)applyAllChanges;
+(void)bringDirtyWindowsToFront;
+(int)dirtyInspectorCount;
+(void)forceCloseAllInspectors;
+(void)privGetInspectorPrefs;
-(void)privMIDIStateWasThrashed:(id)arg1 ;
-(void)iaContextualHelpButtonPressed:(id)arg1 ;
-(void)iaApplyButtonPressed:(id)arg1 ;
-(void)populatePortsForMIDIDevice;
-(void)privPopulateConnectorInfoForSelectedPort;
-(void)iaAddPortPressed:(id)arg1 ;
-(void)iaRemovePortPressed:(id)arg1 ;
-(void)iaEndpointCountChanged:(id)arg1 ;
-(void)privSetField:(id)arg1 editable:(char)arg2 ;
-(void)privPopulateOfflineProperty;
-(id)privWindowTitleForName:(id)arg1 ;
-(void)privPopulateCheckbox:(id)arg1 withDeviceProperty:(CFStringRef)arg2 ;
-(void)privPopulateSysEx;
-(void)privPopulateCheckbox:(id)arg1 withDatabaseProperty:(MIDIDeviceDBProperty*)arg2 ;
-(void)setWindowEdited:(char)arg1 ;
-(void)privExecuteChangesInNonVisibleProperties;
-(void)privPopulateMfrComboBox;
-(void)enablePropertiesUI:(char)arg1 ;
-(void)privEnablePropertyUIBasedOnDevice;
-(void)swapOutIconViewAndResizeTabs:(char)arg1 ;
-(void)privPopulateDeviceProperties;
-(void)privPopulateModelComboBox;
-(void)privSetDevicePropertiesFromList:(MIDIDeviceDBPropertyList*)arg1 ;
-(void)MIDIDeviceOfflinePropertyChanged:(id)arg1 ;
-(void)matrixViewsTouched:(id)arg1 ;
-(char)executeMIDIPropertyChangesImplementation;
-(void)initializePropertiesTab;
-(void)populateUIForDevice:(id)arg1 ;
-(void)iaIconOverlayButtonPressed:(id)arg1 ;
-(void)iaMorePropertiesButtonPressed:(id)arg1 ;
-(void)iaPropertyWidgetTouched:(id)arg1 ;
-(void)iaDeviceMfrSelected:(id)arg1 ;
-(void)iaDeviceModelSelected:(id)arg1 ;
-(void)iaDeviceOfflineStateChangedManually:(id)arg1 ;
-(void)iaWidgetColorChanged:(id)arg1 ;
-(void)setSelectedWidget:(id)arg1 ;
-(char)windowIsMarkedAsEdited;
-(char)executeMIDIPropertyChanges;
-(void)privNewIconSelected:(id)arg1 ;
-(void)privSetDeviceWidgetImplementation:(id)arg1 ;
-(void)refreshCurrentDeviceWidget;
-(void)privCloseWindow:(id)arg1 returnCode:(int)arg2 contextInfo:(void*)arg3 ;
-(void)iaRevertButtonPressed:(id)arg1 ;
-(void)dealloc;
-(char)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(int)arg3 ;
-(id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(CGRect*)arg3 tableColumn:(id)arg4 row:(int)arg5 mouseLocation:(CGPoint)arg6 ;
-(void)tableViewSelectionDidChange:(id)arg1 ;
-(int)numberOfRowsInTableView:(id)arg1 ;
-(id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(int)arg3 ;
-(void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(int)arg4 ;
-(void)controlTextDidChange:(id)arg1 ;
-(void)awakeFromNib;
-(void)windowWillClose:(id)arg1 ;
-(id)windowNibName;
-(char)windowShouldClose:(id)arg1 ;
-(void)windowDidResize:(id)arg1 ;
-(void)windowDidMove:(id)arg1 ;
-(char)tabView:(id)arg1 shouldSelectTabViewItem:(id)arg2 ;
-(void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2 ;
@end

