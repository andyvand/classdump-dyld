/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:31:20 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Utilities/VoiceOver Utility.app/Contents/OtherBinaries/VoiceOverUtilityCacheBuilder.app/Contents/MacOS/VoiceOver Utility
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <VoiceOver Utility/VoiceOver Utility-Structs.h>
#import <VoiceOver Utility/BraillePrefs.h>
#import <VoiceOver Utility/NSWindowDelegate.h>
#import <VoiceOver Utility/NSSoundDelegate.h>

@class AddRemoveBar, NSTabViewItem, NSTableView, NSTabView, NSWindow, InputTableView, BrailleDisplayTabController, BrailleDisplayBluetoothTabController, BrailleDisplayNoDisplayTabController, SCROBrailleDisplayInputManager, NSNumber, NSMutableArray, NSString, NSTimer, NSSound, NSMutableSet;

@interface BrailleDisplaysPrefs : BraillePrefs <NSWindowDelegate, NSSoundDelegate> {

	AddRemoveBar* _addRemoveDisplaySegmentedControl;
	NSTabViewItem* _tabViewItem;
	NSTableView* _displayTableView;
	NSTabView* _displayInfoTabView;
	NSWindow* _brailleInputSheet;
	InputTableView* _inputTableView;
	AddRemoveBar* _addRemoveCommandSegmentedControl;
	BrailleDisplayTabController* _usbDisplayTabController;
	BrailleDisplayBluetoothTabController* _bluetoothDisplayTabController;
	BrailleDisplayNoDisplayTabController* _noDisplayTabController;
	SCROBrailleDisplayInputManager* _inputManager;
	long long _prefixCommandsCount;
	double _playMemorizeSoundUntil;
	NSNumber* _selectedBrailleDisplayToken;
	NSMutableArray* _displayTableData;
	NSString* _loadingBluetoothDeviceAddressString;
	NSTimer* _bluetoothDeviceLoadFailedTimer;
	NSSound* _clockTickSound;
	NSSound* _chordMemorizedSound;
	NSSound* _chordFailedSound;
	NSMutableSet* _playingSounds;
	char _audioDucked;
	char _isKeyboardHelpEnabled;
	int _inputAccessMode;
	OpaqueIOBluetoothNotificationRefRef _bluetoothHCINotification;
	char _isBluetoothHCIAvailable;
	char _isBluetoothOn;
	char _hasBluetoothDisplay;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)_updateButtonStatusBasedOnCurrentSelection;
-(void)handleUnassignCommandForMenuItem:(id)arg1 ;
-(void)handleReassignFactoryCommandForMenuItem:(id)arg1 ;
-(void)handleAssignCommandForMenuItem:(id)arg1 ;
-(void)resetAlertDidEndSelector:(id)arg1 returnCode:(long long)arg2 contextInfo:(void*)arg3 ;
-(void)resetSpecificPreferences:(id)arg1 ;
-(void)newEntry:(id)arg1 ;
-(void)handleAssignCustomCommand:(id)arg1 ;
-(void)inputTableViewDidBecomeFirstResponder:(id)arg1 ;
-(void)inputTableViewDidResignFirstResponder:(id)arg1 ;
-(void)moveInputUp:(id)arg1 ;
-(void)moveInputDown:(id)arg1 ;
-(void)memorizeKey:(id)arg1 ;
-(char)validateMenuItem:(id)arg1 forTableView:(id)arg2 ;
-(void)_handleBrailleKeypressNotification:(id)arg1 ;
-(void)_handleBrailleKeyWillMemorizeNotification:(id)arg1 ;
-(void)_handleBrailleKeyMemorizeNotification:(id)arg1 ;
-(void)_handleFailedToLoadBluetoothDeviceNotification:(id)arg1 ;
-(void)closeBrailleInputSheet:(id)arg1 ;
-(void)_displayTableViewSelectionDidChange:(id)arg1 ;
-(void)_setBluetoothLoadingStateHidden:(char)arg1 ;
-(void)_handleBrailleKeypress:(id)arg1 ;
-(void)_unprepareForMemorization;
-(void)_playMemorizeSound;
-(id)_clockTickSound;
-(void)_playSound:(id)arg1 ;
-(id)_chordFailedSound;
-(void)_handleBrailleKeyWillMemorize:(id)arg1 ;
-(void)_continueMemorizingKey:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3 ;
-(void)_handleBrailleKeyMemorize:(id)arg1 ;
-(id)_chordMemorizedSound;
-(void)_handleFailedToLoadBluetoothDevice:(id)arg1 ;
-(void)bluetoothPreferencesAlertDidEndSelector:(id)arg1 returnCode:(long long)arg2 contextInfo:(void*)arg3 ;
-(void)removeBluetoothBrailleDisplay:(id)arg1 ;
-(void)removeCommand:(id)arg1 ;
-(void)addBluetoothBrailleDisplayButtonPressed:(id)arg1 ;
-(void)_bluetoothDeviceSelectorSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void*)arg3 ;
-(void)addBluetoothBrailleDisplay:(id)arg1 ;
-(void)showBluetoothPreferencesSheet:(id)arg1 ;
-(void)_bluetoothDeviceLoadFailedTimerFireMethod:(id)arg1 ;
-(void)_bluetoothDeviceRemovalSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void*)arg3 ;
-(void)_duckAudio:(char)arg1 ;
-(void)_delayedDisableDucking;
-(void)_brailleInputSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void*)arg3 ;
-(void)_setIsBluetoothHCIAvailable:(char)arg1 ;
-(char)_isBluetoothHCIAvailable;
-(void)_setIsBluetoothOn:(char)arg1 ;
-(char)_isBluetoothOn;
-(char)tableViewCaptureDeleteKeyPress:(id)arg1 ;
-(void)pressAddRemoveCommandSegmentedControl:(id)arg1 ;
-(void)pressAddRemoveDisplaySegmentedControl:(id)arg1 ;
-(id)_displayTableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3 ;
-(void)setPrimaryDisplayClicked:(id)arg1 ;
-(void)showBrailleInputSheet:(id)arg1 ;
-(char)_inputTableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3 ;
-(void)_inputTableViewSelectionDidChange:(id)arg1 ;
-(id)_inputTableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3 ;
-(void)_inputTableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4 ;
-(char)_inputTableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4 ;
-(unsigned long long)_inputTableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4 ;
-(char)_inputTableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3 ;
-(void)removeAlertDidEndSelector:(id)arg1 returnCode:(long long)arg2 contextInfo:(void*)arg3 ;
-(void)_windowDidResignKey:(id)arg1 ;
-(void)addCommand:(id)arg1 ;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(id)helpAnchor;
-(char)validateMenuItem:(id)arg1 ;
-(char)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3 ;
-(char)tableView:(id)arg1 shouldSelectRow:(long long)arg2 ;
-(void)tableViewSelectionDidChange:(id)arg1 ;
-(long long)numberOfRowsInTableView:(id)arg1 ;
-(id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3 ;
-(void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4 ;
-(char)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3 ;
-(unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4 ;
-(char)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4 ;
-(void)awakeFromNib;
-(void)updateUI;
-(void)sound:(id)arg1 didFinishPlaying:(char)arg2 ;
-(void)_windowDidBecomeKey:(id)arg1 ;
@end

