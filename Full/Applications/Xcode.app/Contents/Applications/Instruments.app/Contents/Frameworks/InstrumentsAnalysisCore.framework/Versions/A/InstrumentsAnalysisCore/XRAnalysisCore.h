/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:15:49 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Xcode.app/Contents/Applications/Instruments.app/Contents/Frameworks/InstrumentsAnalysisCore.framework/Versions/A/InstrumentsAnalysisCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <InstrumentsAnalysisCore/InstrumentsAnalysisCore-Structs.h>
#import <InstrumentsAnalysisCore/XRAnalysisCoreReadOnly.h>
#import <InstrumentsAnalysisCore/XRAnalysisCoreRegistry.h>

@class XRAnalysisCorePathManager, XRAnalysisCoreTableManager, NSString, XRIntKeyedDictionary, NSMutableDictionary, NSMutableArray, XRAnalysisCoreModelerBindingSolution, NSMutableSet, XRAnalysisCoreCLIPSModelerFactory, NSArray, _XRWeakProxy;

@interface XRAnalysisCore : NSObject <XRAnalysisCoreReadOnly, XRAnalysisCoreRegistry> {

	XRAnalysisCorePathManager* _pathMan;
	XRAnalysisCoreTableManager* _tableMan;
	NSString* _mySubpath;
	XRBinderEngine* _binderEngine;
	XRIntKeyedDictionary* _readOnlySpecsByID;
	XRIntKeyedDictionary* _appendOnlyTablesByID;
	NSMutableDictionary* _knownSchemasByName;
	NSMutableArray* _binderInvocations;
	XRAnalysisCoreModelerBindingSolution* _modelerBindingSolution;
	NSMutableSet* _inputTableIDs;
	XRAnalysisCoreCLIPSModelerFactory* _clipsModelerFactory;
	NSMutableArray* _modelerFactories;
	NSArray* _modelerTablePairs;
	_XRWeakProxy* _weakProxyToMe;
	unsigned long long _lastEventHorizon;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
-(void)_importSchemasXMLFromURL:(id)arg1 ;
-(void)_prepareToReceiveBindingSolution;
-(id)_makeMutableDictionary;
-(void)_dictionary:(id)arg1 setValue:(id)arg2 forKey:(id)arg3 ;
-(id)_createIndexedStorageWithSchema:(id)arg1 attributes:(id)arg2 ;
-(unsigned)_reserveTableID;
-(id)_bindStore:(id)arg1 table:(id)arg2 side:(id)arg3 ;
-(void)_addModelerInstanceForClass:(id)arg1 bindings:(id)arg2 ;
-(void)_reportUnboundAppendTableID:(id)arg1 ;
-(id)tableWithID:(unsigned)arg1 ;
-(void)query:(id)arg1 tableID:(unsigned)arg2 handler:(id)arg3 ;
-(id)coreSubpath;
-(void)_scanURLForCoreExtensions:(id)arg1 ;
-(id)initWithPathManager:(id)arg1 dataSubpath:(id)arg2 ;
-(void)moveToSubpath:(id)arg1 ;
-(void)enumerateKnownSchemas:(/*^block*/id)arg1 ;
-(id)engineeringTypeMnemonicForTypeID:(int)arg1 ;
-(id)rulesEngineModuleNames:(int)arg1 ;
-(id)rulesEngine:(int)arg1 factsForModule:(id)arg2 ;
-(id)rulesEngine:(int)arg1 rulesForModule:(id)arg2 ;
-(id)rulesEngine:(int)arg1 swapConsoleBuffer:(id)arg2 ;
-(void)rulesEngine:(int)arg1 executeCommand:(id)arg2 moduleName:(id)arg3 ;
-(void)clipsDidClear:(XRCLIPS*)arg1 ;
-(void)clipsDidReset:(XRCLIPS*)arg1 ;
-(unsigned)addRequiredTableWithSpec:(id)arg1 ;
-(void)removeRequiredTableWithID:(unsigned)arg1 ;
-(void)solveBindingProblem;
-(void)realizeBindingSolution;
-(void)engage;
-(unsigned)_createAppendOnlyTableForTableID:(id)arg1 ;
-(void)enumerateTables:(/*^block*/id)arg1 ;
-(void)populateTableIDs:(id)arg1 block:(/*^block*/id)arg2 ;
-(void)moveEventHorizon:(unsigned long long)arg1 ;
-(id)selectRowsWithQuery:(id)arg1 tableID:(unsigned)arg2 ;
-(void)readRowsInArray:(id)arg1 startingAt:(unsigned long long)arg2 block:(/*^block*/id)arg3 ;
-(id)debugStringForTable:(id)arg1 ;
-(void)debugEnumerateInternalTables:(/*^block*/id)arg1 ;
-(void)debugEnumerateModelerSolution:(/*^block*/id)arg1 ;
-(id)schemaWithName:(id)arg1 ;
@end

