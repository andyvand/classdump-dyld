/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:31:18 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/FaceTime.app/Contents/MacOS/FaceTime
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <FaceTime/FaceTime-Structs.h>
#import <AVCore/AVController.h>
#import <FaceTime/BlackWindowDelegate.h>
#import <FaceTime/NSAnimationDelegate.h>
#import <FaceTime/PowerSaverManagerDelegate.h>
#import <FaceTime/NSUserNotificationCenterDelegate.h>
#import <FaceTime/SODarkWakeHelperDelegate.h>
#import <FaceTime/InviteViewControllerDelegate.h>

@class IMAVChat, NSDate, IMPerson, BlackWindow, SideViewController, NSLayoutConstraint, NSView, NSVisualEffectView, VideoLayer, CALayer, NSMutableDictionary, NSArray, NSTimer, SODarkWakeHelper, NSString, NSViewAnimation, InviteViewController, VideoHeaderViewController, RoundButton, NSMutableArray, NSTextField, IMHandle, PowerSaverManager, NSImage, FaceDetector;

@interface VideoChatController : AVController <BlackWindowDelegate, NSAnimationDelegate, PowerSaverManagerDelegate, NSUserNotificationCenterDelegate, SODarkWakeHelperDelegate, InviteViewControllerDelegate> {

	IMAVChat* _avChat;
	NSDate* _callStartDate;
	NSDate* _callEndDate;
	IMPerson* _remotePerson;
	BlackWindow* _window;
	char _windowIsNewInvite;
	char _windowIsAnimatingFromNewInvite;
	char _windowIsAnimatingFromEndChat;
	char _windowIsClosing;
	CGRect _nativeFrame;
	CGRect _customFrame;
	char _frameHasChangedSinceZoom;
	char _hasShownWindow;
	char _shouldShowContactList;
	char _contactListIsVisible;
	char _showingAlert;
	CGSize _windowAspectRatio;
	SideViewController* _sideViewController;
	NSLayoutConstraint* _sideViewTrailingConstraint;
	NSView* _remoteVideoView;
	NSVisualEffectView* _remotePauseView;
	VideoLayer* _remotePauseTextLayer;
	NSView* _localVideoView;
	NSVisualEffectView* _fullPauseView;
	VideoLayer* _fullPauseTextLayer;
	NSView* _overlayView;
	CALayer* _rootLayer;
	CALayer* _sidePanelSnapshotLayer;
	NSMutableDictionary* _vcPartyIDToLayerPairMap;
	VideoLayer* _localVideoLayer;
	VideoLayer* _localTransitionLayer;
	VideoLayer* _remoteTransitionLayer;
	unsigned _currentPIPCorner;
	NSView* _sidePanelContainer;
	NSArray* _sidePanelAnimationViews;
	VideoLayer* _localUnderContactsVideoLayer;
	NSView* _localUnderView;
	char _isAnimatingLocalAspectChange;
	char _localAspectIsChangingDueToRemoteRotation;
	char _acceptedInvite;
	NSTimer* _noFramesTimer;
	SODarkWakeHelper* _darkWakeHelper;
	char _receivedFirstFrame;
	char _receivedFirstOrientation;
	char _receivedFirstRemoteFrame;
	char _hasNoVideo;
	char _isFullscreen;
	/*^block*/id _fullScreenCompletionBlock;
	char _isAnimatingToFullScreen;
	char _isAnimatingFromFullScreen;
	char _isBlockingPauseStateUpdateDuringFullscreenTransition;
	char _windowShouldUpdateFullscreenModeAfterMoved;
	char _conferenceEndedDuringFullScreen;
	char _conferenceEndedWhileEnteringFullScreen;
	char _conferenceEndedWhileExitingFullScreen;
	char _conferenceEndedDuringRotation;
	char _conferenceEndedDuringFadeRotation;
	NSString* _failureTitle;
	NSString* _failureString;
	char _failureHideCallback;
	NSViewAnimation* _contactListAnimation;
	unsigned long long _contactListAnimationPriorTopBannerARMask;
	unsigned long long _contactListAnimationPriorBottomBannerARMask;
	NSTimer* _endButtonFlashTimer;
	InviteViewController* _inviteViewController;
	NSLayoutConstraint* _inviteViewHeightConstraint;
	VideoHeaderViewController* _headerViewController;
	RoundButton* _declineButton;
	RoundButton* _acceptButton;
	RoundButton* _endButton;
	RoundButton* _muteButton;
	RoundButton* _callBackButton;
	RoundButton* _cancelButton;
	RoundButton* _callPromptCallButton;
	RoundButton* _messageButton;
	RoundButton* _fullscreenButton;
	NSView* _leftmostControl;
	NSView* _rightmostControl;
	NSArray* _allButtons;
	NSMutableArray* _buttonConstraints;
	NSTextField* _endLabel;
	NSTextField* _muteLabel;
	NSTextField* _declineLabel;
	NSTextField* _acceptLabel;
	NSTextField* _callBackLabel;
	NSTextField* _cancelLabel;
	NSTextField* _callPromptCallLabel;
	NSTextField* _messageLabel;
	NSTextField* _fullscreenLabel;
	NSArray* _allLabels;
	IMHandle* _failureHandle;
	NSMutableArray* _pendingInvites;
	PowerSaverManager* _powerSaverManager;
	IMAVChat* _callWaitingChat;
	char _answeringCallWaitingChat;
	CGRect _priorToFullscreenWindowFrame;
	CGRect _priorToFullscreenScreenFrame;
	CALayer* _backgroundFadeLayer;
	char _isAnimatingRotationViaWindow;
	char _isAnimatingRemoteRotation;
	char _isAnimatingAspectChange;
	char _isAnimatingAspectChangeViaRotation;
	CGRect _rotationDestinationFrameForRootLayer;
	CGPoint _rotationPositioningOffset;
	CGRect _priorToRotationWindowFrame;
	unsigned _queuedRotationOrientation;
	char _hasQueuedRotationOrientation;
	char _runQueuedRotationOrientationAfterPIPAspectChange;
	long long _fadeRotationViaWindowCount;
	CALayer* _cinematicShadowLayer;
	NSImage* _cinematicShadowImageActive;
	NSImage* _cinematicShadowImageInactive;
	char _isAnimatingFlip;
	char _skipRotateOnFlipEnd;
	char _flipInstantlyAfterFlipping;
	char _isAnimatingToPIP;
	char _localIsPIP;
	char _localIsBeingDragged;
	CGPoint _localDragMouseOffset;
	char _pipAspectSelectedDuringConference;
	char _pipForcedPortrait;
	char _PIPShouldIgnoreTitleBarChanges;
	NSMutableArray* _layersToRemoveAfterChatEnds;
	NSMutableArray* _uniqueIDsOfRequestedImageData;
	NSView* _controlsView;
	NSImage* _enterFullscreenIcon;
	NSImage* _exitFullscreenIcon;
	NSImage* _pauseIcon;
	NSImage* _muteIcon;
	char _gestureMagnify;
	double _gestureMagnifySum;
	char _gestureRotate;
	double _gestureRotateSum;
	NSString* _previousCameraID;
	char _hadPreviousCamera;
	int _thermalToken;
	FaceDetector* _faceDetector;
	char _suppressNextPowerSaverDisplay;
	char _skipStoppingPreviewOnDealloc;

}

@property (nonatomic,readonly) char contactListIsVisible;                     //@synthesize contactListIsVisible=_contactListIsVisible - In the implementation block
@property (assign,nonatomic) char suppressNextPowerSaverDisplay;              //@synthesize suppressNextPowerSaverDisplay=_suppressNextPowerSaverDisplay - In the implementation block
@property (assign,nonatomic) char skipStoppingPreviewOnDealloc;               //@synthesize skipStoppingPreviewOnDealloc=_skipStoppingPreviewOnDealloc - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)setupLocalAspectRatiosForIMAVChat:(id)arg1 screen:(id)arg2 ;
+(char)_hasValidCamera;
+(char)_isCameraValid:(id)arg1 ;
-(char)receiveInvitationFrom:(id)arg1 ;
-(void)inviteViewControllerAccpted:(id)arg1 ;
-(void)inviteViewControllerDeclined:(id)arg1 ;
-(void)inviteViewControllerRequestedMessageUI:(id)arg1 ;
-(void)inviteViewController:(id)arg1 remindMeAfter:(double)arg2 ;
-(void)inviteViewControllerMessageCanceled:(id)arg1 ;
-(void)inviteViewController:(id)arg1 sendMessage:(id)arg2 ;
-(void)showWindowAsNotification;
-(void)dismissFailureOrCallPromptUI;
-(CGRect)window:(id)arg1 willSetFrame:(CGRect)arg2 ;
-(void)window:(id)arg1 isTitlebarVisibleDidChange:(char)arg2 ;
-(void)window:(id)arg1 isHidingViewsVisibleDidChange:(char)arg2 ;
-(void)setCallWaitingCall:(id)arg1 ;
-(char)hasFailureUI;
-(char)hasCallPromptUI;
-(void)_createWindow;
-(void)_createInviteWindow;
-(void)_showWindow;
-(void)showCallPrompt:(id)arg1 outgoingCall:(id)arg2 ;
-(void)putCurrentCallOnHoldAndAddCall:(id)arg1 ;
-(void)_updateMuteButton;
-(void)inviteViewControllerMouseEntered:(id)arg1 ;
-(void)inviteViewControllerMouseExited:(id)arg1 ;
-(void)notifyHasSetupAV;
-(char)videoIsInitialized;
-(char)hasActiveAVChat;
-(char)isAnimatingToFromFullScreen;
-(char)userIsDraggingWindow;
-(void)powerSaverStateDidChange;
-(void)setSkipStoppingPreviewOnDealloc:(char)arg1 ;
-(void)forceReceivedFirstFrame;
-(char)contactListIsVisible;
-(void)setSuppressNextPowerSaverDisplay:(char)arg1 ;
-(void)remoteiMessageAddressChanged:(id)arg1 ;
-(void)_addPendingInvite:(id)arg1 ;
-(char)hasCallObject;
-(void)_attachToAVChat:(id)arg1 ;
-(void)setRemotePerson:(id)arg1 ;
-(void)_checkAutoAccept;
-(id)_newCinematicShadowImageWithAlpha:(double)arg1 blurRadius:(double)arg2 ;
-(void)endChat:(id)arg1 ;
-(void)toggleMute:(id)arg1 ;
-(void)retryFailedCall:(id)arg1 ;
-(void)acceptCallPrompt:(id)arg1 ;
-(void)_replyWithMessage:(id)arg1 ;
-(void)vccToggleFullScreen:(id)arg1 ;
-(void)avChatStateChanged:(id)arg1 ;
-(void)participantReceivedFirstFrame:(id)arg1 ;
-(void)participantCameraDidChange:(id)arg1 ;
-(void)participantStateChanged:(id)arg1 ;
-(void)participantMediaPropertiesChanged:(id)arg1 ;
-(void)participantScreenPropertiesChanged:(id)arg1 ;
-(void)participantPauseChanged:(id)arg1 ;
-(void)_cameraChanged:(id)arg1 ;
-(void)_pictureChanged:(id)arg1 ;
-(void)_updatePauseState;
-(void)_windowFinishedDragging:(id)arg1 ;
-(void)_avChatFirstFrameNotification:(id)arg1 ;
-(void)_avChatParticipantVideoQualityChanged:(id)arg1 ;
-(void)_avChatParticipantMediaStalledChanged:(id)arg1 ;
-(void)_screenChangedParameters:(id)arg1 ;
-(void)_avControllerUpdated:(id)arg1 ;
-(void)_numberOfFacesChanged:(id)arg1 ;
-(void)_endChatNotification:(id)arg1 ;
-(void)_sharedSetup;
-(void)_endAndCleanupChat;
-(void)_tearDownLocalUnder;
-(void)_declineAllPendingInvitesExcept:(id)arg1 ;
-(void)_clearEndButtonFlashTimer;
-(void)_clearContactListAnimation;
-(void)_clearNoFramesTimer;
-(char)skipStoppingPreviewOnDealloc;
-(void)_createWindowWithSize:(CGSize)arg1 minSize:(CGSize)arg2 ;
-(void)setWindowAspectRatio:(CGSize)arg1 forOrientation:(unsigned)arg2 ;
-(void)_restoreWindowFrame;
-(void)_setLocalAspectRatiosOnAVChat;
-(void)_startCamera;
-(CGRect)_frameForLayer:(id)arg1 forRootFrame:(CGRect)arg2 ;
-(void)_rotateLayer:(id)arg1 toOrientation:(unsigned)arg2 animated:(char)arg3 ;
-(void)togglePortraitLandscape:(id)arg1 ;
-(unsigned)_windowOrientation;
-(void)_removePendingInvite:(id)arg1 ;
-(void)_createRemoteLayersIfNecessary:(id)arg1 ;
-(char)_hasSidePanels;
-(CGRect)_morphRectFrom:(CGRect)arg1 toRectWithAspectRatio:(CGSize)arg2 ;
-(void)_removeAllIncomingCallNotifications;
-(void)createLocalLayerIfNecessary;
-(void)_setFullScreenModeEnabled:(char)arg1 ;
-(void)_animateContactList:(char)arg1 ;
-(void)_updateLocalOverlays:(char)arg1 ;
-(id)_remoteShowingLayer;
-(void)_addPauseOverlay:(char)arg1 animate:(char)arg2 ;
-(void)_fixBadgeZRotationForLayer:(id)arg1 ;
-(void)_pauseVideoForThermalWarning;
-(void)_pauseVideoForPowerSaver:(id)arg1 ;
-(char)_isMute;
-(void)_makeWindowAlert:(char)arg1 withAnimation:(int)arg2 ;
-(void)_toggleFullScreenWithCompletionBlock:(/*^block*/id)arg1 ;
-(CGRect)_morphRectFrom:(CGRect)arg1 toRectWithAspectRatio:(CGSize)arg2 withMinimumSize:(CGSize)arg3 ;
-(unsigned)_closestPIPCorner;
-(void)_pushPIPToCurrentCorner;
-(double)_PIPBorderSize;
-(void)_updateAspectTogglerWithMousePositionInRoot:(CGPoint)arg1 ;
-(void)_setLocalIsPIP:(char)arg1 ;
-(CGRect)_pushFrameToNC:(CGRect)arg1 ;
-(void)_setVideoLayerFrames;
-(void)_checkQueuedAnimations;
-(void)_updateWindowSizeConstraintsForOrientation:(unsigned)arg1 ;
-(CGRect)_pushRect:(CGRect)arg1 toCorner:(unsigned)arg2 inRect:(CGRect)arg3 horizontalPadding:(double)arg4 verticalPadding:(double)arg5 ;
-(char)_shouldRaisePIPForBottomControls;
-(double)_radiansForOrientation:(unsigned)arg1 ;
-(CGRect)_fitRect:(CGRect)arg1 inRect:(CGRect)arg2 ;
-(void)_makeWindowNormalWithFrame:(CGRect)arg1 ;
-(void)_clearVideoLayerAnimations;
-(char)remoteOrientationChanged:(unsigned)arg1 animate:(char)arg2 contentsRect:(id)arg3 ;
-(void)_positionPIPAndShowEndedUI;
-(double)_cinematicShadowSize;
-(void)_setupCinematicShadowImages;
-(double)_cinematicShadowVerticalOffset;
-(void)_positionLocalLayersWithOffset:(CGPoint)arg1 ;
-(void)_rotateLayer:(id)arg1 toOrientation:(unsigned)arg2 animated:(char)arg3 contentsRect:(id)arg4 completionBlock:(/*^block*/id)arg5 ;
-(void)_prepareCinematicFadeRotationOfLayer:(id)arg1 ;
-(CGRect)_validateWindowFrame:(CGRect)arg1 withScreenFrame:(CGRect)arg2 ;
-(void)_setupShadowLayerWithBounds:(CGRect)arg1 position:(CGPoint)arg2 ;
-(void)_mainThreadOrientationChanged;
-(void)_checkFlipInstantlyAfterFlipping;
-(CGRect)_fitVideoAndControlsToFullscreenWindow;
-(void)_makeWindowClearFullScreenAndGetOriginalRect:(CGRect*)arg1 newContentRect:(CGRect*)arg2 ;
-(void)_setupLocalUnderPositionedBelow:(id)arg1 ;
-(void)_animateContactListWithStartFrame:(CGRect)arg1 endFrame:(CGRect)arg2 ;
-(void)_selectBestMicrophoneForCamera:(id)arg1 ;
-(void)_noFramesTimeout:(id)arg1 ;
-(void)handleSelected:(id)arg1 person:(id)arg2 ;
-(void)handleSelected:(id)arg1 ;
-(void)cancelFailedCall:(id)arg1 ;
-(void)cancelCallPrompt:(id)arg1 ;
-(void)_cleanupCallWaiting;
-(void)_makeWindowAlert:(char)arg1 ;
-(char)_isAnimationInProgress;
-(char)_canMute;
-(void)togglePause:(id)arg1 ;
-(char)_canPause;
-(void)toggleLocalVideo:(id)arg1 ;
-(void)_cleanupFromAspectChange;
-(void)_prepareForAspectChangeTo:(CGSize)arg1 withZRot:(double)arg2 ;
-(void)_setLocalAspectRatio:(CGSize)arg1 ;
-(void)_setLocalWide;
-(void)_setLocalPortrait;
-(void)_endContactListAnimation;
-(void)_setPaused:(char)arg1 animate:(char)arg2 ;
-(void)_animateLocalVideo:(char)arg1 animate:(char)arg2 ;
-(void)_fadePip:(char)arg1 animate:(char)arg2 ;
-(CGSize)_adjustHeightToKeepAspectRatio:(CGSize)arg1 ;
-(void)_saveWindowFrame;
-(CGSize)_adjustWidthToKeepAspectRatio:(CGSize)arg1 ;
-(void)handleSelected:(id)arg1 person:(id)arg2 isAudio:(char)arg3 ;
-(char)suppressNextPowerSaverDisplay;
-(void)removePowerSaverIfNecessary;
-(void)_updateFailureTitle;
-(void)_cleanupRemoteLayers;
-(void)_updateUIForNewChatState;
-(void)_flashEndButton:(id)arg1 ;
-(id)_remoteHiddenLayer;
-(CGRect)_contentsRectForLayer:(id)arg1 withAspectRatio:(CGSize)arg2 ;
-(void)_prepareCinematicRotationOfLayer:(id)arg1 toOrientation:(unsigned)arg2 ;
-(void)_flipLayer:(id)arg1 reverseSide:(id)arg2 ;
-(void)_setSystemMute:(char)arg1 ;
-(void)_performConferenceStartPIPAnimation;
-(void)_updateUIForNewChatStateAfterHint;
-(void)remoteCameraChanged:(unsigned)arg1 ;
-(char)remoteAspectChanged:(CGSize)arg1 ;
-(id)_remoteTransitionLayerFromLayer:(id)arg1 ;
-(void)_fadeLayer:(id)arg1 toLayer:(id)arg2 toContentsRect:(id)arg3 ;
-(void)setPIPPortraitAspectRatio:(CGSize)arg1 ;
-(void)setPIPLandscapeAspectRatio:(CGSize)arg1 ;
-(void)doCancel;
-(void)prepareForAccountDeletion;
-(CGSize)getFrameSize:(char)arg1 withContentsRect:(char)arg2 ;
-(void)ignoreCall:(id)arg1 ;
-(void)endCallAndAnswer:(id)arg1 ;
-(void)animateAspectChangedFrom:(CGSize)arg1 toAspect:(CGSize)arg2 ;
-(void)windowWillOrderOnScreen:(id)arg1 ;
-(char)userNotificationCenter:(id)arg1 shouldPresentNotification:(id)arg2 ;
-(id)call;
-(void)acceptInvitation:(id)arg1 ;
-(void)_setPaused:(char)arg1 ;
-(void)setCall:(id)arg1 ;
-(void)lockScreenWillBeDisplayed;
-(void)screenShieldWasRaised;
-(void)screenShieldWasLowered;
-(void)externalDisplayAttached;
-(void)clamshellOpened;
-(id)init;
-(void)dealloc;
-(void)setHidden:(char)arg1 ;
-(id)window;
-(void)windowDidBecomeKey:(id)arg1 ;
-(void)animationDidEnd:(id)arg1 ;
-(char)validateMenuItem:(id)arg1 ;
-(void)close;
-(void)mouseDown:(id)arg1 ;
-(void)mouseExited:(id)arg1 ;
-(void)mouseDragged:(id)arg1 ;
-(void)cancel:(id)arg1 ;
-(CGSize)windowWillResize:(id)arg1 toSize:(CGSize)arg2 ;
-(void)mouseUp:(id)arg1 ;
-(void)magnifyWithEvent:(id)arg1 ;
-(void)windowWillClose:(id)arg1 ;
-(void)mouseMoved:(id)arg1 ;
-(char)windowShouldZoom:(id)arg1 toFrame:(CGRect)arg2 ;
-(id)customWindowsToEnterFullScreenForWindow:(id)arg1 ;
-(void)window:(id)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2 ;
-(void)windowDidFailToEnterFullScreen:(id)arg1 ;
-(id)customWindowsToExitFullScreenForWindow:(id)arg1 ;
-(void)window:(id)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2 ;
-(void)windowDidFailToExitFullScreen:(id)arg1 ;
-(void)windowDidResize:(id)arg1 ;
-(void)windowDidMove:(id)arg1 ;
-(void)windowDidResignKey:(id)arg1 ;
-(void)windowWillMiniaturize:(id)arg1 ;
-(void)windowDidMiniaturize:(id)arg1 ;
-(void)windowDidDeminiaturize:(id)arg1 ;
-(void)windowDidChangeScreen:(id)arg1 ;
-(void)windowDidEndLiveResize:(id)arg1 ;
-(void)updateUI;
-(void)rotateWithEvent:(id)arg1 ;
-(void)endGestureWithEvent:(id)arg1 ;
-(void)_windowDidOrderOnScreen:(id)arg1 ;
-(void)showWindow;
-(id)initWithAVChat:(id)arg1 ;
-(void)_updateUI;
@end

