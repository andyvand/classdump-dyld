/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:17:11 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/FaceTime.app/Contents/MacOS/FaceTime
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <FaceTime/FaceTime-Structs.h>
#import <AppKit/NSFrameView.h>

@class BlackTitlebarView, NSColor;

@interface BlackFrameView : NSFrameView {

	BlackTitlebarView* _titlebarView;
	NSColor* _backgroundColor;
	CGImageRef _backBufferCornerImage;
	CGRect _backBufferDirtyRects[2];
	unsigned long long _backBufferDirtyRectsCount;
	long long _resizeFlags;
	long long _overrideShadowType;
	unsigned _movingDisabled : 1;
	unsigned _resizingDisabled : 1;
	unsigned _automaticallyManagesTitlebarFrame : 1;
	unsigned _hasRoundedCorners : 1;
	unsigned _entireBackBufferIsDirty : 1;
	unsigned _useWindowShapeForRoundedCorners : 1;
	unsigned _alphaShapeNeedsUpdate : 1;
	unsigned _hasTexturedBackground : 1;
	unsigned _shouldOverrideShadowType : 1;

}

@property (assign,getter=isMovingDisabled,nonatomic) char movingDisabled; 
@property (assign,getter=isResizingDisabled,nonatomic) char resizingDisabled; 
@property (assign,nonatomic) char automaticallyManagesTitlebarFrame; 
@property (nonatomic,copy) NSColor * backgroundColor; 
@property (assign,nonatomic) char hasRoundedCorners; 
@property (assign,nonatomic) char hasTexturedBackground; 
+(CGRect)contentRectForFrameRect:(CGRect)arg1 styleMask:(unsigned long long)arg2 ;
+(unsigned long long)_validateStyleMask:(unsigned long long)arg1 ;
+(CGRect)frameRectForContentRect:(CGRect)arg1 styleMask:(unsigned long long)arg2 ;
+(CGSize)minFrameSizeForMinContentSize:(CGSize)arg1 styleMask:(unsigned long long)arg2 ;
+(CGSize)minContentSizeForMinFrameSize:(CGSize)arg1 styleMask:(unsigned long long)arg2 ;
-(void)setHasRoundedCorners:(char)arg1 ;
-(CGRect)_defaultTitlebarViewFrame;
-(char)isWindowOpaque;
-(double)cornerRadiusInPixels;
-(void)updateBackgroundLayerProperties;
-(char)automaticallyManagesTitlebarFrame;
-(char)hasTexturedBackground;
-(void)createWindowShape:(CGSRegionObject*)arg1 opaqueShape:(CGSRegionObject*)arg2 alphaShape:(CGSRegionObject*)arg3 eventShape:(CGSRegionObject*)arg4 ;
-(char)needsToDrawRectInBackBuffer:(CGRect)arg1 ;
-(CGSRegionObjectRef)_resizeRegion;
-(char)isMovingDisabled;
-(char)isTitlebarVisible;
-(char)isResizingDisabled;
-(char)shouldResizeWithEvent:(id)arg1 ;
-(void)setHasTexturedBackground:(char)arg1 ;
-(void)overrideShadow:(char)arg1 withType:(long long)arg2 ;
-(void)addSubviewBelowTitlebar:(id)arg1 ;
-(void)setMovingDisabled:(char)arg1 ;
-(void)setResizingDisabled:(char)arg1 ;
-(void)setAutomaticallyManagesTitlebarFrame:(char)arg1 ;
-(double)contentBorderDistanceFromTop;
-(void)_drawBackground;
-(char)hasRoundedCorners;
-(void)dealloc;
-(void)setBackgroundColor:(NSColor *)arg1 ;
-(void)drawRect:(CGRect)arg1 ;
-(void)setTitle:(id)arg1 ;
-(void)_setFrameNeedsDisplay:(char)arg1 ;
-(char)shouldBeTreatedAsInkEvent:(id)arg1 ;
-(double)cornerRadius;
-(void)setFrameSize:(CGSize)arg1 ;
-(char)isOpaque;
-(char)preservesContentDuringLiveResize;
-(NSColor *)backgroundColor;
-(void)displayIfNeeded;
-(char)acceptsFirstMouse:(id)arg1 ;
-(void)mouseDown:(id)arg1 ;
-(void)setStyleMask:(unsigned long long)arg1 ;
-(id)initWithFrame:(CGRect)arg1 styleMask:(unsigned long long)arg2 owner:(id)arg3 ;
-(void)_updateButtonState;
-(CGRect)dragRectForFrameRect:(CGRect)arg1 ;
-(void)_resetDragMargins;
-(id)contentFill;
-(double)contentAlpha;
-(char)_drawsNothing;
-(void)mouseUp:(id)arg1 ;
-(void)setDocumentEdited:(char)arg1 ;
-(id)_displayName;
-(void)resizeWithEvent:(id)arg1 ;
-(void)shapeWindow;
-(long long)_shadowType;
-(void)windowDidChangeBackingProperties:(id)arg1 ;
-(void)tileAndSetWindowShape:(char)arg1 ;
-(CGSRegionObjectRef)_regionForOpaqueDescendants:(CGRect)arg1 forMove:(char)arg2 ;
-(CGRect)_maxTitlebarTitleRect;
-(void)viewDidEndLiveResize;
-(void)resizeSubviewsWithOldSize:(CGSize)arg1 ;
-(id)fileButton;
-(unsigned)_CAViewFlags;
-(void)setRepresentedURL:(id)arg1 ;
-(char)_isResizable;
-(id)titlebarView;
-(CGSRegionObjectRef)_createWindowOpaqueShape;
-(char)_shouldBeTreatedAsInkEventInInactiveWindow:(id)arg1 ;
-(long long)resizeFlags;
@end

