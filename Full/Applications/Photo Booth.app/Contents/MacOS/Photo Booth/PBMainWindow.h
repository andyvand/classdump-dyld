/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:45:07 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Photo Booth.app/Contents/MacOS/Photo Booth
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Photo Booth/Photo Booth-Structs.h>
#import <AppKit/NSWindow.h>
#import <Photo Booth/NSWindowDelegate.h>
#import <Photo Booth/NSSharingServiceDelegate.h>
#import <Photo Booth/NSSharingServicePickerDelegate.h>

@class PBView, PBTabViewWithGradientBackground, PBCountdownView, PBTextureView, NSVisualEffectView, PBTrayView, PBEmbossedTextField, PBMetalSwitcher, PBShutterButton, NSButton, PBRecordingTimerView, NSLayoutConstraint, QLAnimationWindowEffect, PBFullscreenBorderView, PBTransitionWindow, PBProfileController, NSString;

@interface PBMainWindow : NSWindow <NSWindowDelegate, NSSharingServiceDelegate, NSSharingServicePickerDelegate> {

	PBView* videoView;
	PBTabViewWithGradientBackground* tabView;
	PBCountdownView* countDownView;
	PBTextureView* textureView;
	NSVisualEffectView* backgroundView;
	PBTrayView* trayView;
	PBEmbossedTextField* statusView;
	PBMetalSwitcher* recordingSwitcher;
	PBMetalSwitcher* recordingSwitcherInStillTab;
	PBShutterButton* recordShutterButton;
	PBShutterButton* stillImageShutterButton;
	NSButton* fullscreenEffectsButton;
	NSButton* fullscreenShareButton;
	NSButton* stopRecordingButton;
	PBRecordingTimerView* recordingTimerView;
	NSLayoutConstraint* trayHeight;
	NSButton* shareButton;
	CGRect _windowFrame;
	CGRect _windowVideoViewFrame;
	CGRect _windowTrayBoxFrame;
	CGRect _windowTabViewFrame;
	char _isFullScreen;
	char _usesTextureUIStyle;
	char _usesFullscreenLayout;
	char _isAnimating;
	QLAnimationWindowEffect* _effect;
	PBFullscreenBorderView* _videoFullscreenBorderView;
	PBTransitionWindow* _transitionWindow;
	PBProfileController* _profileController;
	double _defaultTrayHeight;
	NSLayoutConstraint* _maxHeightConstraint;

}

@property (readonly) char isFullScreen; 
@property (nonatomic,readonly) char usesTextureUIStyle;                      //@synthesize usesTextureUIStyle=_usesTextureUIStyle - In the implementation block
@property (nonatomic,readonly) char isAnimating;                             //@synthesize isAnimating=_isAnimating - In the implementation block
@property (nonatomic,__weak,readonly) PBView * videoView; 
@property (nonatomic,readonly) double emptyHorizontalEdgeWidth; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)photoBoothWindowScreen;
+(double)fullScreenTransitionDuration;
+(double)maxHeight;
+(double)menuBarHeight;
-(char)usesTextureUIStyle;
-(void)showBackground:(char)arg1 ;
-(PBView *)videoView;
-(id)textureView;
-(CGImageRef)createSnapshotWithFrame:(CGRect*)arg1 ;
-(CGRect)fullScreenFrame;
-(void)_preloadFullscreenTextureWithSize:(CGSize)arg1 ;
-(void)saveWindowUIFrames;
-(void)setUsesTextureUIStyle:(char)arg1 ;
-(CGRect)horizontallyCenteredRect:(CGRect)arg1 inView:(id)arg2 ;
-(CGRect)videoViewRect;
-(double)_windowWidthForHeight:(double)arg1 ;
-(void)changeProfileSheet:(id)arg1 ;
-(void)prefetchImageNamed:(id)arg1 ;
-(void)preloadFullscreenTexture;
-(CGRect)leftSideFrame;
-(CGRect)rightSideFrame;
-(double)emptyHorizontalEdgeWidth;
-(CGRect)rightSideAreaForShutterFrame:(CGRect)arg1 controlsFrame:(CGRect)arg2 ;
-(void)shareButtonClicked:(id)arg1 ;
-(void)setFrame:(CGRect)arg1 display:(char)arg2 ;
-(char)isAnimating;
-(void)restoreStateWithCoder:(id)arg1 ;
-(void)toggleFullScreen:(id)arg1 ;
-(char)validateMenuItem:(id)arg1 ;
-(CGSize)windowWillResize:(id)arg1 toSize:(CGSize)arg2 ;
-(void)awakeFromNib;
-(CGSize)window:(id)arg1 willUseFullScreenContentSize:(CGSize)arg2 ;
-(void)windowDidFailToEnterFullScreen:(id)arg1 ;
-(void)window:(id)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2 ;
-(void)windowDidFailToExitFullScreen:(id)arg1 ;
-(void)windowDidChangeScreen:(id)arg1 ;
-(void)windowWillEnterFullScreen:(id)arg1 ;
-(void)windowDidEnterFullScreen:(id)arg1 ;
-(void)windowWillExitFullScreen:(id)arg1 ;
-(void)windowDidExitFullScreen:(id)arg1 ;
-(void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void*)arg3 ;
-(char)isResizable;
-(CGRect)sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2 ;
-(id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(CGRect*)arg3 ;
-(id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long*)arg3 ;
-(id)sharingServicePicker:(id)arg1 sharingServicesForItems:(id)arg2 proposedSharingServices:(id)arg3 ;
-(id)sharingServicePicker:(id)arg1 delegateForSharingService:(id)arg2 ;
-(char)isFullScreen;
@end

