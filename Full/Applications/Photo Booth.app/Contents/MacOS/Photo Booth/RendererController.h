/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:45:07 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Photo Booth.app/Contents/MacOS/Photo Booth
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Photo Booth/Photo Booth-Structs.h>
#import <Photo Booth/NSCacheDelegate.h>

@class QCOpenGLContext, PBRenderer, BackdropsRenderer, NSMutableDictionary, NSCountedSet, QCImageTextureBuffer, NSString;

@interface RendererController : NSObject <NSCacheDelegate> {

	QCOpenGLContext* _renderingContext;
	PBRenderer* _normalRenderer;
	BackdropsRenderer* _backdropsRenderer;
	NSMutableDictionary* _rendererCache;
	NSMutableDictionary* _imageCache;
	NSMutableDictionary* _renderers;
	OpaqueVTPixelTransferSessionRef _transferSession;
	CVPixelBufferPoolRef _pixelBufferPool;
	CVPixelBufferPoolRef _previewPixelBufferPool;
	PBRenderer* _currentRenderer;
	NSCountedSet* _renderList;
	char _previewRenderingPaused;
	char _renderResolutionDependantEffectsFullSize;
	char _shouldRecordCurrentRenderer;
	char _receivedFirstFrame;
	IOSurfaceRef _IOSurfaceInUse;
	CVOpenGLTextureCacheRef _inputTextureCache;
	unsigned _fullPreviewFBO;
	unsigned _fullTextureName;
	CGSize _fullTextureSize;
	unsigned _miniPreviewFBO;
	unsigned _miniTextureName;
	CGSize _miniTextureSize;
	char _enableFullPreviewGPUScale;
	char _enableMiniPreviewGPUScale;
	char _enableCVTextureCache;
	char _bypassQCForNoEffect;
	CGSize _maxRenderingSize;
	unsigned _YUVProgramID;
	QCImageTextureBuffer* _leftGlowMask;
	QCImageTextureBuffer* _rightGlowMask;

}

@property (readonly) PBRenderer * normalRenderer;                               //@synthesize normalRenderer=_normalRenderer - In the implementation block
@property (__weak,readonly) BackdropsRenderer * backdropsRenderer; 
@property (readonly) QCOpenGLContext * renderingContext;                        //@synthesize renderingContext=_renderingContext - In the implementation block
@property (assign) char previewRenderingPaused;                                 //@synthesize previewRenderingPaused=_previewRenderingPaused - In the implementation block
@property (retain) PBRenderer * currentRenderer; 
@property (assign) char recording; 
@property (assign) char bypassQCForNoEffect; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedRendererController;
+(id)normalComposition;
+(id)minSupportedModelsForReflections;
+(void)initialize;
-(char)receivedFirstFrame;
-(id)rendererForIdentifier:(id)arg1 ;
-(id)renderImagesForIdentifier:(id)arg1 atTime:(double)arg2 ;
-(void)setPreviewRenderingPaused:(char)arg1 ;
-(void)setCurrentRenderer:(PBRenderer *)arg1 ;
-(BackdropsRenderer *)backdropsRenderer;
-(void)stopBackdrops;
-(void)startBackdrops;
-(char)bypassQCForNoEffect;
-(void)addToRenderList:(id)arg1 ;
-(void)removeFromRenderList:(id)arg1 ;
-(id)rendererForExistingIdentifier:(id)arg1 ;
-(void)newFrame:(CVBufferRef)arg1 elapsedTime:(double)arg2 ;
-(char)recording;
-(CGSize)fullSizeForInputSize:(CGSize)arg1 ;
-(PBRenderer *)normalRenderer;
-(id)_renderImagesForIdentifier:(id)arg1 atTime:(double)arg2 recordFrame:(CVBufferRef)arg3 ;
-(char)previewRenderingPaused;
-(PBRenderer *)currentRenderer;
-(char)enableMiniPreviewsGPUScale;
-(CGSize)fullSizeForInputFrame:(CVBufferRef)arg1 ;
-(CGSize)previewSizeForInputFrame:(CVBufferRef)arg1 ;
-(void)newBackdropsFrame:(CVBufferRef)arg1 atTime:(double)arg2 ;
-(void)adjustGPUScaleSettings;
-(id)fullFrameForInputFrame:(CVBufferRef)arg1 ;
-(id)imageForInputFrame:(CVBufferRef)arg1 renderMode:(int)arg2 ;
-(id)previewFrameForInputFrame:(CVBufferRef)arg1 ;
-(void)updateFBOTextureForMode:(int)arg1 size:(CGSize)arg2 fbo:(unsigned*)arg3 textureName:(unsigned*)arg4 ;
-(id)createTextureBufferForImageNamed:(id)arg1 ;
-(void)setEnableFullPreviewsGPUScale:(char)arg1 ;
-(char)runningOnFastGPU;
-(void)setEnableMiniPreviewsGPUScale:(char)arg1 ;
-(void)setImage:(id)arg1 forIdentifier:(id)arg2 ;
-(id)leftGlowMask;
-(id)rightGlowMask;
-(char)hardwareModelSupportsReflections;
-(void)setMaxRenderingSize:(CGSize)arg1 ;
-(char)enableFullPreviewsGPUScale;
-(void)setEnableCVTextureCache:(char)arg1 ;
-(char)enableCVTextureCache;
-(void)setBypassQCForNoEffect:(char)arg1 ;
-(id)init;
-(void)dealloc;
-(void)setColorSpace:(CGColorSpaceRef)arg1 ;
-(id)imageForIdentifier:(id)arg1 ;
-(void)setRecording:(char)arg1 ;
-(QCOpenGLContext *)renderingContext;
@end

