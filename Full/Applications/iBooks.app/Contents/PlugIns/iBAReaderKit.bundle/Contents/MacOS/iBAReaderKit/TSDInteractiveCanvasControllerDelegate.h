/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:17:27 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/iBooks.app/Contents/PlugIns/iBAReaderKit.bundle/Contents/MacOS/iBAReaderKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

@class TSKDocumentRoot;


@protocol TSDInteractiveCanvasControllerDelegate <TSKChangeSourceObserver,TSKDocumentRootProvider>
@property (nonatomic,retain,readonly) TSKDocumentRoot * documentRoot; 
@property (nonatomic,readonly) char isCanvasInteractive; 
@property (nonatomic,readonly) char isPrintingCanvas; 
@property (nonatomic,readonly) char spellCheckingSupported; 
@property (nonatomic,readonly) char spellCheckingSuppressed; 
@property (nonatomic,readonly) char shouldResizeCanvasToScrollView; 
@property (nonatomic,readonly) char shouldClipToScrollViewBoundsInVisibleBounds; 
@property (nonatomic,readonly) char shouldShowTextOverflowGlyphs; 
@property (nonatomic,readonly) char shouldShowInstructionalText; 
@property (nonatomic,readonly) char shouldPopKnobsOutsideEnclosingScrollView; 
@property (nonatomic,readonly) CGSize sizeOfScrollViewEnclosingCanvas; 
@property (nonatomic,readonly) char allowEditMenuToAppear; 
@property (nonatomic,readonly) char allowTextEditingToBegin; 
@optional
-(char)interactiveCanvasControllerShouldUseGuidedPan:(id)arg1 withMovementDirection:(CGPoint)arg2;
-(char)interactiveCanvasController:(id)arg1 shouldTakeFirstResponderForTextEditor:(id)arg2;
-(CGRect*)visibleUnscaledCanvasRectWithoutKeyboard;
-(char)shouldIgnoreTextGestures;
-(CGRect*)interactiveCanvasController:(id)arg1 expandBoundsForScrollViewHitTesting:(CGRect)arg2;
-(id)panGuideForInteractiveCanvasController:(id)arg1 withMovementDirection:(CGPoint)arg2;
-(char)allowEditMenuToAppear;
-(CGSize)sizeOfScrollViewEnclosingCanvas;
-(void)setSelection:(id)arg1 onModel:(id)arg2 withFlags:(unsigned long long)arg3;
-(char)isCanvasInteractive;
-(id)additionalGestureTargetsForInteractiveCanvasController:(id)arg1 gesture:(id)arg2;
-(id)interactiveCanvasController:(id)arg1 primaryTargetForGesture:(id)arg2;
-(char)interactiveCanvasController:(id)arg1 allowsEditMenuForRep:(id)arg2;
-(char)interactiveCanvasController:(id)arg1 allowsHyperlinkWithGesture:(id)arg2 forRep:(id)arg3;
-(char)allowSelectionPopoverForInteractiveCanvasController:(id)arg1;
-(void)interactiveCanvasControllerDidLayout:(id)arg1;
-(void)dynamicOperationDidEnd;
-(void)interactiveCanvasControllerWillBecomeFirstResponder:(id)arg1;
-(char)interactiveCanvasControllerShouldEndEditingWhenLosingFirstResponder:(id)arg1;
-(void)interactiveCanvasControllerWillLayout:(id)arg1;
-(void)interactiveCanvasControllerDidValidateLayouts:(id)arg1;
-(CGRect*)interactiveCanvasController:(id)arg1 expandVisibleBoundsForClippingReps:(CGRect)arg2;
-(void)interactiveCanvasController:(id)arg1 willLayoutRep:(id)arg2;
-(id)interactiveCanvasController:(id)arg1 layoutGeometryProviderForLayout:(id)arg2;
-(id)editorControllerForInteractiveCanvasController:(id)arg1;
-(char)zoomOnSelectionChange:(id)arg1;
-(id)interactiveCanvasController:(id)arg1 infoForModel:(id)arg2 withSelection:(id)arg3;
-(void)willScrollSearchReferenceToVisible:(id)arg1;
-(CGRect*)interactiveCanvasController:(id)arg1 targetRectForInfo:(id)arg2 withSelection:(id)arg3;
-(char)interactiveCanvasControllerShouldAnimateToSearchReferences:(id)arg1;
-(char)interactiveCanvasControllerIsRelatedCanvasScrolling:(id)arg1;
-(char)interactiveCanvasControllerSupportsAutozoom:(id)arg1;
-(char)interactiveCanvasController:(id)arg1 canvasViewShouldBecomeFirstResponder:(id)arg2;
-(char)shouldResizeCanvasToScrollView;
-(CGRect*)interactiveCanvasController:(id)arg1 canvasViewBoundsWithBounds:(CGRect)arg2;
-(double)autoZoomAnimationDurationForInteractiveCanvasController:(id)arg1;
-(CGPoint*)interactiveCanvasController:(id)arg1 clampContentOffset:(CGPoint)arg2 forViewScale:(double)arg3 scrollViewBoundsSize:(CGSize)arg4;
-(CGPoint*)interactiveCanvasController:(id)arg1 clampContentOffset:(CGPoint)arg2 forViewScale:(double)arg3;
-(char)interactiveCanvasControllerShouldMaintainPositionOnSetViewScale:(id)arg1;
-(id)rectanglesObscuringView:(id)arg1;
-(id)imageReplacerForInteractiveCanvasController:(id)arg1;
-(CGRect*)interactiveCanvasController:(id)arg1 visibleBoundsWithClippingLayerBounds:(CGRect)arg2 canvasBounds:(CGRect)arg3;
-(char)shouldClipToScrollViewBoundsInVisibleBounds;
-(CGRect*)interactiveCanvasController:(id)arg1 expandVisibleBoundsForTiling:(CGRect)arg2;
-(id)interactiveCanvasController:(id)arg1 delegateConformingToProtocol:(id)arg2 forRep:(id)arg3;
-(void)dynamicOperationWillBegin;
-(void)interactiveCanvasController:(id)arg1 updateGestureTargetStack:(id)arg2 gesture:(id)arg3;
-(id)interactiveCanvasController:(id)arg1 gestureTargetStackWhenScrollingWithGesture:(id)arg2;
-(char)interactiveCanvasController:(id)arg1 shouldDispatchBackgroundWork:(/*^block*/id)arg2;
-(void)interactiveCanvasControllerDidLayoutAndRenderOnBackgroundThread:(id)arg1;
-(void)interactiveCanvasControllerDidScroll:(id)arg1;
-(void)interactiveCanvasController:(id)arg1 willAnimateScrollToVisibleUnscaledRect:(CGRect)arg2;
-(void)interactiveCanvasControllerDidEndScrollingAnimation:(id)arg1 stillAnimating:(char)arg2;
-(CGPoint*)interactiveCanvasController:(id)arg1 restrictedContentOffset:(CGPoint)arg2 forViewScale:(double)arg3;
-(void)interactiveCanvasController:(id)arg1 performLockedAction:(/*^block*/id)arg2;
-(char)interactiveCanvasControllerShouldResampleImages:(id)arg1;
-(void)interactiveCanvasController:(id)arg1 layoutRegistered:(id)arg2;
-(void)interactiveCanvasController:(id)arg1 layoutUnregistered:(id)arg2;
-(void)interactiveCanvasControllerWillZoom:(id)arg1;
-(void)interactiveCanvasControllerIsZooming:(id)arg1;
-(void)interactiveCanvasControllerDidZoom:(id)arg1;
-(double)canvasViewScaleForProposedViewScale:(double)arg1 originalViewScale:(double)arg2;
-(CGSize*)canvasCenterOffsetForProposedViewScale:(double)arg1 originalViewScale:(double)arg2;
-(double)interactiveCanvasController:(id)arg1 adjustViewScale:(double)arg2;
-(double)nextCanvasViewScaleDetentForProposedViewScale:(double)arg1 greater:(char)arg2;
-(void)interactiveCanvasControllerWillScroll:(id)arg1;
-(void)interactiveCanvasControllerDidStopScrolling:(id)arg1;
-(void)interactiveCanvasControllerDidZoomWithUserGesture:(id)arg1;
-(char)inPrintPreviewMode;
-(id)descriptionForCanvasViewScale:(double)arg1;
-(CGRect*)scrollViewClippingBoundsForInteractiveCanvasController:(id)arg1;
-(char)interactiveCanvasControllerShouldDeferViewCreation:(id)arg1;
-(void)interactiveCanvasControllerDidUpdateLayersFromReps:(id)arg1;
-(void)canvasWillEndEditingToBeginEditingRep:(id)arg1;
-(char)allowTextEditingToBegin;
-(void)editorDidChangeSelectionWithTextInputEditor:(id)arg1 changingEditor:(id)arg2;
-(void)editorDidChangeSelection:(id)arg1;
-(CGRect*)interactiveCanvasController:(id)arg1 outsetSelectionRect:(CGRect)arg2;
-(void)interactiveCanvasControllerDidAnimateViewScale:(id)arg1;
-(void)interactiveCanvasController:(id)arg1 willAnimateViewScaleWithDuration:(double)arg2;
-(char)doubleTappedCanvasBackgroundAtPoint:(CGPoint)arg1;
-(char)shouldPopKnobsOutsideEnclosingScrollView;
-(void)interactiveCanvasController:(id)arg1 didScrollForAutoscroll:(id)arg2;
-(char)spellCheckingSupported;
-(char)spellCheckingSuppressed;
-(char)isPrintingCanvas;
-(char)shouldShowTextOverflowGlyphs;
-(char)shouldShowInstructionalText;
-(Class)canvasViewClassOverride;
-(char)interactiveCanvasController:(id)arg1 shouldHandleMouseEvent:(id)arg2;
-(char)tappedCanvasBackgroundAtPoint:(CGPoint)arg1;
-(char)interactiveCanvasController:(id)arg1 shouldHandleKeyEvent:(id)arg2;
-(char)interactiveCanvasController:(id)arg1 handleCommandKeyEvent:(id)arg2;
-(char)interactiveCanvasController:(id)arg1 handleKeyEvent:(id)arg2;
-(char)interactiveCanvasControllerShouldForwardTabEventsToNextResponder:(id)arg1;
-(char)interactiveCanvasController:(id)arg1 allowsSmartMagnifyForRep:(id)arg2;
-(id)interactiveCanvasController:(id)arg1 overrideMenuForEvent:(id)arg2;
-(CGRect*)interactiveCanvasController:(id)arg1 expandBoundsForHitTesting:(CGRect)arg2;
-(char)isInteractiveCanvasControllerTextOnly:(id)arg1;
-(long long)interactiveCanvasController:(id)arg1 imageReplaceBadgeBehaviorForRep:(id)arg2;
-(id)activeResolverContainer;
-(Class)wpEditorClassOverride;
-(Class)wpFloatingCommentEditorClassOverride;
-(char)shouldSuppressCommentKnobsForRep:(id)arg1;
-(void)selectionDidChange;

@required
-(TSKDocumentRoot *)documentRoot;

@end

