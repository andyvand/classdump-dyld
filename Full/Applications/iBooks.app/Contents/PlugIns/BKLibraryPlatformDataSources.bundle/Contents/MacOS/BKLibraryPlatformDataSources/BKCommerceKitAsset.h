/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:17:26 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/iBooks.app/Contents/PlugIns/BKLibraryPlatformDataSources.bundle/Contents/MacOS/BKLibraryPlatformDataSources
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <BKLibraryPlatformDataSources/BKAsset.h>

@class CKBook, NSString, NSURL, NSDate, NSNumber;

@interface BKCommerceKitAsset : NSObject <BKAsset> {

	CKBook* _book;
	NSString* _assetID;
	NSString* _dataSourceIdentifier;

}

@property (nonatomic,retain) CKBook * book;                              //@synthesize book=_book - In the implementation block
@property (retain) NSString * assetID;                                   //@synthesize assetID=_assetID - In the implementation block
@property (retain) NSString * dataSourceIdentifier;                      //@synthesize dataSourceIdentifier=_dataSourceIdentifier - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) NSString * accountID; 
@property (readonly) NSString * storeID; 
@property (readonly) NSString * author; 
@property (readonly) NSString * title; 
@property (readonly) NSString * sortTitle; 
@property (readonly) NSURL * url; 
@property (readonly) NSString * genre; 
@property (getter=isSample,readonly) char sample; 
@property (getter=isProof,readonly) char proof; 
@property (getter=isCompressed,readonly) char compressed; 
@property (getter=isLocked,readonly) char locked; 
@property (readonly) long long generation; 
@property (readonly) long long fileSize; 
@property (readonly) short contentType; 
@property (readonly) short state; 
@property (readonly) NSDate * dataSourceInsertionDate; 
@property (readonly) NSDate * releaseDate; 
@property (readonly) NSDate * purchaseDate; 
@property (readonly) char shouldDisableOptimizeSpeed; 
@property (readonly) char shouldDisableTouchEmulation; 
@property (readonly) short desktopSupportLevel; 
@property (readonly) NSString * scrollDirection; 
@property (readonly) long long pageCount; 
@property (readonly) long long rating; 
@property (readonly) NSDate * updateDate; 
@property (readonly) NSNumber * versionNumber; 
@property (readonly) NSString * bookDescription; 
@property (readonly) NSString * comments; 
@property (readonly) NSString * kind; 
@property (readonly) NSString * year; 
@property (readonly) NSString * grouping; 
@property (readonly) char computedRating; 
@property (readonly) long long metadataMigrationVersion; 
@property (readonly) unsigned long long storeFrontID; 
@property (readonly) NSNumber * seriesIsHidden; 
@property (readonly) NSNumber * seriesIsCloudOnly; 
@property (readonly) NSString * sequenceDisplayName; 
@property (readonly) NSString * seriesID; 
@property (readonly) NSNumber * seriesSortKey; 
@property (getter=isDevelopment,readonly) char development; 
-(char)isCompressed;
-(void)setAssetID:(NSString *)arg1 ;
-(NSString *)assetID;
-(NSString *)dataSourceIdentifier;
-(char)isProof;
-(NSDate *)dataSourceInsertionDate;
-(char)shouldDisableOptimizeSpeed;
-(char)shouldDisableTouchEmulation;
-(short)desktopSupportLevel;
-(NSString *)scrollDirection;
-(NSDate *)updateDate;
-(NSString *)bookDescription;
-(char)computedRating;
-(long long)metadataMigrationVersion;
-(void)setDataSourceIdentifier:(NSString *)arg1 ;
-(void)setBook:(CKBook *)arg1 ;
-(NSString *)genre;
-(NSString *)grouping;
-(NSDate *)releaseDate;
-(long long)rating;
-(long long)generation;
-(short)contentType;
-(NSString *)storeID;
-(NSNumber *)versionNumber;
-(NSString *)author;
-(NSString *)sortTitle;
-(NSString *)description;
-(NSURL *)url;
-(short)state;
-(NSString *)title;
-(NSString *)year;
-(long long)pageCount;
-(char)isLocked;
-(NSString *)kind;
-(long long)fileSize;
-(NSString *)comments;
-(NSString *)accountID;
-(CKBook *)book;
-(NSDate *)purchaseDate;
-(char)isSample;
@end

