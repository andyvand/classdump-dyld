/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:25:10 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Chess.app/Contents/MacOS/Chess
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Chess/Chess-Structs.h>
#import <AppKit/NSDocument.h>

@class MBCBoard, NSMutableDictionary, GKTurnBasedMatch, NSArray;

@interface MBCDocument : NSDocument {

	MBCBoard* board;
	int variant;
	int players;
	NSMutableDictionary* properties;
	char localWhite;
	char disallowSubstitutes;
	char offerDraw;
	char ephemeral;
	char needNewGameSheet;
	GKTurnBasedMatch* match;
	NSArray* invitees;

}

@property (assign,nonatomic) MBCBoard * board; 
@property (nonatomic,readonly) int variant; 
@property (nonatomic,readonly) int players; 
@property (nonatomic,retain) GKTurnBasedMatch * match; 
@property (nonatomic,readonly) NSMutableDictionary * properties; 
@property (assign,nonatomic) char offerDraw; 
@property (assign,nonatomic) char ephemeral; 
@property (assign,nonatomic) char needNewGameSheet; 
@property (assign,nonatomic) char disallowSubstitutes; 
@property (nonatomic,retain) NSArray * invitees; 
+(char)processNewMatch:(id)arg1 variant:(int)arg2 side:(int)arg3 document:(id)arg4 ;
+(char)coinFlip;
+(id)casualGameSaveLocation;
+(char)autosavesInPlace;
-(char)saveMovesTo:(id)arg1 ;
-(MBCBoard *)board;
-(id)initForNewGameSheet:(id)arg1 ;
-(char)nontrivialHumanTurn;
-(void)updateMatchForRemoteMove;
-(char)gameDone;
-(int)humanSide;
-(id)initWithMatch:(id)arg1 game:(id)arg2 ;
-(char)disallowSubstitutes;
-(char)ephemeral;
-(void)setEphemeral:(char)arg1 ;
-(void)setNeedNewGameSheet:(char)arg1 ;
-(void)setDisallowSubstitutes:(char)arg1 ;
-(int)remoteSide;
-(char)loadGame:(id)arg1 ;
-(int)engineSide;
-(void)parseName:(id)arg1 intoFirst:(id*)arg2 last:(id*)arg3 ;
-(id)pgnHeader;
-(id)pgnResult;
-(void)saveMovesToFile:(_sFILE*)arg1 ;
-(id)saveGameToDict;
-(void)setOfferDraw:(char)arg1 ;
-(char)checkForEndOfGame;
-(void)postMatchOutcomeNotification;
-(void)updateMatchForLocalMove;
-(char)brandNewGame;
-(void)updateSearchTime;
-(void)updateMatchForEndOfGame:(int)arg1 ;
-(id)nonLocalPlayerID;
-(char)canTakeback;
-(void)setBoard:(MBCBoard *)arg1 ;
-(void)offerTakeback;
-(void)allowTakeback:(char)arg1 ;
-(void)resign;
-(char)offerDraw;
-(char)needNewGameSheet;
-(int)players;
-(NSArray *)invitees;
-(void)setInvitees:(NSArray *)arg1 ;
-(id)matchData;
-(GKTurnBasedMatch *)match;
-(int)variant;
-(id)init;
-(void)dealloc;
-(id)objectForKey:(id)arg1 ;
-(void)setObject:(id)arg1 forKey:(id)arg2 ;
-(char)boolForKey:(id)arg1 ;
-(float)floatForKey:(id)arg1 ;
-(long long)integerForKey:(id)arg1 ;
-(void)close;
-(void)makeWindowControllers;
-(void)setFileURL:(id)arg1 ;
-(char)readFromURL:(id)arg1 ofType:(id)arg2 error:(id*)arg3 ;
-(void)updateChangeCount:(unsigned long long)arg1 ;
-(id)writableTypesForSaveOperation:(unsigned long long)arg1 ;
-(void)performActivityWithSynchronousWaiting:(char)arg1 usingBlock:(/*^block*/id)arg2 ;
-(char)readFromData:(id)arg1 ofType:(id)arg2 error:(id*)arg3 ;
-(id)dataRepresentationOfType:(id)arg1 ;
-(char)writeToURL:(id)arg1 ofType:(id)arg2 error:(id*)arg3 ;
-(id)duplicateAndReturnError:(id*)arg1 ;
-(void)canCloseDocumentWithDelegate:(id)arg1 shouldCloseSelector:(SEL)arg2 contextInfo:(void*)arg3 ;
-(id)windowNibName;
-(void)duplicateDocument:(id)arg1 ;
-(id)initWithType:(id)arg1 error:(id*)arg2 ;
-(NSMutableDictionary *)properties;
-(void)setValue:(id)arg1 forUndefinedKey:(id)arg2 ;
-(void)setMatch:(GKTurnBasedMatch *)arg1 ;
-(id)valueForUndefinedKey:(id)arg1 ;
@end

