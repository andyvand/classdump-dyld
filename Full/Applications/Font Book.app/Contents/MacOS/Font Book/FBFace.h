/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:33:50 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Font Book.app/Contents/MacOS/Font Book
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Font Book/Font Book-Structs.h>
#import <Font Book/FBScriptableObject.h>
#import <Font Book/FBObject.h>
#import <Font Book/FBFont.h>
#import <Font Book/FBObjectMutation.h>
#import <Font Book/NSCoding.h>

@class NSString, NSImage, NSArray, NSURL, FBUniqueString, FBFile, NSCharacterSet, NSFont, NSDate, NSDictionary, NSSet;

@interface FBFace : NSObject <FBScriptableObject, FBObject, FBFont, FBObjectMutation, NSCoding> {

	NSURL* _fURL;
	NSURL* _fFileURL;
	FBUniqueString* _fPostscriptName;
	FBFile* _fFile;
	FBUniqueString* _fFullName;
	FBUniqueString* _fFullDisplayName;
	FBUniqueString* _fFamilyName;
	FBUniqueString* _fFamilyDisplayName;
	FBUniqueString* _fStyleName;
	FBUniqueString* _fDisplayName;
	FBUniqueString* _fDesignerDisplayName;
	FBUniqueString* _fManufacturerDisplayName;
	FBUniqueString* _fSampleString;
	NSArray* _fLanguages;
	NSArray* _fScripts;
	unsigned _fSymbolicTraits;
	unsigned _fFontFormat;
	NSCharacterSet* _fCharSet;
	unsigned _fProtection;
	NSString* _fSearchContent;
	NSFont* _fFont;
	long long _fMatchesPrimaryLanguage;
	long long _fIsDuplicate;
	long long _fIsRegisteredInProcessScope;
	char _fTraitsAllocated;
	long long _fIsEnabled;
	char _fEnabledStateLockedOn;
	char _fHasDuplicate;
	long long _fIsProtected;
	NSArray* _fCopies;
	NSArray* _fDuplicates;
	NSURL* _fLoadedVersionURL;
	char _needsUIUpdate;
	char _showAllLanguages;
	char _knowsUsers;
	NSArray* __knownUsers;

}

@property (readonly) unsigned domain; 
@property (readonly) NSDate * date; 
@property (readonly) char isNetworkFont; 
@property (readonly) NSString * defaultLanguageTag; 
@property (readonly) NSArray * scripts; 
@property (readonly) NSArray * sortedScripts; 
@property (readonly) NSDictionary * scriptsAndLanguages; 
@property (assign) char needsUIUpdate;                                          //@synthesize needsUIUpdate=_needsUIUpdate - In the implementation block
@property (readonly) NSString * familyStyleName; 
@property (assign) char showAllLanguages;                                       //@synthesize showAllLanguages=_showAllLanguages - In the implementation block
@property (retain,readonly) FBFile * file; 
@property (readonly) char showDuplicateIcon; 
@property (readonly) char canResolveDuplicatesBySelectingThisCopy; 
@property (retain,readonly) NSSet * copies; 
@property (readonly) char isMonospaced; 
@property (readonly) char isInstalled; 
@property (readonly) char isRegisteredInProcessScope; 
@property (retain,readonly) NSFont * font; 
@property (assign) char enabledStateLockedOn; 
@property (readonly) char isDownloadableStub; 
@property (readonly) char hasCustomSampleString; 
@property (readonly) NSString * sampleString; 
@property (readonly) NSString * copyright; 
@property (readonly) NSString * vendorURL; 
@property (readonly) NSString * designerURL; 
@property (readonly) NSString * licenseURL; 
@property (copy,readonly) NSArray * knownUsers; 
@property (copy) NSArray * _knownUsers;                                         //@synthesize _knownUsers=__knownUsers - In the implementation block
@property (assign) char knowsUsers;                                             //@synthesize knowsUsers=_knowsUsers - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (copy,readonly) NSString * name; 
@property (retain,readonly) NSString * displayName; 
@property (retain,readonly) NSString * helpText; 
@property (retain,readonly) NSImage * image; 
@property (retain,readonly) NSImage * alternateImage; 
@property (readonly) long long numberOfChildren; 
@property (retain,readonly) NSArray * children; 
@property (readonly) char isEnabled; 
@property (readonly) char isDuplicate; 
@property (readonly) char isDuplicated; 
@property (readonly) char hasDuplicates; 
@property (retain,readonly) NSArray * duplicates; 
@property (readonly) char isSystemFont; 
@property (readonly) char isProtected; 
@property (readonly) char isLocked; 
@property (retain,readonly) NSArray * files; 
@property (retain,readonly) id sampleFont; 
+(void)removeFace:(id)arg1 ;
+(id)allFaces;
+(id)normalizedURL:(id)arg1 ;
+(id)faceForExtendedURL:(id)arg1 ;
+(void)_updateAllFaces;
+(void)_initializeFaceList;
+(id)extendedURLFromURL:(id)arg1 fontName:(id)arg2 ;
+(id)normalizedURLFromURL:(id)arg1 fontName:(id)arg2 ;
+(id)normalizedFontNameFromURL:(id)arg1 fontName:(id)arg2 ;
+(id)faceWithURL:(id)arg1 fontName:(id)arg2 ;
+(id)_languageList;
+(id)normalizedURLFromDescriptor:(id)arg1 ;
+(id)normalizedFontNameFromDescriptor:(id)arg1 ;
+(char)isValidOutlineFontAtURL:(id)arg1 fontName:(id)arg2 ;
+(id)faceWithDescriptor:(id)arg1 ;
+(id)faceWithFont:(id)arg1 ;
+(id)uniqueURLForURL:(id)arg1 ;
+(id)_preferredLanguages;
+(char)matchesPreferredLanguageWithFamilyName:(id)arg1 dictionary:(id)arg2 ;
+(id)extendedURLStringFromURL:(id)arg1 fontName:(id)arg2 ;
+(id)descriptorWithURL:(id)arg1 fontName:(id)arg2 ;
+(id)kindForCTFontFormat:(unsigned)arg1 ;
+(id)allFaceURLs;
+(id)facesForURL:(id)arg1 ;
+(void)localeDidChange;
+(id)availableLocaleIdentifier;
+(char)isValidFontDescriptorAndHasOutline:(id)arg1 ;
+(id)filesWithFaces:(id)arg1 ;
+(id)preferredFaceWithPSName:(id)arg1 ;
+(id)faceWithAttributeDictionary:(id)arg1 ;
+(id)availableAttributes;
+(id)filteredAttributes;
+(id)kindForDescriptor:(id)arg1 ;
+(id)_nameForFont:(CTFontRef)arg1 code:(long long)arg2 ;
+(id)_languagesForCharacterSet:(id)arg1 ;
+(id)_preferAppleInstalledFonts;
+(id)_preferredLanguage;
+(id)extendedURLStringFromDescriptor:(id)arg1 ;
+(id)descriptorWithURL:(id)arg1 fontName:(id)arg2 attribute:(id)arg3 ;
+(void)initialize;
+(void)resetCaches;
-(NSString *)helpText;
-(char)enabledStateLockedOn;
-(char)isDownloadableStub;
-(id)extendedURL;
-(void)clearEnabled;
-(id)sampleFont;
-(id)displayFamilyName;
-(char)needsUIUpdate;
-(void)setNeedsUIUpdate:(char)arg1 ;
-(char)isDuplicated;
-(char)showDuplicateIcon;
-(void)_resetLocalizedNames;
-(id)localizedNameForCode:(long long)arg1 ;
-(id)outlineFile;
-(id)displayLanguages;
-(void)setSearchContent:(id)arg1 ;
-(id)_copies;
-(long long)_duplicateResolutionPreferenceComparison:(id)arg1 ;
-(id)_localizedNameForKey:(id)arg1 forLanguages:(id)arg2 inDictionary:(id)arg3 ;
-(id)_initWithDictionary:(id)arg1 withRawPostscriptName:(id)arg2 withRawURL:(id)arg3 ;
-(id)urlFromUTF8Path:(char*)arg1 utf8fragment:(char*)arg2 ;
-(char)isRegisteredInProcessScope;
-(CTFontRef)_ctFont;
-(id)_unlocalizedNameForCode:(long long)arg1 ;
-(id)displayFullName;
-(id)attribute:(id)arg1 localized:(char)arg2 ;
-(id)filteredLocalizedLanguages:(char)arg1 ;
-(NSArray *)sortedScripts;
-(id)_allCopies;
-(char)isCopyProtected:(unsigned*)arg1 ;
-(NSArray *)knownUsers;
-(void)_generateLanguageList;
-(char)showAllLanguages;
-(id)designLanguages;
-(void)_setProtectionBits;
-(id)_hashString;
-(id)_characterSet;
-(NSString *)familyStyleName;
-(unsigned long long)_copyCount;
-(id)_loadedVersionURL;
-(char)hasDuplicates;
-(char)isSystemFont;
-(char)isNetworkFont;
-(char)matchesPreferredLanguage;
-(id)searchableContent;
-(long long)_unlocalizedStyleCompare:(id)arg1 ;
-(void)setShowAllLanguages:(char)arg1 ;
-(char)knowsUsers;
-(NSArray *)_knownUsers;
-(void)_usersDiscovered:(id)arg1 ;
-(void)set_knownUsers:(NSArray *)arg1 ;
-(void)setKnowsUsers:(char)arg1 ;
-(NSArray *)duplicates;
-(void)createSearchContent;
-(id)initWithDataStreamsURLs:(SCD_Struct_FB2*)arg1 flags:(SCD_Struct_FB2*)arg2 formats:(SCD_Struct_FB2*)arg3 fontNames:(SCD_Struct_FB2*)arg4 familyNames:(SCD_Struct_FB2*)arg5 subfamilyNames:(SCD_Struct_FB2*)arg6 localizedNames:(SCD_Struct_FB2*)arg7 traits:(SCD_Struct_FB2*)arg8 supportedlanguages:(SCD_Struct_FB2*)arg9 designLanguages:(SCD_Struct_FB2*)arg10 ;
-(char)validateAllFaces;
-(id)sortedDisplayLanguages;
-(NSString *)defaultLanguageTag;
-(NSDictionary *)scriptsAndLanguages;
-(NSString *)vendorURL;
-(NSString *)designerURL;
-(NSString *)licenseURL;
-(char)isEmbeddable:(unsigned*)arg1 ;
-(id)sampleStringForLanguage:(id)arg1 ;
-(char)hasCustomSampleString;
-(id)altFile;
-(char)canResolveDuplicatesBySelectingThisCopy;
-(long long)characterSetCount;
-(void)setEnabledStateLockedOn:(char)arg1 ;
-(char)matchesNewPreferredLanguage;
-(id)searchableContentOfType:(long long)arg1 ;
-(long long)compareForGroupingByPostscriptName:(id)arg1 ;
-(id)versionName;
-(void)toggleShowAllLanguages:(id)arg1 ;
-(id)_duplicateRanking;
-(char)_characterSetCoversLanguage:(id)arg1 ;
-(long long)_macStyle;
-(id)_pseudoDesignLanguages;
-(id)appleScriptID;
-(id)appleScriptName;
-(id)appleScriptLocalizedName;
-(id)appleScriptFamily;
-(id)appleScriptFiles;
-(id)appleScriptContainers;
-(char)appleScriptEnabled;
-(char)appleScriptDuplicated;
-(id)appleScriptAttributes;
-(id)applescriptDescription;
-(void)setAppleScriptEnabled:(id)arg1 ;
-(id)appleScriptVendorURL;
-(id)appleScriptDesignerURL;
-(id)appleScriptLicenceInfoURL;
-(char)isMonospaced;
-(NSSet *)copies;
-(char)isInstalled;
-(long long)numberOfChildren;
-(char)isProtected;
-(id)disable;
-(id)styleName;
-(id)characterSet;
-(NSArray *)scripts;
-(NSArray *)files;
-(void)clearCache;
-(id)domainName;
-(id)languages;
-(void)dealloc;
-(NSString *)description;
-(id)path;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)url;
-(NSString *)name;
-(NSImage *)image;
-(char)isEnabled;
-(id)key;
-(NSFont *)font;
-(unsigned)domain;
-(id)objectSpecifier;
-(id)descriptor;
-(long long)compare:(id)arg1 ;
-(id)familyName;
-(NSImage *)alternateImage;
-(NSDate *)date;
-(void)uninstall;
-(char)isDuplicate;
-(NSString *)displayName;
-(id)fileName;
-(char)isLocked;
-(id)initWithDictionary:(id)arg1 ;
-(id)postscriptName;
-(FBFile *)file;
-(void)_setEnabled:(char)arg1 ;
-(NSArray *)children;
-(id)kind;
-(NSString *)copyright;
-(id)fullName;
-(id)enable;
-(char)isSafe;
-(void)_enable;
-(void)_disable;
-(NSString *)sampleString;
@end

