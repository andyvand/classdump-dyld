/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:23:52 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Calendar.app/Contents/MacOS/Calendar
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Calendar/Calendar-Structs.h>
#import <AppKit/NSResponder.h>
#import <Calendar/NSWindowDelegate.h>
#import <Calendar/NSSplitViewDelegate.h>
#import <Calendar/CalCalendarPopupTarget.h>
#import <Calendar/NSUserActivityDelegate.h>

@protocol OS_dispatch_queue;
@class CalEventStore, CALWindow, CALCMManager, CALUserActionManager, CalCalDAVTaskManager, CalUISelectionManager, CalUIEventEditingManager, CalUISearchViewController, CalMessageTableController, CalMessagePopoverController, CalUICalendarViewsController, CalResendInvitationsController, CalQuickEventPopoverController, CalManagedObjectContext, NSMutableSet, NSMutableDictionary, NSString, NSDate, NSSet, CalAnimatedSplitView, CalUICalendarSidebar, CALViewSwitcherSegmentedControl, CALImportProgressController, NSObject;

@interface CALMainController : NSResponder <NSWindowDelegate, NSSplitViewDelegate, CalCalendarPopupTarget, NSUserActivityDelegate> {

	char _canvasIsScrolling;
	char _sheetNotificationBlocked;
	char _isFullScreen;
	char _isInModalSheet;
	char _isQuitEnabled;
	char _isEnteringFullScreen;
	char _isExitingFullScreen;
	char _updatingTextPending;
	char _wantsDeferredSetupAfterEventStoreInitialization;
	char _eventStoreIsInitialized;
	char _calendarsHaveLoadedAfterLaunch;
	CalEventStore* _eventStore;
	CALWindow* _window;
	CALCMManager* _cmManager;
	CALUserActionManager* _userActionManager;
	CalCalDAVTaskManager* _calDAVTaskManager;
	CalUISelectionManager* _selectionManager;
	CalUIEventEditingManager* _eventEditingManager;
	CalUISearchViewController* _searchViewController;
	CalMessageTableController* _messageTableController;
	CalMessagePopoverController* _messagePopoverController;
	CalUICalendarViewsController* _calendarViewsController;
	CalResendInvitationsController* _invitationsController;
	CalQuickEventPopoverController* _quickEventPopoverController;
	CalManagedObjectContext* _persistentContext;
	NSMutableSet* _principalIDsWithErrorDialogs;
	NSMutableDictionary* _currentlyRunningSharingTaskGroups;
	NSString* _delegateAccountUID;
	NSDate* _lastUpdatingTextChange;
	NSSet* _cachedCheckedCalendarIDs;
	CalAnimatedSplitView* _mainSplitView;
	CalUICalendarSidebar* _calendarSidebar;
	CALViewSwitcherSegmentedControl* _viewSwitcher;
	CALImportProgressController* _importProgressController;
	NSMutableDictionary* _queueViewers;
	NSObject*<OS_dispatch_queue> _deferredSetupQueue;
	NSMutableDictionary* _principleIDsBusyStatus;

}

@property (retain) CalEventStore * eventStore;                                                          //@synthesize eventStore=_eventStore - In the implementation block
@property (assign) char canvasIsScrolling;                                                              //@synthesize canvasIsScrolling=_canvasIsScrolling - In the implementation block
@property (assign) char sheetNotificationBlocked;                                                       //@synthesize sheetNotificationBlocked=_sheetNotificationBlocked - In the implementation block
@property (assign) char isFullScreen;                                                                   //@synthesize isFullScreen=_isFullScreen - In the implementation block
@property (assign) char isInModalSheet;                                                                 //@synthesize isInModalSheet=_isInModalSheet - In the implementation block
@property (assign) char isQuitEnabled;                                                                  //@synthesize isQuitEnabled=_isQuitEnabled - In the implementation block
@property (retain) CALWindow * window;                                                                  //@synthesize window=_window - In the implementation block
@property (retain) CALCMManager * cmManager;                                                            //@synthesize cmManager=_cmManager - In the implementation block
@property (retain) CALUserActionManager * userActionManager;                                            //@synthesize userActionManager=_userActionManager - In the implementation block
@property (retain) CalCalDAVTaskManager * calDAVTaskManager;                                            //@synthesize calDAVTaskManager=_calDAVTaskManager - In the implementation block
@property (retain) CalUISelectionManager * selectionManager;                                            //@synthesize selectionManager=_selectionManager - In the implementation block
@property (retain) CalUIEventEditingManager * eventEditingManager;                                      //@synthesize eventEditingManager=_eventEditingManager - In the implementation block
@property (retain) CalUISearchViewController * searchViewController;                                    //@synthesize searchViewController=_searchViewController - In the implementation block
@property (retain) CalMessageTableController * messageTableController;                                  //@synthesize messageTableController=_messageTableController - In the implementation block
@property (retain) CalMessagePopoverController * messagePopoverController;                              //@synthesize messagePopoverController=_messagePopoverController - In the implementation block
@property (retain) CalUICalendarViewsController * calendarViewsController;                              //@synthesize calendarViewsController=_calendarViewsController - In the implementation block
@property (retain) CalResendInvitationsController * invitationsController;                              //@synthesize invitationsController=_invitationsController - In the implementation block
@property (nonatomic,retain) CalQuickEventPopoverController * quickEventPopoverController;              //@synthesize quickEventPopoverController=_quickEventPopoverController - In the implementation block
@property (readonly) CalManagedObjectContext * persistentContext;                                       //@synthesize persistentContext=_persistentContext - In the implementation block
@property (retain) NSMutableSet * principalIDsWithErrorDialogs;                                         //@synthesize principalIDsWithErrorDialogs=_principalIDsWithErrorDialogs - In the implementation block
@property (retain) NSMutableDictionary * currentlyRunningSharingTaskGroups;                             //@synthesize currentlyRunningSharingTaskGroups=_currentlyRunningSharingTaskGroups - In the implementation block
@property (copy) NSString * delegateAccountUID;                                                         //@synthesize delegateAccountUID=_delegateAccountUID - In the implementation block
@property (nonatomic,retain) NSDate * lastUpdatingTextChange;                                           //@synthesize lastUpdatingTextChange=_lastUpdatingTextChange - In the implementation block
@property (retain) NSSet * cachedCheckedCalendarIDs;                                                    //@synthesize cachedCheckedCalendarIDs=_cachedCheckedCalendarIDs - In the implementation block
@property (retain) CalAnimatedSplitView * mainSplitView;                                                //@synthesize mainSplitView=_mainSplitView - In the implementation block
@property (retain) CalUICalendarSidebar * calendarSidebar;                                              //@synthesize calendarSidebar=_calendarSidebar - In the implementation block
@property (retain) CALViewSwitcherSegmentedControl * viewSwitcher;                                      //@synthesize viewSwitcher=_viewSwitcher - In the implementation block
@property (assign) char isEnteringFullScreen;                                                           //@synthesize isEnteringFullScreen=_isEnteringFullScreen - In the implementation block
@property (assign) char isExitingFullScreen;                                                            //@synthesize isExitingFullScreen=_isExitingFullScreen - In the implementation block
@property (assign) char updatingTextPending;                                                            //@synthesize updatingTextPending=_updatingTextPending - In the implementation block
@property (retain) CALImportProgressController * importProgressController;                              //@synthesize importProgressController=_importProgressController - In the implementation block
@property (retain) NSMutableDictionary * queueViewers;                                                  //@synthesize queueViewers=_queueViewers - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> deferredSetupQueue;                                     //@synthesize deferredSetupQueue=_deferredSetupQueue - In the implementation block
@property (assign) char wantsDeferredSetupAfterEventStoreInitialization;                                //@synthesize wantsDeferredSetupAfterEventStoreInitialization=_wantsDeferredSetupAfterEventStoreInitialization - In the implementation block
@property (assign) char eventStoreIsInitialized;                                                        //@synthesize eventStoreIsInitialized=_eventStoreIsInitialized - In the implementation block
@property (assign) char calendarsHaveLoadedAfterLaunch;                                                 //@synthesize calendarsHaveLoadedAfterLaunch=_calendarsHaveLoadedAfterLaunch - In the implementation block
@property (retain) NSMutableDictionary * principleIDsBusyStatus;                                        //@synthesize principleIDsBusyStatus=_principleIDsBusyStatus - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)logPerfFor:(id)arg1 ;
+(id)lastCreatedEventLocalUID;
+(void)setLastCreatedEventLocalUID:(id)arg1 ;
+(void)eventDidCommit:(id)arg1 ;
+(unsigned long long)defaultStartHourForNewEvents;
+(char)documentHasEvents:(id)arg1 ;
-(void)addCalendar:(id)arg1 select:(char)arg2 edit:(char)arg3 ;
-(void)goToDate:(id)arg1 ;
-(void)switchToDayView:(id)arg1 ;
-(void)switchToWeekView:(id)arg1 ;
-(void)switchToMonthView:(id)arg1 ;
-(CALImportProgressController *)importProgressController;
-(void)dismissImportDialog;
-(void)showImportDialogWithMessage:(id)arg1 ;
-(id)managedCalendars;
-(void)handleICalURL:(id)arg1 ;
-(id)subscribeController;
-(CalUICalendarViewsController *)calendarViewsController;
-(char)isInModalSheet;
-(char)isQuitEnabled;
-(CALUserActionManager *)userActionManager;
-(char)sheetNotificationBlocked;
-(void)setDeferredSetupQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)warmupEventKitCacheForView:(id)arg1 startDate:(id)arg2 ;
-(NSObject*<OS_dispatch_queue>)deferredSetupQueue;
-(void)setEventStoreIsInitialized:(char)arg1 ;
-(char)wantsDeferredSetupAfterEventStoreInitialization;
-(void)deferredSetup;
-(void)setWantsDeferredSetupAfterEventStoreInitialization:(char)arg1 ;
-(void)eventsImportedNotification:(id)arg1 ;
-(void)setDelegateAccountUID:(NSString *)arg1 ;
-(void)setImportProgressController:(CALImportProgressController *)arg1 ;
-(void)setUserActionManager:(CALUserActionManager *)arg1 ;
-(void)setPrincipalIDsWithErrorDialogs:(NSMutableSet *)arg1 ;
-(void)setPrincipleIDsBusyStatus:(NSMutableDictionary *)arg1 ;
-(void)setEventEditingManager:(CalUIEventEditingManager *)arg1 ;
-(void)setCmManager:(CALCMManager *)arg1 ;
-(void)setSelectionManager:(CalUISelectionManager *)arg1 ;
-(void)setSearchViewController:(CalUISearchViewController *)arg1 ;
-(void)setMessageTableController:(CalMessageTableController *)arg1 ;
-(void)setCalendarViewsController:(CalUICalendarViewsController *)arg1 ;
-(void)setCalendarSidebar:(CalUICalendarSidebar *)arg1 ;
-(void)windowWillCloseNotification:(id)arg1 ;
-(void)screenResolutionChangedNotificationHandler:(id)arg1 ;
-(void)datetimeFormatChangedNotificationHandler:(id)arg1 ;
-(void)calendarStoreResetExternallyNotificationHandler:(id)arg1 ;
-(void)timeZoneEnabledPrefChanged:(id)arg1 ;
-(void)overlayCalendarPrefChanged:(id)arg1 ;
-(void)principalStatusDidChange:(id)arg1 ;
-(void)handleGoogleAuthNotification:(id)arg1 ;
-(void)calendarsDidChange;
-(void)checkedCalendarsDidChange;
-(void)splitViewWillBeginResize:(id)arg1 ;
-(void)splitViewDidEndResize:(id)arg1 ;
-(void)entriesInNoBoHasChanged:(id)arg1 ;
-(void)initAccessibility;
-(void)setCalendarViewTo:(id)arg1 withStartDate:(id)arg2 ;
-(void)removeFromNotificationCenter;
-(NSMutableDictionary *)currentlyRunningSharingTaskGroups;
-(NSString *)delegateAccountUID;
-(CalUISearchViewController *)searchViewController;
-(CalMessageTableController *)messageTableController;
-(char)eventStoreIsInitialized;
-(CalUICalendarSidebar *)calendarSidebar;
-(void)setCachedCheckedCalendarIDs:(NSSet *)arg1 ;
-(void)setCalendarsHaveLoadedAfterLaunch:(char)arg1 ;
-(void)eventsChanged:(id)arg1 ;
-(CalUISelectionManager *)selectionManager;
-(void)beSureWindowIsVisibleForSheet:(char)arg1 ;
-(void)setSheetNotificationBlocked:(char)arg1 ;
-(void)setIsInModalSheet:(char)arg1 ;
-(void)setIsQuitEnabled:(char)arg1 ;
-(void)beginSheetModal:(id)arg1 withQuit:(char)arg2 withUserNotification:(char)arg3 stayHidden:(char)arg4 ;
-(void)willBeginSheetModal:(id)arg1 withQuit:(char)arg2 withUserNotification:(char)arg3 stayHidden:(char)arg4 ;
-(void)didBeginSheetModal:(id)arg1 withQuit:(char)arg2 withUserNotification:(char)arg3 ;
-(void)willStopSheetModal:(id)arg1 ;
-(void)didStopSheetModal:(id)arg1 ;
-(CalResendInvitationsController *)invitationsController;
-(void)setInvitationsController:(CalResendInvitationsController *)arg1 ;
-(char)canvasIsScrolling;
-(CalAnimatedSplitView *)mainSplitView;
-(char)searchResultsIsOpened;
-(void)setSearchResultsOpen:(char)arg1 ;
-(id)currentViewName;
-(char)calendarListContainsNodeUID:(id)arg1 ;
-(void)beSureWindowIsVisible;
-(void)setCalendarViewTo:(id)arg1 ;
-(id)activeDateInCanvas;
-(id)findNewStartDate;
-(void)focusOnMainView;
-(void)saveViewRects;
-(void)showEvent:(id)arg1 openInspector:(char)arg2 inspectorType:(int)arg3 ;
-(id)checkedCalendarIDs;
-(id)changeInfoForChangedEventOccIDs:(id)arg1 ;
-(void)addEventClicked:(id)arg1 ;
-(CalQuickEventPopoverController *)quickEventPopoverController;
-(id)defaultCalendar;
-(char)isEventCreationValidInCalendar:(id)arg1 ;
-(id)eventWithStartDate:(id)arg1 endDate:(id)arg2 allDay:(char)arg3 title:(id)arg4 location:(id)arg5 calendar:(id)arg6 ;
-(void)saveNewEventAndOpenInspector:(id)arg1 ;
-(char)isSearchActive;
-(void)_prepareWindowForEventCreation;
-(void)switchToMonthView;
-(void)showUIOccurrence:(id)arg1 event:(id)arg2 openInspector:(char)arg3 inspectorType:(int)arg4 ;
-(id)inspectorManager;
-(void)openStandaloneInspector;
-(id)inlineInspector;
-(void)toggleRetargetableInspector;
-(void)switchToOneDayView;
-(void)switchToWeekView;
-(void)switchToYearView;
-(NSMutableDictionary *)principleIDsBusyStatus;
-(void)updateUpdatingText:(char)arg1 forceUpdate:(char)arg2 ;
-(void)checkQueueStatus:(id)arg1 ;
-(void)setLastUpdatingTextChange:(NSDate *)arg1 ;
-(void)_setUpdatingText:(char)arg1 ;
-(void)_scheduleTitleUpdate;
-(char)updatingTextPending;
-(void)setUpdatingTextPending:(char)arg1 ;
-(NSDate *)lastUpdatingTextChange;
-(CalMessagePopoverController *)messagePopoverController;
-(void)setMessagePopoverController:(CalMessagePopoverController *)arg1 ;
-(void)updateNoBo;
-(unsigned long long)countForMessages;
-(char)leftPaneShown;
-(void)setLeftPaneShown:(char)arg1 ;
-(void)closeInlineInspector;
-(char)calendarListIsShown;
-(void)hideCalendarList;
-(void)showCalendarList;
-(void)showHideLeftPane:(id)arg1 ;
-(void)saveSidebarStateFromLiveResize:(char)arg1 ;
-(void)openRetargetableInspector;
-(id)calendarListDataSource;
-(id)calendarListViewController;
-(void)saveVisibleDates;
-(void)setIsEnteringFullScreen:(char)arg1 ;
-(void)_updateWindowLayoutForFullScreen:(char)arg1 ;
-(void)setIsExitingFullScreen:(char)arg1 ;
-(void)windowWillBecomeVisible:(id)arg1 ;
-(id)selectedOrSenderNode:(id)arg1 ;
-(void)showSharingPopoverForNode:(id)arg1 ;
-(void)showSharingPopover:(id)arg1 ;
-(void)publishNode:(id)arg1 ;
-(id)publishController;
-(void)stopSharingSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void*)arg3 ;
-(void)resortCalendars;
-(id)resendInvitationsController;
-(void)changeLocation:(id)arg1 ;
-(void)_queueHelperForSender:(id)arg1 nibName:(id)arg2 groupType:(Class)arg3 viewerType:(Class)arg4 ;
-(NSMutableDictionary *)queueViewers;
-(void)setQueueViewers:(NSMutableDictionary *)arg1 ;
-(CalManagedObjectContext *)persistentContext;
-(id)selectedManagedCalendar;
-(id)defaultManagedCalendar;
-(char)isDefaultCalendarLastSelected;
-(void)setDefaultManagedCalendar:(id)arg1 ;
-(void)setDefaultManagedCalendar:(id)arg1 userSelected:(char)arg2 ;
-(void)setDefaultCalendarToLastSelected;
-(void)selectNode:(id)arg1 checked:(long long)arg2 ;
-(unsigned long long)numberOfCalendars;
-(unsigned long long)numberOfServerGroups;
-(id)_calendarHelperFilterChecked:(char)arg1 ;
-(NSSet *)cachedCheckedCalendarIDs;
-(long long)stateForCalendarWithUID:(id)arg1 ;
-(id)_managedCalendarsFromEKCalendars:(id)arg1 ;
-(id)checkedCalendars;
-(id)nextCalendarSymbolicColor;
-(void)newLocalCalendar:(id)arg1 ;
-(unsigned long long)nextNodeOrderForNodes:(id)arg1 ;
-(unsigned long long)nextNodeOrderForGroup:(id)arg1 ;
-(char)_allowLocalCalendarCreation;
-(void)newCalendarInGroup:(id)arg1 ;
-(void)newSubmenuNeedsUpdate:(id)arg1 ;
-(char)selectToolbarForwards:(char)arg1 ;
-(char)selectCalendarList;
-(char)selectMainViewForwards:(char)arg1 ;
-(char)selectSearchResults;
-(long long)nextSectionFromSection:(long long)arg1 forward:(char)arg2 ;
-(char)selectCalTabSection:(long long)arg1 forward:(char)arg2 ;
-(id)messagesForEventWithLocalUID:(id)arg1 ;
-(id)messagesForOccurrenceID:(id)arg1 ;
-(char)hasMessagesForOccurrenceID:(id)arg1 ;
-(void)removeMessagesForEventWithLocalUID:(id)arg1 ;
-(void)removeMessagesForOccurrenceID:(id)arg1 ;
-(void)removeInvitationsForEvents:(id)arg1 ;
-(void)beginPropogatingLegacyChangesToEK;
-(void)endPropogatingLegacyChangesToEK;
-(void)moveAllSelectedEventsToCalendar:(id)arg1 ;
-(void)moveEvents:(id)arg1 toCalendar:(id)arg2 ;
-(NSMutableSet *)principalIDsWithErrorDialogs;
-(void)goToCurrentDay:(id)arg1 ;
-(void)goToDay:(id)arg1 ;
-(void)switchToYearView:(id)arg1 ;
-(void)newEventCommand:(id)arg1 ;
-(void)toggleCalendarList:(id)arg1 ;
-(void)showNotificationBox:(id)arg1 ;
-(void)showHideSearchResults:(id)arg1 ;
-(void)copyLinkToClipboard:(id)arg1 ;
-(void)publish:(id)arg1 ;
-(void)stopSharing:(id)arg1 ;
-(void)resendInvitations:(id)arg1 ;
-(void)unpublish:(id)arg1 ;
-(void)sendPublishEmail:(id)arg1 ;
-(void)toggleCalendarAvailability:(id)arg1 ;
-(void)getInfo:(id)arg1 ;
-(void)editEvent:(id)arg1 ;
-(void)makeTextBigger:(id)arg1 ;
-(void)_trackUserActivityType:(id)arg1 activityObject:(id)arg2 ;
-(id)_mainUserActivity;
-(void)_setMainUserActivity:(id)arg1 ;
-(void)prefetchAdditionalEventsAfterAllVisibleContainersLoadedAfterLaunch;
-(id)initWithDelegateUID:(id)arg1 ;
-(char)isMainWindowController;
-(void)saveWindowFrameUsingName:(id)arg1 ;
-(void)beginSheetModal:(id)arg1 ;
-(void)stopSheetModal:(id)arg1 ;
-(id)mainCalendarView;
-(void)searchDidFinish:(id)arg1 ;
-(void)setIsSearchActive:(char)arg1 ;
-(char)shouldResetCacheForCalendarUIDs:(id)arg1 ;
-(void)eventsUpdatedNotification:(id)arg1 ;
-(void)newEventAtDate:(id)arg1 isAllDay:(char)arg2 ;
-(void)setCalendarWithUID:(id)arg1 state:(long long)arg2 ;
-(void)printCalendars:(id)arg1 ;
-(void)resetMiniMonths;
-(id)windowUID;
-(char)isInlineInspectorOpenForEventOccurrenceID:(id)arg1 ;
-(void)showEventWithLegacyOccurrenceID:(id)arg1 openInspector:(char)arg2 ;
-(void)showEventWithEventOccurrenceID:(id)arg1 openInspector:(char)arg2 ;
-(void)visibleDateRangeChanged;
-(void)prepareWindowForTermination;
-(void)fileSystemChanged:(id)arg1 ;
-(char)isAddressBookOK;
-(void)indicateInvitationIsNotValid;
-(void)showCalDAVQueue:(id)arg1 ;
-(void)showExchangeQueue:(id)arg1 ;
-(void)setDefaultCalendar:(id)arg1 userSelected:(char)arg2 ;
-(void)setDefaultCalendarToFirstServerCalendar;
-(id)topLevelItems;
-(id)checkedManagedCalendars;
-(unsigned long long)nextNodeOrderForCalendar:(id)arg1 ;
-(void)newCalendar:(id)arg1 ;
-(void)newGroup:(id)arg1 ;
-(void)addGroup:(id)arg1 select:(char)arg2 edit:(char)arg3 ;
-(void)fileMenuNeedsUpdate:(id)arg1 ;
-(void)newSubmenuNeedsUpdateOldBroken:(id)arg1 ;
-(void)newCalendarSubmenuNeedsUpdate:(id)arg1 ;
-(void)selectNextSectionFromSection:(long long)arg1 forward:(char)arg2 ;
-(void)handleErrorForPrincipal:(id)arg1 ;
-(void)errorStateDidUpdate:(id)arg1 ;
-(void)trackDateSelection:(id)arg1 ;
-(void)setCanvasIsScrolling:(char)arg1 ;
-(CALCMManager *)cmManager;
-(CalCalDAVTaskManager *)calDAVTaskManager;
-(void)setCalDAVTaskManager:(CalCalDAVTaskManager *)arg1 ;
-(CalUIEventEditingManager *)eventEditingManager;
-(void)setQuickEventPopoverController:(CalQuickEventPopoverController *)arg1 ;
-(void)setCurrentlyRunningSharingTaskGroups:(NSMutableDictionary *)arg1 ;
-(void)setMainSplitView:(CalAnimatedSplitView *)arg1 ;
-(void)setViewSwitcher:(CALViewSwitcherSegmentedControl *)arg1 ;
-(char)isEnteringFullScreen;
-(char)isExitingFullScreen;
-(char)calendarsHaveLoadedAfterLaunch;
-(void)_handleOpenDateURL:(id)arg1 ;
-(void)_handleCalendarItemExternalIdentifierURL:(id)arg1 ;
-(char)importFiles:(id)arg1 toEventCalendar:(id)arg2 autoSelectCalendar:(char)arg3 context:(id)arg4 ;
-(char)_attendeeInMessage:(id)arg1 matchesPrincipalForAccount:(id)arg2 ;
-(id)bestPrincipalForMessage:(id)arg1 inManagedObjectContext:(id)arg2 ;
-(id)createImportCalendarFromFile:(id)arg1 withTitle:(id)arg2 withNotes:(id)arg3 isEvent:(char)arg4 isTask:(char)arg5 withColor:(id)arg6 inManagedObjectContext:(id)arg7 ;
-(id)_topmostPrincipal;
-(id)_calendarEntityNameForPrincipal:(id)arg1 ;
-(void)exchangeWarningSheetDidEndWithCancel:(char)arg1 contextInfo:(id)arg2 ;
-(void)importVCSFinishedWithNumMalformedEntities:(unsigned long long)arg1 inCalendar:(id)arg2 ;
-(void)_showICSImportDialog;
-(char)_importFilesForDrag:(id)arg1 ;
-(char)_warnAboutDroppingReminders:(unsigned long long)arg1 ;
-(id)createImportCalendarFromICS:(id)arg1 fromFile:(id)arg2 isEvent:(char)arg3 isTask:(char)arg4 inManagedObjectContext:(id)arg5 ;
-(char)importVCSFile:(id)arg1 toCalendar:(id*)arg2 numMalformedEntities:(unsigned long long*)arg3 inManagedObjectContext:(id)arg4 numReminders:(unsigned long long*)arg5 ;
-(void)importFinalizeCalendarFromVCS:(id)arg1 numMalformedEntities:(long long)arg2 inManagedObjectContext:(id)arg3 ;
-(id)_createCalendarForFirstFileWithEvents:(id)arg1 context:(id)arg2 ;
-(char)_displayDialogForIssue:(id)arg1 issueCount:(unsigned long long)arg2 totalEvents:(unsigned long long)arg3 dismissPermanently:(char)arg4 answerCallBack:(/*^block*/id)arg5 ;
-(void)_warnAboutDroppingReminders:(unsigned long long)arg1 files:(id)arg2 ;
-(void)exportPanelDidEnd:(id)arg1 returnCode:(long long)arg2 nodeToExport:(id)arg3 ;
-(char)exportNode:(id)arg1 toURL:(id)arg2 ;
-(void)exchangeErrorSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void*)arg3 ;
-(char)importCalendarFilesForDrag:(id)arg1 ;
-(char)importFiles:(id)arg1 toCalendar:(id)arg2 autoSelectCalendar:(char)arg3 ;
-(void)_forceUpdateEKAndUIAfterImportOfManagedObjectIDs:(id)arg1 inContext:(id)arg2 ;
-(id)pathForDragAtURL:(id)arg1 withName:(id)arg2 ;
-(void)reloadCalendars;
-(void)find:(id)arg1 ;
-(CALViewSwitcherSegmentedControl *)viewSwitcher;
-(id)selectedNode;
-(void)setIsFullScreen:(char)arg1 ;
-(void)eventsChangedNotification:(id)arg1 ;
-(id)dateFromDateString:(id)arg1 ;
-(CalEventStore *)eventStore;
-(id)selectedCalendar;
-(void)calendarSelected:(id)arg1 ;
-(void)selectCalendar:(id)arg1 ;
-(void)trackEventSelection:(id)arg1 ;
-(void)setEventStore:(CalEventStore *)arg1 ;
-(void)saveChangesToEvent:(id)arg1 ;
-(void)makeTextSmaller:(id)arg1 ;
-(void)dealloc;
-(CALWindow *)window;
-(void)windowDidBecomeKey:(id)arg1 ;
-(void)toggleFullScreen:(id)arg1 ;
-(void)performClose:(id)arg1 ;
-(char)validateMenuItem:(id)arg1 ;
-(CGSize)windowWillResize:(id)arg1 toSize:(CGSize)arg2 ;
-(void)updateUserActivityState:(id)arg1 ;
-(void)restoreUserActivityState:(id)arg1 ;
-(void)setWindow:(CALWindow *)arg1 ;
-(char)openFile:(id)arg1 ;
-(void)performZoom:(id)arg1 ;
-(void)performMiniaturize:(id)arg1 ;
-(char)windowShouldClose:(id)arg1 ;
-(id)windowWillReturnUndoManager:(id)arg1 ;
-(void)windowDidFailToEnterFullScreen:(id)arg1 ;
-(void)windowDidFailToExitFullScreen:(id)arg1 ;
-(void)window:(id)arg1 willEncodeRestorableState:(id)arg2 ;
-(void)windowDidResignKey:(id)arg1 ;
-(void)windowDidBecomeMain:(id)arg1 ;
-(void)windowDidDeminiaturize:(id)arg1 ;
-(void)windowWillEnterFullScreen:(id)arg1 ;
-(void)windowDidEnterFullScreen:(id)arg1 ;
-(void)windowWillExitFullScreen:(id)arg1 ;
-(void)windowDidExitFullScreen:(id)arg1 ;
-(void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void*)arg3 ;
-(char)splitView:(id)arg1 shouldHideDividerAtIndex:(long long)arg2 ;
-(CGRect)splitView:(id)arg1 effectiveRect:(CGRect)arg2 forDrawnRect:(CGRect)arg3 ofDividerAtIndex:(long long)arg4 ;
-(id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(CGPoint)arg3 userData:(void*)arg4 ;
-(void)moveToBeginningOfLine:(id)arg1 ;
-(void)moveToEndOfLine:(id)arg1 ;
-(void)moveForward:(id)arg1 ;
-(void)moveBackward:(id)arg1 ;
-(id)calendars;
-(void)taskGroup:(id)arg1 didFinishWithError:(id)arg2 ;
-(id)nodes;
-(void)showInspector:(id)arg1 ;
-(char)isFullScreen;
-(void)export:(id)arg1 ;
-(void)import:(id)arg1 ;
@end

