/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:16:57 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Calendar.app/Contents/MacOS/Calendar
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Calendar/CalUIOccurrenceModel.h>
#import <Calendar/CalUIOccurrenceListDataSource.h>

@class NSString, CalEventOccurrenceCache, NSDate, NSSet, CalUIOccurrenceChangeInfo;

@interface CalUIOccurrenceIndex : CalUIOccurrenceModel <CalUIOccurrenceListDataSource> {

	NSString* _indexTimeZoneString;
	CalEventOccurrenceCache* _cache;
	NSDate* _indexDate;
	NSSet* _activeCalendarIDs;
	CalUIOccurrenceChangeInfo* _changeInfo;
	NSSet* _oldCalendarIDs;

}

@property (retain) NSDate * indexDate;                                               //@synthesize indexDate=_indexDate - In the implementation block
@property (readonly) char rebuildIsPending; 
@property (nonatomic,retain) CalEventOccurrenceCache * occurrenceCache;              //@synthesize cache=_cache - In the implementation block
@property (retain) NSSet * activeCalendarIDs;                                        //@synthesize activeCalendarIDs=_activeCalendarIDs - In the implementation block
@property (retain) CalUIOccurrenceChangeInfo * changeInfo;                           //@synthesize changeInfo=_changeInfo - In the implementation block
@property (retain) NSSet * oldCalendarIDs;                                           //@synthesize oldCalendarIDs=_oldCalendarIDs - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setIndexDate:(NSDate *)arg1 ;
-(void)setChangeInfo:(CalUIOccurrenceChangeInfo *)arg1 ;
-(void)setActiveCalendarIDs:(NSSet *)arg1 ;
-(void)occurrenceCacheDidChange:(id)arg1 ;
-(id)filterOccurrences:(id)arg1 ;
-(NSSet *)activeCalendarIDs;
-(id)occurrencesBetweenStartDate:(id)arg1 endDate:(id)arg2 ;
-(char)hasOccurrences;
-(char)_setOnCacheAndUpdateStartDate:(id)arg1 endDate:(id)arg2 calendarIDs:(id)arg3 ;
-(CalUIOccurrenceChangeInfo *)changeInfo;
-(void)addChangeInfoToExistingChangeInfo:(id)arg1 ;
-(void)rebuildIndexNow;
-(NSSet *)oldCalendarIDs;
-(void)setOldCalendarIDs:(NSSet *)arg1 ;
-(void)_notifyModelDidChangeWithChangeInfo:(id)arg1 ;
-(void)resetOccurrenceCache;
-(char)attemptIndexUpdateWithUpdatedOccurrences:(id)arg1 ;
-(void)_rebuildIndexWithChangeInfo:(id)arg1 ;
-(void)_selectedCalendarsDidChange;
-(char)rebuildIsPending;
-(void)setRangeStartDate:(id)arg1 endDate:(id)arg2 ;
-(void)updateForCurrentRange;
-(void)resetOccurrenceCacheWithBestGuessForMainWindowCalendars;
-(void)debugForceIndexRebuild:(id)arg1 ;
-(void)updateWithNewCalendars;
-(void)_filterSettingsDidChange;
-(NSDate *)indexDate;
-(CalEventOccurrenceCache *)occurrenceCache;
-(void)setOccurrenceCache:(CalEventOccurrenceCache *)arg1 ;
-(id)init;
-(id)allOccurrences;
-(id)occurrenceForOccurrenceID:(id)arg1 ;
-(id)occurrencesForDate:(id)arg1 ;
-(id)datesWithOccurrences;
@end

