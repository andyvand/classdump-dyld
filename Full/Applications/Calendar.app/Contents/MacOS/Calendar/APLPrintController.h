/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:23:52 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Calendar.app/Contents/MacOS/Calendar
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Calendar/Calendar-Structs.h>
#import <Calendar/CalendarOutlineViewDataSource.h>

@class NSArray, APLImageView, NSView, NSButton, NSSlider, NSTextField, CALNumericFormatter, APLPresetsController, NSDictionary, APLRangeController, NSBox, NSWindow, NSPopUpButton, NSMutableArray, APLView, APLLayout, APLModel, NSPrintInfo, NSString, NSMutableDictionary, NSMenu, CALMainController;

@interface APLPrintController : NSObject <CalendarOutlineViewDataSource> {

	char nibLoaded;
	char _ignoreChanges;
	NSArray* _topLevelItems;
	APLImageView* previewView;
	NSView* rangeView;
	NSView* optionsView;
	NSView* fullOptionsView;
	NSButton* continueButton;
	NSSlider* zoomSlider;
	NSTextField* zoomField;
	NSTextField* layoutErrorField;
	CALNumericFormatter* numericFormatter;
	APLPresetsController* presetsController;
	NSDictionary* timerangeControllers;
	APLRangeController* currentRangeController;
	id dayRangeController;
	id weekRangeController;
	id monthRangeController;
	NSTextField* timeRangeHeader;
	NSBox* timeRangeSpacer;
	NSWindow* progressWin;
	id progressBar;
	id infoTextField;
	NSWindow* printWin;
	id previewProgressBar;
	NSPopUpButton* paperPopup;
	NSPopUpButton* modelPopup;
	id presetManageWindow;
	id presetNameField;
	id presetSaveWindow;
	id presetTableView;
	id calendarsOutlineView;
	NSView* fullCalendarsView;
	NSMutableArray* selectedCalendarKeys;
	APLView* printView;
	APLLayout* renderingLayout;
	APLModel* currentModel;
	OpaquePMPaperRef currentPaper;
	NSPrintInfo* printInfo;
	NSString* defaultPaperID;
	NSString* currentPaperID;
	NSMutableDictionary* papers;
	NSMutableArray* models;
	NSMutableArray* presets;
	NSMutableDictionary* optionValues;
	NSMenu* _sharedPaperMenu;
	unsigned previousPaperIndex;
	unsigned previousModelIndex;
	unsigned presetIndex;
	char _willRenderPreview;
	CGPoint _optionsOrigin;
	CALMainController* _mainController;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(long long)firstDayOfWeekIndexIgnoringDaysPerWeek:(char)arg1 ;
-(id)mainController;
-(id)initWithMainController:(id)arg1 ;
-(void)displayPrintPanel:(id)arg1 withStartDate:(id)arg2 ;
-(void)setupPaperMenu;
-(char)loadModels;
-(void)setupModelsMenu;
-(void)selectDefaultModel;
-(void)loadTimerangesWithStartDate:(id)arg1 ;
-(void)loadCalendars;
-(char)changeModel;
-(id)selectedEKCalendars;
-(void)scheduleRenderPreview;
-(void)renderThread;
-(long long)runModalLayout;
-(void)endLayout;
-(void)renderFinishedWithResult:(long long)arg1 ;
-(void)stopModalWithCodeNumber:(id)arg1 ;
-(void)renderPreview;
-(char)changePaperTo:(id)arg1 ;
-(char)updatePaper;
-(void)changeModel:(id)arg1 ;
-(void)updateOptions;
-(void)setTimeRangeAndCalendarListHidden:(char)arg1 ;
-(void)setTimerange:(id)arg1 ;
-(void)changePreset:(id)arg1 ;
-(void)shouldSavePreset:(id)arg1 ;
-(void)managePresets:(id)arg1 ;
-(void)savePresets;
-(void)setupPresetsMenu;
-(void)abortSavePreset:(id)arg1 ;
-(void)addOption:(id)arg1 inRect:(CGRect)arg2 withTag:(long long)arg3 ;
-(void)repackItemsWithOptionsHeight:(double)arg1 ;
-(void)optionChanged:(id)arg1 ;
-(void)nextGroup;
-(void)nextGroupOnMainThread;
-(void)closePrintPanel;
-(char)hasTopLevelDisclosureTriangle;
-(char)hasSecondLevelDisclosureTriangle;
-(char)isGroupItem:(id)arg1 ;
-(char)isSeparateDelegate;
-(void)closeWindow:(id)arg1 ;
-(void)refreshInfo;
-(char)shouldRenderOnEndChanged;
-(char)loadPresets;
-(void)savePreset:(id)arg1 ;
-(id)presets;
-(void)endManagePresets:(id)arg1 ;
-(id)eventsForStartDate:(id)arg1 endDate:(id)arg2 ;
-(char)_itemIsExpanded:(id)arg1 ;
-(id)_calendarsForPrincipal:(id)arg1 ;
-(void)toggleNodeSelection:(id)arg1 ;
-(char)isNodeSelected:(id)arg1 ;
-(void)node:(id)arg1 setSelection:(char)arg2 ;
-(void)toggleNodeSelection:(id)arg1 render:(char)arg2 ;
-(char)hasSelectedCalendars;
-(void)setModel:(id)arg1 ;
-(id)store;
-(id)init;
-(void)dealloc;
-(char)validateMenuItem:(id)arg1 ;
-(void)print:(id)arg1 ;
-(void)cancel:(id)arg1 ;
-(void)awakeFromNib;
-(void)windowWillClose:(id)arg1 ;
-(void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4 ;
-(char)outlineView:(id)arg1 shouldSelectItem:(id)arg2 ;
-(id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3 ;
-(char)outlineView:(id)arg1 isGroupItem:(id)arg2 ;
-(void)outlineViewSelectionIsChanging:(id)arg1 ;
-(void)outlineViewItemWillExpand:(id)arg1 ;
-(void)outlineViewItemDidExpand:(id)arg1 ;
-(void)outlineViewItemWillCollapse:(id)arg1 ;
-(void)outlineViewItemDidCollapse:(id)arg1 ;
-(long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2 ;
-(id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3 ;
-(char)outlineView:(id)arg1 isItemExpandable:(id)arg2 ;
-(id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3 ;
-(void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4 ;
-(id)outlineView:(id)arg1 itemForPersistentObject:(id)arg2 ;
-(id)outlineView:(id)arg1 persistentObjectForItem:(id)arg2 ;
-(void)outlineView:(id)arg1 sortDescriptorsDidChange:(id)arg2 ;
-(char)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3 ;
-(unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4 ;
-(char)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4 ;
-(id)populateMenu:(id)arg1 withPaperList:(id)arg2 ;
-(void)changePaper:(id)arg1 ;
@end

