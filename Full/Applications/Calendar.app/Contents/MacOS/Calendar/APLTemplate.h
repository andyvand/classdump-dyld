/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:16:55 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Calendar.app/Contents/MacOS/Calendar
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Calendar/NSXMLParserDelegate.h>

@class NSString, APLModel, NSDictionary, APLTemplateElement, NSMutableArray, APLConstraint, APLPacker;

@interface APLTemplate : NSObject <NSXMLParserDelegate> {

	NSString* name;
	APLModel* model;
	NSDictionary* attributes;
	APLTemplateElement* _rootTemplateElement;
	NSMutableArray* packers;
	NSDictionary* expectedElementNamesDict;
	NSMutableArray* elementNamesStack;
	NSString* currentElementName;
	char parsingElements;
	char parsingPackers;
	APLConstraint* currentConstraint;
	APLTemplateElement* _currentTemplateElement;
	NSMutableArray* parentTemplateElementsStack;
	APLPacker* currentPacker;

}

@property (retain) APLTemplateElement * rootTemplateElement;                 //@synthesize rootTemplateElement=_rootTemplateElement - In the implementation block
@property (retain) APLTemplateElement * currentTemplateElement;              //@synthesize currentTemplateElement=_currentTemplateElement - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)availableDataSourceTypes;
-(void)unloadTemplate;
-(APLTemplateElement *)rootTemplateElement;
-(void)addPackers:(id)arg1 ;
-(char)resolvePackerReferences;
-(char)canLayoutElements:(id)arg1 atPagePosition:(id)arg2 ;
-(char)isElementNameExpected:(id)arg1 ;
-(id)initWithName:(id)arg1 andModel:(id)arg2 ;
-(void)setRootTemplateElement:(APLTemplateElement *)arg1 ;
-(void)setCurrentTemplateElement:(APLTemplateElement *)arg1 ;
-(APLTemplateElement *)currentTemplateElement;
-(void)parserDidStartDocument:(id)arg1 ;
-(void)parserDidEndDocument:(id)arg1 ;
-(void)parser:(id)arg1 foundNotationDeclarationWithName:(id)arg2 publicID:(id)arg3 systemID:(id)arg4 ;
-(void)parser:(id)arg1 foundUnparsedEntityDeclarationWithName:(id)arg2 publicID:(id)arg3 systemID:(id)arg4 notationName:(id)arg5 ;
-(void)parser:(id)arg1 foundAttributeDeclarationWithName:(id)arg2 forElement:(id)arg3 type:(id)arg4 defaultValue:(id)arg5 ;
-(void)parser:(id)arg1 foundElementDeclarationWithName:(id)arg2 model:(id)arg3 ;
-(void)parser:(id)arg1 foundInternalEntityDeclarationWithName:(id)arg2 value:(id)arg3 ;
-(void)parser:(id)arg1 foundExternalEntityDeclarationWithName:(id)arg2 publicID:(id)arg3 systemID:(id)arg4 ;
-(void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5 ;
-(void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 ;
-(void)parser:(id)arg1 didStartMappingPrefix:(id)arg2 toURI:(id)arg3 ;
-(void)parser:(id)arg1 didEndMappingPrefix:(id)arg2 ;
-(void)parser:(id)arg1 foundCharacters:(id)arg2 ;
-(void)parser:(id)arg1 foundIgnorableWhitespace:(id)arg2 ;
-(void)parser:(id)arg1 foundProcessingInstructionWithTarget:(id)arg2 data:(id)arg3 ;
-(void)parser:(id)arg1 foundComment:(id)arg2 ;
-(void)parser:(id)arg1 foundCDATA:(id)arg2 ;
-(id)parser:(id)arg1 resolveExternalEntityName:(id)arg2 systemID:(id)arg3 ;
-(void)parser:(id)arg1 parseErrorOccurred:(id)arg2 ;
-(NSString *)description;
-(char)isEqual:(id)arg1 ;
-(id)name;
-(void)setAttributes:(id)arg1 ;
@end

