/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:16:55 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Calendar.app/Contents/MacOS/Calendar
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class EKEventStore;

@interface CalEventStore : NSObject {

	EKEventStore* _eventStore;
	long long _propogateManagedObjectChangesAndSavesToEK;

}

@property (retain) EKEventStore * eventStore;                                        //@synthesize eventStore=_eventStore - In the implementation block
@property (assign) long long propogateManagedObjectChangesAndSavesToEK;              //@synthesize propogateManagedObjectChangesAndSavesToEK=_propogateManagedObjectChangesAndSavesToEK - In the implementation block
+(void)registerForEventChanges:(id)arg1 selector:(SEL)arg2 ;
+(void)registerForBatchedEventChanges:(id)arg1 selector:(SEL)arg2 ;
+(void)registerForCalendarChanges:(id)arg1 selector:(SEL)arg2 ;
+(id)fetchEventWithIdentifier:(id)arg1 ;
+(void)saveNewEvent:(id)arg1 commit:(char)arg2 ;
+(id)fetchCalendarWithIdentifier:(id)arg1 ;
+(void)saveChangesToEvents:(id)arg1 ;
+(id)fetchEventsWithIdentifiers:(id)arg1 ;
+(void)_addDefaultDelegatesToEditingContext:(id)arg1 ;
+(id)replaceEventsWithEditingContextEvents:(id)arg1 ;
+(id)_filterEventsForUserPrefs:(id)arg1 allDayType:(long long)arg2 ;
+(id)fetchEventsWithExternalIdentifier:(id)arg1 ;
+(void)saveNewEvents:(id)arg1 commit:(char)arg2 ;
+(id)newEditingContext;
+(void)saveCompleteChangesToEvent:(id)arg1 ;
+(void)saveChangesToEvents:(id)arg1 isPartial:(char)arg2 impliedCommitDecision:(char)arg3 ;
+(void)saveCompleteChangesToEvent:(id)arg1 span:(int)arg2 ;
+(void)saveChangesToEvent:(id)arg1 isPartial:(char)arg2 ;
+(void)savePartialChangesToEvent:(id)arg1 span:(int)arg2 ;
+(id)editingContextForObjects:(id)arg1 sender:(id)arg2 ;
+(void)deleteEvents:(id)arg1 onlyThese:(char)arg2 ;
+(void)saveChangesToCalendars:(id)arg1 isPartial:(char)arg2 ;
+(void)saveNewCalendar:(id)arg1 commit:(char)arg2 ;
+(void)saveNewCalendars:(id)arg1 commit:(char)arg2 ;
+(void)registerForEventChanges:(id)arg1 selector:(SEL)arg2 inEventStore:(id)arg3 ;
+(void)registerForBatchedEventChanges:(id)arg1 selector:(SEL)arg2 inEventStore:(id)arg3 ;
+(void)registerForCalendarChanges:(id)arg1 selector:(SEL)arg2 inEventStore:(id)arg3 ;
+(void)registerForSourceChanges:(id)arg1 selector:(SEL)arg2 inEventStore:(id)arg3 ;
+(void)saveNewEvent:(id)arg1 ;
+(void)saveNewEvents:(id)arg1 ;
+(void)saveChangesToEventWithImpliedCommitDecision:(id)arg1 ;
+(void)savePartialChangesToEvent:(id)arg1 ;
+(void)deleteEvents:(id)arg1 ;
+(void)saveChangesToCalendar:(id)arg1 isPartial:(char)arg2 ;
+(void)saveNewCalendar:(id)arg1 ;
+(void)saveNewCalendars:(id)arg1 ;
+(void)deleteCalendars:(id)arg1 ;
+(void)saveNewSources:(id)arg1 commit:(char)arg2 ;
+(void)saveChangesToSources:(id)arg1 isPartial:(char)arg2 ;
+(void)deleteSources:(id)arg1 ;
+(id)decisionDelegate;
+(void)saveDraftOfEvent:(id)arg1 ;
+(void)saveChangesToEvent:(id)arg1 ;
+(void)initialize;
-(void)fetchEventsInDateRange:(id)arg1 inCalendarIDs:(id)arg2 allDayType:(long long)arg3 prefetchHint:(long long)arg4 withCompletionBlock:(/*^block*/id)arg5 ;
-(id)initWithSourceIdentifier:(id)arg1 ;
-(void)registerForEventChanges:(id)arg1 selector:(SEL)arg2 ;
-(void)registerForBatchedEventChanges:(id)arg1 selector:(SEL)arg2 ;
-(void)registerForCalendarChanges:(id)arg1 selector:(SEL)arg2 ;
-(id)fetchEventWithIdentifier:(id)arg1 ;
-(id)defaultCalendar;
-(id)newEvent;
-(id)fetchCalendarWithIdentifier:(id)arg1 ;
-(id)fetchSourceWithIdentifier:(id)arg1 ;
-(void)beginPropogatingLegacyChangesToEK;
-(void)endPropogatingLegacyChangesToEK;
-(id)fetchEventsWithIdentifiers:(id)arg1 ;
-(void)forceUpdateEventKitForManagedObjectIDs:(id)arg1 inContext:(id)arg2 ;
-(void)listenForLegacyChanges;
-(id)fetchEventsInDateRange:(id)arg1 ;
-(id)fetchCalendars;
-(id)fetchEventsInDateRange:(id)arg1 inCalendars:(id)arg2 ;
-(id)fetchEventsFromStartDate:(id)arg1 toEndDate:(id)arg2 inCalendars:(id)arg3 ;
-(id)fetchEventsWithExternalIdentifier:(id)arg1 ;
-(void)setPropogateManagedObjectChangesAndSavesToEK:(long long)arg1 ;
-(void)managedObjectContextChangedOrSaved:(id)arg1 ;
-(long long)propogateManagedObjectChangesAndSavesToEK;
-(void)refreshStoreForManagedObjectContextNotification:(id)arg1 ;
-(id)newCalendar;
-(id)newLocalGroup;
-(id)fetchSources;
-(id)fetchEventsOnDate:(id)arg1 ;
-(void)fetchEventsInDateRange:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)registerForSourceChanges:(id)arg1 selector:(SEL)arg2 ;
-(id)loadDraftOfEventWithOccurrenceID:(id)arg1 ;
-(EKEventStore *)eventStore;
-(void)setEventStore:(EKEventStore *)arg1 ;
-(void)dealloc;
-(void)cleanup;
@end

