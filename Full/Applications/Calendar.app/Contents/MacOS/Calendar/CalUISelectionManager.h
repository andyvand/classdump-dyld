/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:23:53 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /Applications/Calendar.app/Contents/MacOS/Calendar
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Calendar/EKEventChangeListenerDelegate.h>

@class CALMainController, EKEventChangeListener, NSMutableDictionary, NSMutableSet, NSString;

@interface CalUISelectionManager : NSObject <EKEventChangeListenerDelegate> {

	char _notificationIsPending;
	CALMainController* _mainController;
	EKEventChangeListener* _eventChangeListener;
	NSMutableDictionary* _selectedEventsIndex;
	NSMutableSet* _modifiedEventOccIDs;

}

@property (__weak) CALMainController * mainController;                       //@synthesize mainController=_mainController - In the implementation block
@property (assign) char notificationIsPending;                               //@synthesize notificationIsPending=_notificationIsPending - In the implementation block
@property (retain) EKEventChangeListener * eventChangeListener;              //@synthesize eventChangeListener=_eventChangeListener - In the implementation block
@property (retain) NSMutableDictionary * selectedEventsIndex;                //@synthesize selectedEventsIndex=_selectedEventsIndex - In the implementation block
@property (retain) NSMutableSet * modifiedEventOccIDs;                       //@synthesize modifiedEventOccIDs=_modifiedEventOccIDs - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(CALMainController *)mainController;
-(id)initWithMainController:(id)arg1 ;
-(void)checkedCalendarsDidChange;
-(void)setMainController:(CALMainController *)arg1 ;
-(id)selectedEvents;
-(void)selectEvent:(id)arg1 ;
-(id)calendarForSelectedEvents;
-(id)calendarsForSelectedEvents;
-(long long)numberOfSelectedEvents;
-(id)selectedOccurrences;
-(id)selectedLegacyOccurrenceIDs;
-(char)hasSelectedEvents;
-(id)selectedEventOccurrenceIDs;
-(void)selectEventOccurrenceIDs:(id)arg1 ;
-(void)selectEvents:(id)arg1 ;
-(char)isUIOccurrenceSelected:(id)arg1 ;
-(char)updateSelectionForUIOccurrence:(id)arg1 fromMouseEvent:(id)arg2 ;
-(void)selectEvent:(id)arg1 extendSelection:(char)arg2 ;
-(void)setNotificationIsPending:(char)arg1 ;
-(void)setSelectedEventsIndex:(NSMutableDictionary *)arg1 ;
-(void)deselectEventOccurrenceIDs:(id)arg1 ;
-(NSMutableDictionary *)selectedEventsIndex;
-(NSMutableSet *)modifiedEventOccIDs;
-(void)setModifiedEventOccIDs:(NSMutableSet *)arg1 ;
-(void)_invalidateRestorableState;
-(char)notificationIsPending;
-(void)actuallyPostSelectionChangedNotification;
-(void)postSelectionChangedNotificationForEventOccurrenceIDs:(id)arg1 ;
-(void)_clearSelectionExceptEventOccurrenceIDs:(id)arg1 ;
-(char)isEventOccurrenceIDSelected:(id)arg1 ;
-(void)selectEventOccurrenceIDs:(id)arg1 andNotify:(char)arg2 ;
-(id)eventForEventOccurrenceID:(id)arg1 ;
-(void)deselectEvent:(id)arg1 ;
-(void)postSelectionChangedNotification;
-(void)selectEventOccurrenceID:(id)arg1 ;
-(id)trackedEvents;
-(void)trackedEventsDidUpdate:(id)arg1 ;
-(void)setEventChangeListener:(EKEventChangeListener *)arg1 ;
-(EKEventChangeListener *)eventChangeListener;
-(void)clearSelection;
-(void)dealloc;
@end

