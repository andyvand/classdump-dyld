/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 2:28:48 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/CoreServices/Applications/System Image Utility.app/Contents/Frameworks/SIUFoundation.framework/Versions/A/XPCServices/com.apple.SIUAgent.xpc/Contents/Resources/AutoPartition.app/Contents/MacOS/AutoPartition
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AutoPartition/AutoPartition-Structs.h>
#import <AutoPartition/DMAsyncDelegate.h>
#import <AutoPartition/NSApplicationDelegate.h>

@class NSWindow, NSButton, NSProgressIndicator, NSImageView, NSTextField, DMManager, DMPartitionDisk, NSDictionary, NSString, NSTimer, NSSet, NSTask;

@interface PartitionController : NSObject <DMAsyncDelegate, NSApplicationDelegate> {

	NSWindow* mainWindow;
	NSButton* cancelButton;
	NSButton* partitionButton;
	NSProgressIndicator* progressBar;
	NSImageView* warningIcon;
	NSTextField* targetText;
	NSTextField* warningText;
	NSTextField* statusText;
	DADiskRef _workingDisk;
	DASessionRef _diskArbitration;
	DMManager* _diskManager;
	DMPartitionDisk* _diskPartitioner;
	NSDictionary* _partitionData;
	long long _defaultPartitionMapType;
	NSString* _specifiedVolume;
	NSString* _targetDevice;
	NSString* _volumeList;
	char _hasAbsolutePartition;
	char _hasMinRequirement;
	char _automatedInstall;
	long long _countDown;
	NSTimer* _countDownTimer;
	NSSet* _exclusionSet;
	unsigned long long _rejectionType;
	char _internalDevicesOnly;
	long long _runningProcessCount;
	NSTask* _utilityTask;

}

@property (nonatomic,retain) DMManager * diskManager;                        //@synthesize diskManager=_diskManager - In the implementation block
@property (nonatomic,retain) DMPartitionDisk * diskPartitioner;              //@synthesize diskPartitioner=_diskPartitioner - In the implementation block
@property (nonatomic,retain) NSDictionary * partitionData;                   //@synthesize partitionData=_partitionData - In the implementation block
@property (nonatomic,retain) NSString * specifiedVolume;                     //@synthesize specifiedVolume=_specifiedVolume - In the implementation block
@property (nonatomic,retain) NSString * targetDevice;                        //@synthesize targetDevice=_targetDevice - In the implementation block
@property (nonatomic,retain) NSString * volumeList;                          //@synthesize volumeList=_volumeList - In the implementation block
@property (nonatomic,retain) NSSet * exclusionSet;                           //@synthesize exclusionSet=_exclusionSet - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setPartitionData:(NSDictionary *)arg1 ;
-(DMManager *)diskManager;
-(id)propertyListFromFile:(id)arg1 error:(id*)arg2 ;
-(void)initializeEnvironmentWithDictionary:(id)arg1 ;
-(NSDictionary *)partitionData;
-(char)findTargetDisk;
-(void)prepareUI;
-(void)runPartitioning;
-(void)generateError:(id*)arg1 andDescription:(id*)arg2 ;
-(void)_launchHelperAppWithPath:(id)arg1 withFinishedSelector:(SEL)arg2 ;
-(id)bestNameForDisk:(DADiskRef)arg1 ;
-(void)countdownTimerCallback:(id)arg1 ;
-(NSString *)specifiedVolume;
-(NSString *)targetDevice;
-(NSString *)volumeList;
-(void)_helperAppLaunchedNotification:(id)arg1 ;
-(void)allowUserToAbort;
-(id)createPartitionMap:(id)arg1 ;
-(void)partitionWithMap:(id)arg1 ;
-(char)calculateSizes:(double*)arg1 forPartitions:(id)arg2 ;
-(DADiskRef)extendedCopyDiskForVolumeName:(id)arg1 ;
-(NSSet *)exclusionSet;
-(double)determineBasicRequirements;
-(DADiskRef)findRootDiskForVolume:(id)arg1 ;
-(DADiskRef)findRootDiskToTarget;
-(void)setTargetDevice:(NSString *)arg1 ;
-(void)setWorkingDisk:(DADiskRef)arg1 ;
-(void)setVolumeList:(NSString *)arg1 ;
-(void)setSpecifiedVolume:(NSString *)arg1 ;
-(id)createUniqueVolumeName;
-(void)setAutomatedInstall;
-(id)buildExclusionList;
-(void)setExclusionSet:(NSSet *)arg1 ;
-(void)preparePhysicalVolumeForPartitioning;
-(DMPartitionDisk *)diskPartitioner;
-(char)diskPassesBasicCritera:(DADiskRef)arg1 rejectedFor:(id*)arg2 error:(int*)arg3 ;
-(void)addRAID:(DADiskRef)arg1 toExclusionList:(id)arg2 ;
-(void)processCoreStorage:(DADiskRef)arg1 forExclusionToList:(id)arg2 ;
-(void)startButtonPressed:(id)arg1 ;
-(void)setDiskManager:(DMManager *)arg1 ;
-(void)setDiskPartitioner:(DMPartitionDisk *)arg1 ;
-(void)applicationWillFinishLaunching:(id)arg1 ;
-(void)applicationDidFinishLaunching:(id)arg1 ;
-(void)applicationWillTerminate:(id)arg1 ;
-(void)dmAsyncStartedForDisk:(DADiskRef)arg1 ;
-(void)dmAsyncProgressForDisk:(DADiskRef)arg1 barberPole:(char)arg2 percent:(float)arg3 ;
-(void)dmAsyncMessageForDisk:(DADiskRef)arg1 string:(id)arg2 dictionary:(id)arg3 ;
-(void)dmAsyncFinishedForDisk:(DADiskRef)arg1 mainError:(int)arg2 detailError:(int)arg3 dictionary:(id)arg4 ;
-(id)init;
-(void)dealloc;
-(void)awakeFromNib;
@end

