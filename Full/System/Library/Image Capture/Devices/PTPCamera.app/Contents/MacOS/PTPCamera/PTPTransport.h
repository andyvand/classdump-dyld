/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 9:53:26 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Image Capture/Devices/PTPCamera.app/Contents/MacOS/PTPCamera
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <PTPCamera/PTPCamera-Structs.h>
@class PTPOperationResponsePacket, PTPWrappedBytes;

@interface PTPTransport : NSObject {

	unsigned short _type;
	int _role;
	int _connectionStatus;
	id _delegate;
	char _timedOut;
	char _responseReceived;
	PTPOperationResponsePacket* _response;
	opaque_pthread_t* _callbackThread;
	opaque_pthread_mutex_t _callbackThreadMutex;
	opaque_pthread_cond_t _callbackThreadCondition;
	char _callbackThreadConditionSignaled;
	CFRunLoopRef _callbackThreadRunLoop;
	CFRunLoopSourceRef _callbackDummyMachPortRLSrc;
	unsigned char _headerBuffer[12];
	char _headerBufferFound;
	char _delegateNeedsResponse;
	char _busy;
	unsigned _canceledTransactionID;
	PTPWrappedBytes* _dataForTransaction;
	unsigned long long _excessReceivedDataSize;

}
-(void)abortPendingIO;
-(char)startInitiator;
-(int)connectionStatus;
-(id)sendRequest:(id)arg1 receiveData:(id)arg2 timeout:(unsigned)arg3 ;
-(unsigned long long)excessReceivedDataSize;
-(id)sendRequest:(id)arg1 sendData:(id)arg2 timeout:(unsigned)arg3 ;
-(unsigned short)deviceStatus;
-(void)deviceReset;
-(CFRunLoopRef)callbackThreadRunLoop;
-(int)lockCallbackThreadMutex;
-(int)signalCallbackThreadCondition;
-(int)unlockCallbackThreadMutex;
-(int)waitForCallbackThreadConditionSignalWithTimeout:(long long)arg1 ;
-(char)responseReceived;
-(void)setResponseReceived:(char)arg1 ;
-(void)cancelTransaction:(id)arg1 ;
-(char)startCallbackThread;
-(void)endCallbackThread;
-(void)cleanupCallbackThread;
-(void*)callbackThreadFunction;
-(char)startResponder;
-(char)connected;
-(char)sendResponse:(id)arg1 ;
-(void)setTimedOut:(char)arg1 ;
-(int)role;
-(char)timedOut;
-(id)init;
-(void)setDelegate:(id)arg1 ;
-(void)dealloc;
-(void)stop;
-(unsigned short)type;
-(char)sendEvent:(id)arg1 ;
-(void)setResponse:(id)arg1 ;
-(void)sendData:(id)arg1 ;
-(id)response;
@end

