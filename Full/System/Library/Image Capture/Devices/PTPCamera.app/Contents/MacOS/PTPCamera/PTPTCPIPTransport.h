/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 9:53:26 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Image Capture/Devices/PTPCamera.app/Contents/MacOS/PTPCamera
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PTPCamera/PTPCamera-Structs.h>
#import <PTPCamera/PTPTransport.h>

@class NSString, PTPTCPIPConnection, NSMutableData;

@interface PTPTCPIPTransport : PTPTransport {

	CFSocketRef _socket;
	NSString* _hostName;
	unsigned short _hostPort;
	NSString* _hostGUID;
	NSString* _targetName;
	NSString* _targetAddress;
	unsigned _targetPort;
	NSString* _targetGUID;
	id _connectionRequestResponse;
	unsigned _connectionNumber;
	PTPTCPIPConnection* _tempConnection;
	NSMutableData* _tempData;
	PTPTCPIPConnection* _cdConnection;
	PTPTCPIPConnection* _eventConnection;
	NSMutableData* _cdData;
	NSMutableData* _eventData;
	char _delegateNeedsData;

}
-(id)targetGUID;
-(id)initWithTargetAddress:(id)arg1 targetPort:(unsigned)arg2 targetGUID:(id)arg3 targetName:(id)arg4 hostGUID:(id)arg5 hostName:(id)arg6 delegate:(id)arg7 ;
-(char)startInitiator;
-(char)sendCancel:(id)arg1 ;
-(id)sendRequest:(id)arg1 receiveData:(id)arg2 timeout:(unsigned)arg3 ;
-(id)sendRequest:(id)arg1 sendData:(id)arg2 timeout:(unsigned)arg3 ;
-(int)waitForCallbackThreadConditionSignalWithTimeout:(long long)arg1 ;
-(void)sendDataPackets:(id)arg1 ;
-(void)cancelTransaction:(id)arg1 ;
-(char)startResponder;
-(void)handleData:(id)arg1 from:(id)arg2 ;
-(void)didCloseConnection:(id)arg1 withError:(SCD_Struct_PT8)arg2 ;
-(int)waitForCallbackThreadConditionSignalWithTimeoutForConnection:(long long)arg1 ;
-(void)releaseConnections;
-(id)initWithHostPort:(unsigned)arg1 hostName:(id)arg2 hostGUID:(id)arg3 bonjourServiceType:(id)arg4 bonjourTXTRecords:(id)arg5 delegate:(id)arg6 ;
-(id)initForAcceptedSocketWithDelegate:(id)arg1 andHostGUID:(id)arg2 andHostName:(id)arg3 ;
-(id)targetAddress;
-(unsigned)targetPort;
-(char)waitForConnectionWithTimeout:(double)arg1 ;
-(char)sendStartData:(id)arg1 ;
-(void)acceptConnectionFromSocket:(int)arg1 ;
-(char)connected;
-(char)sendResponse:(id)arg1 ;
-(id)targetName;
-(void)dealloc;
-(void)stop;
-(id)description;
-(char)sendEvent:(id)arg1 ;
-(void)sendData:(id)arg1 ;
@end

