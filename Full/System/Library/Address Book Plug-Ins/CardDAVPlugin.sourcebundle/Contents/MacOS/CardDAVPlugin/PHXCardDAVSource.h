/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:54:44 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Address Book Plug-Ins/CardDAVPlugin.sourcebundle/Contents/MacOS/CardDAVPlugin
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AddressBook/PHXSource.h>

@protocol CDXBrandingProvider;
@class CDXManager, NSString, NSMutableSet, NSError, NSOperation, ABPushNotificationCenter, NSDictionary, NSSet, NSURL, ABAddressBook, NSView, NSTabView, NSTextField, NSPopUpButton, NSButton;

@interface PHXCardDAVSource : PHXSource {

	CDXManager* _cardDAVManager;
	NSString* _groupTargetUID;
	char _syncDataInProgress;
	char _runningInAddressBookApp;
	char _offline;
	NSMutableSet* _pendingSyncMode;
	NSMutableSet* _unsyncedUIDsToSave;
	NSMutableSet* _unsyncedUIDs;
	id _currentOfflineBadge;
	id _currentErrorBadge;
	NSError* _lastError;
	NSOperation* _currentServerSyncOperation;
	NSString* _watchReachabilityHost;
	char _debugWantContinuousSync;
	char _pushIsActive;
	ABPushNotificationCenter* _abPushNotificationCenter;
	NSDictionary* _activePushTransports;
	NSSet* _activePushKeys;
	NSString* _activePushXMPPServiceInfo;
	NSURL* _pushRegistrationURL;
	double _abPushCreationTime;
	ABAddressBook* _customAddressBook;
	NSView* _prefsView;
	NSTabView* _prefsTabView;
	NSTextField* _prefsDescriptionLabel;
	NSTextField* _prefsDescriptionValue;
	NSTextField* _prefsUserNameLabel;
	NSTextField* _prefsUserNameValue;
	NSTextField* _prefsPasswordLabel;
	NSTextField* _prefsPasswordValue;
	NSTextField* _prefsRefreshContactsLabel;
	NSPopUpButton* _prefsRefreshContactsPopUp;
	NSTextField* _prefsSharedAddressBookLabel;
	NSPopUpButton* _prefsSharedAddressBookPopUp;
	NSTextField* _prefsMoreConfigurationPrefsLabel;
	NSButton* _prefsMoreConfigurationPrefsButton;
	id<CDXBrandingProvider> _brandingProvider;
	long long _brandingProviderToken;
	char _preconditionRecycle;

}

@property (copy,readonly) NSString * serverUrlString; 
@property (readonly) NSString * fullName; 
@property (copy,readonly) NSString * username; 
@property (assign) unsigned long long refreshInterval; 
@property (readonly) NSString * authorString; 
@property (readonly) NSSet * emailAddresses; 
@property (copy,readonly) NSString * scheme; 
@property (copy,readonly) NSString * host; 
@property (copy,readonly) NSString * serverPath; 
@property (readonly) long long port; 
@property (copy) NSDictionary * homeInfo; 
@property (copy) NSDictionary * searchInfo; 
@property (copy) NSDictionary * principalInfo; 
@property (copy) NSString * aListPluginIdentifier; 
@property (copy) NSString * acAccountIdentifier; 
@property (copy) NSString * acAccountTypeIdentifier; 
@property (retain) NSString * groupTargetUID;                                        //@synthesize groupTargetUID=_groupTargetUID - In the implementation block
@property (retain) NSString * lastKnownServerMeCardPath; 
@property (assign) char preconditionRecycle;                                         //@synthesize preconditionRecycle=_preconditionRecycle - In the implementation block
@property (copy) NSDictionary * activePushTransports;                                //@synthesize activePushTransports=_activePushTransports - In the implementation block
@property (copy) NSSet * activePushKeys;                                             //@synthesize activePushKeys=_activePushKeys - In the implementation block
@property (copy) NSString * activePushXMPPServiceInfo;                               //@synthesize activePushXMPPServiceInfo=_activePushXMPPServiceInfo - In the implementation block
@property (copy) NSURL * pushRegistrationURL;                                        //@synthesize pushRegistrationURL=_pushRegistrationURL - In the implementation block
@property (retain) ABPushNotificationCenter * abPushNotificationCenter;              //@synthesize abPushNotificationCenter=_abPushNotificationCenter - In the implementation block
@property (copy) NSError * lastError;                                                //@synthesize lastError=_lastError - In the implementation block
@property (assign) NSView * prefsView;                                               //@synthesize prefsView=_prefsView - In the implementation block
@property (assign) NSTabView * prefsTabView;                                         //@synthesize prefsTabView=_prefsTabView - In the implementation block
@property (assign) NSTextField * prefsDescriptionLabel;                              //@synthesize prefsDescriptionLabel=_prefsDescriptionLabel - In the implementation block
@property (assign) NSTextField * prefsDescriptionValue;                              //@synthesize prefsDescriptionValue=_prefsDescriptionValue - In the implementation block
@property (assign) NSTextField * prefsUserNameLabel;                                 //@synthesize prefsUserNameLabel=_prefsUserNameLabel - In the implementation block
@property (assign) NSTextField * prefsUserNameValue;                                 //@synthesize prefsUserNameValue=_prefsUserNameValue - In the implementation block
@property (assign) NSTextField * prefsPasswordLabel;                                 //@synthesize prefsPasswordLabel=_prefsPasswordLabel - In the implementation block
@property (assign) NSTextField * prefsPasswordValue;                                 //@synthesize prefsPasswordValue=_prefsPasswordValue - In the implementation block
@property (assign) NSTextField * prefsRefreshContactsLabel;                          //@synthesize prefsRefreshContactsLabel=_prefsRefreshContactsLabel - In the implementation block
@property (assign) NSPopUpButton * prefsRefreshContactsPopUp;                        //@synthesize prefsRefreshContactsPopUp=_prefsRefreshContactsPopUp - In the implementation block
@property (assign) NSTextField * prefsSharedAddressBookLabel;                        //@synthesize prefsSharedAddressBookLabel=_prefsSharedAddressBookLabel - In the implementation block
@property (assign) NSPopUpButton * prefsSharedAddressBookPopUp;                      //@synthesize prefsSharedAddressBookPopUp=_prefsSharedAddressBookPopUp - In the implementation block
@property (assign) NSTextField * prefsMoreConfigurationPrefsLabel;                   //@synthesize prefsMoreConfigurationPrefsLabel=_prefsMoreConfigurationPrefsLabel - In the implementation block
@property (assign) NSButton * prefsMoreConfigurationPrefsButton;                     //@synthesize prefsMoreConfigurationPrefsButton=_prefsMoreConfigurationPrefsButton - In the implementation block
@property (readonly) id<CDXBrandingProvider> brandingProvider; 
@property (getter=isOffline,readonly) char offline;                                  //@synthesize offline=_offline - In the implementation block
+(id)secureServiceNameForHost:(id)arg1 ;
+(id)updateTestConnectionSettingsWithAutodiscovery:(id)arg1 ;
+(id)internetAccountsAListPluginIDForHost:(id)arg1 ;
+(id)createAccountUsingInfo:(id)arg1 returningError:(id*)arg2 ;
+(id)settingsDictionaryForPluginIDLookupWithHost:(id)arg1 ;
+(id)autodiscoverSettingsFromTestConnectionSettings:(id)arg1 ;
+(void)parseURLString:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
+(id)updateDictionary:(id)arg1 withObject:(id)arg2 forKey:(id)arg3 ;
+(id)simpleHost:(id)arg1 ;
+(id)customizationPolicy;
+(Class)searchOperationClass;
+(int)backingStoreType;
+(id)passwordForUser:(id)arg1 service:(id)arg2 error:(id*)arg3 ;
+(char)setPassword:(id)arg1 forUser:(id)arg2 service:(id)arg3 error:(id*)arg4 ;
+(void)cancelAutodiscovery;
+(id)testConnection:(id)arg1 ;
+(void)cancelTestConnection;
+(id)passwordForConfiguration:(id)arg1 ;
+(char)setPassword:(id)arg1 forConfiguration:(id)arg2 ;
+(id)autodiscoverSettings:(id)arg1 ;
+(void)initialize;
-(void)updateServerUrlString:(id)arg1 ;
-(void)invalidateReachability;
-(void)handleWebLoginRequestWithError:(id)arg1 ;
-(char)isConnectionError:(id)arg1 ;
-(void)presentAuthenticationError:(id)arg1 modalForWindow:(id)arg2 ;
-(char)isAppleServer;
-(id)_changeRecordAttributes:(id)arg1 targetGroup:(id)arg2 ops:(unsigned long long)arg3 inAddressBook:(id)arg4 ;
-(void)processErrors:(id)arg1 ;
-(NSString *)authorString;
-(NSDictionary *)principalInfo;
-(void)postprocessChanges:(id)arg1 inAddressBook:(id)arg2 isInsert:(char)arg3 ;
-(id)getCollectionName:(id)arg1 isMainAddressBook:(char)arg2 isMainSharedAddressBook:(char)arg3 ;
-(void)applyOrRevertAction;
-(void)scheduleFullSync;
-(NSSet *)activePushKeys;
-(id)pushKeys;
-(void)setHomeInfo:(NSDictionary *)arg1 ;
-(void)updateServerUrlStringFromComponents;
-(void)updateUserName:(id)arg1 ;
-(void)goOnline:(id)arg1 ;
-(void)updateMeCardIfNeededWithNewHomeInfo:(id)arg1 addressBook:(id)arg2 ;
-(void)clearAllCTagsAndETags:(char)arg1 inAddressBook:(id)arg2 ;
-(NSTabView *)prefsTabView;
-(void)networkConfigurationDidChange:(id)arg1 ;
-(char)isWebLoginRequiredForError:(id)arg1 ;
-(void)adjustPrefsUI;
-(NSDictionary *)homeInfo;
-(char)canTalkToServer;
-(char)_saveAddressBook:(id)arg1 ;
-(char)syncWithServerCancelled;
-(void)cancelServerSyncWithCompletionBlock:(/*^block*/id)arg1 ;
-(char)createCollectionGroupsForHomeInfo:(id)arg1 inAddressBook:(id)arg2 ;
-(void)showPasswordPanelForError:(id)arg1 modalForWindow:(id)arg2 ;
-(NSString *)serverUrlString;
-(id)mainAddressBookGroupInAddressBook:(id)arg1 ;
-(void)updatePushState;
-(void)processError:(id)arg1 ;
-(void)clearCTagForGroup:(id)arg1 andETags:(char)arg2 inAddressBook:(id)arg3 ;
-(NSString *)groupTargetUID;
-(void)cancelServerSync;
-(id)watchReachabilityHost;
-(void)watchReachabilityToHost:(id)arg1 ;
-(void)setPreconditionRecycle:(char)arg1 ;
-(char)preconditionRecycle;
-(NSTextField *)prefsMoreConfigurationPrefsLabel;
-(id)serverRootPath;
-(void)showCertificatePanelForError:(id)arg1 modalForWindow:(id)arg2 ;
-(void)removePushObserver;
-(NSButton *)prefsMoreConfigurationPrefsButton;
-(void)updateUseSSL:(char)arg1 ;
-(NSURL *)pushRegistrationURL;
-(void)setServerUrlString:(NSString *)arg1 ;
-(id)getAndResetPendingSyncMode:(char)arg1 ;
-(void)setPushRegistrationURL:(NSURL *)arg1 ;
-(char)_readAndDeleteFoldersToSyncToFile:(id*)arg1 ;
-(void)scheduleSync:(id)arg1 ;
-(NSPopUpButton *)prefsRefreshContactsPopUp;
-(void)updateServerRootPath:(id)arg1 ;
-(char)_writeFoldersToSyncToFile:(id)arg1 ;
-(void)doSyncWithServer:(id)arg1 ;
-(void)preprocessChanges:(id)arg1 inAddressBook:(id)arg2 isInsert:(char)arg3 ;
-(void)commonAwake;
-(void)stopWatchingForReachabilityChanges;
-(void)invalidateInternalState;
-(void)startWatchingForReachabilityChanges;
-(void)rememberError:(id)arg1 ;
-(double)pushRefreshIntervalFromTransports:(id)arg1 ;
-(ABPushNotificationCenter *)abPushNotificationCenter;
-(void)setActivePushXMPPServiceInfo:(NSString *)arg1 ;
-(void)setServerRootPath:(id)arg1 ;
-(void)updateServerName:(id)arg1 ;
-(NSTextField *)prefsDescriptionValue;
-(NSTextField *)prefsPasswordValue;
-(NSString *)lastKnownServerMeCardPath;
-(id)localIdentifierForServerPath:(id)arg1 addressBook:(id)arg2 ;
-(char)hasServerMeChangedWithServerMeCardPath:(id)arg1 ;
-(void)setLastKnownServerMeCardPath:(NSString *)arg1 ;
-(void)addPushObserver;
-(char)pushIsActive;
-(void)debug_prepForNextContinuousSync;
-(char)serverSyncInProgress;
-(void)setAListPluginIdentifier:(NSString *)arg1 ;
-(void)setAcAccountTypeIdentifier:(NSString *)arg1 ;
-(char)userPrefersToNotUsePush;
-(char)shouldAddPushObserver;
-(void)setPushIsActive:(char)arg1 ;
-(id)enabledPushTransports;
-(NSDictionary *)activePushTransports;
-(void)setAbPushNotificationCenter:(ABPushNotificationCenter *)arg1 ;
-(void)setActivePushTransports:(NSDictionary *)arg1 ;
-(void)setActivePushKeys:(NSSet *)arg1 ;
-(void)updateLocalMeCardWithNewUID:(id)arg1 addressBook:(id)arg2 ;
-(void)updateServernameComponents:(id)arg1 ;
-(void)setPrincipalInfo:(NSDictionary *)arg1 ;
-(void)updateServerPort:(id)arg1 ;
-(NSTextField *)prefsRefreshContactsLabel;
-(id<CDXBrandingProvider>)brandingProvider;
-(int)_openFileForExclusiveWrite:(id)arg1 ;
-(void)setSearchInfo:(NSDictionary *)arg1 ;
-(char)isCertificationError:(id)arg1 ;
-(char)allowSyncWithinCurrentApp;
-(NSTextField *)prefsUserNameLabel;
-(NSString *)acAccountIdentifier;
-(char)isAPSDActive;
-(NSDictionary *)searchInfo;
-(void)addPushObserverOnWorkQueue;
-(void)invalidateManager;
-(char)isAuthenticationError:(id)arg1 ;
-(void)_closeExclusiveWriteFile:(int)arg1 ;
-(NSTextField *)prefsPasswordLabel;
-(void)setServernameComponents:(id)arg1 ;
-(NSTextField *)prefsUserNameValue;
-(void)updateSourcePermissions;
-(void)invalidatePushObserver;
-(void)renewAccountCredentials;
-(void)setAcAccountIdentifier:(NSString *)arg1 ;
-(char)hasEnoughInfoToAccessKeychain;
-(NSPopUpButton *)prefsSharedAddressBookPopUp;
-(void)setPrefsDescriptionLabel:(NSTextField *)arg1 ;
-(void)setPrefsRefreshContactsPopUp:(NSPopUpButton *)arg1 ;
-(void)setPrefsTabView:(NSTabView *)arg1 ;
-(void)debug_runContinuousSync;
-(void)setPrefsPasswordValue:(NSTextField *)arg1 ;
-(NSTextField *)prefsDescriptionLabel;
-(void)setPrefsUserNameLabel:(NSTextField *)arg1 ;
-(void)setPrefsUserNameValue:(NSTextField *)arg1 ;
-(void)setPrefsRefreshContactsLabel:(NSTextField *)arg1 ;
-(void)setPrefsPasswordLabel:(NSTextField *)arg1 ;
-(void)setPrefsSharedAddressBookLabel:(NSTextField *)arg1 ;
-(NSTextField *)prefsSharedAddressBookLabel;
-(void)setPrefsDescriptionValue:(NSTextField *)arg1 ;
-(void)setPrefsMoreConfigurationPrefsLabel:(NSTextField *)arg1 ;
-(void)setPrefsSharedAddressBookPopUp:(NSPopUpButton *)arg1 ;
-(void)setGroupTargetUID:(NSString *)arg1 ;
-(NSString *)activePushXMPPServiceInfo;
-(char)visibleGroup:(id)arg1 ;
-(NSView *)prefsView;
-(void)setPrefsMoreConfigurationPrefsButton:(NSButton *)arg1 ;
-(void)setPrefsView:(NSView *)arg1 ;
-(void)debug_markServerGroupsDirty;
-(void)revertChanges:(id)arg1 ;
-(void)showMoreConfiguration:(id)arg1 ;
-(NSString *)username;
-(id)addressBook;
-(void)startSync;
-(char)supportsDistributionLists;
-(char)isSearchable;
-(void)setSearchable:(char)arg1 ;
-(void)setUseSSL:(char)arg1 ;
-(char)useSSL;
-(void)awakeFromLoad;
-(char)shouldSendStatusDidChangeNotifications;
-(void)willUnload;
-(void)deletePersistentValues;
-(id)internetAccountsAListPluginID;
-(void)applyChangesAndRefresh:(char)arg1 ;
-(void)sourceShouldRefresh:(id)arg1 ;
-(void)addressBook:(id)arg1 willInsertRecords:(id)arg2 ;
-(void)addressBook:(id)arg1 willUpdateRecords:(id)arg2 ;
-(void)addressBook:(id)arg1 willDeleteRecords:(id)arg2 ;
-(void)addressBook:(id)arg1 didInsertRecords:(id)arg2 ;
-(void)addressBook:(id)arg1 didUpdateRecords:(id)arg2 ;
-(int)searchMethod;
-(id)secureUserName;
-(id)secureServiceName;
-(id)initWithUID:(id)arg1 persistence:(id)arg2 ;
-(void)finalizeAccountSetupWithDictionary:(id)arg1 ;
-(double)periodicRefreshInterval;
-(void)setPeriodicRefreshInterval:(double)arg1 ;
-(id)accountSetupIcon;
-(id)accountBadge;
-(NSString *)acAccountTypeIdentifier;
-(void)renewPushSubscriptionAtURL:(id)arg1 ;
-(void)handlePushNotification:(id)arg1 ;
-(char)supportsDataMigration;
-(void)mocDidSave:(id)arg1 ;
-(char)shouldOfferRemoveContacts:(id)arg1 fromGroup:(id)arg2 ;
-(id)subname;
-(NSString *)aListPluginIdentifier;
-(int)sourceType;
-(void)applyChanges:(id)arg1 ;
-(void)setLastError:(NSError *)arg1 ;
-(id)serverPort;
-(void)setServerPort:(id)arg1 ;
-(void)finalize;
-(void)dealloc;
-(void)invalidate;
-(void)presentError:(id)arg1 ;
-(void)awakeFromNib;
-(NSString *)scheme;
-(NSString *)host;
-(id)userName;
-(void)setUserName:(id)arg1 ;
-(id)serverName;
-(void)setServerName:(id)arg1 ;
-(NSSet *)emailAddresses;
-(NSError *)lastError;
-(id)emailAddress;
-(void)goOnline;
-(void)goOffline;
-(unsigned long long)refreshInterval;
-(NSString *)fullName;
-(char)isOffline;
-(void)setEmailAddress:(id)arg1 ;
-(void)awakeFromInsert;
-(NSString *)serverPath;
-(void)setRefreshInterval:(unsigned long long)arg1 ;
-(void)preferencesHaveChanged:(id)arg1 ;
-(long long)port;
@end

