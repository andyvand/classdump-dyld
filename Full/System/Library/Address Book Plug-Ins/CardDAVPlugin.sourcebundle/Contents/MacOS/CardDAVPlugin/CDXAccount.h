/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:54:44 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Address Book Plug-Ins/CardDAVPlugin.sourcebundle/Contents/MacOS/CardDAVPlugin
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CardDAVPlugin/CardDAVPlugin-Structs.h>
#import <CardDAVPlugin/CoreDAVAccountInfoProvider.h>
#import <CardDAVPlugin/CoreDAVOAuthInfoProvider.h>

@class NSString, NSData, NSURL, NSSet, NSMutableDictionary, NSMutableSet, PHXCardDAVSource;

@interface CDXAccount : NSObject <CoreDAVAccountInfoProvider, CoreDAVOAuthInfoProvider> {

	NSString* _scheme;
	NSString* _host;
	long long _port;
	NSString* _serverRoot;
	NSString* _user;
	NSString* _password;
	NSData* _identityPersist;
	NSURL* _principalURL;
	NSString* _accountID;
	NSString* _userAgentHeader;
	NSSet* _serverComplianceClasses;
	char _compressRequests;
	char _shouldFailAllTasks;
	NSMutableDictionary* _authMethodsTried;
	NSMutableSet* _deniedHosts;
	NSMutableSet* _approvedHosts;
	NSMutableSet* _retriedHosts;
	char _handleCertErrorResult;
	PHXCardDAVSource* _cardDAVSource;
	NSString* _acAccountIdentifier;
	NSString* _clientToken;

}

@property (retain) NSString * scheme;                               //@synthesize scheme=_scheme - In the implementation block
@property (retain) NSString * host;                                 //@synthesize host=_host - In the implementation block
@property (assign) long long port;                                  //@synthesize port=_port - In the implementation block
@property (retain) NSString * serverRoot;                           //@synthesize serverRoot=_serverRoot - In the implementation block
@property (retain) NSString * user;                                 //@synthesize user=_user - In the implementation block
@property (readonly) NSString * password; 
@property (retain) NSData * identityPersist;                        //@synthesize identityPersist=_identityPersist - In the implementation block
@property (retain) NSURL * principalURL;                            //@synthesize principalURL=_principalURL - In the implementation block
@property (retain) NSString * accountID;                            //@synthesize accountID=_accountID - In the implementation block
@property (retain) NSSet * serverComplianceClasses;                 //@synthesize serverComplianceClasses=_serverComplianceClasses - In the implementation block
@property (retain) NSString * userAgentHeader;                      //@synthesize userAgentHeader=_userAgentHeader - In the implementation block
@property (assign) char compressRequests;                           //@synthesize compressRequests=_compressRequests - In the implementation block
@property (assign) char shouldFailAllTasks;                         //@synthesize shouldFailAllTasks=_shouldFailAllTasks - In the implementation block
@property (copy) NSString * acAccountIdentifier;                    //@synthesize acAccountIdentifier=_acAccountIdentifier - In the implementation block
@property (assign) char suppressDuplicateCertDialogs; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)handleWebAuthRequestAtURL:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)resetSuppressDuplicateCertDialogs;
-(void)setSuppressDuplicateCertDialogs:(char)arg1 ;
-(id)_connectionURLString:(id)arg1 ;
-(id)_copyAuthMethodConnectionKey:(id)arg1 ;
-(id)_authMethodsTriedConnectionDict:(id)arg1 ;
-(unsigned long long)authMethodTryCount:(id)arg1 withConnection:(id)arg2 ;
-(char)shouldRetryKerberosAuthWithConnection:(id)arg1 ;
-(char)getKerberosTicketWithConnection:(id)arg1 ;
-(void)forgetAuthMethodsTriedWithConnection:(id)arg1 ;
-(id)acAccount;
-(unsigned long long)recordAuthMethod:(id)arg1 withConnection:(id)arg2 ;
-(char)shouldSendClientInfoHeaderForHost:(id)arg1 ;
-(void)clearAuthMethodsTried;
-(void)clearPushRegistrationURL;
-(NSString *)acAccountIdentifier;
-(id)initWithCardDAVSource:(id)arg1 ;
-(void)setAcAccountIdentifier:(NSString *)arg1 ;
-(char)suppressDuplicateCertDialogs;
-(char)compressRequests;
-(void)setCompressRequests:(char)arg1 ;
-(NSString *)password;
-(NSString *)user;
-(id)initWithPassword:(id)arg1 ;
-(id)init;
-(void)dealloc;
-(NSString *)description;
-(void)setHost:(NSString *)arg1 ;
-(id)_init;
-(NSString *)scheme;
-(NSString *)host;
-(void)setScheme:(NSString *)arg1 ;
-(NSString *)accountID;
-(NSURL *)principalURL;
-(void)promptUserForNewCoreDAVPasswordWithCompletionBlock:(/*^block*/id)arg1 ;
-(char)handleShouldUseCredentialStorage;
-(char)shouldTurnModalOnBadPassword;
-(char)shouldSendClientInfoHeaderForURL:(id)arg1 ;
-(void)setServerRoot:(NSString *)arg1 ;
-(void)setUser:(NSString *)arg1 ;
-(void)setIdentityPersist:(NSData *)arg1 ;
-(void)setPrincipalURL:(NSURL *)arg1 ;
-(void)setAccountID:(NSString *)arg1 ;
-(void)setServerComplianceClasses:(NSSet *)arg1 ;
-(void)setShouldFailAllTasks:(char)arg1 ;
-(NSString *)serverRoot;
-(NSData *)identityPersist;
-(NSSet *)serverComplianceClasses;
-(NSString *)userAgentHeader;
-(char)handleCertificateError:(id)arg1 ;
-(char)shouldFailAllTasks;
-(id)oauthInfoProvider;
-(char)handleTrustChallenge:(id)arg1 withConnection:(id)arg2 ;
-(char)handleAuthenticateAgainstProtectionSpace:(id)arg1 withConnection:(id)arg2 ;
-(char)shouldRetryUnauthorizedConnection:(id)arg1 ;
-(char)shouldCompressRequests;
-(void)clientTokenRequestedByServer;
-(id)clientToken;
-(CFURLCredentialRef)newOAuth1CredentialForChallenge:(id)arg1 ;
-(id)oauth2Token;
-(long long)port;
-(void)setPort:(long long)arg1 ;
-(void)setUserAgentHeader:(NSString *)arg1 ;
@end

