/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:54:47 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Address Book Plug-Ins/Exchange.sourcebundle/Contents/MacOS/Exchange
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Exchange/Exchange-Structs.h>
#import <AddressBook/PHXSource.h>
#import <Exchange/EWSExchangeServiceBindingDelegate.h>

@class NSString, NSError, ABProcessSharedLock, NSMutableDictionary, NSPersistentStoreCoordinator, NSManagedObjectContext, NSManagedObject, NSNumber, NSURL;

@interface ABExchangeSource : PHXSource <EWSExchangeServiceBindingDelegate> {

	NSString* mDeletedItemsFolderId;
	NSError* mSessionError;
	char mOffline;
	int mReachability;
	char mRedoAutodiscover;
	char mExchangeConnectInProgress;
	char mInhibitSelfSend;
	char mHasDistributedOperationProcessingLock;
	long long mMaxUsedSequenceNumber;
	ABProcessSharedLock* mDistributedLock;
	ABProcessSharedLock* mDistributedOperationProcessingLock;
	NSMutableDictionary* mModifiedPeople;
	NSMutableDictionary* mModifiedFolders;
	SCNetworkReachabilityRef mReachabilityRef;
	NSPersistentStoreCoordinator* mExchangePSC;
	NSManagedObjectContext* mExchangeContext;
	NSManagedObject* mExchangeAccount;
	NSString* mBaseContactsFolderExchangeId;

}

@property (copy) NSString * userName; 
@property (copy) NSString * fullName; 
@property (copy) NSString * emailAddress; 
@property (copy) NSString * serverName; 
@property (copy) NSString * serverRootPath; 
@property (copy) NSNumber * serverPort; 
@property (copy) NSString * externalServerName; 
@property (copy) NSString * externalServerRootPath; 
@property (copy) NSNumber * externalServerPort; 
@property (assign) char externalUseSSL; 
@property (copy) NSString * domainName; 
@property (assign) char useSSL; 
@property (nonatomic,retain) NSString * rootFolderId; 
@property (copy) NSString * autodiscoverServerName; 
@property (copy) NSString * autodiscoverServerPath; 
@property (copy) NSNumber * autodiscoverServerPort; 
@property (assign) char autodiscoverUseSSL; 
@property (assign) char redoAutodiscover; 
@property (assign) char offline; 
@property (assign) int reachability; 
@property (assign) NSURL * accountURL; 
@property (assign) NSString * accountURLString; 
@property (assign) NSURL * externalAccountURL; 
@property (assign) NSURL * autodiscoverURL; 
@property (retain) NSPersistentStoreCoordinator * exchangePSC; 
@property (retain) NSManagedObjectContext * exchangeMOC; 
@property (retain) NSManagedObject * exchangeAccount; 
@property (nonatomic,retain) NSString * baseContactsFolderExchangeId; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)checkDatabaseVersionsWithUID:(id)arg1 ;
+(id)lockFilePathWithIdentifier:(id)arg1 type:(id)arg2 ;
+(id)exchangeDatabaseModelURL;
+(void)removeABResourcesAtPath:(id)arg1 ;
+(id)keyPathsForValuesAffectingPassword;
+(id)keyPathsForValuesAffectingAccountURL;
+(id)keyPathsForValuesAffectingAccountURLString;
+(id)internalAccountURLWithCredentialsFromConfig:(id)arg1 ;
+(void)main_showCertificatePanelForError:(id)arg1 ;
+(char)accountExistsForMailWithRootFolderId:(id)arg1 userName:(id)arg2 serverHost:(id)arg3 ;
+(char)accountExistsForiCalWithRootFolderId:(id)arg1 userName:(id)arg2 serverHost:(id)arg3 ;
+(id)accountForiCalWithRootFolderId:(id)arg1 userName:(id)arg2 serverHost:(id)arg3 ;
+(id)internalAccountURLForUser:(id)arg1 serverName:(id)arg2 useSSL:(char)arg3 port:(id)arg4 path:(id)arg5 ;
+(id)passwordForUser:(id)arg1 accountURL:(id)arg2 ;
+(void)loadCalendarStoreBundle;
+(void)loadMessageBundle;
+(id)customizationPolicy;
+(Class)searchOperationClass;
+(Class)defaultPersonConstraintsClass;
+(id)makeSearchPolicyWithAccount:(id)arg1 ;
+(id)testConnection:(id)arg1 ;
+(id)passwordForConfiguration:(id)arg1 ;
+(void)showCertificatePanelForError:(id)arg1 ;
+(id)autodiscoverSettings:(id)arg1 ;
+(void)initialize;
-(void)saveSyncState;
-(char)isFolderMappingInDeletedItems:(id)arg1 ;
-(void)goOnline:(id)arg1 ;
-(void)networkConfigurationDidChange:(id)arg1 ;
-(void)showPasswordPanelForError:(id)arg1 modalForWindow:(id)arg2 ;
-(NSString *)serverRootPath;
-(void)showCertificatePanelForError:(id)arg1 modalForWindow:(id)arg2 ;
-(void)setServerRootPath:(NSString *)arg1 ;
-(void)operationFailed:(id)arg1 ;
-(char)hasEnoughInfoToAccessKeychain;
-(NSString *)baseContactsFolderExchangeId;
-(void)exchangeMappingMocDidSave:(id)arg1 ;
-(id)abLabelForExchangeImAddressKey:(id)arg1 ;
-(id)ewsPropertyPathsForContactAttribute:(id)arg1 label:(id)arg2 usedLabels:(id)arg3 ;
-(char)isFolderMappingAboutToBeDeleted:(id)arg1 ;
-(id)baseContactsFolderAddressBookUniqueId;
-(id)exchangePhoneNumberKeyForABLabel:(id)arg1 usedLabels:(id)arg2 ;
-(id)exchangeEmailAddressKeyForABLabel:(id)arg1 usedLabels:(id)arg2 ;
-(id)exchangeImAddressKeyForABLabel:(id)arg1 usedLabels:(id)arg2 ;
-(id)exchangePhysicalAddressKeyForABLabel:(id)arg1 ;
-(NSPersistentStoreCoordinator *)exchangePSC;
-(id)abLabelForExchangeEmailAddressKey:(id)arg1 ;
-(id)abLabelForExchangePhoneNumberKey:(id)arg1 ;
-(id)abLabelForExchangePhysicalAddressKey:(id)arg1 ;
-(int)reachability;
-(NSManagedObjectContext *)exchangeMOC;
-(void)setExchangeAccount:(NSManagedObject *)arg1 ;
-(void)lockDistributedOperationProcessing;
-(void)setBaseContactsFolderExchangeId:(NSString *)arg1 ;
-(id)ewsPropertyPathsForModelRepresentedEntityName:(id)arg1 property:(id)arg2 label:(id)arg3 usedLabels:(id)arg4 ;
-(void)loadSyncState;
-(void)unlockDistributedOperationProcessing;
-(void)setExchangeMOC:(NSManagedObjectContext *)arg1 ;
-(NSManagedObject *)exchangeAccount;
-(void)updateHiddenItemRecordIds;
-(void)mergeChangesFromSaveNotification:(id)arg1 ;
-(void)syncDidFinish;
-(void)setExchangePSC:(NSPersistentStoreCoordinator *)arg1 ;
-(void)addressBookMOCDidSave:(id)arg1 ;
-(void)showMoreInformation:(id)arg1 ;
-(id)alternateNoteSelectorForLabelOfPropertySocialProfile:(id)arg1 ;
-(id)alternateNoteSelectorForValueOfPropertySocialProfile:(id)arg1 ;
-(id)alternateNoteSelectorForValueOfPropertyAddress:(id)arg1 ;
-(id)alternateNoteSelectorForValueOfPropertyInstantMessage:(id)arg1 ;
-(char)validatePeriodicRefreshInterval:(id*)arg1 error:(id*)arg2 ;
-(id)insertNewPersistentDeleteOperationForManagedObject:(id)arg1 ;
-(id)dictionaryRepresentationOfManagedObject:(id)arg1 ;
-(void)setAccountURLString:(NSString *)arg1 ;
-(char)redoAutodiscover;
-(id)internalAccountURLWithCredentials;
-(id)externalAccountURLWithCredentials;
-(id)insertNewPersistentCreateOperationForManagedObject:(id)arg1 ;
-(id)insertNewPersistentUpdateOperationsForManagedObject:(id)arg1 ;
-(id)insertNewPersistentMoveOperationForManagedObject:(id)arg1 ;
-(SEL)alternateNoteSelectorForLabelOfProperty:(id)arg1 ;
-(SEL)alternateNoteSelectorForValueOfProperty:(id)arg1 ;
-(void)setMailInternalURL:(id)arg1 externalURL:(id)arg2 autodiscoverURL:(id)arg3 ;
-(void)setiCalInternalURL:(id)arg1 externalURL:(id)arg2 autodiscoverURL:(id)arg3 ;
-(id)abLabelForExchangeLabel:(id)arg1 ;
-(id)childrenFoldersOfFolderId:(id)arg1 includeIndirectChildren:(char)arg2 ;
-(id)insertNewPersistentUpdateOperationsForManagedObject:(id)arg1 mappingRecord:(id)arg2 ;
-(id)exchangeRelatedNameKeyForABLabel:(id)arg1 ;
-(NSURL *)accountURL;
-(id)ownerUniqueIdForManagedObject:(id)arg1 ;
-(void)setOffline:(char)arg1 ;
-(void)purgeStores;
-(void)setAccountURL:(NSURL *)arg1 ;
-(id)insertNewPersistentDeleteOperationForManagedObject:(id)arg1 mappingRecord:(id)arg2 ;
-(void)saveAddressBook;
-(void)setAutodiscoverServerPath:(NSString *)arg1 ;
-(void)setAutodiscoverUseSSL:(char)arg1 ;
-(void)setExternalServerRootPath:(NSString *)arg1 ;
-(NSString *)externalServerRootPath;
-(void)setExternalServerPort:(NSNumber *)arg1 ;
-(void)setAutodiscoverServerName:(NSString *)arg1 ;
-(NSNumber *)externalServerPort;
-(NSString *)externalServerName;
-(void)setExternalServerName:(NSString *)arg1 ;
-(NSString *)autodiscoverServerName;
-(NSString *)autodiscoverServerPath;
-(char)offline;
-(id)abAttributeForFieldURI:(int)arg1 ;
-(id)exchangeURLKeyForABLabel:(id)arg1 ;
-(id)exchangeDateKeyForABLabel:(id)arg1 ;
-(void)nts_loadSyncState;
-(id)deletedItemsFolderId:(id*)arg1 ;
-(void)_updateMaxSequenceNumberInUse;
-(void)connectService;
-(void)setRedoAutodiscover:(char)arg1 ;
-(NSURL *)externalAccountURL;
-(void)handleSave;
-(void)setAutodiscoverServerPort:(NSNumber *)arg1 ;
-(NSNumber *)autodiscoverServerPort;
-(void)setExternalAccountURL:(NSURL *)arg1 ;
-(id)autodiscoverURLWithCredentials;
-(void)setReachability:(int)arg1 ;
-(id)labelMappingsForProperty:(id)arg1 label:(id)arg2 ;
-(char)autodiscoverUseSSL;
-(id)exchangeDatabaseURL;
-(id)accountURLWithCredentials;
-(char)externalUseSSL;
-(void)setExternalUseSSL:(char)arg1 ;
-(void)setAutodiscoverURL:(NSURL *)arg1 ;
-(id)password;
-(void)registerForNotifications;
-(id)serviceName;
-(void)setDomainName:(NSString *)arg1 ;
-(int)containmentPersonality;
-(char)canRemoveGroup:(id)arg1 ;
-(char)canRenameGroup:(id)arg1 ;
-(long long)sortOrderForGroup:(id)arg1 ;
-(char)record:(id)arg1 validateValue:(id*)arg2 forProperty:(id)arg3 error:(id*)arg4 ;
-(void)setUseSSL:(char)arg1 ;
-(char)useSSL;
-(void)awakeFromLoad;
-(id)databaseChangeNotificationName;
-(char)shouldSendStatusDidChangeNotifications;
-(void)willUnload;
-(id)labelsConstraint;
-(void)applyChangesAndRefresh:(char)arg1 ;
-(void)sourceShouldRefresh:(id)arg1 ;
-(void)workQueueOperationCountDidChange:(unsigned long long)arg1 ;
-(id)secureUserName;
-(id)secureServiceName;
-(id)initWithUID:(id)arg1 persistence:(id)arg2 ;
-(void)finalizeAccountSetupWithDictionary:(id)arg1 ;
-(id)accountSetupIcon;
-(void)mocWillSave:(id)arg1 ;
-(void)mocDidSave:(id)arg1 ;
-(char)shouldOfferRemoveContacts:(id)arg1 fromGroup:(id)arg2 ;
-(void)didImportPeople:(id)arg1 intoGroup:(id)arg2 ;
-(int)sourceType;
-(void)setAccountState:(unsigned long long)arg1 ;
-(NSURL *)autodiscoverURL;
-(NSString *)rootFolderId;
-(void)setRootFolderId:(NSString *)arg1 ;
-(NSString *)domainName;
-(NSString *)accountURLString;
-(NSNumber *)serverPort;
-(void)setServerPort:(NSNumber *)arg1 ;
-(void)handleError:(id)arg1 ;
-(void)dealloc;
-(void)presentError:(id)arg1 ;
-(void)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2 delegate:(id)arg3 didRecoverSelector:(SEL)arg4 contextInfo:(void*)arg5 ;
-(NSString *)userName;
-(void)setUserName:(NSString *)arg1 ;
-(NSString *)serverName;
-(void)setServerName:(NSString *)arg1 ;
-(void)mergeChangesFromContextDidSaveNotification:(id)arg1 ;
-(void)setPassword:(id)arg1 ;
-(NSString *)emailAddress;
-(void)passwordChanged:(id)arg1 ;
-(NSString *)fullName;
-(void)setFullName:(NSString *)arg1 ;
-(void)exchangeServiceBinding:(id)arg1 didReceiveCertificateError:(id)arg2 ;
-(void)exchangeServiceBinding:(id)arg1 didFinishWithResponse:(id)arg2 ;
-(void)exchangeServiceBinding:(id)arg1 didFailWithError:(id)arg2 ;
-(void)exchangeServiceBinding:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 ;
-(void)exchangeServiceBinding:(id)arg1 didCancelAuthenticationChallenge:(id)arg2 ;
-(void)setEmailAddress:(NSString *)arg1 ;
-(void)awakeFromInsert;
-(void)setPassword:(id)arg1 persistence:(unsigned long long)arg2 ;
-(id)nextSequenceNumber;
@end

