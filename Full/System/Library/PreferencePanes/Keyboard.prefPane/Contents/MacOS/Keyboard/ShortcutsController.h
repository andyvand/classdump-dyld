/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:14:14 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PreferencePanes/Keyboard.prefPane/Contents/MacOS/Keyboard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Keyboard/TabController.h>
#import <Keyboard/ConfigEditorDelegate.h>
#import <Keyboard/NSTextFieldDelegate.h>

@class AddItemController, NSArrayController, NSTreeController, NSOutlineView, NSTableView, NSView, NSSegmentedControl, NSMatrix, NSTextField, NSArray, NSMutableArray, NSMutableDictionary, NSImage, NSTrackingArea, ShortcutNode, ConfigKeyEditor, ConfigTitleEditor, NSMenu, NSString;

@interface ShortcutsController : TabController <ConfigEditorDelegate, NSTextFieldDelegate> {

	AddItemController* mAddItemController;
	NSArrayController* mSideBarArrayController;
	NSTreeController* mShortcutsTreeController;
	NSOutlineView* mConfigTable;
	NSTableView* mSidebarTable;
	NSView* mConflictWarningView;
	NSSegmentedControl* mAddDeleteControl;
	NSMatrix* mShowFocusONMatrix;
	NSTextField* mShowFocusONNote;
	char mInited;
	char mDisplaySectionIsHidden;
	NSArray* mDefaultSpacesShortcuts;
	NSMutableArray* mHiddenSections;
	NSMutableArray* mSectionOrder;
	NSMutableDictionary* mAppShortcutsParent;
	NSMutableDictionary* mServiceParent;
	unsigned long long mStationarySpacesCount;
	NSImage* mAlertIconImage;
	NSTrackingArea* mOutlineTrackingArea;
	ShortcutNode* mSpacesParent;
	ShortcutNode* mMouseOverNode;
	char mSymbolicShortcutsDirty;
	char mServicesDirty;
	char mAppShortcutsDirty;
	char mShowConflictWarningView;
	ConfigKeyEditor* mConfigKeyEditor;
	ConfigTitleEditor* mConfigTitleEditor;
	NSMenu* mContextualMenu;

}

@property (assign) char showConflictWarningView; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)fieldEditorForObject:(id)arg1 ;
-(void)_hide:(char)arg1 sectionWithD:(id)arg2 force:(char)arg3 ;
-(void)_saveSymbolicShortcuts;
-(void)addRemoveApplicationItem:(id)arg1 ;
-(void)_updateStateForSymboliKey:(unsigned long long)arg1 ;
-(void)_hideShowSections;
-(void)_keyboardUIModeDidChange:(id)arg1 ;
-(void)_setDisplaySectionHidden:(char)arg1 ;
-(void)_editHotKeyForRow:(id)arg1 ;
-(void)toggleFullKeyboardAccess:(id)arg1 ;
-(void)_refreshKeyboardUIMode;
-(void)_selectSectionWithIdentifier:(id)arg1 ;
-(void)restoreDefaults:(id)arg1 ;
-(char)showConflictWarningView;
-(void)addApplicationItem:(id)arg1 ;
-(void)_openInAutomator:(id)arg1 ;
-(void)_serviceListDidChanged:(id)arg1 ;
-(void)removeApplicationItem:(id)arg1 ;
-(void)controlTextCancelEditing:(id)arg1 ;
-(void)_restoreOutlineState;
-(id)contextualMenuForItem:(id)arg1 ;
-(void)_keyboardsDidChange:(id)arg1 ;
-(id)configTable;
-(void)_saveAppShortCuts;
-(char)controlTextShouldAllowClear:(id)arg1 ;
-(void)setShowConflictWarningView:(char)arg1 ;
-(void)_updateFullKeyboardAccessHighlightModeNote;
-(void)_writeEntryForKey:(unsigned long long)arg1 toPrefDictionary:(id)arg2 ;
-(void)_updateSpaces;
-(void)addShortcut:(id)arg1 ;
-(void)_saveServices;
-(void)_updateServices;
-(void)controlTextDone:(id)arg1 ;
-(void)_markConflicts;
-(char)hasElementForKey:(id)arg1 ;
-(void)_addApplicationItem:(id)arg1 returnCode:(long long)arg2 contextInfo:(void*)arg3 ;
-(id)_containerPathForURL:(id)arg1 ;
-(void)_lazyInit;
-(id)tabIdentifier;
-(void)revealElementForKey:(id)arg1 ;
-(void)_revealInFinder:(id)arg1 ;
-(void)willSelect;
-(void)finalize;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)tableViewSelectionDidChange:(id)arg1 ;
-(void)controlTextDidEndEditing:(id)arg1 ;
-(void)awakeFromNib;
-(void)splitViewDidResizeSubviews:(id)arg1 ;
-(id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3 ;
-(char)outlineView:(id)arg1 shouldSelectItem:(id)arg2 ;
-(char)outlineView:(id)arg1 shouldExpandItem:(id)arg2 ;
-(char)outlineView:(id)arg1 shouldCollapseItem:(id)arg2 ;
-(void)outlineViewSelectionDidChange:(id)arg1 ;
@end

