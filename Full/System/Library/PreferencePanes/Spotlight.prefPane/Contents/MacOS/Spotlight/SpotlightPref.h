/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:14:31 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PreferencePanes/Spotlight.prefPane/Contents/MacOS/Spotlight
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PreferencePanes/NSAdminPreference.h>
#import <Spotlight/NSComboBoxDataSource.h>

@class NSButton, NSPanel, NSTextView, NSMutableArray, NSArray, SpotlightPrefConfigKeyEditor, NSString, SpotlightPrefPrivacyController, NSUndoManager, NSDictionary;

@interface SpotlightPref : NSAdminPreference <NSComboBoxDataSource> {

	id _tabView;
	id _itemTable;
	id _keyboardMenuShortcutCheckbox;
	id _keyboardMenuShortcutComboBox;
	id _keyboardWindowShortcutCheckbox;
	id _keyboardWindowShortcutComboBox;
	NSButton* _menuConflictButton;
	NSButton* _windowConflictButton;
	NSPanel* _spotlightPrivacyPanel;
	NSTextView* _spotlightPrivacyPanelTextView;
	NSMutableArray* _spotlightItems;
	NSMutableArray* _menuComboBoxItems;
	NSMutableArray* _windowComboBoxItems;
	NSArray* _hotKeyTable;
	long long _draggedRow;
	SpotlightPrefConfigKeyEditor* _menuHotKeyFieldEditor;
	SpotlightPrefConfigKeyEditor* _windowHotKeyFieldEditor;
	NSString* _savedMenuComboBoxText;
	NSString* _savedWindowComboBoxText;
	SpotlightPrefPrivacyController* _privacyController;
	NSUndoManager* _undo;
	NSDictionary* _locGroupNames;
	unsigned short _menuKeyChar;
	unsigned short _windowKeyChar;
	unsigned short _menuVirtKey;
	unsigned short _windowVirtKey;
	unsigned _menuMods;
	unsigned _windowMods;
	char _menuHotKeyEnabled;
	char _windowHotKeyEnabled;
	long long _cachedHasDeveloperTools;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)shared;
-(void)toggleSpotlightWindowHotKey:(id)arg1 ;
-(void)aboutSpotlightPrivacyPressed:(id)arg1 ;
-(void)_syncSpotlightItems;
-(void)toggleSpotlightMenuHotKey:(id)arg1 ;
-(void)_syncUserAssignableKeys;
-(id)_filteredArrayWithArray:(id)arg1 ;
-(void)_sendCumulativePrefChangeNotification;
-(void)_removeOldIconCache;
-(void)controlTextDidCancelEditing:(id)arg1 ;
-(void)keyEditorFinished:(id)arg1 forTextView:(id)arg2 virtualKey:(id)arg3 modifiers:(unsigned)arg4 ;
-(void)_setupComboBox;
-(void)setSpotlightItems:(id)arg1 ;
-(void)_getStoredSpotlightItems;
-(void)_getRealSpotlightHotKey;
-(id)spotlightItems;
-(id)_defaultSpotlightItems;
-(char)_hasDeveloperToolsInstalled;
-(void)_sendImmediatePrefChangeNotification;
-(id)_xcodePath;
-(void)_getSpotlightCategoriesDisplayNames;
-(void)reflectUI;
-(void)closeAboutSpotlightPrivacyPressed:(id)arg1 ;
-(unsigned)_findConflictingSymbolicHotKeyFor:(unsigned)arg1 ;
-(id)_getSymbolicHotKeys;
-(void)_setupConflictUI;
-(void)gotoKbdPref:(id)arg1 ;
-(void)_refreshConflicts;
-(char)getBOOLDefaultValueForKey:(id)arg1 ;
-(id)_xmlStringFromDictionary:(id)arg1 ;
-(id)prefIcon;
-(void)help:(id)arg1 ;
-(void)mainViewDidLoad;
-(void)willResignActive;
-(void)revealElementForKey:(id)arg1 ;
-(void)didSelect;
-(void)dealloc;
-(id)window;
-(void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4 ;
-(void)tableViewSelectionDidChange:(id)arg1 ;
-(long long)numberOfRowsInTableView:(id)arg1 ;
-(id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3 ;
-(void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4 ;
-(char)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3 ;
-(unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4 ;
-(char)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4 ;
-(id)undo;
-(long long)numberOfItemsInComboBox:(id)arg1 ;
-(id)comboBox:(id)arg1 objectValueForItemAtIndex:(long long)arg2 ;
-(unsigned long long)comboBox:(id)arg1 indexOfItemWithStringValue:(id)arg2 ;
-(id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2 ;
-(void)comboBoxSelectionDidChange:(id)arg1 ;
-(void)comboBoxSelectionIsChanging:(id)arg1 ;
-(void)tabView:(id)arg1 willSelectTabViewItem:(id)arg2 ;
-(void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2 ;
@end

