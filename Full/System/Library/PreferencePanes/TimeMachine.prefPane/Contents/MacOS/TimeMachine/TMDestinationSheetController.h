/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:14:32 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PreferencePanes/TimeMachine.prefPane/Contents/MacOS/TimeMachine
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <TimeMachine/TimeMachine-Structs.h>
#import <TimeMachine/DMAsyncDelegate.h>
#import <TimeMachine/NSNetServiceBrowserDelegate.h>
#import <TimeMachine/NSNetServiceDelegate.h>
#import <TimeMachine/NSTextFieldDelegate.h>

@protocol OS_dispatch_queue;
@class NSArray, TMPreferencePane, NSWindow, TMTableView, NSButton, NSSecureTextField, NSTextField, NSProgressIndicator, SFPasswordAssistantInspectorController, NSMutableArray, TMDestinationListItem, NSImage, NSString, NSNetServiceBrowser, DMCoreStorage, DMEraseDisk, DMPartitionDisk, NSObject;

@interface TMDestinationSheetController : NSObject <DMAsyncDelegate, NSNetServiceBrowserDelegate, NSNetServiceDelegate, NSTextFieldDelegate> {

	NSArray* _topLevelNibObjects;
	TMPreferencePane* _preferencePane;
	NSWindow* _destinationSheet;
	TMTableView* _destinationsTableView;
	NSButton* _okButton;
	NSButton* _encryptCheckBox;
	NSWindow* _encryptionPasswordSheet;
	NSSecureTextField* _encryptionPasswordTextField;
	NSSecureTextField* _encryptionPasswordVerificationTextField;
	NSTextField* _mismatchedPasswordWarningTextField;
	NSTextField* _encryptionPasswordHintTextField;
	NSTextField* _encryptionPasswordHintLabelTextField;
	NSTextField* _encryptionPasswordHintWarningTextField;
	NSButton* _encryptionPasswordOKButton;
	NSWindow* _decryptionPasswordSheet;
	NSTextField* _decryptionPasswordTitleTextField;
	NSSecureTextField* _decryptionPasswordTextField;
	NSTextField* _decryptionPasswordInvalidTextField;
	NSButton* _decryptionPasswordOKButton;
	NSWindow* _preparationProgressSheet;
	NSTextField* _preparationProgressTextField;
	NSProgressIndicator* _preparationProgressIndicator;
	SFPasswordAssistantInspectorController* _passwordAssistantInspectorController;
	NSMutableArray* _discoveredVolumes;
	NSMutableArray* _destinationListItems;
	TMDestinationListItem* _selectedDestinationListItem;
	NSImage* _noBackupsIcon;
	NSImage* _localSnapshotsOnlyIcon;
	NSString* _proposedBackupPath;
	int _destinationConfigurationMode;
	unsigned long long _proposedBackupPathConfirmationState;
	NSNetServiceBrowser* _netServiceBrowser;
	NSMutableArray* _netServicesAwaitingResolution;
	char _shouldRestoreDestinationTableViewScrollPosition;
	NSString* _sparseBundlePath;
	char _shouldDeleteSparsebundle;
	DMCoreStorage* _coreStorageManager;
	DMEraseDisk* _diskEraser;
	DMPartitionDisk* _diskPartitioner;
	CFStringRef _passphraseUUID;
	NSString* _nameOfDiskBeingPrepared;
	char _shouldRestoreDiskName;
	NSString* _preparationDescription;
	float _preparationProgress;
	char _isPreparingDisk;
	NSObject*<OS_dispatch_queue> _updateLocalDestinationsQueue;
	NSObject*<OS_dispatch_queue> _updateNetworkDestinationsQueue;

}

@property (retain) TMDestinationListItem * selectedDestinationListItem;              //@synthesize selectedDestinationListItem=_selectedDestinationListItem - In the implementation block
@property (copy) NSString * sparseBundlePath;                                        //@synthesize sparseBundlePath=_sparseBundlePath - In the implementation block
@property (copy) NSString * nameOfDiskBeingPrepared;                                 //@synthesize nameOfDiskBeingPrepared=_nameOfDiskBeingPrepared - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)helpPressed:(id)arg1 ;
-(void)removeBackupDiskPressed:(id)arg1 ;
-(void)showDestinationSheet:(id)arg1 ;
-(void)_rebuildDestinationListItems;
-(char)_prepareDisk:(DADiskRef)arg1 ;
-(void)updateGUI;
-(void)_eraseDisk:(DADiskRef)arg1 ;
-(void)_encryptDisk:(DADiskRef)arg1 ;
-(void)_decryptDisk:(DADiskRef)arg1 ;
-(id)_setBackupPath:(id)arg1 ;
-(id)backupSettings;
-(void)_prefsChangedNotification:(id)arg1 ;
-(void)setEncryptionRequested:(char)arg1 ;
-(char)confirmBackupPath:(id)arg1 ;
-(void)confirmNetworkDestinationURL:(id)arg1 passwordOnly:(char)arg2 isAirPort:(char)arg3 ;
-(char)_caseSensitiveDestinationRequired;
-(char)_encryptionRequested;
-(NSString *)nameOfDiskBeingPrepared;
-(void)_showAlertForDMError:(int)arg1 ;
-(void)setIsPreparingDisk:(char)arg1 ;
-(int)_preparationRequirementsForDisk:(DADiskRef)arg1 ;
-(void)setNameOfDiskBeingPrepared:(NSString *)arg1 ;
-(void)_repartitionDisk:(DADiskRef)arg1 ;
-(void)_showDestinationSheet:(id)arg1 ;
-(id)_coreStorageManager;
-(void)decryptionPasswordOKButtonPressed:(id)arg1 ;
-(NSString *)sparseBundlePath;
-(void)validatePasswordButtonPressed:(id)arg1 ;
-(void)_showAlertForError:(id)arg1 ;
-(char)_showLegacyFileVaultWarningIfNeeded;
-(id)_sourceDisksConflictingWithDestinationDisk:(DADiskRef)arg1 ;
-(void)_displayDeviceConflictAlertForSourceDisks:(id)arg1 destinationDisk:(DADiskRef)arg2 ;
-(char)_destinationContainsBackupForOtherComputers:(id)arg1 ;
-(void)_displayBackwardCompatibilityAlertForDisk:(DADiskRef)arg1 ;
-(void)_showEncryptionPasswordSheetWithHint:(char)arg1 ;
-(void)_displayDecryptionPasswordSheetForDisk:(DADiskRef)arg1 ;
-(void)_displayEraseConfirmationAlertForDisk:(DADiskRef)arg1 reason:(int)arg2 ;
-(void)setSparseBundlePath:(NSString *)arg1 ;
-(void)_displayExistingEncryptedSparsebundleAlertForMountPoint:(id)arg1 ;
-(void)_displayExistingUnencryptedSparsebundleAlertForMountPoint:(id)arg1 ;
-(void)_displayValidatePasswordSheet;
-(char)_storeSystemKeychainPassword:(id)arg1 account:(id)arg2 service:(id)arg3 ;
-(id)_volumeDictionaryForLocalFileSystem:(statfs*)arg1 ;
-(id)_volumeDictionaryForNetworkFileSystem:(statfs*)arg1 ;
-(void)_updateDiscoveredVolume:(id)arg1 ;
-(id)configuredDestinations;
-(void)useBackupDiskPressed:(id)arg1 ;
-(void)setUpTimeCapsulePressed:(id)arg1 ;
-(void)setSelectedDestinationListItem:(TMDestinationListItem *)arg1 ;
-(void)_volumesChangedNotification:(id)arg1 ;
-(void)_updateMountedVolumesAsync;
-(void)_useSelectedBackupDisk;
-(id)_configuredDestinationForDiscoveredVolume:(id)arg1 ;
-(void)_confirmSelectedDestination;
-(char)_isTimeCapsuleUtilityInstalled;
-(void)passwordOKButtonPressed:(id)arg1 ;
-(void)passwordCancelButtonPressed:(id)arg1 ;
-(void)decryptionPasswordCancelButtonPressed:(id)arg1 ;
-(void)encryptionPasswordHelpPressed:(id)arg1 ;
-(TMDestinationListItem *)selectedDestinationListItem;
-(void)netServiceDidResolveAddress:(id)arg1 ;
-(void)netService:(id)arg1 didNotResolve:(id)arg2 ;
-(void)netServiceBrowser:(id)arg1 didFindService:(id)arg2 moreComing:(char)arg3 ;
-(void)netServiceBrowser:(id)arg1 didRemoveService:(id)arg2 moreComing:(char)arg3 ;
-(void)_handleDoubleClick:(id)arg1 ;
-(void)updateButtons;
-(void)updateTableView;
-(void)dmAsyncStartedForDisk:(DADiskRef)arg1 ;
-(void)dmAsyncProgressForDisk:(DADiskRef)arg1 barberPole:(char)arg2 percent:(float)arg3 ;
-(void)dmAsyncMessageForDisk:(DADiskRef)arg1 string:(id)arg2 dictionary:(id)arg3 ;
-(void)dmAsyncFinishedForDisk:(DADiskRef)arg1 mainError:(int)arg2 detailError:(int)arg3 dictionary:(id)arg4 ;
-(void)dealloc;
-(id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3 ;
-(char)tableView:(id)arg1 shouldSelectRow:(long long)arg2 ;
-(double)tableView:(id)arg1 heightOfRow:(long long)arg2 ;
-(char)tableView:(id)arg1 isGroupRow:(long long)arg2 ;
-(void)tableViewSelectionDidChange:(id)arg1 ;
-(long long)numberOfRowsInTableView:(id)arg1 ;
-(void)controlTextDidChange:(id)arg1 ;
-(void)cancelButtonPressed:(id)arg1 ;
-(void)loadNib;
@end

