/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 9:23:08 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Automator/Watch Me Do.action/Contents/MacOS/Watch Me Do
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Watch Me Do/Watch Me Do-Structs.h>
#import <Automator/AMBundleAction.h>

@class NSButton, AMWatchMeDoActionTableView, NSString, NSMutableArray, UIRLocalRecorder, NSDictionary, UIRRecord;

@interface AMWatchMeDoAction : AMBundleAction {

	NSButton* _recordButton;
	NSButton* _stopButton;
	NSButton* _playButton;
	AMWatchMeDoActionTableView* _tableView;
	NSString* _status;
	NSMutableArray* _userEvents;
	UIRLocalRecorder* _recorder;
	char _canRecord;
	char _canPlayback;
	char _canStop;
	char _didStopPlayingBack;
	NSDictionary* _playbackErrorInfo;
	double _startRecordingTime;
	double _firstRecordedEventTime;
	UIRRecord* _playingRecord;
	unsigned long long _statusIsBeingUpdated;

}
+(id)imageWithName:(id)arg1 ofType:(id)arg2 ;
+(void)initialize;
+(id)thisProcess;
-(CGEventRef)uirRecord:(id)arg1 willSendEvent:(CGEventRef)arg2 associatedWithEvent:(id)arg3 ;
-(void)uirRecord:(id)arg1 didStartPlayback:(char)arg2 ;
-(void)uirRecord:(id)arg1 didStopPlaybackWithErrorInfo:(id)arg2 ;
-(id)playbackErrorInfo;
-(void)setPlaybackErrorInfo:(id)arg1 ;
-(CGEventRef)uirLocalRecorder:(id)arg1 willRecordEvent:(CGEventRef)arg2 ;
-(void)uirLocalRecorder:(id)arg1 didStartRecording:(char)arg2 ;
-(void)uirLocalRecorder:(id)arg1 didStopRecording:(id)arg2 ;
-(double)playbackSpeedMultiplier;
-(void)setDidStopPlayingBack:(char)arg1 ;
-(void)moveUserEventAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2 ;
-(void)addUserEventsFromCurrentRecord;
-(void)insertUserEvents:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)runAsynchronously;
-(void)disableStatusUpdated;
-(void)enableStatusUpdated;
-(void)setCanPlayback:(char)arg1 ;
-(void)setCanRecord:(char)arg1 ;
-(void)setCanStop:(char)arg1 ;
-(id)userEvents;
-(void)setUserEvents:(id)arg1 ;
-(void)statusUpdated;
-(char)didStopPlayingBack;
-(char)canRecord;
-(void)record:(id)arg1 ;
-(char)canPlayback;
-(void)insertObject:(id)arg1 inUserEventsAtIndex:(unsigned long long)arg2 ;
-(void)removeObjectFromUserEventsAtIndex:(unsigned long long)arg1 ;
-(void)moveUserEventsAtIndexes:(id)arg1 toIndexes:(id)arg2 ;
-(void)runAsynchronouslyWithInput:(id)arg1 ;
-(void)updateParameters;
-(void)parametersUpdated;
-(void)opened;
-(id)initWithDefinition:(id)arg1 fromArchive:(char)arg2 ;
-(unsigned long long)draggingStatus:(id)arg1 ;
-(char)canStop;
-(void)setRecorder:(id)arg1 ;
-(void)closed;
-(void)stop;
-(void)stop:(id)arg1 ;
-(char)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3 ;
-(unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4 ;
-(char)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4 ;
-(id)status;
-(void)setStatus:(id)arg1 ;
-(id)recorder;
-(void)run:(id)arg1 ;
@end

