/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:31:55 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <QTKit/QTKit-Structs.h>
#import <AppKit/NSActionCell.h>

@interface QTHUDSliderCell : NSActionCell {

	double _minValue;
	double _maxValue;
	double _currentValue;
	CGRect* _cellFrameForTrackingMousePtr;

}
+(void)initialize;
+(char)prefersTrackingUntilMouseUp;
-(id)_QTUIState;
-(void)_markControlViewDirtyIfNecessesaryForNewFraction:(double)arg1 oldFraction:(double)arg2 ;
-(void)_setDoubleValue:(double)arg1 minValue:(double)arg2 maxValue:(double)arg3 ;
-(char)isTrackingMouse;
-(id)_QTUISize;
-(id)_QTHUDSliderHighlightedRanges;
-(CGRect)mouseTrackingRectWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(CGRect)knobRectAtValue:(double)arg1 withFrame:(CGRect)arg2 inView:(id)arg3 ;
-(CGPoint)pointAtValue:(double)arg1 withFrame:(CGRect)arg2 inView:(id)arg3 ;
-(double)valueAtPoint:(CGPoint)arg1 withFrame:(CGRect)arg2 inView:(id)arg3 ;
-(double)_QTHUDSliderValidateUserValue:(double)arg1 ;
-(char)startTrackingAt:(CGPoint)arg1 inRect:(CGRect)arg2 ofView:(id)arg3 ;
-(char)continueTracking:(CGPoint)arg1 at:(CGPoint)arg2 inRect:(CGRect)arg3 ofView:(id)arg4 ;
-(void)stopTracking:(CGPoint)arg1 at:(CGPoint)arg2 inRect:(CGRect)arg3 ofView:(id)arg4 mouseIsUp:(char)arg5 ;
-(void)QTHUD_markAreasNeedingDisplayForAction:(void*)arg1 withFrame:(CGRect)arg2 inView:(id)arg3 ;
-(int)intValue;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)accessibilityAttributeNames;
-(id)accessibilityAttributeValue:(id)arg1 ;
-(long long)integerValue;
-(id)accessibilityActionDescription:(id)arg1 ;
-(char)accessibilityIsAttributeSettable:(id)arg1 ;
-(void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2 ;
-(id)accessibilityActionNames;
-(void)accessibilityPerformAction:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setStringValue:(id)arg1 ;
-(id)stringValue;
-(CGSize)cellSizeForBounds:(CGRect)arg1 ;
-(float)floatValue;
-(double)doubleValue;
-(void)drawWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(unsigned long long)hitTestForEvent:(id)arg1 inRect:(CGRect)arg2 ofView:(id)arg3 ;
-(void)moveRight:(id)arg1 ;
-(void)moveLeft:(id)arg1 ;
-(id)objectValue;
-(void)setObjectValue:(id)arg1 ;
-(void)drawInteriorWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)setDoubleValue:(double)arg1 ;
-(char)trackMouse:(id)arg1 inRect:(CGRect)arg2 ofView:(id)arg3 untilMouseUp:(char)arg4 ;
-(char)startTrackingAt:(CGPoint)arg1 inView:(id)arg2 ;
-(char)continueTracking:(CGPoint)arg1 at:(CGPoint)arg2 inView:(id)arg3 ;
-(void)setIntValue:(int)arg1 ;
-(void)setIntegerValue:(long long)arg1 ;
-(void)setFloatValue:(float)arg1 ;
-(void)stopTracking:(CGPoint)arg1 at:(CGPoint)arg2 inView:(id)arg3 mouseIsUp:(char)arg4 ;
-(char)isContinuous;
-(void)setContinuous:(char)arg1 ;
-(double)maxValue;
-(double)minValue;
-(void)moveUp:(id)arg1 ;
-(void)moveDown:(id)arg1 ;
-(void)pageUp:(id)arg1 ;
-(void)pageDown:(id)arg1 ;
-(void)setMinValue:(double)arg1 ;
-(void)setMaxValue:(double)arg1 ;
@end

