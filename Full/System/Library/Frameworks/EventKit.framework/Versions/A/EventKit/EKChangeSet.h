/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:31:26 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/EventKit.framework/Versions/A/EventKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <EventKit/EventKit-Structs.h>
#import <EventKit/NSCopying.h>

@class NSMutableDictionary;

@interface EKChangeSet : NSObject <NSCopying> {

	char _isNew;
	char _isDeleted;
	NSMutableDictionary* _unbatchedSingleValueChanges;
	NSMutableDictionary* _unbatchedMultiValueAdditions;
	NSMutableDictionary* _unbatchedMultiValueRemovals;
	NSMutableDictionary* _batchedSingleValueChanges;
	NSMutableDictionary* _batchedMultiValueAdditions;
	NSMutableDictionary* _batchedMultiValueRemovals;

}

@property (assign,nonatomic) char isNew;                                                      //@synthesize isNew=_isNew - In the implementation block
@property (assign,nonatomic) char isDeleted;                                                  //@synthesize isDeleted=_isDeleted - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * unbatchedSingleValueChanges;               //@synthesize unbatchedSingleValueChanges=_unbatchedSingleValueChanges - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * unbatchedMultiValueAdditions;              //@synthesize unbatchedMultiValueAdditions=_unbatchedMultiValueAdditions - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * unbatchedMultiValueRemovals;               //@synthesize unbatchedMultiValueRemovals=_unbatchedMultiValueRemovals - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * batchedSingleValueChanges;                 //@synthesize batchedSingleValueChanges=_batchedSingleValueChanges - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * batchedMultiValueAdditions;                //@synthesize batchedMultiValueAdditions=_batchedMultiValueAdditions - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * batchedMultiValueRemovals;                 //@synthesize batchedMultiValueRemovals=_batchedMultiValueRemovals - In the implementation block
-(id)summary;
-(void)rollbackChanges;
-(char)hasUnsavedChangeForKey:(id)arg1 ;
-(NSMutableDictionary *)unbatchedSingleValueChanges;
-(NSMutableDictionary *)batchedSingleValueChanges;
-(id)initWithChangeSet:(id)arg1 ;
-(NSMutableDictionary *)unbatchedMultiValueAdditions;
-(NSMutableDictionary *)unbatchedMultiValueRemovals;
-(NSMutableDictionary *)batchedMultiValueAdditions;
-(NSMutableDictionary *)batchedMultiValueRemovals;
-(id)initWithUnbatchedSingleValueChanges:(id)arg1 unbatchedMultiValueAdditions:(id)arg2 unbatchedMultiValueRemovals:(id)arg3 batchedSingleValueChanges:(id)arg4 batchedMultiValueAdditions:(id)arg5 batchedMultiValueRemovals:(id)arg6 ;
-(void)setIsNew:(char)arg1 ;
-(void)setUnbatchedSingleValueChanges:(NSMutableDictionary *)arg1 ;
-(void)setBatchedSingleValueChanges:(NSMutableDictionary *)arg1 ;
-(void)setUnbatchedMultiValueAdditions:(NSMutableDictionary *)arg1 ;
-(void)setBatchedMultiValueAdditions:(NSMutableDictionary *)arg1 ;
-(void)setUnbatchedMultiValueRemovals:(NSMutableDictionary *)arg1 ;
-(void)setBatchedMultiValueRemovals:(NSMutableDictionary *)arg1 ;
-(id)_initWithChangeSet:(id)arg1 filter:(/*^block*/id)arg2 ;
-(id)changedMultiValueKeys;
-(void)removeObjectsFromBatched:(id)arg1 forMultiValueKey:(id)arg2 basedOn:(id)arg3 ;
-(void)addObjectsToBatched:(id)arg1 forMultiValueKey:(id)arg2 basedOn:(id)arg3 ;
-(void)removeObjectsFromUnbatched:(id)arg1 forMultiValueKey:(id)arg2 basedOn:(id)arg3 ;
-(void)addObjectsToUnbatched:(id)arg1 forMultiValueKey:(id)arg2 basedOn:(id)arg3 ;
-(void)_addObjects:(id)arg1 toExistingAdded:(id)arg2 forMultiValueKey:(id)arg3 basedOn:(id)arg4 checkBatchedOnly:(char)arg5 ;
-(id)_uniqueIDToObjectMapForObjects:(id)arg1 ;
-(void)_cleanupEmptySetsForMultiValueKey:(id)arg1 ;
-(void)_removeObjects:(id)arg1 toExistingRemoved:(id)arg2 forMultiValueKey:(id)arg3 basedOn:(id)arg4 checkBatchedOnly:(char)arg5 ;
-(id)changedSingleValueKeys;
-(id)_unsavedSingleValueChanges;
-(id)_unsavedMultiValueAdditions;
-(id)_unsavedMultiValueRemovals;
-(id)valueForSingleValueKey:(id)arg1 basedOn:(id)arg2 ;
-(void)forceChangeValue:(id)arg1 forKey:(id)arg2 ;
-(id)initWithUnbatchedChanges:(id)arg1 ;
-(id)initWithChangeSet:(id)arg1 changesToSkip:(id)arg2 ;
-(id)initWithChangeSet:(id)arg1 changesToKeep:(id)arg2 ;
-(void)rollbackUnbatchedChanges;
-(void)markChangesAsBatched;
-(void)markChangesAsUnbatched;
-(void)markChangesAsCommitted;
-(void)addChanges:(id)arg1 ;
-(char)hasUnbatchedChangeForKey:(id)arg1 ;
-(char)hasUnsavedMultiValueAdditionForKey:(id)arg1 ;
-(id)unsavedMultiValueAddedObjectsForKey:(id)arg1 ;
-(char)hasUnsavedMultiValueRemovalForKey:(id)arg1 ;
-(id)unsavedMultiValueRemovedObjectsForKey:(id)arg1 ;
-(void)changeSingleValue:(id)arg1 forKey:(id)arg2 basedOn:(id)arg3 ;
-(id)valuesForMultiValueKey:(id)arg1 basedOn:(id)arg2 ;
-(void)forceUnchangeBatchedValueForKey:(id)arg1 ;
-(void)setIsDeleted:(char)arg1 ;
-(char)hasUnsavedChanges;
-(id)init;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(char)isDeleted;
-(char)isNew;
-(id)changedKeys;
@end

