/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:31:26 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/EventKit.framework/Versions/A/EventKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class EKChangeTracker, NSSet, EKCreatedObjectsTracker, EKBackingObjectsTracker, EKEventStore, EKEventOccurrenceCache, EKRecurrenceChangeManager, EKCalendarChangeHelper, NSObject, NSString, NSMutableDictionary, NSArray, NSDictionary;

@interface EKBackingStore : NSObject {

	char _accessToRemindersRequested;
	char _accessToEventsRequested;
	EKChangeTracker* _changeTracker;
	NSSet* _commitOnlyTheseObjects;
	EKCreatedObjectsTracker* _createdObjectsTracker;
	EKBackingObjectsTracker* _backingObjectsTracker;
	EKEventStore* _mainStore;
	EKEventOccurrenceCache* _occurrenceCache;
	EKRecurrenceChangeManager* _recurrenceChangeManager;
	EKCalendarChangeHelper* _calendarChangeHelper;
	NSObject*<OS_dispatch_queue> _backingObjectsQueue;
	NSString* _backingStoreIdentifier;
	NSMutableDictionary* _cachedNotificationBoxMessageCounts;

}

@property (assign,nonatomic) char accessToRemindersRequested;                                        //@synthesize accessToRemindersRequested=_accessToRemindersRequested - In the implementation block
@property (assign,nonatomic) char accessToEventsRequested;                                           //@synthesize accessToEventsRequested=_accessToEventsRequested - In the implementation block
@property (nonatomic,readonly) NSArray * allCalendars; 
@property (nonatomic,readonly) NSArray * allEventCalendars; 
@property (nonatomic,readonly) NSSet * allEvents; 
@property (nonatomic,readonly) NSArray * allSources; 
@property (nonatomic,readonly) NSArray * allReminderCalendars; 
@property (nonatomic,readonly) NSSet * allReminders; 
@property (assign,nonatomic) id<EKProtocolCalendar> defaultCalendarForNewEvents; 
@property (assign,nonatomic) id<EKProtocolCalendar> defaultCalendarForNewReminders; 
@property (nonatomic,readonly) EKChangeTracker * changeTracker;                                      //@synthesize changeTracker=_changeTracker - In the implementation block
@property (nonatomic,retain) NSSet * commitOnlyTheseObjects;                                         //@synthesize commitOnlyTheseObjects=_commitOnlyTheseObjects - In the implementation block
@property (nonatomic,readonly) EKCreatedObjectsTracker * createdObjectsTracker;                      //@synthesize createdObjectsTracker=_createdObjectsTracker - In the implementation block
@property (nonatomic,readonly) EKBackingObjectsTracker * backingObjectsTracker;                      //@synthesize backingObjectsTracker=_backingObjectsTracker - In the implementation block
@property (nonatomic,readonly) char includeEnabledDelegates; 
@property (assign,nonatomic,__weak) EKEventStore * mainStore;                                        //@synthesize mainStore=_mainStore - In the implementation block
@property (nonatomic,retain) EKEventOccurrenceCache * occurrenceCache;                               //@synthesize occurrenceCache=_occurrenceCache - In the implementation block
@property (nonatomic,readonly) EKRecurrenceChangeManager * recurrenceChangeManager;                  //@synthesize recurrenceChangeManager=_recurrenceChangeManager - In the implementation block
@property (nonatomic,readonly) EKCalendarChangeHelper * calendarChangeHelper;                        //@synthesize calendarChangeHelper=_calendarChangeHelper - In the implementation block
@property (nonatomic,readonly) NSArray * sourceFilters; 
@property (nonatomic,readonly) NSDictionary * sourceErrors; 
@property (nonatomic,readonly) NSObject*<OS_dispatch_group> backingStoreAvailableGroup; 
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> backingObjectsQueue;                       //@synthesize backingObjectsQueue=_backingObjectsQueue - In the implementation block
@property (nonatomic,retain) NSString * backingStoreIdentifier;                                      //@synthesize backingStoreIdentifier=_backingStoreIdentifier - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * cachedNotificationBoxMessageCounts;               //@synthesize cachedNotificationBoxMessageCounts=_cachedNotificationBoxMessageCounts - In the implementation block
+(id)createNonPartialFrozenObjectForPartialObject:(id)arg1 withFrozenClass:(Class)arg2 ;
-(NSArray *)allSources;
-(NSArray *)sourceFilters;
-(char)isObjectDeletedForIdentifier:(id)arg1 ;
-(char)batchChange:(id)arg1 error:(id*)arg2 ;
-(id)updatedCalendarItemForOccurrence:(id)arg1 ;
-(EKBackingObjectsTracker *)backingObjectsTracker;
-(id)remindersWithCalendarIdentifiers:(id)arg1 ;
-(NSSet *)allReminders;
-(void)setAccessToEventsRequested:(char)arg1 ;
-(void)setAccessToRemindersRequested:(char)arg1 ;
-(void)refreshBackingStore;
-(void)setMainStore:(EKEventStore *)arg1 ;
-(id)_copyForBackgroundUpdate;
-(char)includeEnabledDelegates;
-(char)finishBatch:(id*)arg1 onlyCommitObjects:(id)arg2 ;
-(void)refreshSources;
-(char)accessToRemindersRequested;
-(char)accessToEventsRequested;
-(NSArray *)allCalendars;
-(NSArray *)allEventCalendars;
-(NSArray *)allReminderCalendars;
-(id<EKProtocolCalendar>)defaultCalendarForNewEvents;
-(void)setDefaultCalendarForNewEvents:(id<EKProtocolCalendar>)arg1 ;
-(id<EKProtocolCalendar>)defaultCalendarForNewReminders;
-(void)setDefaultCalendarForNewReminders:(id<EKProtocolCalendar>)arg1 ;
-(id)sourceWithIdentifier:(id)arg1 ;
-(NSDictionary *)sourceErrors;
-(EKRecurrenceChangeManager *)recurrenceChangeManager;
-(char)batchDelete:(id)arg1 error:(id*)arg2 ;
-(char)batchDeleteCalendar:(id)arg1 error:(id*)arg2 ;
-(char)batchDeleteSource:(id)arg1 error:(id*)arg2 ;
-(id)occurrencesWithExternalIdentifier:(id)arg1 ofType:(unsigned long long)arg2 ;
-(id)occurrenceWithIdentifier:(id)arg1 ;
-(NSSet *)allEvents;
-(char)batchSaveEvents:(id)arg1 span:(int)arg2 error:(id*)arg3 ;
-(char)batchRemoveEvent:(id)arg1 span:(int)arg2 error:(id*)arg3 ;
-(id)occurrencesWithIdentifiers:(id)arg1 ;
-(void)pruneCacheForRange:(id)arg1 localUIDs:(id)arg2 ;
-(id)initWithSourceFilters:(id)arg1 includeEnabledDelegates:(char)arg2 ;
-(id)initWithSourceFilters:(id)arg1 includeEnabledDelegates:(char)arg2 orWithExistingStore:(id)arg3 ;
-(id)initWithBackingStore:(id)arg1 ;
-(EKEventStore *)mainStore;
-(EKCreatedObjectsTracker *)createdObjectsTracker;
-(EKEventOccurrenceCache *)occurrenceCache;
-(NSMutableDictionary *)cachedNotificationBoxMessageCounts;
-(void)_emptyCache;
-(void)setOccurrenceCache:(EKEventOccurrenceCache *)arg1 ;
-(id)_allOccurrenceKeys;
-(id)_allCachedOccurrences;
-(id)_baseOccurrenceWithLocalUID:(id)arg1 ;
-(id)_eventForOccurrence:(id)arg1 ;
-(id)_reminderForOccurrence:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)backingObjectsQueue;
-(id)_masterEventForUID:(id)arg1 inQueue:(id)arg2 ;
-(id)_occurrenceWithIdentifier:(id)arg1 ;
-(id)_changedItemForOccurrence:(id)arg1 ;
-(id)_calendarItemForLocalUID:(id)arg1 ;
-(id)_remindersWithCalendarIdentifiers:(id)arg1 ;
-(id)_occurrencesWithCalendarIdentifiers:(id)arg1 ;
-(id)remindersWithDueDatesInRange:(id)arg1 withCalendarIdentifiers:(id)arg2 withCompletion:(id)arg3 ;
-(id)_occurrencesForCompletionLookup;
-(id)remindersWithIsCompleted:(char)arg1 maxResults:(unsigned long long)arg2 withCalendarIdentifiers:(id)arg3 ;
-(id)_frozenItemWithUpdatedCalendarForOccurrence:(id)arg1 ;
-(void)_logIfNoAccessRequested;
-(char)_interestedInAndAuthorizedForEntityType:(unsigned long long)arg1 ;
-(id)_lookupOccurrenceWithIdentifier:(id)arg1 type:(unsigned long long)arg2 ;
-(id)_expandRecurrenceForIdentifier:(id)arg1 deleteCheckQueue:(id)arg2 lookupBlock:(/*^block*/id)arg3 ;
-(id)_lookupOccurrencesWithIdentifiers:(id)arg1 type:(unsigned long long)arg2 ;
-(id)_expandRecurrencesForIdentifiers:(id)arg1 deleteCheckQueue:(id)arg2 lookupBlock:(/*^block*/id)arg3 ;
-(id)_expandEvent:(id)arg1 recurrenceDate:(id)arg2 prepopulatedExceptions:(id)arg3 ;
-(char)isObjectDeletedForIdentifier:(id)arg1 checkExceptions:(id)arg2 ;
-(char)_objectIsDeletedForIdentifier:(id)arg1 inQueue:(id)arg2 ;
-(id)detachedEventsForLocalUID:(id)arg1 ;
-(id)exceptionsForLocalUID:(id)arg1 ;
-(id)_occurrencesForEvent:(id)arg1 inRange:(id)arg2 inQueue:(id)arg3 ;
-(id)_expandedOccurrencesForEvent:(id)arg1 range:(id)arg2 ;
-(id)occurrencesForEvent:(id)arg1 inRange:(id)arg2 ;
-(id)_allCachedMasters;
-(id)_expandEventsRange:(id)arg1 masterEvents:(id)arg2 ;
-(char)canCachePredicate:(id)arg1 ;
-(id)_expandEventRangePredicate:(id)arg1 ;
-(id)_changedCalendarForIdentifier:(id)arg1 ;
-(id)_calendarWithIdentifier:(id)arg1 ;
-(id)_calendarForCalendar:(id)arg1 ;
-(id)_allCalendarKeys;
-(id)_allCalendarsInQueue:(id)arg1 passingTest:(/*^block*/id)arg2 ;
-(id)_allCalendarsInQueue:(id)arg1 ;
-(id)_allEventCalendarsInQueue:(id)arg1 ;
-(id)_allReminderCalendarsInQueue:(id)arg1 ;
-(id)_frozenCalendarWithUpdatedSourceForCalendar:(id)arg1 ;
-(id)_sourceForCalendarSource:(id)arg1 ;
-(char)_eventIsUndetached:(id)arg1 inQueue:(id)arg2 ;
-(char)_eventIsUnexcepted:(id)arg1 inQueue:(id)arg2 ;
-(char)_eventIsDeletedDetached:(id)arg1 inQueue:(id)arg2 ;
-(id)_diffFromCommittedEvent:(id)arg1 inQueue:(id)arg2 ;
-(char)_objectIsDeletedForIdentifier:(id)arg1 inQueue:(id)arg2 checkExceptions:(id)arg3 ;
-(char)batchDeleteAllOrFuture:(id)arg1 span:(int)arg2 error:(id*)arg3 ;
-(char)_batchChange:(id)arg1 rebin:(char)arg2 error:(id*)arg3 ;
-(char)batchChangeAllOrFuture:(id)arg1 span:(int)arg2 error:(id*)arg3 ;
-(char)_batchChange:(id)arg1 appliesToMaster:(char)arg2 isNewItem:(char)arg3 rebin:(char)arg4 error:(id*)arg5 ;
-(char)_batchChange:(id)arg1 appliesToMaster:(char)arg2 isNewItem:(char)arg3 error:(id*)arg4 ;
-(char)_batchDelete:(id)arg1 deleteFuture:(char)arg2 error:(id*)arg3 ;
-(char)_batchChangeCalendar:(id)arg1 isNewCalendar:(char)arg2 error:(id*)arg3 ;
-(char)_batchChangeCalendarSource:(id)arg1 isNewSource:(char)arg2 error:(id*)arg3 ;
-(char)batchDeleteCalendar:(id)arg1 queue:(id)arg2 error:(id*)arg3 ;
-(void)_notifyChangedOccurrence:(id)arg1 ;
-(EKCalendarChangeHelper *)calendarChangeHelper;
-(void)_addDetachedEvent:(id)arg1 forLocalUID:(id)arg2 ;
-(void)_propagateNonDateChangesToDetachedForMaster:(id)arg1 ;
-(NSSet *)commitOnlyTheseObjects;
-(char)_finishBatch:(id*)arg1 onlyCommitObjects:(id)arg2 managedObjectContext:(id)arg3 ;
-(void)setCommitOnlyTheseObjects:(NSSet *)arg1 ;
-(char)_finishBatchSourcesWithChangedIdentifiers:(id*)arg1 error:(id*)arg2 managedObjectContext:(id)arg3 ;
-(char)_finishBatchCalendarsWithChangedIdentifiers:(id*)arg1 error:(id*)arg2 managedObjectContext:(id)arg3 ;
-(char)_finishBatchCalendarItemsWithChangedIdentifiers:(id*)arg1 error:(id*)arg2 managedObjectContext:(id)arg3 ;
-(char)_cleanUpAfterBatchWithError:(id*)arg1 managedObjectContext:(id)arg2 ;
-(id)_calendarsRequiringNotificationBoxMessageCountCacheUpdate;
-(void)_notifyChangedCalendarSource:(char)arg1 changedCalendarSourceIdentifiers:(id)arg2 calendar:(char)arg3 changedCalendarIdentifiers:(id)arg4 reminder:(char)arg5 changedReminderIdentifiers:(id)arg6 event:(char)arg7 changedEventIdentifiers:(id)arg8 ;
-(long long)notificationBoxMessageCountForCalendar:(id)arg1 allowCachedValue:(char)arg2 ;
-(/*^block*/id)createNewManagedItemBlockWithContext:(id)arg1 error:(id*)arg2 ;
-(/*^block*/id)prepareForManagedItemChangesBlock;
-(/*^block*/id)applyChangeToManagedItemBlockWithError:(id*)arg1 ;
-(/*^block*/id)deleteManagedItemBlock;
-(/*^block*/id)frozenItemBlock;
-(/*^block*/id)lookupChangedItemBlock;
-(/*^block*/id)updateCreatedItemsBlock;
-(/*^block*/id)updateChangedItemBlock;
-(/*^block*/id)updateDeletedItemsBlock;
-(char)_updateItemsWithContext:(id)arg1 error:(id*)arg2 createNewManagedObjectBlock:(/*^block*/id)arg3 prepareForChangesBlock:(/*^block*/id)arg4 applyChangeBlock:(/*^block*/id)arg5 deleteManagedObjectBlock:(/*^block*/id)arg6 wrappedVersionBlock:(/*^block*/id)arg7 lookupChangedBlock:(/*^block*/id)arg8 updateCreatedBackingObjectBlock:(/*^block*/id)arg9 updateChangedBackingObjectBlock:(/*^block*/id)arg10 updateDeletedBackingObjectBlock:(/*^block*/id)arg11 changedIdentifiers:(id*)arg12 ;
-(char)_updateCreatedItemsWithCreatedObjectDictionary:(id)arg1 managedObjectContext:(id)arg2 error:(id*)arg3 createNewManagedObjectBlock:(/*^block*/id)arg4 prepareForChangesBlock:(/*^block*/id)arg5 applyChangeBlock:(/*^block*/id)arg6 locallyChangedIdentifiers:(id)arg7 ;
-(char)_updateChangedAndDeletedItemsWithCreatedObjectDictionary:(id)arg1 managedObjectContext:(id)arg2 error:(id*)arg3 prepareForChangesBlock:(/*^block*/id)arg4 applyChangeBlock:(/*^block*/id)arg5 deleteManagedObjectBlock:(/*^block*/id)arg6 changedLocalIDs:(id)arg7 locallyChangedIdentifiers:(id)arg8 ;
-(void)_updateBackingSource:(id)arg1 createdObjects:(id)arg2 changedLocalIDs:(id)arg3 wrappedVersionBlock:(/*^block*/id)arg4 lookupChangedBlock:(/*^block*/id)arg5 updateCreatedBackingObjectBlock:(/*^block*/id)arg6 updateChangedBackingObjectBlock:(/*^block*/id)arg7 updateDeletedBackingObjectBlock:(/*^block*/id)arg8 inContext:(id)arg9 ;
-(char)_updateRecurrenceExceptionsInContext:(id)arg1 error:(id*)arg2 ;
-(char)shouldCommitObjectWithIdentifier:(id)arg1 ;
-(/*^block*/id)createNewManagedCalendarBlockWithContext:(id)arg1 error:(id*)arg2 ;
-(/*^block*/id)prepareForManagedCalendarChangesBlock;
-(/*^block*/id)applyChangeToManagedCalendarBlockWithError:(id*)arg1 ;
-(/*^block*/id)deleteManagedCalendarBlock;
-(/*^block*/id)frozenCalendarBlock;
-(/*^block*/id)lookupChangedCalendarBlock;
-(/*^block*/id)updateCreatedCalendarsBlock;
-(/*^block*/id)updateChangedCalendarBlock;
-(/*^block*/id)updateDeletedCalendarsBlock;
-(char)_updateCalendarsWithContext:(id)arg1 error:(id*)arg2 createNewManagedObjectBlock:(/*^block*/id)arg3 prepareForChangesBlock:(/*^block*/id)arg4 applyChangeBlock:(/*^block*/id)arg5 deleteManagedObjectBlock:(/*^block*/id)arg6 wrappedVersionBlock:(/*^block*/id)arg7 lookupChangedBlock:(/*^block*/id)arg8 updateCreatedBackingObjectBlock:(/*^block*/id)arg9 updateChangedBackingObjectBlock:(/*^block*/id)arg10 updateDeletedBackingObjectBlock:(/*^block*/id)arg11 changedIdentifiers:(id*)arg12 ;
-(char)_updateCreatedCalendarsWithCreatedObjectDictionary:(id)arg1 managedObjectContext:(id)arg2 error:(id*)arg3 createNewManagedObjectBlock:(/*^block*/id)arg4 prepareForChangesBlock:(/*^block*/id)arg5 applyChangeBlock:(/*^block*/id)arg6 locallyChangedIdentifiers:(id)arg7 ;
-(char)_updateChangedAndDeletedCalendarsWithCreatedObjectDictionary:(id)arg1 managedObjectContext:(id)arg2 error:(id*)arg3 prepareForChangesBlock:(/*^block*/id)arg4 applyChangeBlock:(/*^block*/id)arg5 deleteManagedObjectBlock:(/*^block*/id)arg6 changedLocalIDs:(id)arg7 locallyChangedIdentifiers:(id)arg8 ;
-(/*^block*/id)createNewManagedGroupBlockWithContext:(id)arg1 error:(id*)arg2 ;
-(/*^block*/id)prepareForManagedGroupChangesBlock;
-(/*^block*/id)applyChangeToManagedGroupBlockWithError:(id*)arg1 ;
-(/*^block*/id)deleteManagedGroupBlock;
-(/*^block*/id)frozenCalendarSource;
-(/*^block*/id)lookupChangedCalendarSourceBlock;
-(/*^block*/id)updateCreatedCalendarSourceBlock;
-(/*^block*/id)updateChangedCalendarSourceBlock;
-(/*^block*/id)updateDeletedCalendarSourceBlock;
-(char)_updateSourcesWithContext:(id)arg1 error:(id*)arg2 createNewManagedObjectBlock:(/*^block*/id)arg3 prepareForChangesBlock:(/*^block*/id)arg4 applyChangeBlock:(/*^block*/id)arg5 deleteManagedObjectBlock:(/*^block*/id)arg6 wrappedVersionBlock:(/*^block*/id)arg7 lookupChangedBlock:(/*^block*/id)arg8 updateCreatedBackingObjectBlock:(/*^block*/id)arg9 updateChangedBackingObjectBlock:(/*^block*/id)arg10 updateDeletedBackingObjectBlock:(/*^block*/id)arg11 changedIdentifiers:(id*)arg12 ;
-(id)_changedSourceForIdentifier:(id)arg1 ;
-(char)_updateCreatedSourcesWithCreatedObjectDictionary:(id)arg1 managedObjectContext:(id)arg2 error:(id*)arg3 createNewManagedObjectBlock:(/*^block*/id)arg4 prepareForChangesBlock:(/*^block*/id)arg5 applyChangeBlock:(/*^block*/id)arg6 locallyChangedIdentifiers:(id)arg7 ;
-(char)_updateChangedAndDeletedSourcesWithCreatedObjectDictionary:(id)arg1 managedObjectContext:(id)arg2 error:(id*)arg3 prepareForChangesBlock:(/*^block*/id)arg4 applyChangeBlock:(/*^block*/id)arg5 deleteManagedObjectBlock:(/*^block*/id)arg6 changedLocalIDs:(id)arg7 locallyChangedIdentifiers:(id)arg8 ;
-(id)createNonPartialFrozenObjectAndUpdateBackingObjectsTrackerForPartialObject:(id)arg1 withFrozenClass:(Class)arg2 ;
-(char)refreshObject:(id)arg1 inQueue:(id)arg2 ;
-(char)resetObject:(id)arg1 inQueue:(id)arg2 ;
-(void)rollbackObject:(id)arg1 unbatchedOnly:(char)arg2 ;
-(char)_rollbackObjectToSaved:(id)arg1 inQueue:(id)arg2 ;
-(void)refreshCalendarItemsWithObjectIDs:(id)arg1 createPartialObjects:(char)arg2 ;
-(void)_refreshCalendarItemsWithObjectIDs:(id)arg1 createPartialObjects:(char)arg2 inQueue:(id)arg3 ;
-(void)refreshCalendarsWithObjectIDs:(id)arg1 createPartialObjects:(char)arg2 ;
-(void)_refreshCalendarsWithObjectIDs:(id)arg1 createPartialObjects:(char)arg2 inQueue:(id)arg3 ;
-(void)refreshSourcesWithObjectIDs:(id)arg1 createPartialObjects:(char)arg2 ;
-(void)_refreshSourcesWithObjectIDs:(id)arg1 createPartialObjects:(char)arg2 inQueue:(id)arg3 ;
-(void)_notifyChangedCalendarSource:(char)arg1 changedCalendarSourceIdentifiers:(id)arg2 calendar:(char)arg3 changedCalendarIdentifiers:(id)arg4 reminder:(char)arg5 changedReminderIdentifiers:(id)arg6 event:(char)arg7 changedEventIdentifiers:(id)arg8 otherChanges:(id)arg9 ;
-(void)_clearCachedNotificationBoxMessageCountsBehindDispatchQueue:(id)arg1 ;
-(void)_updateFromBackingStore:(id)arg1 ;
-(id)cachedRange;
-(id)masterEventForUID:(id)arg1 ;
-(id)_eventsWithCalendarIdentifiers:(id)arg1 ;
-(id)remindersWithDueDates;
-(id)remindersWithIsCompleted:(char)arg1 maxResults:(unsigned long long)arg2 ;
-(char)eventsExistOnCalendar:(id)arg1 ;
-(char)futureScheduledEventsExistOnCalendar:(id)arg1 ;
-(id)_expandEvent:(id)arg1 recurrenceDate:(id)arg2 ;
-(id)_expandRecurrencesForExternalIdentifier:(id)arg1 deleteCheckQueue:(id)arg2 externalIdentifierLookupBlock:(/*^block*/id)arg3 identifierLookupBlock:(/*^block*/id)arg4 ;
-(id)expandAndCachePredicate:(id)arg1 ;
-(char)eventsMarkedScheduleAgentClientExistOnCalendar:(id)arg1 ;
-(id)updatedCalendarForContainer:(id)arg1 ;
-(void)addDetachedEvents:(id)arg1 andExceptions:(id)arg2 toEvent:(id)arg3 ;
-(void)_addExceptionDate:(id)arg1 forLocalUID:(id)arg2 ;
-(void)_removeExceptionDate:(id)arg1 forLocalUID:(id)arg2 ;
-(void)_removeDetachedEvent:(id)arg1 forLocalUID:(id)arg2 ;
-(char)isEventUndetached:(id)arg1 ;
-(char)isEventUnexcepted:(id)arg1 ;
-(char)isEventDeletedDetached:(id)arg1 ;
-(id)diffFromCommittedEventForEvent:(id)arg1 ;
-(char)batchChangeCalendar:(id)arg1 error:(id*)arg2 ;
-(char)batchChangeSource:(id)arg1 error:(id*)arg2 ;
-(void)unbatchChangeAll:(id)arg1 originalMaster:(id)arg2 originalExceptions:(id)arg3 originalDetachedEvents:(id)arg4 ;
-(void)unbatchChangeFuture:(id)arg1 fromDate:(id)arg2 originalMaster:(id)arg3 originalExceptions:(id)arg4 originalDetachedEvents:(id)arg5 ;
-(void)unbatchDeleteAll:(id)arg1 originalMaster:(id)arg2 originalExceptions:(id)arg3 originalDetachedEvents:(id)arg4 ;
-(void)unbatchDeleteFuture:(id)arg1 originalMaster:(id)arg2 originalExceptions:(id)arg3 originalDetachedEvents:(id)arg4 ;
-(void)unbatchDetach:(id)arg1 ;
-(void)unbatchExcept:(id)arg1 ;
-(char)finishBatch:(id*)arg1 ;
-(id)createNonPartialObjectAndUpdateBackingObjectsTrackerForPartialObject:(id)arg1 withMeltedClass:(Class)arg2 ;
-(id)errorForCalendar:(id)arg1 ;
-(id)errorForSource:(id)arg1 ;
-(long long)notificationBoxMessageCountForCalendar:(id)arg1 ;
-(char)refreshObject:(id)arg1 ;
-(void)rollbackObject:(id)arg1 ;
-(char)resetObject:(id)arg1 ;
-(char)rollbackObjectToSaved:(id)arg1 ;
-(void)refreshCalendarItemsWithObjectIDs:(id)arg1 ;
-(void)refreshCalendarsWithObjectIDs:(id)arg1 ;
-(void)refreshSourcesWithObjectIDs:(id)arg1 ;
-(void)_notifyErrorStateChanged;
-(void)_reminderAlertFired:(id)arg1 ;
-(void)_reminderBecameOverdue:(id)arg1 ;
-(void)setBackingObjectsQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSString *)backingStoreIdentifier;
-(void)setBackingStoreIdentifier:(NSString *)arg1 ;
-(void)setCachedNotificationBoxMessageCounts:(NSMutableDictionary *)arg1 ;
-(NSObject*<OS_dispatch_group>)backingStoreAvailableGroup;
-(id)init;
-(void)resetCache;
-(id)calendarWithIdentifier:(id)arg1 ;
-(id)allOccurrences;
-(EKChangeTracker *)changeTracker;
@end

