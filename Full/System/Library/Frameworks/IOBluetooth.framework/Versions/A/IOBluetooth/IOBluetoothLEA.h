/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:32:04 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <IOBluetooth/IOBluetooth-Structs.h>
#import <IOBluetooth/CBCentralManagerDelegate.h>
#import <IOBluetooth/CBPeripheralDelegate.h>

@protocol IOBluetoothLEADelegate;
@class IOBluetoothDevice, CBCentralManager, CBPeripheral, IOBluetoothL2CAPChannel, NSDate, NSMutableArray, NSString;

@interface IOBluetoothLEA : NSObject <CBCentralManagerDelegate, CBPeripheralDelegate> {

	IOBluetoothDevice* _bluetoothDevice;
	CBCentralManager* _central;
	CBPeripheral* _peripheral;
	IOBluetoothLEA* _relatedDevice;
	IOBluetoothL2CAPChannel* _LEAPChannel;
	IOBluetoothL2CAPChannel* _LEASChannel;
	id<IOBluetoothLEADelegate> _delegate;
	long long _state;
	long long _pendingState;
	unsigned char _previousVolume;
	char _previousMuted;
	NSDate* _lastUpdatedVolume;
	unsigned short _version;
	unsigned short _companyID;
	unsigned short _hardwareVersion;
	unsigned short _softwareVersion;
	unsigned char _maxSupportedPacketSize;
	char _output;
	char _input;
	char _stereo;
	char _rightChannel;
	char _audioMixing;
	char _streamReady;
	NSMutableArray* _supportedCodecs;
	unsigned short _renderingDelay;
	unsigned char _codec;
	LEACodecProperty _codecProperty;
	unsigned char _maxPacketSize;
	unsigned char _audioContent;
	float _sampleRate;
	unsigned _bitrate;
	float _latency;

}

@property (retain) IOBluetoothDevice * bluetoothDevice;                //@synthesize bluetoothDevice=_bluetoothDevice - In the implementation block
@property (retain) CBCentralManager * central;                         //@synthesize central=_central - In the implementation block
@property (retain) CBPeripheral * peripheral;                          //@synthesize peripheral=_peripheral - In the implementation block
@property (assign) IOBluetoothLEA * relatedDevice;                     //@synthesize relatedDevice=_relatedDevice - In the implementation block
@property (readonly) unsigned inputDeviceID; 
@property (readonly) unsigned outputDeviceID; 
@property (retain) IOBluetoothL2CAPChannel * LEAPChannel;              //@synthesize LEAPChannel=_LEAPChannel - In the implementation block
@property (retain) IOBluetoothL2CAPChannel * LEASChannel;              //@synthesize LEASChannel=_LEASChannel - In the implementation block
@property (assign) id<IOBluetoothLEADelegate> delegate;                //@synthesize delegate=_delegate - In the implementation block
@property (assign) long long state;                                    //@synthesize state=_state - In the implementation block
@property (assign) long long pendingState;                             //@synthesize pendingState=_pendingState - In the implementation block
@property (assign) unsigned char volume; 
@property (assign) unsigned char previousVolume;                       //@synthesize previousVolume=_previousVolume - In the implementation block
@property (assign) char muted; 
@property (assign) char previousMuted;                                 //@synthesize previousMuted=_previousMuted - In the implementation block
@property (retain) NSDate * lastUpdatedVolume;                         //@synthesize lastUpdatedVolume=_lastUpdatedVolume - In the implementation block
@property (readonly) NSString * stateString; 
@property (readonly) NSString * pendingStateString; 
@property (assign) unsigned short version;                             //@synthesize version=_version - In the implementation block
@property (assign) unsigned short companyID;                           //@synthesize companyID=_companyID - In the implementation block
@property (assign) unsigned short hardwareVersion;                     //@synthesize hardwareVersion=_hardwareVersion - In the implementation block
@property (assign) unsigned short softwareVersion;                     //@synthesize softwareVersion=_softwareVersion - In the implementation block
@property (assign) unsigned char maxSupportedPacketSize;               //@synthesize maxSupportedPacketSize=_maxSupportedPacketSize - In the implementation block
@property (assign) char output;                                        //@synthesize output=_output - In the implementation block
@property (assign) char input;                                         //@synthesize input=_input - In the implementation block
@property (assign) char stereo;                                        //@synthesize stereo=_stereo - In the implementation block
@property (assign) char rightChannel;                                  //@synthesize rightChannel=_rightChannel - In the implementation block
@property (assign) char audioMixing;                                   //@synthesize audioMixing=_audioMixing - In the implementation block
@property (assign) char streamReady;                                   //@synthesize streamReady=_streamReady - In the implementation block
@property (retain) NSMutableArray * supportedCodecs;                   //@synthesize supportedCodecs=_supportedCodecs - In the implementation block
@property (assign) unsigned short renderingDelay;                      //@synthesize renderingDelay=_renderingDelay - In the implementation block
@property (assign) unsigned char codec;                                //@synthesize codec=_codec - In the implementation block
@property (assign) LEACodecProperty codecProperty;                     //@synthesize codecProperty=_codecProperty - In the implementation block
@property (assign) unsigned char audioContent;                         //@synthesize audioContent=_audioContent - In the implementation block
@property (readonly) unsigned char maxPacketSize; 
@property (readonly) double connectionInterval; 
@property (readonly) float sampleRate; 
@property (readonly) unsigned bitrate; 
@property (readonly) float latency; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(LEACodecProperty)propertyForCodec:(unsigned char)arg1 maxPacketSize:(unsigned char)arg2 ;
-(void)setOutput:(char)arg1 ;
-(char)output;
-(void)setInput:(char)arg1 ;
-(char)input;
-(float)sampleRate;
-(float)latency;
-(void)l2capChannelData:(id)arg1 data:(void*)arg2 length:(unsigned long long)arg3 ;
-(id)stringOfState:(long long)arg1 ;
-(long long)pendingState;
-(IOBluetoothDevice *)bluetoothDevice;
-(unsigned)inputDeviceID;
-(unsigned)outputDeviceID;
-(LEACodecProperty)codecProperty;
-(void)l2capChannelPublished:(id)arg1 ;
-(void)setBluetoothDevice:(IOBluetoothDevice *)arg1 ;
-(void)sendStartStream:(unsigned short)arg1 ;
-(void)sendStopStream;
-(IOBluetoothL2CAPChannel *)LEAPChannel;
-(unsigned char)codec;
-(unsigned char)maxPacketSize;
-(unsigned char)audioContent;
-(char)streamReady;
-(void)addAudioListeners;
-(void)removeAudioListeners;
-(NSDate *)lastUpdatedVolume;
-(void)sendVolume;
-(void)setLastUpdatedVolume:(NSDate *)arg1 ;
-(IOBluetoothL2CAPChannel *)LEASChannel;
-(void)setLEAPChannel:(IOBluetoothL2CAPChannel *)arg1 ;
-(void)setLEASChannel:(IOBluetoothL2CAPChannel *)arg1 ;
-(void)sendError:(unsigned short)arg1 command:(unsigned char)arg2 ;
-(void)setCompanyID:(unsigned short)arg1 ;
-(void)setHardwareVersion:(unsigned short)arg1 ;
-(void)setSoftwareVersion:(unsigned short)arg1 ;
-(void)sendVersion;
-(NSMutableArray *)supportedCodecs;
-(char)rightChannel;
-(unsigned char)maxSupportedPacketSize;
-(void)setCodec:(unsigned char)arg1 ;
-(void)setCodecProperty:(LEACodecProperty)arg1 ;
-(void)sendSelectCodec;
-(void)setRenderingDelay:(unsigned short)arg1 ;
-(IOBluetoothLEA *)relatedDevice;
-(void)sendPassthrough:(id)arg1 ;
-(void)setPreviousVolume:(unsigned char)arg1 ;
-(unsigned char)previousVolume;
-(void)setMaxSupportedPacketSize:(unsigned char)arg1 ;
-(void)setStereo:(char)arg1 ;
-(void)setRightChannel:(char)arg1 ;
-(void)setAudioMixing:(char)arg1 ;
-(void)setStreamReady:(char)arg1 ;
-(NSString *)pendingStateString;
-(void)peripheral:(id)arg1 didDiscoverServices:(id)arg2 ;
-(void)peripheral:(id)arg1 didDiscoverCharacteristicsForService:(id)arg2 error:(id)arg3 ;
-(double)connectionInterval;
-(void)startAudio;
-(void)stopAudio;
-(void)sendRestart;
-(void)sendAuth:(char*)arg1 ;
-(void)sendAudioData:(char*)arg1 length:(unsigned long long)arg2 ;
-(void)setCentral:(CBCentralManager *)arg1 ;
-(void)setRelatedDevice:(IOBluetoothLEA *)arg1 ;
-(void)setPendingState:(long long)arg1 ;
-(char)previousMuted;
-(void)setPreviousMuted:(char)arg1 ;
-(unsigned short)companyID;
-(unsigned short)hardwareVersion;
-(unsigned short)softwareVersion;
-(char)stereo;
-(char)audioMixing;
-(void)setSupportedCodecs:(NSMutableArray *)arg1 ;
-(unsigned short)renderingDelay;
-(void)setAudioContent:(unsigned char)arg1 ;
-(void)disconnect;
-(void)setMuted:(char)arg1 ;
-(CBPeripheral *)peripheral;
-(void)centralManagerDidUpdateState:(id)arg1 ;
-(void)centralManager:(id)arg1 didConnectPeripheral:(id)arg2 ;
-(void)centralManager:(id)arg1 didFailToConnectPeripheral:(id)arg2 error:(id)arg3 ;
-(void)centralManager:(id)arg1 didDisconnectPeripheral:(id)arg2 error:(id)arg3 ;
-(void)setPeripheral:(CBPeripheral *)arg1 ;
-(CBCentralManager *)central;
-(void)connect;
-(unsigned)bitrate;
-(char)muted;
-(void)setDelegate:(id<IOBluetoothLEADelegate>)arg1 ;
-(void)finalize;
-(NSString *)description;
-(void)setState:(long long)arg1 ;
-(long long)state;
-(void)setVersion:(unsigned short)arg1 ;
-(id<IOBluetoothLEADelegate>)delegate;
-(id)initWithIdentifier:(id)arg1 ;
-(unsigned short)version;
-(void)setVolume:(unsigned char)arg1 ;
-(unsigned char)volume;
-(NSString *)stateString;
@end

