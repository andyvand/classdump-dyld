/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:14:56 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/AddressBook.framework/Versions/A/AddressBook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AddressBook/AddressBook-Structs.h>
#import <AddressBook/ABAccountPersistenceDelegate.h>
#import <AddressBook/NSCopying.h>
#import <AddressBook/ABWorkQueueDelegate.h>

@class ABAddressBook, NSString, NSView, NSSecureTextField, ABWorkQueue, ABAccountPersistence, NSDate, NSMutableSet, NSArray, ABSimilarRecordMerger, ABAccountStatus;

@interface PHXSource : NSObject <ABAccountPersistenceDelegate, NSCopying, ABWorkQueueDelegate> {

	ABAddressBook* _addressBook;
	char _addressBookWasSetManually;
	NSString* _subname;
	NSString* _uid;
	NSString* _path;
	NSView* configurationView;
	NSSecureTextField* passwordField;
	ABWorkQueue* _workQueue;
	ABAccountPersistence* _persistence;
	char _canCreateGroups;
	char _canCreatePeople;
	NSDate* _lastRefreshDate;
	char _unloaded;
	NSMutableSet* _addressBookObservers;
	NSArray* _personConstraints;
	NSMutableSet* _addressBookSaveObservers;
	ABSimilarRecordMerger* _similarRecordMerger;
	ABAccountStatus* _currentStatus;
	char _busy;
	char _supportsDistributionLists;
	char _meCardHasChanged;
	char _shouldSendStatusChangeNotifications;
	char _isSetupComplete;
	NSString* _allocationBacktrace;

}

@property (nonatomic,retain) ABAddressBook * addressBook;                    //@synthesize addressBook=_addressBook - In the implementation block
@property (assign) char enabled; 
@property (nonatomic,copy,readonly) NSString * path;                         //@synthesize path=_path - In the implementation block
@property (copy) NSString * name; 
@property (readonly) NSString * displayName; 
@property (copy) NSString * subname;                                         //@synthesize subname=_subname - In the implementation block
@property (copy,readonly) NSString * uid;                                    //@synthesize uid=_uid - In the implementation block
@property (readonly) int searchMethod; 
@property (readonly) NSView * configurationView; 
@property (assign) char hasChanges; 
@property (assign) char canCreateGroups;                                     //@synthesize canCreateGroups=_canCreateGroups - In the implementation block
@property (assign) char canCreatePeople;                                     //@synthesize canCreatePeople=_canCreatePeople - In the implementation block
@property (readonly) char canDeletePeople; 
@property (readonly) ABWorkQueue * workQueue;                                //@synthesize workQueue=_workQueue - In the implementation block
@property (getter=isUnloaded) char unloaded;                                 //@synthesize unloaded=_unloaded - In the implementation block
@property (retain) NSArray * personConstraints;                              //@synthesize personConstraints=_personConstraints - In the implementation block
@property (assign) double periodicRefreshInterval; 
@property (assign) double pushRefreshInterval; 
@property (retain) NSDate * lastPushSubscription; 
@property (readonly) char supportsDataMigration; 
@property (readonly) char isDeletable; 
@property (retain) ABAccountStatus * currentStatus;                          //@synthesize currentStatus=_currentStatus - In the implementation block
@property (retain) ABSimilarRecordMerger * similarRecordMerger;              //@synthesize similarRecordMerger=_similarRecordMerger - In the implementation block
@property (assign) char shouldMergeServerContactsAtNextSync; 
@property (assign) char primitiveEnabled; 
@property (assign) char disabled; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sourcesForManagedObjects:(id)arg1 ;
+(id)customizationPolicy;
+(id)contactsBySource:(id)arg1 ;
+(id)sourceForObject:(id)arg1 ;
+(Class)searchOperationClass;
+(int)backingStoreType;
+(id)persistentPathForUID:(id)arg1 ;
+(id)persistenceWithUID:(id)arg1 path:(id)arg2 ;
+(id)persistenceBackendWithUID:(id)arg1 path:(id)arg2 ;
+(Class)accountPersistenceClass;
+(id)displayNameForClassName:(id)arg1 ;
+(id)defaultPersonConstraints;
+(id)addressBookInitOptions;
+(Class)defaultPersonConstraintsClass;
+(char)_userCanConfigure;
+(char)setPassword:(id)arg1 forUser:(id)arg2 service:(id)arg3 access:(OpaqueSecAccessRefRef)arg4 error:(id*)arg5 ;
+(int)updateKeychainItemForPassword:(id)arg1 user:(id)arg2 service:(id)arg3 ;
+(int)addKeychainItemForPassword:(id)arg1 user:(id)arg2 service:(id)arg3 access:(OpaqueSecAccessRefRef)arg4 ;
+(id)passwordForUser:(id)arg1 service:(id)arg2 error:(id*)arg3 ;
+(char)setPassword:(id)arg1 forUser:(id)arg2 service:(id)arg3 error:(id*)arg4 ;
+(char)removePasswordForUser:(id)arg1 service:(id)arg2 error:(id*)arg3 ;
+(id)sourceForContact:(id)arg1 ;
+(id)makeSearchPolicyWithAccount:(id)arg1 ;
+(id)persistenceWithUID:(id)arg1 ;
+(void)cancelAutodiscovery;
+(id)testConnection:(id)arg1 ;
+(void)cancelTestConnection;
+(char)accountExistsForMailWithRootFolderId:(id)arg1 userName:(id)arg2 serverAddress:(id)arg3 ;
+(char)accountExistsForiCalWithRootFolderId:(id)arg1 userName:(id)arg2 serverAddress:(id)arg3 ;
+(id)keyPathsForValuesAffectingDisplayName;
+(void)postAccountDidChangeNotificationsWithUID:(id)arg1 ;
+(char)removePasswordForUser:(id)arg1 server:(id)arg2 port:(unsigned short)arg3 protocol:(void*)arg4 error:(id*)arg5 ;
+(char)setPassword:(id)arg1 forUser:(id)arg2 server:(id)arg3 port:(unsigned short)arg4 protocol:(void*)arg5 access:(OpaqueSecAccessRefRef)arg6 error:(id*)arg7 ;
+(id)passwordForUser:(id)arg1 server:(id)arg2 port:(unsigned short)arg3 protocol:(void*)arg4 error:(id*)arg5 ;
+(id)passwordForConfiguration:(id)arg1 ;
+(char)setPassword:(id)arg1 forConfiguration:(id)arg2 ;
+(Class)sourceClassForClassName:(id)arg1 ;
+(id)uncachedSourceForClassName:(id)arg1 ;
+(id)localSource;
+(id)existingSourceWithUID:(id)arg1 ;
+(id)sourcesOfType:(id)arg1 ;
+(id)autocompletionSources;
+(Class)localSourceClass;
+(id)localSourcePersistence;
+(id)infoForClassName:(id)arg1 ;
+(id)availablePluginClasses;
+(id)allSources;
+(id)sourceAtPath:(id)arg1 ;
+(char)setupAssistantCreationAllowedForClassName:(id)arg1 ;
+(char)autocompletionProvidedForClassName:(id)arg1 ;
+(char)autodiscoverySupportedForClassName:(id)arg1 ;
+(char)testConnectionSupportedForClassName:(id)arg1 ;
+(id)serverAddressPlaceholderForClassName:(id)arg1 ;
+(id)defaultSource;
+(id)autodiscoverSettings:(id)arg1 ;
+(id)exchangeSourcesWithUsername:(id)arg1 host:(id)arg2 ;
+(id)exchangeSourcesWithRootFolderId:(id)arg1 ;
+(id)sources;
+(id)recordsMatchingSearchElement:(id)arg1 ;
+(id)searchForString:(id)arg1 delegate:(id)arg2 callback:(SEL)arg3 ;
+(id)recordForUniqueId:(id)arg1 ;
-(id)password;
-(void)setDisabled:(char)arg1 ;
-(id)persistence;
-(ABAddressBook *)addressBook;
-(id)accountType;
-(void)openInternetAccountsPreferences;
-(id)persistentStoreURL;
-(char)canDeletePeople;
-(int)containmentPersonality;
-(char)canEditGroup:(id)arg1 ;
-(char)canRemoveGroup:(id)arg1 ;
-(char)canRenameGroup:(id)arg1 ;
-(long long)sortOrderForGroup:(id)arg1 ;
-(char)supportsDistributionLists;
-(char)canCreatePeople;
-(char)canEditPerson:(id)arg1 ;
-(char)record:(id)arg1 validateValue:(id*)arg2 forProperty:(id)arg3 error:(id*)arg4 ;
-(id)persistentRepresentation;
-(char)canCreateGroups;
-(char)isSearchable;
-(void)setSearchable:(char)arg1 ;
-(void)updateStatus:(id)arg1 ;
-(id)initWithUID:(id)arg1 path:(id)arg2 persistence:(id)arg3 ;
-(void)setPrimitiveEnabled:(char)arg1 ;
-(void)setSubname:(NSString *)arg1 ;
-(char)_shouldCreateWorkQueue;
-(ABWorkQueue *)workQueue;
-(void)setPersonConstraints:(NSArray *)arg1 ;
-(void)awakeFromLoad;
-(id)databaseChangeNotificationName;
-(void)myDatabaseChangedExternally:(id)arg1 ;
-(char)shouldSendStatusDidChangeNotifications;
-(void)startObservingAddressBookSaveNotifications;
-(void)assertIsUnloaded;
-(void)anAddressBookWillSave:(id)arg1 ;
-(void)anAddressBookDidSave:(id)arg1 ;
-(char)isUnloaded;
-(void)setHasChanges:(char)arg1 ;
-(char)shouldUnload;
-(void)willUnload;
-(void)setUnloaded:(char)arg1 ;
-(void)releaseTopLevelObjects;
-(void)setShowProgressIndicator:(char)arg1 ;
-(void)addressBookSaved:(id)arg1 ;
-(id)makeAddressBookAtPath;
-(void)deletePersistentValues;
-(id)labelsConstraint;
-(void)loadConfigurationView;
-(id)internetAccountsAListPluginID;
-(char)isInternetAccountsAListPlugin;
-(id)sourceIcon;
-(void)applyChangesAndRefresh:(char)arg1 ;
-(void)_persistValuesAndPostDidChangeNotifcation:(char)arg1 ;
-(char)primitiveEnabled;
-(id)searchOperationWithTerms:(id)arg1 delegate:(id)arg2 ;
-(id)searchOperationWithString:(id)arg1 delegate:(id)arg2 ;
-(void)_sourceShouldRefreshImmediately:(char)arg1 ;
-(double)minimumIntervalBetweenRefreshes;
-(void)sourceShouldRefresh:(id)arg1 ;
-(char)_userCanConfigure;
-(void)sendStatusDidChangeNotification;
-(void)setBusy:(char)arg1 ;
-(void)displayNameChanged;
-(void)workQueueOperationCountDidChange:(unsigned long long)arg1 ;
-(void)updateProgressIndicatorsForOperationCount:(unsigned long long)arg1 ;
-(void)setCurrentStatus:(ABAccountStatus *)arg1 ;
-(ABAccountStatus *)currentStatus;
-(void)_sourceShouldRefresh;
-(void)generateMetadataWithChangedObjectsInContext:(id)arg1 ;
-(void)addressBook:(id)arg1 willInsertRecords:(id)arg2 ;
-(void)addressBook:(id)arg1 willUpdateRecords:(id)arg2 ;
-(void)addressBook:(id)arg1 willDeleteRecords:(id)arg2 ;
-(void)addressBook:(id)arg1 willRemoveRecordsWithUniqueIDs:(id)arg2 ;
-(void)addressBook:(id)arg1 didInsertRecords:(id)arg2 ;
-(void)addressBook:(id)arg1 didUpdateRecords:(id)arg2 ;
-(void)meDidChange:(id)arg1 ;
-(void)addressBook:(id)arg1 didDeleteRecords:(id)arg2 ;
-(void)sanityCheckNotificationRecords:(id)arg1 notification:(id)arg2 ;
-(NSArray *)personConstraints;
-(ABSimilarRecordMerger *)similarRecordMerger;
-(int)searchMethod;
-(id)_persistentStoreURL;
-(char)shouldMergeServerContactsAtNextSync;
-(void)migrationLog:(id)arg1 ;
-(id)_localRecordsForMergingInAddressBook:(id)arg1 ;
-(void)setSimilarRecordMerger:(ABSimilarRecordMerger *)arg1 ;
-(void)_exportSummaryOfDatabaseContents;
-(void)setShouldMergeServerContactsAtNextSync:(char)arg1 ;
-(char)_isMigrating;
-(id)secureUserName;
-(id)secureServiceName;
-(void)abWorkQueue:(id)arg1 operationCountDidChange:(unsigned long long)arg2 ;
-(id)initWithUID:(id)arg1 persistence:(id)arg2 ;
-(void)finalizeAccountSetup;
-(void)finalizeAccountSetupWithDictionary:(id)arg1 ;
-(double)periodicRefreshInterval;
-(void)setPeriodicRefreshInterval:(double)arg1 ;
-(double)pushRefreshInterval;
-(void)setPushRefreshInterval:(double)arg1 ;
-(NSDate *)lastPushSubscription;
-(void)setLastPushSubscription:(NSDate *)arg1 ;
-(id)managedAddressBooks;
-(id)imagesFolderURL;
-(NSView *)configurationView;
-(long long)accountPreferencesSortOrder;
-(id)accountSetupIcon;
-(id)accountBadge;
-(id)acAccountTypeIdentifier;
-(void)_persistValues;
-(id)helpBookAnchor;
-(char)includeSubscribedGroupsInChildItems;
-(void)searchForTerms:(id)arg1 delegate:(id)arg2 ;
-(void)sourceDidSelect:(id)arg1 ;
-(void)renewPushSubscriptionAtURL:(id)arg1 ;
-(void)handlePushNotification:(id)arg1 ;
-(char)supportsDataMigration;
-(void)beginPhotoUpdatesForPeople:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)recordIDsThatBelongToMe:(id)arg1 ;
-(void)mocWillSave:(id)arg1 ;
-(void)mocDidSave:(id)arg1 ;
-(void)willDeleteRecordsWithUniqueIDs:(id)arg1 ;
-(id)constraintsForRecordClass:(Class)arg1 ;
-(char)shouldOfferRemoveContacts:(id)arg1 fromGroup:(id)arg2 ;
-(void)didImportPeople:(id)arg1 intoGroup:(id)arg2 ;
-(void)_preheatGroups:(id)arg1 ;
-(id)_mergeSimilarRecords:(id)arg1 ;
-(void)_prepareRecordMergerForSyncWithAddressBook:(id)arg1 ;
-(void)_firstMergeCompleted;
-(NSString *)subname;
-(void)setCanCreateGroups:(char)arg1 ;
-(void)setCanCreatePeople:(char)arg1 ;
-(char)enabled;
-(char)isBusy;
-(char)disabled;
-(int)sourceType;
-(void)applyChanges:(id)arg1 ;
-(void)unload;
-(void)removeGroup:(id)arg1 ;
-(void)dealloc;
-(NSString *)description;
-(NSString *)path;
-(void)setName:(NSString *)arg1 ;
-(NSString *)name;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)setEnabled:(char)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(long long)compare:(id)arg1 ;
-(NSString *)displayName;
-(id)children;
-(char)hasChanges;
-(NSString *)uid;
-(void)setPassword:(id)arg1 ;
-(void)awakeFromInsert;
-(char)isDeletable;
-(void)setAddressBook:(ABAddressBook *)arg1 ;
-(id)valueForUndefinedKey:(id)arg1 ;
@end

