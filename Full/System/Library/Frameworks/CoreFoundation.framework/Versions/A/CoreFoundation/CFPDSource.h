/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:32:39 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <CoreFoundation/CoreFoundation-Structs.h>
@class CFPDDataBuffer;

@interface CFPDSource : NSObject {

	dispatch_queue_sRef _queue;
	unsigned long long _inode;
	CFPDDataBuffer* _plist;
	CFArrayRef _pendingChangesQueue;
	CFStringRef _containerPath;
	CFStringRef _userName;
	CFStringRef _domain;
	const char* _actualPath;
	const char* _pathToTemporaryFileToWriteTo;
	unsigned _lastEuid;
	unsigned _lastEgid;
	unsigned short _mode;
	int _owner;
	short _generationShmemIndex;
	unsigned _dirty : 1;
	unsigned _byHost : 1;
	unsigned _managed : 1;
	unsigned _neverCache : 1;
	unsigned _checkedForNonPrefsPlist : 1;
	unsigned _hasDrainedPendingChangesSinceLastReplyToOwner : 1;

}
+(void)withSourceCache:(/*^block*/id)arg1 ;
+(void)synchronousWithSourceCache:(/*^block*/id)arg1 ;
+(void)withSourceForDomain:(CFStringRef)arg1 inContainer:(CFStringRef)arg2 user:(CFStringRef)arg3 byHost:(char)arg4 managed:(char)arg5 perform:(/*^block*/id)arg6 ;
-(CFStringRef)user;
-(void)writeToDisk:(char)arg1 ;
-(char)managed;
-(void)clearCache;
-(void)cacheActualPathCreatingIfNecessary:(char)arg1 euid:(unsigned)arg2 egid:(unsigned)arg3 ;
-(char)getUncanonicalizedPath:(char*)arg1 ;
-(id)initWithDomain:(CFStringRef)arg1 userName:(CFStringRef)arg2 container:(CFStringRef)arg3 byHost:(char)arg4 managed:(char)arg5 shmemIndex:(short)arg6 ;
-(void)noteAccessed;
-(void)lockedAsync:(/*^block*/id)arg1 ;
-(void)lockedSync:(/*^block*/id)arg1 ;
-(char)hasEverHadMultipleOwners;
-(void)transitionToMultiOwner;
-(CFStringRef)debugDump;
-(void)updateShmemEntry;
-(void)drainPendingChanges;
-(void)cacheActualPath;
-(id)propertyListWithoutDrainingPendingChanges;
-(void)setPlist:(id)arg1 ;
-(char)validateSandboxForWrite:(void*)arg1 containerPath:(const char*)arg2 targetingContainer:(char*)arg3 ;
-(char)validateReadAccessToken:(int)arg1 ;
-(char)validateSandboxForRead:(void*)arg1 containerPath:(const char*)arg2 ;
-(void)cacheActualAndTemporaryPathsWithEUID:(unsigned)arg1 egid:(unsigned)arg2 ;
-(int)validateMessage:(void*)arg1 withNewKey:(CFStringRef)arg2 newValue:(void*)arg3 currentPlistData:(id)arg4 containerPath:(const char*)arg5 diagnosticMessage:(const char**)arg6 ;
-(void)enqueueNewKey:(CFStringRef)arg1 value:(void*)arg2 ;
-(void)addOwner:(xpc_connection_sRef)arg1 ;
-(void)removeOwner:(int)arg1 ;
-(char)byHost;
-(void)autosync:(char)arg1 ;
-(short)shmemIndex;
-(void*)acceptMessage:(void*)arg1 ;
-(unsigned char)_backingPlistChangedSinceLastSync;
-(char)clearCacheIfStale;
-(char)acceptLocalMessage:(void*)arg1 withReply:(CFDictionaryRef)arg2 ;
-(void)dealloc;
-(id)description;
-(CFStringRef)domain;
-(id)propertyList;
-(CFStringRef)container;
-(void)setDirty:(char)arg1 ;
@end

