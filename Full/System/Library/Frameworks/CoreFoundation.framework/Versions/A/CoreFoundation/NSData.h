/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 2:27:53 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CoreFoundation/CoreFoundation-Structs.h>
#import <CoreFoundation/NSCopying.h>
#import <CoreFoundation/NSMutableCopying.h>
#import <CoreFoundation/NSSecureCoding.h>
#import <CoreFoundation/CKRecordValue.h>

@class NSString;

@interface NSData : NSObject <NSCopying, NSMutableCopying, NSSecureCoding, CKRecordValue>

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSData * SHA1Data; 
@property (nonatomic,readonly) NSString * SHA1HexString; 
@property (readonly) unsigned long long length; 
@property (readonly) const void* bytes; 
+(id)dataForNVRAMKey:(id)arg1 ;
+(id)dataWithAuthorizationRef:(AuthorizationOpaqueRefRef)arg1 ;
+(id)CKDataWithHexString:(id)arg1 stringIsUppercase:(char)arg2 ;
+(id)CKDataWithHexString:(id)arg1 ;
+(unsigned long long)quotedPrintableLengthOfHeaderBytes:(const char*)arg1 length:(unsigned long long)arg2 ;
+(id)_dataByDecompressingFileAtPath:(id)arg1 ;
+(id)isd_dataWithDataWrapper:(id)arg1 ;
+(id)isd_propertyValueWithType:(int)arg1 bytesEncodedForSqlite:(const void*)arg2 ;
+(unsigned long long)abMaxDataLengthFittingInBase64EncodingLength:(unsigned long long)arg1 ;
+(unsigned long long)abEncodedBase64LengthForDataOfLength:(unsigned long long)arg1 breakingLines:(char)arg2 ;
+(id)generateRandomDataWithLength:(unsigned long long)arg1 ;
+(id)__imDataWithHexString:(id)arg1 ;
+(id)__imDataWithRandomBytes:(unsigned long long)arg1 ;
+(id)_ISMutableStoreIndex_mappedDataWithURL:(id)arg1 ;
+(id)_ISMutableStoreIndex_mappedDataWithCapacity:(unsigned long long)arg1 ;
+(id)_ISStoreIndex_mappedDataWithURL:(id)arg1 ;
+(id)_scriptingPointWithDescriptor:(id)arg1 ;
+(id)_scriptingRectangleWithDescriptor:(id)arg1 ;
+(id)dataWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 ;
+(id)dataWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
+(char)_base64DecodingAlwaysSucceedsForOptions:(unsigned long long)arg1 ;
+(id)allocWithZone:(NSZone*)arg1 ;
+(id)dataWithData:(id)arg1 ;
+(id)dataWithBytes:(const void*)arg1 length:(unsigned long long)arg2 ;
+(id)data;
+(char)supportsSecureCoding;
+(id)dataWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 freeWhenDone:(char)arg3 ;
+(id)dataWithContentsOfFile:(id)arg1 ;
+(id)dataWithContentsOfMappedFile:(id)arg1 ;
+(id)dataWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
+(id)dataWithContentsOfURL:(id)arg1 ;
-(char)isNSData__;
-(id)nvramDescription;
-(id)hexAddressDescription;
-(id)dictionaryFromData;
-(char)isGIF;
-(id)imageFileExtension;
-(char)isJPEG;
-(char*)bytesCopy;
-(id)gzipInflate;
-(id)gzipDeflate;
-(id)CKUppercaseHexStringWithoutSpaces;
-(id)CKHexString;
-(id)CKLowercaseHexStringWithoutSpaces;
-(id)CKBase64URLSafeString;
-(id)uudecodedDataIntoFile:(id*)arg1 mode:(unsigned*)arg2 ;
-(id)uuencodedDataWithFile:(id)arg1 mode:(unsigned)arg2 ;
-(id)MD5Digest;
-(NSRange)rangeOfByteFromSet:(id)arg1 ;
-(NSRange)rangeOfRFC822HeaderData;
-(id)unquotedFromSpaceDataWithRange:(NSRange)arg1 ;
-(id)initWithDataConvertingLineEndingsFromUnixToNetwork:(id)arg1 ;
-(id)initWithDataConvertingLineEndingsFromNetworkToUnix:(id)arg1 ;
-(id)quotedFromSpaceDataForMessage;
-(NSRange)rangeOfCString:(const char*)arg1 options:(unsigned long long)arg2 ;
-(NSRange)rangeOfCString:(const char*)arg1 options:(unsigned long long)arg2 range:(NSRange)arg3 ;
-(NSRange)rangeOfCString:(const char*)arg1 ;
-(id)hexString;
-(id)encodeQuotedPrintableForText:(char)arg1 allowCancel:(char)arg2 ;
-(id)decodeQuotedPrintableForText:(char)arg1 ;
-(id)wrapperForAppleFileDataWithFileEncodingHint:(unsigned long long)arg1 ;
-(id)wrapperForBinHex40DataWithFileEncodingHint:(unsigned long long)arg1 ;
-(id)base64String;
-(id)_SHA1DigestString;
-(id)_SHA1DigestData;
-(id)_MD5DigestString;
-(id)convertToDateListwithGlobalTZ:(id)arg1 ;
-(id)stringWithEncoding:(id)arg1 ;
-(id)convert8bitBufferToUTF8From:(long long)arg1 ;
-(id)dataWrapper;
-(id)dataReference;
-(id)isd_data;
-(int)isd_quickDirtyCoderType;
-(char)isd_isEqual:(id)arg1 ;
-(id)isd_initWithBytesEncodedForSqlite:(const void*)arg1 ;
-(void*)isd_bytesEncodedForSqlite;
-(int)isd_sqlitePropertyValueType;
-(id)isd_summaryWithIndent:(long long)arg1 ;
-(void)_ICSStringWithOptions:(unsigned long long)arg1 appendingToString:(id)arg2 ;
-(id)cr_md5DigestHexString;
-(id)abMD5Hash;
-(id)abEncodeVCardBase64DataWithInitialLength:(unsigned long long)arg1 ;
-(id)abEncodeBase64DataBreakLines:(char)arg1 allowSlash:(char)arg2 padChar:(char)arg3 ;
-(id)abHexString;
-(void)_ab_logWithTag:(id)arg1 extension:(id)arg2 ;
-(id)_cn_decodeBase64;
-(id)_cn_decodeBase64IgnoringWhitespace;
-(id)_FTStringFromBaseData;
-(id)_FTDecompressData;
-(id)_FTOptionallyDecompressData;
-(id)_FTCopyGzippedData;
-(id)base64EncodedData;
-(id)sha256EncodedDataWithNumIterations:(int)arg1 ;
-(id)base64DecodedData;
-(id)aes128EncryptedDataWithKey:(id)arg1 ;
-(id)aes128DecryptedDataWithKey:(id)arg1 ;
-(id)sha256EncodedData;
-(NSData *)SHA1Data;
-(NSString *)SHA1HexString;
-(id)__imHexStringOfBytes:(char*)arg1 withLength:(unsigned long long)arg2 ;
-(id)__imHexString;
-(id)_CUTDecompressData;
-(id)_CUTStringFromBaseData;
-(id)_CUTOptionallyDecompressData;
-(id)_CUTCopyGzippedData;
-(void*)_geo_newXPCData;
-(id)_geo_uppercaseMD5HashString;
-(char)_web_startsWithBlankLine;
-(long long)_web_locationAfterFirstBlankLine;
-(id)_webkit_parseRFC822HeaderFields;
-(char)_web_isCaseInsensitiveEqualToCString:(const char*)arg1 ;
-(id)_webkit_guessedMIMETypeForXML;
-(id)_webkit_guessedMIMEType;
-(char)_ISMutableStoreIndex_makeBackedByFileAtURL:(id)arg1 ;
-(char)_ISMutableStoreIndex_addValue:(SCD_Struct_NS9*)arg1 forKey:(unsigned long long)arg2 ;
-(char)_ISStoreIndex_isValid;
-(void)_ISStoreIndex_enumerateValuesWithBock:(/*^block*/id)arg1 ;
-(char)_ISStoreIndex_enumerateValuesForKey:(unsigned long long)arg1 bock:(/*^block*/id)arg2 ;
-(SCD_Struct_NS10*)_ISStoreIndex_header;
-(SCD_Struct_NS11*)_ISStoreIndex_nodes;
-(unsigned*)_ISStoreIndex_hashTable;
-(SCD_Struct_NS11*)_ISStoreIndex_nodeAtIndex:(unsigned)arg1 ;
-(unsigned)_ISStoreIndex_nodeIndexForKey:(unsigned long long)arg1 ;
-(char)_ISStoreIndex_setNodeIndex:(unsigned)arg1 forKey:(unsigned long long)arg2 ;
-(long long)compare:(id)arg1 ;
-(id)replacementObjectForPortCoder:(id)arg1 ;
-(int)deserializeIntAtCursor:(unsigned*)arg1 ;
-(unsigned)deserializeAlignedBytesLengthAtCursor:(unsigned*)arg1 ;
-(int)deserializeIntAtIndex:(unsigned)arg1 ;
-(void)deserializeInts:(int*)arg1 count:(unsigned)arg2 atIndex:(unsigned)arg3 ;
-(void)deserializeInts:(int*)arg1 count:(unsigned)arg2 atCursor:(unsigned*)arg3 ;
-(void)deserializeBytes:(void*)arg1 length:(unsigned)arg2 atCursor:(unsigned*)arg3 ;
-(id)_scriptingDebugDescription;
-(id)_scriptingPointDescriptor;
-(id)_scriptingRectangleDescriptor;
-(char)isNSData__;
-(id)_web_guessedMIMETypeForXML;
-(id)_web_guessedMIMEType;
-(id)_web_guessedMIMETypeForExtension:(id)arg1 ;
-(id)_web_parseRFC822HeaderFields;
-(id)_replaceCString:(const char*)arg1 withCString:(const char*)arg2 ;
-(char)writeToURL:(id)arg1 atomically:(char)arg2 ;
-(void)getBytes:(void*)arg1 ;
-(id)initWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 deallocator:(/*^block*/id)arg3 ;
-(id)base64EncodedStringWithOptions:(unsigned long long)arg1 ;
-(id)initWithBase64EncodedString:(id)arg1 options:(unsigned long long)arg2 ;
-(unsigned long long)_cfTypeID;
-(id)initWithBytes:(void*)arg1 length:(unsigned long long)arg2 copy:(char)arg3 deallocator:(/*^block*/id)arg4 ;
-(char)_isDispatchData;
-(id)initWithBytes:(void*)arg1 length:(unsigned long long)arg2 copy:(char)arg3 freeWhenDone:(char)arg4 bytesAreVM:(char)arg5 ;
-(char)_canReplaceWithDispatchDataForXPCCoder;
-(void)enumerateByteRangesUsingBlock:(/*^block*/id)arg1 ;
-(char)_isCompact;
-(char)_copyWillRetain;
-(char)_decodeBase64EncodedCharacterBuffer:(const char*)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 buffer:(char*)arg4 bufferLength:(unsigned long long)arg5 state:(SCD_Struct_NS12*)arg6 ;
-(id)_initWithBase64EncodedObject:(id)arg1 options:(unsigned long long)arg2 ;
-(id)_base64EncodingAsString:(char)arg1 withOptions:(unsigned long long)arg2 ;
-(id)_asciiDescription;
-(char)_allowsDirectEncoding;
-(char)writeToFile:(id)arg1 atomically:(char)arg2 error:(id*)arg3 ;
-(id)initWithContentsOfMappedFile:(id)arg1 error:(id*)arg2 ;
-(id)initWithContentsOfFile:(id)arg1 error:(id*)arg2 ;
-(id)initWithBase64EncodedData:(id)arg1 options:(unsigned long long)arg2 ;
-(id)base64EncodedDataWithOptions:(unsigned long long)arg1 ;
-(id)initWithBase64Encoding:(id)arg1 ;
-(id)base64Encoding;
-(NSString *)description;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(const void*)bytes;
-(unsigned long long)length;
-(char)isEqualToData:(id)arg1 ;
-(NSRange)rangeOfData:(id)arg1 options:(unsigned long long)arg2 range:(NSRange)arg3 ;
-(id)subdataWithRange:(NSRange)arg1 ;
-(void)getBytes:(void*)arg1 range:(NSRange)arg2 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)getBytes:(void*)arg1 length:(unsigned long long)arg2 ;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(id)initWithData:(id)arg1 ;
-(Class)classForCoder;
-(id)initWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 freeWhenDone:(char)arg3 ;
-(id)initWithContentsOfFile:(id)arg1 ;
-(char)writeToFile:(id)arg1 atomically:(char)arg2 ;
-(id)initWithContentsOfURL:(id)arg1 ;
-(id)initWithContentsOfMappedFile:(id)arg1 ;
-(id)initWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(char)writeToURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)replacementObjectForCoder:(id)arg1 ;
-(id)initWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 ;
-(id)initWithBytes:(const void*)arg1 length:(unsigned long long)arg2 ;
-(id)initWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(char)writeToFile:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(void)deserializeDataAt:(void*)arg1 ofObjCType:(const char*)arg2 atCursor:(unsigned*)arg3 context:(id)arg4 ;
-(char)_isSafeResumeDataForBackgroundDownload:(int)arg1 ;
@end

