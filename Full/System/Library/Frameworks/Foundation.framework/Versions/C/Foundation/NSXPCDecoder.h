/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:16:28 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Foundation/Foundation-Structs.h>
#import <Foundation/NSXPCCoder.h>

@class NSXPCInterface, NSXPCConnection;

@interface NSXPCDecoder : NSXPCCoder {

	void* _oolObjects;
	NSXPCInterface* _interface;
	SEL _replyToSelector;
	unsigned long long _genericIndex;
	void* _decoder;
	NSXPCConnection* _connection;
	/*function pointer*/void** _collections[128];
	SCD_Struct_NS102 _rootObject;
	unsigned _collectionPointer;
	id _allowedClassesList[128];
	long long _allowedClassesIndex;

}

@property (retain) NSXPCInterface * interface;                 //@synthesize interface=_interface - In the implementation block
@property (assign) SEL replyToSelector;                        //@synthesize replyToSelector=_replyToSelector - In the implementation block
@property (assign) NSXPCConnection * _connection;              //@synthesize connection=_connection - In the implementation block
+(void*)_createXPCObjectWithData:(id)arg1 ;
-(id)allowedClasses;
-(id)_decodeArrayOfObjectsForKey:(id)arg1 ;
-(void)_validateAllowedClass:(Class)arg1 forKey:(id)arg2 allowingInvocations:(char)arg3 ;
-(void*)decodeXPCObjectOfType:(xpc_type_sRef)arg1 forKey:(id)arg2 ;
-(NSXPCConnection *)_connection;
-(id)decodeInvocation;
-(id)_initWithRootXPCObject:(void*)arg1 ;
-(NSXPCInterface *)interface;
-(void)setInterface:(NSXPCInterface *)arg1 ;
-(void)setReplyToSelector:(SEL)arg1 ;
-(void)set_connection:(NSXPCConnection *)arg1 ;
-(void*)decodeXPCObjectForKey:(id)arg1 ;
-(const char*)_decodeCStringForKey:(id)arg1 ;
-(SEL)replyToSelector;
-(void)finalize;
-(void)dealloc;
-(id)debugDescription;
-(char)allowsKeyedCoding;
-(id)decodeObjectForKey:(id)arg1 ;
-(id)decodeObject;
-(long long)decodeIntegerForKey:(id)arg1 ;
-(double)decodeDoubleForKey:(id)arg1 ;
-(char)decodeBoolForKey:(id)arg1 ;
-(const char*)decodeBytesForKey:(id)arg1 returnedLength:(unsigned long long*)arg2 ;
-(int)decodeInt32ForKey:(id)arg1 ;
-(char)containsValueForKey:(id)arg1 ;
-(void)decodeValueOfObjCType:(const char*)arg1 at:(void*)arg2 ;
-(int)decodeIntForKey:(id)arg1 ;
-(id)decodeObjectOfClass:(Class)arg1 forKey:(id)arg2 ;
-(float)decodeFloatForKey:(id)arg1 ;
-(long long)decodeInt64ForKey:(id)arg1 ;
-(id)decodeObjectOfClasses:(id)arg1 forKey:(id)arg2 ;
@end

