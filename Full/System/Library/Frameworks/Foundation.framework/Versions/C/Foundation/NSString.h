/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 2:27:04 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Foundation/Foundation-Structs.h>
#import <Foundation/NSCopying.h>
#import <Foundation/NSMutableCopying.h>
#import <Foundation/NSSecureCoding.h>
#import <Foundation/PASerializable.h>
#import <Foundation/NSPasteboardWriting.h>
#import <Foundation/NSPasteboardReading.h>
#import <Foundation/ABCompare.h>
#import <Foundation/CKRecordValue.h>
#import <Foundation/CKShortDescription.h>

@class NSData;

@interface NSString : NSObject <NSCopying, NSMutableCopying, NSSecureCoding, PASerializable, NSPasteboardWriting, NSPasteboardReading, ABCompare, CKRecordValue, CKShortDescription>

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSData * _FTDataFromBase64String; 
@property (nonatomic,readonly) NSData * _FTDataFromHexString; 
@property (nonatomic,readonly) NSString * mobileMeDomain; 
@property (nonatomic,readonly) char hasMobileMeSuffix; 
@property (nonatomic,readonly) NSString * stripMobileMSuffixIfPresent; 
@property (copy,readonly) NSString * stringByRemovingPercentEncoding; 
@property (readonly) unsigned long long length; 
+(id)_mapkit_formattedStringForCoordinate:(SCD_Struct_NS78)arg1 ;
+(id)_mapkit_localizedDistanceStringWithMeters:(unsigned)arg1 inMetric:(char)arg2 displaysYardsForShortDistances:(char)arg3 includeTrip:(char)arg4 ;
+(id)_mapkit_formattedStringForFloatingPointNumber:(id)arg1 ;
+(id)_mapkit_formattedStringForInteger:(long long)arg1 ;
+(id)_mapkit_formattedStringForFloat:(double)arg1 ;
+(id)_mapkit_voiceOverLocalizedDistanceStringWithMeters:(unsigned)arg1 inMetric:(char)arg2 displaysYardsForShortDistances:(char)arg3 includeTrip:(char)arg4 ;
+(id)_maps_formattedStringForFloat:(double)arg1 ;
+(id)_maps_formatFloatForDistanceSign:(double)arg1 ;
+(id)brc_pathWithFileSystemRepresentation:(const char*)arg1 ;
+(id)brc_representableHFSFileNameWithBase:(id)arg1 suffix:(id)arg2 extension:(id)arg3 makeDotFile:(char)arg4 ;
+(void)brc_setForcedPackageExtensions:(id)arg1 ;
+(void)brc_addForcedPackageExtension:(id)arg1 ;
+(id)brc_pathWithDeviceID:(int)arg1 fileID:(unsigned long long)arg2 ;
+(id)pathWithDirectory:(id)arg1 filename:(id)arg2 extension:(id)arg3 ;
+(void)resetBetterStringByResolvingSymlinksInPath;
+(id)stringWithData:(id)arg1 encoding:(unsigned long long)arg2 ;
+(id)stringWithAttachmentCharacter;
+(id)stringWithLibraryID:(long long)arg1 ;
+(id)messageIDStringWithDomainHint:(id)arg1 ;
+(id)contentIDStringFromCidUrl:(id)arg1 ;
+(id)newURLForContentID:(id)arg1 percentEscaped:(char)arg2 ;
+(id)stringFromMimeEnrichedString:(id)arg1 ;
+(id)htmlStringFromMimeRichTextString:(id)arg1 ;
+(id)htmlStringFromMimeEnrichedString:(id)arg1 ;
+(id)localizedString:(id)arg1 ;
+(id)uniqueIdentifier;
+(id)_commonParentOfPaths:(id)arg1 ;
+(id)mdEventQueryStringWithSearchString:(id)arg1 property:(id)arg2 ;
+(id)mdTaskQueryStringWithSearchString:(id)arg1 property:(id)arg2 ;
+(id)ellipsisString;
+(id)stringWithContentsOfFile:(id)arg1 usingEncoding:(unsigned long long)arg2 ;
+(id)stringWithFileSystemRepresentation:(const char*)arg1 ;
+(id)_phoneURLScheme;
+(id)isd_propertyValueWithType:(int)arg1 bytesEncodedForSqlite:(const void*)arg2 ;
+(id)stringWithFileSystemRepresentation:(const char*)arg1 ;
+(id)stringWithContentsOfFile:(id)arg1 usingEncoding:(unsigned long long)arg2 ;
+(id)ellipsisString;
+(id)CDVStringWithNameSpace:(id)arg1 andName:(id)arg2 ;
+(id)CDVPreconditionHeaderValueWithCTag:(id)arg1 ;
+(id)CDVPreconditionHeaderValueWithCTag:(id)arg1 pathTag:(id)arg2 ;
+(id)CDVStringWithNumberOfSpaces:(unsigned long long)arg1 ;
+(id)UUIDString;
+(id)abUniqueString;
+(char)abIsBlank:(id)arg1 ;
+(id)delegate;
+(id)IKStringFromSize:(long long)arg1 ;
+(id)copyStringGUIDForObject:(id)arg1 ;
+(id)stringGUID;
+(id)generatedRoomNameForGroupChat;
+(id)copyStringGUID;
+(id)stringGUIDForObject:(id)arg1 ;
+(id)randomString;
+(id)apsStringGUID;
+(id)cutStringGUID;
+(id)stringFromOSType:(unsigned)arg1 ;
+(id)_webkit_localCacheDirectoryWithBundleIdentifier:(id)arg1 ;
+(unsigned long long)_web_encodingForResource:(char**)arg1 ;
+(id)readableTypesForPasteboard:(id)arg1 ;
+(id)stringWithEventType:(unsigned long long)arg1 ;
+(id)stringWithInkTermType:(unsigned char)arg1 ;
+(id)stringWithInkModifiers:(unsigned)arg1 ;
+(id)stringWithInkFlags:(unsigned)arg1 ;
+(id)stringWithInkCDFlag:(unsigned)arg1 ;
+(id)stringWithEventSubType:(int)arg1 ;
+(id)stringWithButtonDown:(char)arg1 ;
+(id)stringWithDispatchCommandUnCached:(unsigned)arg1 ;
+(id)stringWithCarbonEventClass:(unsigned)arg1 ;
+(id)stringWithCarbonEventKind:(unsigned)arg1 ;
+(id)stringWithInkEventDisposition:(unsigned)arg1 ;
+(id)stringWithDispatchCommand:(unsigned)arg1 ;
+(id)stringWithInkEventQueueOptions:(unsigned)arg1 ;
+(double)defaultBaselineOffsetForFont:(id)arg1 ;
+(long long)typesetterBehavior;
+(void)setUsesFontLeading:(char)arg1 ;
+(void)setUsesScreenFonts:(char)arg1 ;
+(void)setTypesetterBehavior:(long long)arg1 ;
+(double)defaultLineHeightForFont:(id)arg1 ;
+(void)setDefaultAttachmentScaling:(unsigned long long)arg1 ;
+(void)setHyphenationFactor:(float)arg1 ;
+(unsigned long long)defaultAttachmentScaling;
+(char)usesScreenFonts;
+(char)usesFontLeading;
+(void)setShowsInvisibleCharacters:(char)arg1 ;
+(char)showsInvisibleCharacters;
+(void)setShowsControlCharacters:(char)arg1 ;
+(char)showsControlCharacters;
+(float)hyphenationFactor;
+(id)classDictionaryKey;
+(id)newInstanceWithoutReferencesFromBufferPosition:(const void*)arg1 ;
+(id)gs_stringWithFileSystemRepresentation:(const char*)arg1 ;
+(id)formattedMAC:(id)arg1 ;
+(id)formattedData:(id)arg1 includeHex:(char)arg2 ;
+(id)formattedHexData:(id)arg1 ;
+(id)formattedOUI:(id)arg1 ;
+(id)formattedUUID:(id)arg1 ;
+(id)stringValueForWiFiPowersave:(unsigned short)arg1 ;
+(id)stringValueForWiFiJoinState:(unsigned short)arg1 ;
+(id)stringValueForWiFiAuthenticationReasonCode:(unsigned short)arg1 ;
+(id)stringValueForWiFiAssociationStatusCode:(unsigned short)arg1 ;
+(id)stringValueForDwdsRole:(unsigned char)arg1 ;
+(id)stringWithContentsOfURL:(id)arg1 encoding:(unsigned long long)arg2 error:(id*)arg3 ;
+(id)localizedNameOfStringEncoding:(unsigned long long)arg1 ;
+(id)stringWithContentsOfFile:(id)arg1 encoding:(unsigned long long)arg2 error:(id*)arg3 ;
+(id)stringWithBytes:(const void*)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3 ;
+(unsigned long long)stringEncodingForData:(id)arg1 encodingOptions:(id)arg2 convertedString:(id*)arg3 usedLossyConversion:(char*)arg4 ;
+(id)_scriptingTextWithDescriptor:(id)arg1 ;
+(id)_scriptStringWithPropertyAccess:(unsigned long long)arg1 ;
+(id)_scriptStringWithTabCount:(unsigned long long)arg1 ;
+(id)stringWithFormat:(id)arg1 locale:(id)arg2 ;
+(id)stringWithContentsOfFile:(id)arg1 ;
+(id)stringWithContentsOfURL:(id)arg1 ;
+(const unsigned long long*)availableStringEncodings;
+(id)_web_stringRepresentationForBytes:(long long)arg1 ;
+(id)stringWithCString:(const char*)arg1 encoding:(unsigned long long)arg2 ;
+(id)stringWithFormat:(id)arg1 ;
+(id)stringWithUTF8String:(const char*)arg1 ;
+(id)allocWithZone:(NSZone*)arg1 ;
+(id)stringWithString:(id)arg1 ;
+(unsigned long long)defaultCStringEncoding;
+(id)string;
+(void)initialize;
+(id)stringWithCharacters:(const unsigned short*)arg1 length:(unsigned long long)arg2 ;
+(char)supportsSecureCoding;
+(id)localizedStringWithFormat:(id)arg1 ;
+(id)stringWithCString:(const char*)arg1 length:(unsigned long long)arg2 ;
+(id)stringWithCString:(const char*)arg1 ;
+(id)stringWithContentsOfURL:(id)arg1 usedEncoding:(unsigned long long*)arg2 error:(id*)arg3 ;
+(id)stringWithContentsOfFile:(id)arg1 usedEncoding:(unsigned long long*)arg2 error:(id*)arg3 ;
+(id)pathWithComponents:(id)arg1 ;
-(void)drawInRect:(CGRect)arg1 usingMetrics:(id)arg2 fontRef:(CTFontRef)arg3 lineBreakMode:(long long)arg4 firstLineX:(double)arg5 colorRef:(CGColorRef)arg6 shadowColorRef:(CGColorRef)arg7 shadowOffset:(CGPoint)arg8 drawIcon:(char)arg9 withRenderer:(id)arg10 ;
-(CGSize)drawAtPoint:(CGPoint)arg1 withAttributes:(id)arg2 lineSize:(CGSize)arg3 withinRect:(CGRect)arg4 ;
-(id)stringMetricsForDrawingInRect:(CGRect)arg1 usingFontRef:(CTFontRef)arg2 ellipsisStyle:(long long)arg3 flowingFromX:(double)arg4 lastLineEnd:(CGPoint*)arg5 startOnNextLineIfPossible:(char)arg6 withRenderer:(id)arg7 didStartOnNextLine:(char*)arg8 ;
-(CGSize)sizeWithFontRef:(CTFontRef)arg1 ;
-(char)_mapkit_isCJK;
-(CGSize)_mapkit_sizeWithFont:(id)arg1 ;
-(id)_mapkit_stringByEscapingHTML;
-(id)_mapkit_stringByReplacingNewLinesWithString:(id)arg1 ;
-(id)_mapkit_sanitizedStringForDisplayInHTML;
-(double)_mapkit_cgFloatValue;
-(VKRasterTileKey)rasterTileKeyValue;
-(id)_vk_internedString;
-(double)colorInRange:(NSRange)arg1 ;
-(char)red:(double*)arg1 green:(double*)arg2 blue:(double*)arg3 alpha:(double*)arg4 ;
-(id)brc_libnotifyPerUserNotificationName;
-(id)brc_stringByBackslashEscapingCharactersInString:(id)arg1 ;
-(id)brc_sideFaultName;
-(char)brc_isExcludedWithMaximumDepth:(unsigned)arg1 ;
-(id)brc_pathExtension;
-(id)brc_stringByDeletingPathExtension;
-(id)brc_representableHFSFileNameWithSuffix:(id)arg1 addedExtension:(id)arg2 makeDotFile:(char)arg3 ;
-(id)brc_stringByDeletingPathBounceNo:(unsigned long long*)arg1 andPathExtension:(id*)arg2 ;
-(char)brc_isForcedPackageExtension;
-(char)brc_isInPackage;
-(char)brc_isPackageRoot;
-(id)brc_pathOfPackageRoot;
-(id)brc_pathRelativeToPackageRoot;
-(id)brc_pathRelativeToPath:(id)arg1 ;
-(char)brc_isAbsolutePath;
-(const char*)brc_fileSystemRepresentation;
-(id)brc_realpathKeepingLastSymlink;
-(id)brc_realpath;
-(char)brc_nameIsRepresentableOnHFS;
-(id)brc_representableHFSFileNameWithNumber:(id)arg1 addedExtension:(id)arg2 makeDotFile:(char)arg3 ;
-(id)brc_representableDirectoryExtension;
-(long long)brc_compareToStringForHFS:(id)arg1 isCaseSensitive:(char)arg2 ;
-(char)brc_isEqualToStringForHFS:(id)arg1 isCaseSensitive:(char)arg2 ;
-(char)brc_isSideFaultName;
-(id)brc_stringByDeletingPathBounceNo:(unsigned long long*)arg1 ;
-(id)ckShortDescription;
-(id)CKSafeStringForPathComponent;
-(id)CKSafeHashStringForPathComponent;
-(id)stringByReallyAbbreviatingWithTildeInPath;
-(id)betterStringByResolvingSymlinksInPath;
-(char)isSubdirectoryOfPath:(id)arg1 ;
-(id)uniquePathWithMaximumLength:(unsigned long long)arg1 ;
-(char)deletePath;
-(char)containsOnlyWhitespace;
-(id)foldedStringForSuggestionsOriginatedExactMatchSearches;
-(id)encodedMessageIDString;
-(id)uniqueFilenameWithRespectToFilenames:(id)arg1 ;
-(id)fileSystemString;
-(id)stringByReplacingSlashesWithSpecialSlashes;
-(id)stringByReplacingSpecialSlashesWithSlashes;
-(id)specialSlash;
-(id)stringByReplacingSpecialSlashesWith:(id)arg1 ;
-(unsigned)hexIntValue;
-(unsigned long long)hexLongLongValue;
-(id)smartCapitalizedString;
-(id)stringByReplacingCharactersInSet:(id)arg1 withCharacter:(unsigned short)arg2 ;
-(id)stringByChangingBodyTagToDiv;
-(id)stringByRemovingLineEndingsForHTML;
-(char)containsOnlyBreakingWhitespace;
-(long long)compareAsInts:(id)arg1 ;
-(id)firstLine;
-(id)secondToLastPathComponent;
-(char)hasPrefixIgnoreCaseAndDiacritics:(id)arg1 ;
-(id)validURLString;
-(id)percentEscapedURLString;
-(char)isEqualExceptForFinalSlash:(id)arg1 ;
-(id)initWithLibraryID:(long long)arg1 ;
-(id)urlStringByIncrementingCompositeVersionNumber;
-(id)urlStringByInsertingCompositeVersionNumber;
-(long long)caseInsensitiveCompareExcludingXDash:(id)arg1 ;
-(id)stringByReplacingNonBreakingSpacesWithString:(id)arg1 ;
-(id)stringByLocalizingReOrFwdPrefix;
-(id)stringSuitableForHTML;
-(id)MD5Digest;
-(id)newStringByApplyingBodyClassName:(id)arg1 ;
-(id)stringByApplyingBodyClassName:(id)arg1 ;
-(char)isEqualToStringIgnoreCaseAndDiacritics:(id)arg1 ;
-(unsigned long long)effectivePrefixLength;
-(id)messageIDSubstring;
-(id)stringWithNoExtraSpaces;
-(char)isEqualToStringIgnoringCase:(id)arg1 ;
-(id)stringByReplacingString:(id)arg1 withString:(id)arg2 ;
-(id)encodedMessageID;
-(id)stringByRemovingCharactersInSet:(id)arg1 ;
-(char)isCalendarInvitation;
-(id)encodedHeaderDataWithEncodingHint:(unsigned long long)arg1 encodingUsed:(unsigned long long*)arg2 ;
-(id)decodeMimeHeaderValueWithCharsetHint:(id)arg1 detectOtherEncodings:(char)arg2 fromWindows:(char)arg3 ;
-(id)encodedHeaderData;
-(id)decodeMimeAddressList;
-(id)decodeMimeMessageIDList;
-(id)encodedHeaderDataWithEncodingHint:(unsigned long long)arg1 ;
-(id)bestMimeCharsetUsingHint:(unsigned long long)arg1 ;
-(id)convertFromFlowedText:(unsigned long long)arg1 ;
-(id)_cn_stringForSorting;
-(char)dd_hasDiacriticPrefix:(id)arg1 ;
-(id)dd_stringByCleaningWhitespace;
-(NSRange)_sgt_rangeOfUntokenizedStringValue;
-(id)_sgt_untokenizedStringRanges;
-(NSRange)_sgt_untokenizedRangeTouchingSelectedRange:(NSRange)arg1 ;
-(char)_sgt_containsOnlyTokens;
-(char)_sgt_rangeTouchesUntokenizedStringValue:(NSRange)arg1 andIsInTheMiddleOfIt:(char*)arg2 ;
-(id)_sgt_sentenceMismatchRanges:(id)arg1 ;
-(id)_sgt_stringForCoalescing;
-(id)_sgt_swappedString;
-(id)_splitVersionFold:(char)arg1 ;
-(id)_foldedVersion;
-(unsigned)_levenshteinScore:(id)arg1 ;
-(id)_spotlight_tokenizer_words;
-(char)containsCJK;
-(char)containsTokenSeparator;
-(NSRange)_sgt_rangeOfUntokenizedStringValueWithSuggestion:(id)arg1 untokenizedRange:(NSRange)arg2 ;
-(id)_sgt_untokenizedStringValue;
-(char)_sgt_colonSanitizedStringForQueryGenius:(id)arg1 getStringValue:(id*)arg2 getAttributes:(id*)arg3 ;
-(unsigned long long)_sgt_userTypedStringLength;
-(id)sgt_capitalizedString;
-(long long)_sgt_integerValue;
-(id)_sgt_stringWithFoldedDiacritic;
-(unsigned)sentenceLevenshteinScore:(id)arg1 ;
-(id)sgt_trimCommasSpacesQuotes;
-(id)_filterNameWithType:(int)arg1 ;
-(CGSize)_sizeForBarcodeType:(int)arg1 ;
-(id)barcodeImageWithType:(int)arg1 isExpiredOrInvalid:(char)arg2 ;
-(void)drawInRect:(CGRect)arg1 withAttributes:(id)arg2 pass:(id)arg3 ;
-(id)stringWithIDSFormat;
-(char)destinationIdIsEmailAddress;
-(char)destinationIdIsPhoneNumber;
-(long long)_numericCompare:(id)arg1 ;
-(id)_volumePath;
-(id)_stringByDeletingVolumePath;
-(id)_appleDoublePath;
-(id)_stringByInsertingBomPathPrefix;
-(id)_relativeString;
-(char)_isAppleDoublePath;
-(id)_relativeStringByDeletingBomPathPrefix;
-(id)_absoluteStringByDeletingBomPathPrefix;
-(id)_absoluteString;
-(id)urlEncodedString;
-(unsigned long long)SLTencentWeiboCharacterCountWithShortenedURLLength:(unsigned long long)arg1 ;
-(char)isTencentWeiboDuplicatePostError;
-(unsigned long long)SLWeiboCharacterCountWithShortenedURLLength:(unsigned long long)arg1 ;
-(char)isWeiboDuplicatePostError;
-(unsigned long long)SLTwitterCharacterCountWithShortenedURLLength:(unsigned long long)arg1 ;
-(char)isTwitterDuplicatePostError;
-(id)SCTFixApplicationMenuString;
-(unsigned long long)indexOfDifferenceWithString:(id)arg1 options:(unsigned long long)arg2 ;
-(id)addSSLAsNecessary;
-(id)fileURL;
-(char)brokenUpByWordsHasPrefixOnAnyWord:(id)arg1 ;
-(char)brokenUpByWordsHasPrefixOnAnyWord:(id)arg1 usingLocale:(id)arg2 ;
-(char)hasCaseAndDiacriticInsensitivePrefix:(id)arg1 ;
-(id)dateFromRepresentationID;
-(id)RFC822Address;
-(id)nameCleanup;
-(id)stringWithAutoArchiveExtensionRemoved;
-(id)stringByExpandingTildeToNonSandboxHome;
-(id)trimFirstComma;
-(id)trimFinalComma;
-(id)trimFirstChar:(unsigned short)arg1 ;
-(id)trimFinalChar:(unsigned short)arg1 ;
-(id)trimCommas;
-(id)trimChar:(unsigned short)arg1 ;
-(id)searchAndReplaceString:(id)arg1 withString:(id)arg2 ;
-(id)safeFilename;
-(id)stringByURLQuotingPaths;
-(id)stringByURLQuoting;
-(char)isPhoneNumber;
-(id)stringByURLEscapingAllReservedCharacters;
-(id)CalAddressComment;
-(id)phoneURL;
-(id)stringByTrimmingWhitespaceAndRemovingNewlines;
-(char)isMailURL;
-(char)isAddressBookURL;
-(char)isEqualToStringCaseInsensitive:(id)arg1 ;
-(id)_phoneNumberDetector;
-(id)stringByReplacingCharactersInSet:(id)arg1 withString:(id)arg2 ;
-(id)stringByRemovingLastPathComponent;
-(char)hasSuffixCaseInsensitive:(id)arg1 ;
-(id)userFromEmail;
-(id)hostFromEmail;
-(id)radarLink;
-(char)isPathToAppleScript;
-(char)isPathToVCalData;
-(char)isPathToICalData;
-(char)isPathToBackupFile;
-(char)isPathToICalBookmark;
-(id)stringByRemovingCharactersInSet:(id)arg1 ;
-(id)stringRemovingMailto;
-(id)stringByDecodingSlashes;
-(id)stringByEncodingSlashes;
-(char)resemblesEmailAddress;
-(char)hasMailto;
-(id)stringAddingMailto;
-(id)CalUncommentedAddress;
-(id)trimWhiteSpace;
-(id)removeSlashIfNeeded;
-(id)quote;
-(id)unquote;
-(id)CalSafeHFSPathComponentName;
-(char)hasPrefixCaseInsensitive:(id)arg1 ;
-(id)appendSlashIfNeeded;
-(char)isEqualAsURL:(id)arg1 ;
-(char)isPathToICalTruthFile;
-(char)containsCaseInsensitive:(id)arg1 ;
-(id)stringByURLUnquoting;
-(id)stringByURLUnescapingAllReservedCharacters;
-(char)containsCaseAndDiacriticInsensitive:(id)arg1 ;
-(id)isd_uniquedGlobalId;
-(int)isd_quickDirtyCoderType;
-(id)isd_initWithBytesEncodedForSqlite:(const void*)arg1 ;
-(void*)isd_bytesEncodedForSqlite;
-(int)isd_sqlitePropertyValueType;
-(id)isd_initWithBytesEncodedForSqlite:(const void*)arg1 stringTable:(id)arg2 ;
-(id)fastName;
-(id)stringByXMLUnquoting;
-(id)stringByURLQuotingPaths;
-(id)stringByURLQuoting;
-(id)stringByURLUnquoting;
-(id)trimFirstComma;
-(id)trimFinalComma;
-(id)trimFirstChar:(unsigned short)arg1 ;
-(id)trimFinalChar:(unsigned short)arg1 ;
-(id)trimCommas;
-(id)trimChar:(unsigned short)arg1 ;
-(id)searchAndReplaceString:(id)arg1 withString:(id)arg2 ;
-(id)safeFilename;
-(id)trimWhiteSpace;
-(id)removeSlashIfNeeded;
-(id)quote;
-(id)unquote;
-(id)appendSlashIfNeeded;
-(id)stringByDecodingSlashes;
-(id)stringByEncodingSlashes;
-(void)_ICSStringWithOptions:(unsigned long long)arg1 appendingToString:(id)arg2 ;
-(id)_ICSStringForProperyValue;
-(id)_ICSStringForParameterValue;
-(id)_ICSStringForParameterQuotedValue;
-(id)CDVStringByAddingPercentEscapesForHREF;
-(id)CDVStringByAppendingSlashIfNeeded;
-(id)CDVStringByRemovingTerminatingSlashIfNeeded;
-(id)CDVStringByRemovingPercentEscapesForHREF;
-(id)initWithCDVNameSpace:(id)arg1 andName:(id)arg2 ;
-(char)CDVIsHTTPStatusLineWithStatusCode:(long long)arg1 ;
-(id)CDVStringByAddingPercentEscapesForUserOrPassword;
-(id)CDVStringByXMLQuoting;
-(id)CDVStringByXMLUnquoting;
-(NSRange)cr_rangeOfAddressDomain;
-(id)cr_copyStringByDecodingIDNAInRange:(NSRange)arg1 ;
-(id)cr_copyStringByEncodingIDNAInRange:(NSRange)arg1 ;
-(id)cr_copyIDNADecodedEmailAddress;
-(id)cr_copyIDNAEncodedEmailAddress;
-(id)cr_uniqueFilenameWithRespectToFilenames:(id)arg1 ;
-(id)cr_lowercaseStringWithStandardLocale;
-(id)emailHostName;
-(id)urlDomain;
-(id)emailUserName;
-(char)serverAddrIsInDomain:(id)arg1 ;
-(id)stringByURLEscapingCharactersInString:(id)arg1 forEncoding:(unsigned long long)arg2 ;
-(id)stringByTrimmingWhitespace;
-(id)otherMeOrMacDotComEmail;
-(id)dictionaryWithResponseStringUsingSeparator:(id)arg1 unescape:(char)arg2 ;
-(id)urlParameterEscapedString;
-(id)idsFormat;
-(id)abcdNormalizedSearchString;
-(id)abVCardDataRepresentation;
-(id)abStandardizedPhoneNumber;
-(id)abStringByRemovingPunctuation;
-(id)abCaseNormalizedCopy;
-(id)abWords;
-(void)abEnumerateCharactersWithOptions:(unsigned long long)arg1 usingBlock:(/*^block*/id)arg2 ;
-(unsigned long long)abEndOfParagraphStartingAtIndex:(unsigned long long)arg1 ;
-(NSRange)_ab_entireRange;
-(id)_abTrimmedString;
-(char)abIsBlank;
-(id)abSha1HashString;
-(id)abStringByAddingPercentEscapes;
-(char)_ab_containsDiacritics;
-(char)_ab_containsSubstring:(id)arg1 ;
-(id)abNameComponentTokensUsingLocale:(id)arg1 inferredNameOrder:(long long*)arg2 ;
-(id)abUIDWithTableName:(id)arg1 ;
-(id)abVCardKoshify;
-(id)_ab_rangesOfStrings:(id)arg1 ;
-(id)_ab_stringByReplacingStrings:(id)arg1 ;
-(id)abNormalizedUID;
-(id)abTokens;
-(id)abNameComponentTokens;
-(id)localizedPropertyOrLabel;
-(id)localizedPropertyOrLabelWithCapitals;
-(id)abEllipsizeWithFont:(id)arg1 withWidth:(double)arg2 reverseForRightToLeft:(char)arg3 ;
-(id)abEllipsizeWithFont:(id)arg1 withWidth:(double)arg2 ;
-(id)ab_queryPieces;
-(id)ab_queryPiecesNoLowerCase;
-(long long)_abCompare:(id)arg1 ascending:(char)arg2 options:(unsigned long long)arg3 ;
-(char)_abCompareContainsSubString:(id)arg1 options:(unsigned long long)arg2 ;
-(char)_abComparePrefixMatch:(id)arg1 options:(unsigned long long)arg2 ;
-(char)_abCompareSuffixMatch:(id)arg1 options:(unsigned long long)arg2 ;
-(char)_abCompareWithinIntervalAroundToday:(id)arg1 ;
-(char)_abCompareWithinIntervalAroundTodayYearless:(id)arg1 ;
-(char)_abCompareNotWithinIntervalAroundToday:(id)arg1 ;
-(char)_abCompareNotWithinIntervalAroundTodayYearless:(id)arg1 ;
-(char)_abCompareWithinIntervalFromToday:(id)arg1 ;
-(char)_abCompareWithinIntervalFromTodayYearless:(id)arg1 ;
-(char)_abCompareNotWithinIntervalFromToday:(id)arg1 ;
-(char)_abCompareNotWithinIntervalFromTodayYearless:(id)arg1 ;
-(long long)viewCount;
-(id)viewArray;
-(id)viewWithPriorityArray;
-(id)firstViewName;
-(id)lastViewName;
-(id)viewAtIndex:(long long)arg1 ;
-(id)firstViewNameWithPriority;
-(id)lastViewNameWithPriority;
-(id)viewWithPriorityAtIndex:(long long)arg1 ;
-(id)stringByLeftPaddingToLength:(unsigned long long)arg1 withString:(id)arg2 startingAtIndex:(unsigned long long)arg3 ;
-(id)delegate;
-(id)_qlStringByAddingPercentEscapes;
-(void)drawInContext:(CGContextRef)arg1 atPoint:(CGPoint)arg2 withFontName:(id)arg3 size:(double)arg4 alignement:(int)arg5 ;
-(id)centerTruncateStringToFit:(long long)arg1 ;
-(id)unicodeNormalizedString;
-(id)centerTruncateStringToWidth:(double)arg1 withAttributes:(id)arg2 ;
-(id)truncateStringToWidth:(double)arg1 withAttributes:(id)arg2 ;
-(double)boundsHeightGivenWidth:(double)arg1 font:(id)arg2 ;
-(char)_cn_containsCharacterInSet:(id)arg1 ;
-(char)_cn_caseInsensitiveIsEqual:(id)arg1 ;
-(id)_cn_stringByAddingPercentEscapesIfNecessary;
-(void)_cn_enumerateCharactersWithOptions:(unsigned long long)arg1 usingBlock:(/*^block*/id)arg2 ;
-(char)_cn_containsSubstring:(id)arg1 ;
-(NSData *)_FTDataFromHexString;
-(NSData *)_FTDataFromBase64String;
-(id)urlEncodedString;
-(char)hasMobileMeSuffix;
-(NSString *)stripMobileMSuffixIfPresent;
-(NSString *)mobileMeDomain;
-(id)_imInitWithFormat:(id)arg1 arguments:(_va_list_tag*)arg2 ;
-(char)isEqualToIgnoringCase:(id)arg1 ;
-(long long)localizedCompareToString:(id)arg1 ;
-(char)_appearsToBeEmail;
-(char)_appearsToBeDSID;
-(id)_stripFZIDPrefix;
-(id)_bestGuessURI;
-(id)stringByRemovingWhitespace;
-(id)__stringByStrippingAttachmentAndControlCharacters;
-(id)_bestGuessURIFromCanicalizedID;
-(id)stringByResolvingAndStandardizingPath;
-(char)roomNameIsProbablyAutomaticallyGenerated;
-(char)_appearsToBePhoneNumber;
-(id)stringByRemovingCharactersFromSet:(id)arg1 ;
-(id)trimmedString;
-(id)stringByRemovingURLEscapes;
-(long long)_FZBestGuessFZIDType;
-(id)_URIFromFZIDType:(long long)arg1 ;
-(id)_URIFromCanonicalizedFZIDType:(long long)arg1 ;
-(id)_URIFromCanonicalizedPhoneNumber;
-(id)_URIFromCanonicalizedEmail;
-(id)_URIFromCanonicalizedDSID;
-(id)_URIFromPhoneNumber;
-(id)_URIFromEmail;
-(id)_URIFromDSID;
-(id)_FZIDFromPhoneNumber;
-(id)_FZIDFromEmail;
-(unsigned)hexValue;
-(id)stringByAddingURLEscapes;
-(id)urlFromString;
-(long long)_FZIDType;
-(id)_IDFromFZIDType:(long long)arg1 ;
-(id)_stripPotentialTokenURIWithToken:(id*)arg1 ;
-(id)_md5Hash;
-(NSRange)__rangeOfNewlineInRange:(NSRange)arg1 ;
-(id)uniqueSavePath;
-(id)__stringByStrippingControlCharacters;
-(id)pathStringForDisplay;
-(id)stringWithLTREmbedding;
-(unsigned)unsignedIntValue;
-(char)isDirectory;
-(long long)compareVersionString:(id)arg1 ;
-(id)urlEncodedString;
-(id)cutStringByResolvingAndStandardizingPath;
-(char)isIPAddress;
-(id)_XPC_stringByAttemptingToResolveRealPath;
-(id)_XPC_stringByResolvingRealPath;
-(unsigned)encodedByteLength;
-(id)uniqueFilenameWithExtension:(id)arg1 suffix:(id)arg2 ;
-(id)_web_decodeHostName;
-(char)_webkit_isJavaScriptURL;
-(char)_webkit_looksLikeAbsoluteURL;
-(char)_web_isUserVisibleURL;
-(NSRange)_webkit_rangeOfURLScheme;
-(id)_webkit_scriptIfJavaScriptURL;
-(char)_webkit_isFileURL;
-(char)_webkit_isFTPDirectoryURL;
-(id)_webkit_stringByReplacingValidPercentEscapes;
-(char)_web_hostNameNeedsDecodingWithRange:(NSRange)arg1 ;
-(char)_web_hostNameNeedsEncodingWithRange:(NSRange)arg1 ;
-(id)_web_decodeHostNameWithRange:(NSRange)arg1 ;
-(id)_web_encodeHostNameWithRange:(NSRange)arg1 ;
-(id)_web_encodeHostName;
-(id)_webkit_URLFragment;
-(id)_web_capitalizeRFC822HeaderFieldName;
-(id)_webkit_fixedCarbonPOSIXPath;
-(id)_web_stringByAbbreviatingWithTildeInPath;
-(float)_web_widthWithFont:(id)arg1 ;
-(void)_web_drawAtPoint:(CGPoint)arg1 font:(id)arg2 textColor:(id)arg3 ;
-(char)_webkit_hasCaseInsensitivePrefix:(id)arg1 ;
-(char)_webkit_isCaseInsensitiveEqualToString:(id)arg1 ;
-(id)_web_stringByStrippingReturnCharacters;
-(id)_webkit_stringByTrimmingWhitespace;
-(char)_webkit_hasCaseInsensitiveSuffix:(id)arg1 ;
-(void)_web_drawAtPoint:(CGPoint)arg1 font:(id)arg2 textColor:(id)arg3 allowingFontSmoothing:(char)arg4 ;
-(void)_web_drawDoubledAtPoint:(CGPoint)arg1 withTopColor:(id)arg2 bottomColor:(id)arg3 font:(id)arg4 ;
-(char)_webkit_hasCaseInsensitiveSubstring:(id)arg1 ;
-(id)_webkit_filenameByFixingIllegalCharacters;
-(id)_webkit_stringByCollapsingNonPrintingCharacters;
-(id)_webkit_stringByCollapsingWhitespaceCharacters;
-(id)initWithPasteboardPropertyList:(id)arg1 ofType:(id)arg2 ;
-(id)writableTypesForPasteboard:(id)arg1 ;
-(id)pasteboardPropertyListForType:(id)arg1 ;
-(unsigned long long)_endOfParagraphAtIndex:(unsigned long long)arg1 ;
-(NSRange)rangeOfGraphicalSegmentAtIndex:(unsigned long long)arg1 ;
-(id)stringWithoutAmpersand;
-(long long)_NSNavDisplayNameCompare:(id)arg1 caseSensitive:(char)arg2 ;
-(long long)_NSNavFilePropertyCompare:(id)arg1 ;
-(long long)_NSNavFilePropertyCompareCaseInsenstive:(id)arg1 ;
-(long long)_NSNavShortVersionCompare:(id)arg1 ;
-(NSRange)_textfinder_firstMatchForRegularExpression:(id)arg1 inRange:(NSRange)arg2 ;
-(void)drawWithRect:(CGRect)arg1 options:(unsigned long long)arg2 attributes:(id)arg3 ;
-(CGRect)boundingRectWithSize:(CGSize)arg1 options:(unsigned long long)arg2 attributes:(id)arg3 ;
-(CGRect)boundingRectWithSize:(CGSize)arg1 options:(unsigned long long)arg2 attributes:(id)arg3 context:(id)arg4 ;
-(void)drawWithRect:(CGRect)arg1 options:(unsigned long long)arg2 attributes:(id)arg3 context:(id)arg4 ;
-(CGSize)_sizeWithSize:(CGSize)arg1 attributes:(id)arg2 ;
-(CGSize)sizeWithAttributes:(id)arg1 ;
-(void)drawInRect:(CGRect)arg1 withAttributes:(id)arg2 ;
-(void)drawAtPoint:(CGPoint)arg1 withAttributes:(id)arg2 ;
-(void)encodeWithCAMLWriter:(id)arg1 ;
-(id)CAMLType;
-(id)CI_lineWrappedStringWithIndent:(unsigned)arg1 ;
-(void)addSelfToSerializationDictionary:(id)arg1 ;
-(unsigned long long)sizeInBytesForSerializedVersion;
-(char)addSelfToBufferAtPosition:(void*)arg1 withCompletedSerializationDictionary:(id)arg2 ;
-(void)populateReferencesUsingBufferPosition:(const void*)arg1 andDeserializationDictionary:(id)arg2 andDataBufferDictionary:(id)arg3 ;
-(void)chmod:(unsigned short)arg1 ;
-(char)validateGSName:(out id*)arg1 ;
-(id)gs_stringByUpdatingPathExtensionWithPathOrURL:(id)arg1 ;
-(char)validateGSNameAllowingDot:(char)arg1 error:(id*)arg2 ;
-(id)gs_issueExtension:(const char*)arg1 error:(id*)arg2 ;
-(id)gs_issueReadExtensionIfNeededForPid:(int)arg1 ;
-(id)convertToDataFromHex:(id*)arg1 ;
-(id)convertParamStringToArray:(id)arg1 error:(id*)arg2 ;
-(id)convertToInteger:(id*)arg1 ;
-(id)convertParamStringToArray:(id*)arg1 ;
-(id)convertParamStringToNumberArray:(id*)arg1 ;
-(id)convertToBool:(id*)arg1 ;
-(id)convertToMacAddress:(id*)arg1 ;
-(char)LS_hasCaseInsensitivePrefix:(id)arg1 ;
-(id)queryToDict;
-(id)LS_unescapedQueryValue;
-(id)firstCharacter;
-(id)componentsByLanguage:(int)arg1 ;
-(id)pinyinStringFromPinyinWithToneNumber;
-(id)zhuyinSyllableFromPinyinSyllable;
-(id)stringByStrippingDiacritics;
-(id)toneFromPinyinSyllableWithNumber;
-(id)strokeStringFromNumberString;
-(id)stringByApplyingPinyinToneMarkToFirstSyllableWithToneNumber:(unsigned long long)arg1 ;
-(long long)simplifiedChineseCompare:(id)arg1 ;
-(long long)traditionalChinesePinyinCompare:(id)arg1 ;
-(long long)traditionalChineseZhuyinCompare:(id)arg1 ;
-(long long)_caseInsensitiveNumericCompare:(id)arg1 ;
-(id)_web_domainFromHost;
-(char)_web_domainMatches:(id)arg1 ;
-(char)writeToURL:(id)arg1 atomically:(char)arg2 encoding:(unsigned long long)arg3 error:(id*)arg4 ;
-(unsigned long long)lengthOfBytesUsingEncoding:(unsigned long long)arg1 ;
-(char)writeToURL:(id)arg1 atomically:(char)arg2 ;
-(char)writeToFile:(id)arg1 atomically:(char)arg2 encoding:(unsigned long long)arg3 error:(id*)arg4 ;
-(char)_web_looksLikeIPAddress;
-(char)_web_hasCountryCodeTLD;
-(id)initWithUTF8String:(const char*)arg1 ;
-(id)precomposedStringWithCanonicalMapping;
-(char)isNSString__;
-(char)scriptingIsEqualTo:(id)arg1 ;
-(char)scriptingIsLessThanOrEqualTo:(id)arg1 ;
-(char)scriptingIsLessThan:(id)arg1 ;
-(char)scriptingIsGreaterThanOrEqualTo:(id)arg1 ;
-(char)scriptingIsGreaterThan:(id)arg1 ;
-(char)scriptingBeginsWith:(id)arg1 ;
-(char)scriptingEndsWith:(id)arg1 ;
-(char)scriptingContains:(id)arg1 ;
-(char)_isCString;
-(id)_createSubstringWithRange:(NSRange)arg1 ;
-(char)getBytes:(void*)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long*)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(NSRange)arg6 remainingRange:(NSRange*)arg7 ;
-(id)_stringByResolvingSymlinksInPathUsingCache:(char)arg1 ;
-(unsigned long long)_cfTypeID;
-(unsigned long long)fastestEncoding;
-(unsigned long long)smallestEncoding;
-(unsigned char)_encodingCantBeStoredInEightBitCFString;
-(unsigned)_smallestEncodingInCFStringEncoding;
-(unsigned)_fastestEncodingInCFStringEncoding;
-(char)_getCString:(char*)arg1 maxLength:(unsigned long long)arg2 encoding:(unsigned)arg3 ;
-(id)decomposedStringWithCompatibilityMapping;
-(id)precomposedStringWithCompatibilityMapping;
-(unsigned long long)cStringLength;
-(const char*)lossyCString;
-(char)_allowsDirectEncoding;
-(id)quotedStringRepresentation;
-(id)_getCharactersAsStringInRange:(NSRange)arg1 ;
-(char)_getBytesAsData:(id*)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long*)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(NSRange)arg6 remainingRange:(NSRange*)arg7 ;
-(void)getCString:(char*)arg1 maxLength:(unsigned long long)arg2 range:(NSRange)arg3 remainingRange:(NSRange*)arg4 ;
-(void)getCString:(char*)arg1 maxLength:(unsigned long long)arg2 ;
-(void)getCString:(char*)arg1 ;
-(id)_web_filenameByFixingIllegalCharacters;
-(id)__escapeString5991;
-(id)initWithFormat:(id)arg1 locale:(id)arg2 arguments:(_va_list_tag*)arg3 ;
-(char)__oldnf_containsString:(id)arg1 ;
-(void)__oldnf_copyToUnicharBuffer:(unsigned short*)arg1 saveLength:(long long*)arg2 ;
-(id)__oldnf_stringWithSeparator:(unsigned short)arg1 atFrequency:(long long)arg2 ;
-(char)__oldnf_containsCharFromSet:(id)arg1 ;
-(char)__oldnf_containsChar:(char)arg1 ;
-(id)__oldnf_componentsSeparatedBySet:(id)arg1 ;
-(id)initWithFormat:(id)arg1 locale:(id)arg2 ;
-(id)_stringByStandardizingPathUsingCache:(char)arg1 ;
-(unsigned long long)completePathIntoString:(id*)arg1 caseSensitive:(char)arg2 matchesIntoArray:(id*)arg3 filterTypes:(id)arg4 ;
-(id)stringByConvertingPathToURL;
-(id)stringByConvertingURLToPath;
-(int)_scriptingAlternativeValueRankWithDescriptor:(id)arg1 ;
-(id)_scriptingTextDescriptor;
-(char)isLike:(id)arg1 ;
-(char)isCaseInsensitiveLike:(id)arg1 ;
-(id)_getBracketedStringFromBuffer:(NSStringBuffer*)arg1 string:(id)arg2 ;
-(char)_matchesCharacter:(unsigned short)arg1 ;
-(char)matchesPattern:(id)arg1 caseInsensitive:(char)arg2 ;
-(char)matchesPattern:(id)arg1 ;
-(id)initWithContentsOfURL:(id)arg1 encoding:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)initWithContentsOfURL:(id)arg1 usedEncoding:(unsigned long long*)arg2 error:(id*)arg3 ;
-(id)initWithContentsOfFile:(id)arg1 usedEncoding:(unsigned long long*)arg2 error:(id*)arg3 ;
-(NSRange)_rangeOfRegularExpressionPattern:(id)arg1 options:(unsigned long long)arg2 range:(NSRange)arg3 locale:(id)arg4 ;
-(void)_flushRegularExpressionCaches;
-(id)_stringByReplacingOccurrencesOfRegularExpressionPattern:(id)arg1 withTemplate:(id)arg2 options:(unsigned long long)arg3 range:(NSRange)arg4 ;
-(void)_getBlockStart:(unsigned long long*)arg1 end:(unsigned long long*)arg2 contentsEnd:(unsigned long long*)arg3 forRange:(NSRange)arg4 stopAtLineSeparators:(char)arg5 ;
-(id)_initWithDataOfUnknownEncoding:(id)arg1 ;
-(id)_initWithBytesOfUnknownEncoding:(char*)arg1 length:(unsigned long long)arg2 copy:(char)arg3 usedEncoding:(unsigned long long*)arg4 ;
-(id)_stringRepresentation;
-(long long)localizedCompare:(id)arg1 ;
-(char)localizedCaseInsensitiveContainsString:(id)arg1 ;
-(id)stringByFoldingWithOptions:(unsigned long long)arg1 locale:(id)arg2 ;
-(NSRange)lineRangeForRange:(NSRange)arg1 ;
-(char)getExternalRepresentation:(id*)arg1 extendedAttributes:(id*)arg2 forWritingToURLOrPath:(id)arg3 usingEncoding:(unsigned long long)arg4 error:(id*)arg5 ;
-(id)initWithData:(id)arg1 usedEncoding:(unsigned long long*)arg2 ;
-(id)propertyListFromStringsFileFormat;
-(id)formatConfiguration;
-(id)_copyFormatStringWithConfiguration:(id)arg1 ;
-(unsigned long long)maximumLengthOfBytesUsingEncoding:(unsigned long long)arg1 ;
-(char)_web_isCaseInsensitiveEqualToString:(id)arg1 ;
-(long long)_web_countOfString:(id)arg1 ;
-(NSRange)_web_rangeOfURLResourceSpecifier_nowarn;
-(id)_web_stringByTrimmingWhitespace;
-(NSRange)_web_rangeOfURLScheme_nowarn;
-(char)_web_hasCaseInsensitivePrefix:(id)arg1 ;
-(id)_web_stringByExpandingTildeInPath;
-(id)_web_fixedCarbonPOSIXPath;
-(NSRange)_web_rangeOfURLUserPasswordHostPort;
-(NSRange)_web_rangeOfURLHost;
-(char)_web_looksLikeAbsoluteURL;
-(char)_web_isFileURL;
-(id)_web_URLFragment;
-(id)_web_stringByCollapsingNonPrintingCharacters;
-(unsigned)_web_extractFourCharCode;
-(id)_web_parseAsKeyValuePairHandleQuotes_nowarn:(char)arg1 ;
-(id)_web_splitAtNonDateCommas_nowarn;
-(id)_web_parseAsKeyValuePair_nowarn;
-(id)_web_mimeTypeFromContentTypeHeader_nowarn;
-(id)_web_characterSetFromContentTypeHeader_nowarn;
-(id)_web_fileNameFromContentDispositionHeader_nowarn;
-(id)_web_stringByReplacingValidPercentEscapes_nowarn;
-(char)_web_isJavaScriptURL;
-(id)stringByAddingPercentEscapes;
-(id)standardizedURLPath;
-(id)urlPathRelativeToPath:(id)arg1 ;
-(id)stringByAddingPercentEncodingWithAllowedCharacters:(id)arg1 ;
-(NSString *)stringByRemovingPercentEncoding;
-(id)stringMarkingUpcaseTransitionsWithDelimiter2:(id)arg1 ;
-(id)_web_HTTPStyleLanguageCode;
-(id)_web_HTTPStyleLanguageCodeWithoutRegion;
-(id)linguisticTagsInRange:(NSRange)arg1 scheme:(id)arg2 options:(unsigned long long)arg3 orthography:(id)arg4 tokenRanges:(id*)arg5 ;
-(void)enumerateLinguisticTagsInRange:(NSRange)arg1 scheme:(id)arg2 options:(unsigned long long)arg3 orthography:(id)arg4 usingBlock:(/*^block*/id)arg5 ;
-(NSRange)significantText;
-(id)init;
-(char)isEqualToString:(id)arg1 ;
-(NSString *)description;
-(char)boolValue;
-(int)intValue;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(char)hasSuffix:(id)arg1 ;
-(id)stringByDeletingPathExtension;
-(id)lastPathComponent;
-(char)hasPrefix:(id)arg1 ;
-(unsigned long long)length;
-(long long)caseInsensitiveCompare:(id)arg1 ;
-(id)initWithString:(id)arg1 ;
-(char)getCString:(char*)arg1 maxLength:(unsigned long long)arg2 encoding:(unsigned long long)arg3 ;
-(long long)integerValue;
-(id)stringByAppendingFormat:(id)arg1 ;
-(id)stringByAppendingString:(id)arg1 ;
-(NSRange)rangeOfString:(id)arg1 ;
-(id)substringToIndex:(unsigned long long)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)initWithFormat:(id)arg1 arguments:(_va_list_tag*)arg2 ;
-(float)floatValue;
-(const char*)cStringUsingEncoding:(unsigned long long)arg1 ;
-(const char*)UTF8String;
-(double)doubleValue;
-(id)stringByAppendingPathComponent:(id)arg1 ;
-(NSRange)rangeOfString:(id)arg1 options:(unsigned long long)arg2 ;
-(id)substringWithRange:(NSRange)arg1 ;
-(long long)longLongValue;
-(long long)compare:(id)arg1 options:(unsigned long long)arg2 ;
-(const char*)fileSystemRepresentation;
-(long long)compare:(id)arg1 ;
-(id)pathExtension;
-(id)dataUsingEncoding:(unsigned long long)arg1 allowLossyConversion:(char)arg2 ;
-(void)getLineStart:(unsigned long long*)arg1 end:(unsigned long long*)arg2 contentsEnd:(unsigned long long*)arg3 forRange:(NSRange)arg4 ;
-(unsigned short)characterAtIndex:(unsigned long long)arg1 ;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(id)substringFromIndex:(unsigned long long)arg1 ;
-(id)uppercaseString;
-(id)componentsSeparatedByString:(id)arg1 ;
-(id)lowercaseString;
-(long long)compare:(id)arg1 options:(unsigned long long)arg2 range:(NSRange)arg3 ;
-(id)initWithCharacters:(const unsigned short*)arg1 length:(unsigned long long)arg2 ;
-(id)initWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3 freeWhenDone:(char)arg4 ;
-(id)stringByAppendingPathExtension:(id)arg1 ;
-(id)initWithFormat:(id)arg1 ;
-(NSRange)rangeOfCharacterFromSet:(id)arg1 options:(unsigned long long)arg2 range:(NSRange)arg3 ;
-(NSRange)rangeOfComposedCharacterSequenceAtIndex:(unsigned long long)arg1 ;
-(id)initWithCharactersNoCopy:(unsigned short*)arg1 length:(unsigned long long)arg2 freeWhenDone:(char)arg3 ;
-(Class)classForCoder;
-(char)canBeConvertedToEncoding:(unsigned long long)arg1 ;
-(id)initWithCString:(const char*)arg1 length:(unsigned long long)arg2 ;
-(id)initWithContentsOfFile:(id)arg1 ;
-(char)writeToFile:(id)arg1 atomically:(char)arg2 ;
-(id)initWithCStringNoCopy:(char*)arg1 length:(unsigned long long)arg2 freeWhenDone:(char)arg3 ;
-(void)getCharacters:(unsigned short*)arg1 range:(NSRange)arg2 ;
-(id)initWithCString:(const char*)arg1 encoding:(unsigned long long)arg2 ;
-(id)initWithContentsOfURL:(id)arg1 ;
-(id)stringByDeletingLastPathComponent;
-(id)stringByStandardizingPath;
-(NSRange)rangeOfCharacterFromSet:(id)arg1 ;
-(NSRange)rangeOfCharacterFromSet:(id)arg1 options:(unsigned long long)arg2 ;
-(id)stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2 ;
-(id)replacementObjectForPortCoder:(id)arg1 ;
-(id)stringByResolvingSymlinksInPath;
-(id)dataUsingEncoding:(unsigned long long)arg1 ;
-(id)pathComponents;
-(id)stringByExpandingTildeInPath;
-(char)isAbsolutePath;
-(id)stringByAddingPercentEscapesUsingEncoding:(unsigned long long)arg1 ;
-(id)stringByAbbreviatingWithTildeInPath;
-(NSRange)rangeOfString:(id)arg1 options:(unsigned long long)arg2 range:(NSRange)arg3 locale:(id)arg4 ;
-(NSRange)rangeOfString:(id)arg1 options:(unsigned long long)arg2 range:(NSRange)arg3 ;
-(long long)localizedStandardCompare:(id)arg1 ;
-(id)stringByTrimmingCharactersInSet:(id)arg1 ;
-(NSRange)paragraphRangeForRange:(NSRange)arg1 ;
-(void)enumerateSubstringsInRange:(NSRange)arg1 options:(unsigned long long)arg2 usingBlock:(/*^block*/id)arg3 ;
-(void)getParagraphStart:(unsigned long long*)arg1 end:(unsigned long long*)arg2 contentsEnd:(unsigned long long*)arg3 forRange:(NSRange)arg4 ;
-(char)getBytes:(char*)arg1 maxLength:(unsigned long long)arg2 filledLength:(unsigned long long*)arg3 encoding:(unsigned long long)arg4 allowLossyConversion:(char)arg5 range:(NSRange)arg6 remainingRange:(NSRange*)arg7 ;
-(id)initWithContentsOfFile:(id)arg1 encoding:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)propertyList;
-(id)initWithData:(id)arg1 encoding:(unsigned long long)arg2 ;
-(long long)localizedCaseInsensitiveCompare:(id)arg1 ;
-(long long)compare:(id)arg1 options:(unsigned long long)arg2 range:(NSRange)arg3 locale:(id)arg4 ;
-(id)commonPrefixWithString:(id)arg1 options:(unsigned long long)arg2 ;
-(id)capitalizedString;
-(id)stringsByAppendingPaths:(id)arg1 ;
-(const unsigned short*)_fastCharacterContents;
-(const char*)_fastCStringContents:(char)arg1 ;
-(id)decomposedStringWithCanonicalMapping;
-(id)displayableString;
-(id)stringByReplacingPercentEscapesUsingEncoding:(unsigned long long)arg1 ;
-(NSRange)rangeOfComposedCharacterSequencesForRange:(NSRange)arg1 ;
-(char)getFileSystemRepresentation:(char*)arg1 maxLength:(unsigned long long)arg2 ;
-(id)uppercaseStringWithLocale:(id)arg1 ;
-(id)lowercaseStringWithLocale:(id)arg1 ;
-(id)capitalizedStringWithLocale:(id)arg1 ;
-(void)getCharacters:(unsigned short*)arg1 ;
-(SCD_Struct_NS26)decimalValue;
-(id)componentsSeparatedByCharactersInSet:(id)arg1 ;
-(void)enumerateLinesUsingBlock:(/*^block*/id)arg1 ;
-(id)initWithCString:(const char*)arg1 ;
-(char)containsString:(id)arg1 ;
-(id)_newSubstringWithRange:(NSRange)arg1 zone:(NSZone*)arg2 ;
-(id)stringByPaddingToLength:(unsigned long long)arg1 withString:(id)arg2 startingAtIndex:(unsigned long long)arg3 ;
-(id)stringByReplacingCharactersInRange:(NSRange)arg1 withString:(id)arg2 ;
-(id)stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2 options:(unsigned long long)arg3 range:(NSRange)arg4 ;
-(const char*)cString;
-(id)stringByRemovingPercentEscapes;
@end

