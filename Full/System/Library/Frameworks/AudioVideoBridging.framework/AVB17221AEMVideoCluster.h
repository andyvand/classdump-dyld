/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:32:35 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/AudioVideoBridging.framework/AudioVideoBridging
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AudioVideoBridging/AudioVideoBridging-Structs.h>
#import <AudioVideoBridging/AVB17221AEMCluster.h>
#import <AudioVideoBridging/NSCopying.h>

@class AVB17221AEMVideoFormatSpecific, AVB17221AEMSamplingRate, AVB17221AEMVideoAspectRatio, AVB17221AEMVideoSize, NSArray;

@interface AVB17221AEMVideoCluster : AVB17221AEMCluster <NSCopying> {

	unsigned char format;
	unsigned short currentColorSpace;
	AVB17221AEMVideoFormatSpecific* currentFormatSpecific;
	AVB17221AEMSamplingRate* currentSamplingRate;
	AVB17221AEMVideoAspectRatio* currentAspectRatio;
	AVB17221AEMVideoSize* currentVideoSize;
	NSArray* formatSpecifics;
	NSArray* samplingRates;
	NSArray* aspectRatios;
	NSArray* videoSizes;
	NSArray* colorSpaces;

}

@property (assign) unsigned char format; 
@property (copy) AVB17221AEMVideoFormatSpecific * currentFormatSpecific; 
@property (copy) AVB17221AEMSamplingRate * currentSamplingRate; 
@property (copy) AVB17221AEMVideoAspectRatio * currentAspectRatio; 
@property (copy) AVB17221AEMVideoSize * currentVideoSize; 
@property (assign) unsigned short currentColorSpace; 
@property (copy) NSArray * formatSpecifics; 
@property (copy) NSArray * samplingRates; 
@property (copy) NSArray * aspectRatios; 
@property (copy) NSArray * videoSizes; 
@property (copy) NSArray * colorSpaces; 
-(char)updateWithDescriptor:(/*function pointer*/void**)arg1 descriptorLength:(unsigned short)arg2 ;
-(unsigned long long)setDescriptor:(/*function pointer*/void**)arg1 ;
-(char)updateWithPlistEntry:(id)arg1 ;
-(char)updateWithXML:(id)arg1 ;
-(id)xmlRepresentation;
-(void)appendFixedDescriptorContentToString:(id)arg1 withIndent:(id)arg2 ;
-(void)appendVariableDescriptorContentToString:(id)arg1 withIndent:(id)arg2 ;
-(id)xmlKey;
-(char)isExpectedDescriptorType:(unsigned short)arg1 ;
-(id)objectLogName;
-(void)setCurrentSamplingRate:(AVB17221AEMSamplingRate *)arg1 ;
-(void)setSamplingRates:(NSArray *)arg1 ;
-(AVB17221AEMSamplingRate *)currentSamplingRate;
-(NSArray *)samplingRates;
-(NSArray *)formatSpecifics;
-(void)setFormatSpecifics:(NSArray *)arg1 ;
-(NSArray *)aspectRatios;
-(void)setAspectRatios:(NSArray *)arg1 ;
-(NSArray *)videoSizes;
-(void)setVideoSizes:(NSArray *)arg1 ;
-(AVB17221AEMVideoFormatSpecific *)currentFormatSpecific;
-(void)setCurrentFormatSpecific:(AVB17221AEMVideoFormatSpecific *)arg1 ;
-(AVB17221AEMVideoAspectRatio *)currentAspectRatio;
-(void)setCurrentAspectRatio:(AVB17221AEMVideoAspectRatio *)arg1 ;
-(AVB17221AEMVideoSize *)currentVideoSize;
-(void)setCurrentVideoSize:(AVB17221AEMVideoSize *)arg1 ;
-(unsigned short)currentColorSpace;
-(void)setCurrentColorSpace:(unsigned short)arg1 ;
-(id)plistRepresentation;
-(NSArray *)colorSpaces;
-(void)setColorSpaces:(NSArray *)arg1 ;
-(id)init;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setFormat:(unsigned char)arg1 ;
-(unsigned char)format;
@end

