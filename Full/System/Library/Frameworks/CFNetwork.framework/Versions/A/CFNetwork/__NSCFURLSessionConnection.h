/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:32:40 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CFNetwork/CFNetwork-Structs.h>
#import <CFNetwork/NSURLAuthenticationChallengeSender.h>
#import <CFNetwork/NSCopying.h>

@protocol SessionConnectionDelegate;
@class NSURLResponse, NSError, NSURLSessionTask, NSString;

@interface __NSCFURLSessionConnection : NSObject <NSURLAuthenticationChallengeSender, NSCopying> {

	SessionConnectionLoadable* _loaderClient;
	URLConnectionLoader* _loader;
	dispatch_queue_sRef _workQueue;
	char _canceled;
	long long _suspended;
	NSURLResponse* _currentResponse;
	dispatch_data_sRef _pendingData;
	long long _pendingCompletion;
	unsigned long long _didReceiveResponseDisposition;
	NSError* _pendingError;
	int _state;
	NSURLResponse* _cacheResponse;
	dispatch_data_sRef _cacheData;
	unsigned long long _cacheDataMax;
	long long _clientBufferLength;
	dispatch_data_sRef _sniffData;
	NSURLResponse* _sniffResponse;
	char _isMixedReplace;
	char _didCheckMixedReplace;
	NSURLSessionTask* _task;
	id<SessionConnectionDelegate> _delegate;
	dispatch_queue_sRef _delegateQueue;

}

@property (copy) NSURLSessionTask * task;                               //@synthesize task=_task - In the implementation block
@property (retain) id<SessionConnectionDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign) dispatch_queue_sRef delegateQueue;                   //@synthesize delegateQueue=_delegateQueue - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setTask:(NSURLSessionTask *)arg1 ;
-(NSURLSessionTask *)task;
-(void)useCredential:(id)arg1 forAuthenticationChallenge:(id)arg2 ;
-(void)continueWithoutCredentialForAuthenticationChallenge:(id)arg1 ;
-(void)cancelAuthenticationChallenge:(id)arg1 ;
-(void)setDelegateQueue:(dispatch_queue_sRef)arg1 ;
-(void)setDelegate:(id<SessionConnectionDelegate>)arg1 ;
-(void)dealloc;
-(void)cancel;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id<SessionConnectionDelegate>)delegate;
-(void)resume;
-(void)suspend;
-(void)_cleanup;
-(id)initWithTask:(id)arg1 delegate:(id)arg2 delegateQueue:(dispatch_queue_sRef)arg3 ;
-(void)setPoolPriority:(long long)arg1 ;
-(void)setPriorityHint:(float)arg1 ;
-(dispatch_queue_sRef)delegateQueue;
-(void)_tick;
-(void)withWorkQueueAsync:(/*^block*/id)arg1 ;
-(void)withLoaderAsync:(/*^block*/id)arg1 ;
-(void)withLoaderOnQueue:(/*^block*/id)arg1 ;
-(void)_didFinishWithError:(id)arg1 ;
-(void)_didReceiveResponse:(id)arg1 sniff:(char)arg2 ;
-(void)_didReceiveData:(dispatch_data_sRef)arg1 ;
-(void)_tick_sniffNow;
-(void)_tossCache;
-(void)afterDelegateWithTick:(/*^block*/id)arg1 ;
-(void)withDelegateAndPendingCompletionAsync:(/*^block*/id)arg1 ;
-(void)_task_sendFinish;
-(void)_tick_initialize;
-(void)_tick_running;
-(void)_tick_finishing;
-(void)_setupForCache:(char)arg1 expectedLength:(long long)arg2 response:(id)arg3 ;
-(void)_didSendBodyData:(UploadProgressInfo)arg1 ;
-(void)_didReceiveConnectionCacheKey:(HTTPConnectionCacheKey*)arg1 ;
-(void)_willSendRequestForEstablishedConnection:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_connectionIsWaitingWithReason:(long long)arg1 ;
-(void)_conditionalRequirementsChanged:(char)arg1 ;
-(void)_redirectRequest:(id)arg1 redirectResponse:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_didReceiveChallenge:(id)arg1 ;
-(void)_needNewBodyStream;
@end

