/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:31:23 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <OpenDirectory/OpenDirectory-Structs.h>
@class NSString, ODConfiguration;

@interface ODNode : NSObject {

	void* _internal;

}

@property (nonatomic,copy,readonly) NSString * nodeName; 
@property (readonly) ODConfiguration * configuration; 
+(id)nodeWithSession:(id)arg1 name:(id)arg2 error:(id*)arg3 ;
+(id)nodeWithSession:(id)arg1 type:(unsigned)arg2 error:(id*)arg3 ;
+(id)allocWithZone:(NSZone*)arg1 ;
+(void)initialize;
+(id)nodeWithSession:(id)arg1 name:(id)arg2 options:(id)arg3 error:(id*)arg4 ;
+(id)nodeWithSession:(id)arg1 type:(unsigned)arg2 options:(id)arg3 error:(id*)arg4 ;
-(id)customFunction:(id)arg1 payload:(id)arg2 error:(id*)arg3 ;
-(ODConfiguration *)configuration;
-(id)customCall:(long long)arg1 sendData:(id)arg2 error:(id*)arg3 ;
-(id)subnodeNamesAndReturnError:(id*)arg1 ;
-(NSString *)nodeName;
-(id)unreachableSubnodeNamesAndReturnError:(id*)arg1 ;
-(char)setCredentialsWithRecordType:(id)arg1 recordName:(id)arg2 password:(id)arg3 error:(id*)arg4 ;
-(id)recordWithRecordType:(id)arg1 name:(id)arg2 attributes:(id)arg3 error:(id*)arg4 ;
-(unsigned long long)_cfTypeID;
-(id)initWithSession:(id)arg1 type:(unsigned)arg2 error:(id*)arg3 ;
-(char)setCredentialsUsingKerberosCache:(id)arg1 error:(id*)arg2 ;
-(id)nodeDetailsForKeys:(id)arg1 error:(id*)arg2 ;
-(id)supportedAttributesForRecordType:(id)arg1 error:(id*)arg2 ;
-(id)createRecordWithRecordType:(id)arg1 name:(id)arg2 attributes:(id)arg3 error:(id*)arg4 ;
-(char)setCredentialsWithRecordType:(id)arg1 authenticationType:(id)arg2 authenticationItems:(id)arg3 continueItems:(id*)arg4 context:(id*)arg5 error:(id*)arg6 ;
-(void)dealloc;
-(id)description;
-(id)copy;
-(ODNodeRef)__getODNodeRef;
-(id)initWithSession:(id)arg1 name:(id)arg2 options:(id)arg3 error:(id*)arg4 ;
-(id)initWithSession:(id)arg1 name:(id)arg2 error:(id*)arg3 ;
-(id)initWithSession:(id)arg1 type:(unsigned)arg2 options:(id)arg3 error:(id*)arg4 ;
-(id)supportedRecordTypesAndReturnError:(id*)arg1 ;
-(char)verifyCredentialsWithRecordType:(id)arg1 authenticationType:(id)arg2 authenticationItems:(id)arg3 continueItems:(id*)arg4 context:(id*)arg5 error:(id*)arg6 ;
-(id)customFunction:(id)arg1 data:(id)arg2 error:(id*)arg3 ;
-(id)policiesAndReturnError:(id*)arg1 ;
-(id)supportedPoliciesAndReturnError:(id*)arg1 ;
-(char)setPolicies:(id)arg1 error:(id*)arg2 ;
-(char)setPolicy:(CFStringRef)arg1 value:(id)arg2 error:(id*)arg3 ;
-(char)removePolicy:(CFStringRef)arg1 error:(id*)arg2 ;
-(char)addAccountPolicy:(id)arg1 toCategory:(id)arg2 error:(id*)arg3 ;
-(char)removeAccountPolicy:(id)arg1 fromCategory:(id)arg2 error:(id*)arg3 ;
-(char)setAccountPolicies:(id)arg1 error:(id*)arg2 ;
-(id)accountPoliciesAndReturnError:(id*)arg1 ;
-(char)passwordContentCheck:(id)arg1 forRecordName:(id)arg2 error:(id*)arg3 ;
@end

