/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:16:17 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/SecurityInterface.framework/Versions/A/SecurityInterface
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol KeychainProxyProtocol;
#import <SecurityInterface/SecurityInterface-Structs.h>
@class NSString;

@interface SFModVector : NSObject {

	id<KeychainProxyProtocol> _proxy;
	AuthorizationOpaqueRefRef _authRef;
	OpaqueSecKeychainRefRef _kcRef;
	OpaqueSecKeychainRefRef _tmpRef;
	long long _err;
	long long _lock;
	unsigned _uid;
	NSString* _path;
	NSString* _tmpPath;

}
+(char)isAccessError:(int)arg1 ;
+(id)pathForKeychain:(OpaqueSecKeychainRefRef)arg1 ;
+(id)sharedInstance;
-(int)addCertificate:(OpaqueSecCertificateRefRef)arg1 toKeychain:(OpaqueSecKeychainRefRef)arg2 ;
-(void)stopProxy;
-(long long)releaseAuthorization;
-(void)updateRunLoopInMode:(id)arg1 ;
-(void)startProxy;
-(long long)obtainAuthorization:(char)arg1 ;
-(void)setKeyPrintNamesWithCommonName:(id)arg1 forKey:(OpaqueSecKeyRefRef)arg2 ;
-(id)privateKeyPersistentRef;
-(id)publicKeyPersistentRef;
-(void)_connectionDidDie:(id)arg1 ;
-(int)addCertificate:(OpaqueSecCertificateRefRef)arg1 toKeychain:(OpaqueSecKeychainRefRef)arg2 domain:(unsigned)arg3 settings:(CFArrayRef)arg4 ;
-(void)updateRunLoop;
-(char)authorizationValid;
-(int)createKeyPair:(OpaqueSecKeychainRefRef)arg1 algorithm:(unsigned)arg2 keySizeInBits:(unsigned)arg3 contextHandle:(unsigned long long)arg4 publicKeyUsage:(unsigned)arg5 publicKeyAttr:(unsigned)arg6 privateKeyUsage:(unsigned)arg7 privateKeyAttr:(unsigned)arg8 initialAccess:(id)arg9 publicKey:(OpaqueSecKeyRef*)arg10 privateKey:(OpaqueSecKeyRef*)arg11 commonName:(id)arg12 ;
-(id)init;
-(void)dealloc;
-(int)removeItem:(OpaqueSecKeychainItemRefRef)arg1 ;
-(id)proxy;
@end

