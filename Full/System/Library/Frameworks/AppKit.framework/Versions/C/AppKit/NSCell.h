/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:32:10 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <AppKit/NSCopying.h>
#import <AppKit/NSCoding.h>
#import <AppKit/NSUserInterfaceItemIdentification.h>
#import <AppKit/NSAccessibilityElement.h>
#import <AppKit/NSAccessibility.h>

@class NSString, NSView, NSFont, NSImage, NSMenu, NSURL, NSArray;

@interface NSCell : NSObject <NSCopying, NSCoding, NSUserInterfaceItemIdentification, NSAccessibilityElement, NSAccessibility> {

	id _contents;
	struct {
		unsigned state : 1;
		unsigned highlighted : 1;
		unsigned disabled : 1;
		unsigned editable : 1;
		unsigned type : 2;
		unsigned vCentered : 1;
		unsigned hCentered : 1;
		unsigned bordered : 1;
		unsigned bezeled : 1;
		unsigned selectable : 1;
		unsigned scrollable : 1;
		unsigned continuous : 1;
		unsigned actOnMouseDown : 1;
		unsigned isLeaf : 1;
		unsigned invalidObjectValue : 1;
		unsigned invalidFont : 1;
		unsigned lineBreakMode : 3;
		unsigned weakTargetHelperFlag : 1;
		unsigned allowsAppearanceEffects : 1;
		unsigned singleLineMode : 1;
		unsigned actOnMouseDragged : 1;
		unsigned isLoaded : 1;
		unsigned truncateLastLine : 1;
		unsigned dontActOnMouseUp : 1;
		unsigned isWhite : 1;
		unsigned useUserKeyEquivalent : 1;
		unsigned showsFirstResponder : 1;
		unsigned focusRingType : 2;
		unsigned wasSelectable : 1;
		unsigned hasInvalidObject : 1;
		unsigned allowsEditingTextAttributes : 1;
		unsigned importsGraphics : 1;
		unsigned alignment : 3;
		unsigned layoutDirectionRTL : 1;
		unsigned backgroundStyle : 3;
		unsigned cellReserved2 : 4;
		unsigned refusesFirstResponder : 1;
		unsigned needsHighlightedText : 1;
		unsigned dontAllowsUndo : 1;
		unsigned currentlyEditing : 1;
		unsigned allowsMixedState : 1;
		unsigned inMixedState : 1;
		unsigned sendsActionOnEndEditing : 1;
		unsigned inSendAction : 1;
		unsigned menuWasSet : 1;
		unsigned controlTint : 3;
		unsigned controlSize : 2;
		unsigned branchImageDisabled : 1;
		unsigned drawingInRevealover : 1;
		unsigned needsHighlightedTextHint : 1;
	}  _cFlags;
	id _support;

}

@property (assign) char allowsMixedState; 
@property (readonly) long long nextState; 
@property (assign) long long backgroundStyle; 
@property (readonly) long long interiorBackgroundStyle; 
@property (assign) NSView * controlView; 
@property (assign) unsigned long long type; 
@property (assign) long long state; 
@property (__weak) id target; 
@property (assign) SEL action; 
@property (assign) long long tag; 
@property (copy) NSString * title; 
@property (getter=isOpaque,readonly) char opaque; 
@property (getter=isEnabled) char enabled; 
@property (getter=isContinuous) char continuous; 
@property (getter=isEditable) char editable; 
@property (getter=isSelectable) char selectable; 
@property (getter=isBordered) char bordered; 
@property (getter=isBezeled) char bezeled; 
@property (getter=isScrollable) char scrollable; 
@property (getter=isHighlighted) char highlighted; 
@property (assign) unsigned long long alignment; 
@property (assign) char wraps; 
@property (retain) NSFont * font; 
@property (copy,readonly) NSString * keyEquivalent; 
@property (retain) id formatter; 
@property (copy) id objectValue; 
@property (readonly) char hasValidObjectValue; 
@property (copy) NSString * stringValue; 
@property (assign) int intValue; 
@property (assign) float floatValue; 
@property (assign) double doubleValue; 
@property (retain) NSImage * image; 
@property (assign) unsigned long long controlTint; 
@property (assign) unsigned long long controlSize; 
@property (retain) id representedObject; 
@property (readonly) CGSize cellSize; 
@property (readonly) long long mouseDownFlags; 
@property (retain) NSMenu * menu; 
@property (assign) char sendsActionOnEndEditing; 
@property (assign) long long baseWritingDirection; 
@property (assign) unsigned long long lineBreakMode; 
@property (assign) char allowsUndo; 
@property (assign) long long integerValue; 
@property (assign) char truncatesLastVisibleLine; 
@property (assign) long long userInterfaceLayoutDirection; 
@property (assign) char usesSingleLineMode; 
@property (copy) NSString * identifier; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (getter=isAccessibilityElement) char accessibilityElement; 
@property (assign) CGRect accessibilityFrame; 
@property (getter=isAccessibilityFocused) char accessibilityFocused; 
@property (assign) CGPoint accessibilityActivationPoint; 
@property (__weak) id accessibilityTopLevelUIElement; 
@property (copy) NSURL * accessibilityURL; 
@property (retain) id accessibilityValue; 
@property (copy) NSString * accessibilityValueDescription; 
@property (copy) NSArray * accessibilityVisibleChildren; 
@property (copy) NSString * accessibilitySubrole; 
@property (copy) NSString * accessibilityTitle; 
@property (__weak) id accessibilityTitleUIElement; 
@property (copy) NSArray * accessibilityNextContents; 
@property (assign) long long accessibilityOrientation; 
@property (retain) id accessibilityOverflowButton; 
@property (__weak) id accessibilityParent; 
@property (copy) NSString * accessibilityPlaceholderValue; 
@property (copy) NSArray * accessibilityPreviousContents; 
@property (copy) NSString * accessibilityRole; 
@property (copy) NSString * accessibilityRoleDescription; 
@property (retain) id accessibilitySearchButton; 
@property (retain) id accessibilitySearchMenu; 
@property (getter=isAccessibilitySelected) char accessibilitySelected; 
@property (copy) NSArray * accessibilitySelectedChildren; 
@property (copy) NSArray * accessibilityServesAsTitleForUIElements; 
@property (retain) id accessibilityShownMenu; 
@property (retain) id accessibilityMinValue; 
@property (retain) id accessibilityMaxValue; 
@property (copy) NSArray * accessibilityLinkedUIElements; 
@property (__weak) id accessibilityWindow; 
@property (copy) NSString * accessibilityIdentifier; 
@property (copy) NSString * accessibilityHelp; 
@property (copy) NSString * accessibilityFilename; 
@property (getter=isAccessibilityExpanded) char accessibilityExpanded; 
@property (getter=isAccessibilityEdited) char accessibilityEdited; 
@property (getter=isAccessibilityEnabled) char accessibilityEnabled; 
@property (copy) NSArray * accessibilityChildren; 
@property (retain) id accessibilityClearButton; 
@property (retain) id accessibilityCancelButton; 
@property (getter=isAccessibilityProtectedContent) char accessibilityProtectedContent; 
@property (copy) NSArray * accessibilityContents; 
@property (copy) NSString * accessibilityLabel; 
@property (getter=isAccessibilityAlternateUIVisible) char accessibilityAlternateUIVisible; 
@property (copy) NSArray * accessibilitySharedFocusElements; 
@property (retain) id accessibilityApplicationFocusedUIElement; 
@property (retain) id accessibilityMainWindow; 
@property (getter=isAccessibilityHidden) char accessibilityHidden; 
@property (getter=isAccessibilityFrontmost) char accessibilityFrontmost; 
@property (retain) id accessibilityFocusedWindow; 
@property (copy) NSArray * accessibilityWindows; 
@property (__weak) id accessibilityExtrasMenuBar; 
@property (__weak) id accessibilityMenuBar; 
@property (copy) NSArray * accessibilityColumnTitles; 
@property (getter=isAccessibilityOrderedByRow) char accessibilityOrderedByRow; 
@property (assign) long long accessibilityHorizontalUnits; 
@property (assign) long long accessibilityVerticalUnits; 
@property (copy) NSString * accessibilityHorizontalUnitDescription; 
@property (copy) NSString * accessibilityVerticalUnitDescription; 
@property (copy) NSArray * accessibilityHandles; 
@property (retain) id accessibilityWarningValue; 
@property (retain) id accessibilityCriticalValue; 
@property (getter=isAccessibilityDisclosed) char accessibilityDisclosed; 
@property (__weak) id accessibilityDisclosedByRow; 
@property (retain) id accessibilityDisclosedRows; 
@property (assign) long long accessibilityDisclosureLevel; 
@property (copy) NSArray * accessibilityMarkerUIElements; 
@property (retain) id accessibilityMarkerValues; 
@property (retain) id accessibilityMarkerGroupUIElement; 
@property (assign) long long accessibilityUnits; 
@property (copy) NSString * accessibilityUnitDescription; 
@property (assign) long long accessibilityRulerMarkerType; 
@property (copy) NSString * accessibilityMarkerTypeDescription; 
@property (retain) id accessibilityHorizontalScrollBar; 
@property (retain) id accessibilityVerticalScrollBar; 
@property (copy) NSArray * accessibilityAllowedValues; 
@property (copy) NSArray * accessibilityLabelUIElements; 
@property (assign) float accessibilityLabelValue; 
@property (copy) NSArray * accessibilitySplitters; 
@property (retain) id accessibilityDecrementButton; 
@property (retain) id accessibilityIncrementButton; 
@property (copy) NSArray * accessibilityTabs; 
@property (retain) id accessibilityHeader; 
@property (assign) long long accessibilityColumnCount; 
@property (assign) long long accessibilityRowCount; 
@property (assign) long long accessibilityIndex; 
@property (copy) NSArray * accessibilityColumns; 
@property (copy) NSArray * accessibilityRows; 
@property (copy) NSArray * accessibilityVisibleRows; 
@property (copy) NSArray * accessibilitySelectedRows; 
@property (copy) NSArray * accessibilityVisibleColumns; 
@property (copy) NSArray * accessibilitySelectedColumns; 
@property (assign) long long accessibilitySortDirection; 
@property (copy) NSArray * accessibilityRowHeaderUIElements; 
@property (copy) NSArray * accessibilitySelectedCells; 
@property (copy) NSArray * accessibilityVisibleCells; 
@property (copy) NSArray * accessibilityColumnHeaderUIElements; 
@property (assign) NSRange accessibilityRowIndexRange; 
@property (assign) NSRange accessibilityColumnIndexRange; 
@property (assign) long long accessibilityInsertionPointLineNumber; 
@property (assign) NSRange accessibilitySharedCharacterRange; 
@property (copy) NSArray * accessibilitySharedTextUIElements; 
@property (assign) NSRange accessibilityVisibleCharacterRange; 
@property (assign) long long accessibilityNumberOfCharacters; 
@property (copy) NSString * accessibilitySelectedText; 
@property (assign) NSRange accessibilitySelectedTextRange; 
@property (copy) NSArray * accessibilitySelectedTextRanges; 
@property (retain) id accessibilityToolbarButton; 
@property (getter=isAccessibilityModal) char accessibilityModal; 
@property (retain) id accessibilityProxy; 
@property (getter=isAccessibilityMain) char accessibilityMain; 
@property (retain) id accessibilityFullScreenButton; 
@property (retain) id accessibilityGrowArea; 
@property (copy) NSString * accessibilityDocument; 
@property (retain) id accessibilityDefaultButton; 
@property (retain) id accessibilityCloseButton; 
@property (retain) id accessibilityZoomButton; 
@property (retain) id accessibilityMinimizeButton; 
@property (getter=isAccessibilityMinimized) char accessibilityMinimized; 
+(void)initialize;
+(id)_cuiStyleEffectsKey;
+(unsigned long long)defaultFocusRingType;
+(char)_compatibleListShouldUseAlternateSelectedControlColor;
+(id)defaultMenu;
+(char)prefersTrackingUntilMouseUp;
+(id)_cuiCatalogKey;
+(char)_useAutoreleasePoolInTrackMouse;
-(void)SLX_drawButtonWithImage:(id)arg1 inFrame:(CGRect)arg2 ;
-(SCD_Struct_NS26)CMTimeValue;
-(void)setCMTimeValue:(SCD_Struct_NS26)arg1 ;
-(void)takeCMTimeValueFrom:(id)arg1 ;
-(SCD_Struct_NS27)QTTimeValue;
-(void)setQTTimeValue:(SCD_Struct_NS27)arg1 ;
-(void)takeQTTimeValueFrom:(id)arg1 ;
-(void)QTHUD_markAreasNeedingDisplayForAction:(void*)arg1 withFrame:(CGRect)arg2 inView:(id)arg3 ;
-(char)QTHUD_shouldShowFocusRing;
-(id)init;
-(void)finalize;
-(void)dealloc;
-(int)intValue;
-(id)copy;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)accessibilityFocusedUIElement;
-(id)accessibilityHitTest:(CGPoint)arg1 ;
-(char)accessibilityIsIgnored;
-(NSString *)identifier;
-(void)setIdentifier:(NSString *)arg1 ;
-(void)setState:(long long)arg1 ;
-(NSImage *)image;
-(void)setImage:(NSImage *)arg1 ;
-(void)setTarget:(id)arg1 ;
-(void)setAction:(SEL)arg1 ;
-(void)setBordered:(char)arg1 ;
-(void)setEnabled:(char)arg1 ;
-(void)setTag:(long long)arg1 ;
-(void)setRefusesFirstResponder:(char)arg1 ;
-(void)setFocusRingType:(unsigned long long)arg1 ;
-(long long)tag;
-(char)isAccessibilityElement;
-(id)accessibilityAttributeNames;
-(id)accessibilityAttributeValue:(id)arg1 ;
-(long long)integerValue;
-(id)accessibilityActionDescription:(id)arg1 ;
-(char)accessibilityShouldUseUniqueId;
-(id)accessibilityRoleAttribute;
-(char)accessibilityIsRoleAttributeSettable;
-(id)accessibilityRoleDescriptionAttribute;
-(char)accessibilityIsRoleDescriptionAttributeSettable;
-(id)accessibilityHelpAttribute;
-(char)accessibilityIsHelpAttributeSettable;
-(id)accessibilityFocusedAttribute;
-(char)accessibilityIsFocusedAttributeSettable;
-(void)accessibilitySetFocusedAttribute:(id)arg1 ;
-(id)accessibilityParentAttribute;
-(char)accessibilityIsParentAttributeSettable;
-(id)accessibilityWindowAttribute;
-(char)accessibilityIsWindowAttributeSettable;
-(id)accessibilityTopLevelUIElementAttribute;
-(char)accessibilityIsTopLevelUIElementAttributeSettable;
-(id)accessibilityPositionAttribute;
-(char)accessibilityIsPositionAttributeSettable;
-(id)accessibilitySizeAttribute;
-(char)accessibilityIsSizeAttributeSettable;
-(char)accessibilityIsAttributeSettable:(id)arg1 ;
-(void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2 ;
-(id)accessibilityActionNames;
-(void)accessibilityPerformAction:(id)arg1 ;
-(id)accessibilityEnabledAttribute;
-(char)accessibilityIsEnabledAttributeSettable;
-(char)accessibilityShouldSendNotification:(id)arg1 ;
-(long long)baseWritingDirection;
-(char)isEnabled;
-(long long)state;
-(char)accessibilitySupportsOverriddenAttributes;
-(id)accessibilityElementWithParent:(id)arg1 ;
-(char)_accessibilityIsTableViewDescendant;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)target;
-(NSView *)controlView;
-(void)setControlView:(NSView *)arg1 ;
-(SEL)action;
-(NSFont *)font;
-(void)setFont:(NSFont *)arg1 ;
-(void)setTitle:(NSString *)arg1 ;
-(void)setStringValue:(NSString *)arg1 ;
-(NSString *)stringValue;
-(char)isBordered;
-(NSString *)title;
-(void)performClick:(id)arg1 ;
-(void)setBaseWritingDirection:(long long)arg1 ;
-(CGSize)cellSizeForBounds:(CGRect)arg1 ;
-(void)setControlTint:(unsigned long long)arg1 ;
-(long long)userInterfaceLayoutDirection;
-(float)floatValue;
-(double)doubleValue;
-(unsigned long long)type;
-(void)accessibilityPostNotification:(id)arg1 ;
-(char)_wantsHeartBeat;
-(NSMenu *)menu;
-(id)userInterfaceItemIdentifier;
-(NSString *)keyEquivalent;
-(void)setUserInterfaceItemIdentifier:(id)arg1 ;
-(CGRect)accessibilityFrame;
-(id)accessibilityParent;
-(char)isAccessibilityFocused;
-(NSString *)accessibilityIdentifier;
-(CGPoint)accessibilityLayoutPointForScreenPoint:(CGPoint)arg1 ;
-(CGSize)accessibilityLayoutSizeForScreenSize:(CGSize)arg1 ;
-(CGPoint)accessibilityScreenPointForLayoutPoint:(CGPoint)arg1 ;
-(CGSize)accessibilityScreenSizeForLayoutSize:(CGSize)arg1 ;
-(id)accessibilityCellForColumn:(long long)arg1 row:(long long)arg2 ;
-(id)accessibilityAttributedStringForRange:(NSRange)arg1 ;
-(NSRange)accessibilityRangeForLine:(long long)arg1 ;
-(id)accessibilityStringForRange:(NSRange)arg1 ;
-(NSRange)accessibilityRangeForPosition:(CGPoint)arg1 ;
-(NSRange)accessibilityRangeForIndex:(long long)arg1 ;
-(CGRect)accessibilityFrameForRange:(NSRange)arg1 ;
-(id)accessibilityRTFForRange:(NSRange)arg1 ;
-(NSRange)accessibilityStyleRangeForIndex:(long long)arg1 ;
-(long long)accessibilityLineForIndex:(long long)arg1 ;
-(char)accessibilityPerformCancel;
-(char)accessibilityPerformConfirm;
-(char)accessibilityPerformDecrement;
-(char)accessibilityPerformDelete;
-(char)accessibilityPerformIncrement;
-(char)accessibilityPerformPick;
-(char)accessibilityPerformPress;
-(char)accessibilityPerformRaise;
-(char)accessibilityPerformShowAlternateUI;
-(char)accessibilityPerformShowDefaultUI;
-(char)accessibilityPerformShowMenu;
-(char)isAccessibilitySelectorAllowed:(SEL)arg1 ;
-(void)setAccessibilityElement:(char)arg1 ;
-(void)setAccessibilityFrame:(CGRect)arg1 ;
-(void)setAccessibilityFocused:(char)arg1 ;
-(CGPoint)accessibilityActivationPoint;
-(void)setAccessibilityActivationPoint:(CGPoint)arg1 ;
-(id)accessibilityTopLevelUIElement;
-(void)setAccessibilityTopLevelUIElement:(id)arg1 ;
-(NSURL *)accessibilityURL;
-(void)setAccessibilityURL:(NSURL *)arg1 ;
-(id)accessibilityValue;
-(void)setAccessibilityValue:(id)arg1 ;
-(NSString *)accessibilityValueDescription;
-(void)setAccessibilityValueDescription:(NSString *)arg1 ;
-(NSArray *)accessibilityVisibleChildren;
-(void)setAccessibilityVisibleChildren:(NSArray *)arg1 ;
-(NSString *)accessibilitySubrole;
-(void)setAccessibilitySubrole:(NSString *)arg1 ;
-(NSString *)accessibilityTitle;
-(void)setAccessibilityTitle:(NSString *)arg1 ;
-(id)accessibilityTitleUIElement;
-(void)setAccessibilityTitleUIElement:(id)arg1 ;
-(NSArray *)accessibilityNextContents;
-(void)setAccessibilityNextContents:(NSArray *)arg1 ;
-(long long)accessibilityOrientation;
-(void)setAccessibilityOrientation:(long long)arg1 ;
-(id)accessibilityOverflowButton;
-(void)setAccessibilityOverflowButton:(id)arg1 ;
-(void)setAccessibilityParent:(id)arg1 ;
-(NSString *)accessibilityPlaceholderValue;
-(void)setAccessibilityPlaceholderValue:(NSString *)arg1 ;
-(NSArray *)accessibilityPreviousContents;
-(void)setAccessibilityPreviousContents:(NSArray *)arg1 ;
-(NSString *)accessibilityRole;
-(void)setAccessibilityRole:(NSString *)arg1 ;
-(NSString *)accessibilityRoleDescription;
-(void)setAccessibilityRoleDescription:(NSString *)arg1 ;
-(id)accessibilitySearchButton;
-(void)setAccessibilitySearchButton:(id)arg1 ;
-(id)accessibilitySearchMenu;
-(void)setAccessibilitySearchMenu:(id)arg1 ;
-(char)isAccessibilitySelected;
-(void)setAccessibilitySelected:(char)arg1 ;
-(NSArray *)accessibilitySelectedChildren;
-(void)setAccessibilitySelectedChildren:(NSArray *)arg1 ;
-(NSArray *)accessibilityServesAsTitleForUIElements;
-(void)setAccessibilityServesAsTitleForUIElements:(NSArray *)arg1 ;
-(id)accessibilityShownMenu;
-(void)setAccessibilityShownMenu:(id)arg1 ;
-(id)accessibilityMinValue;
-(void)setAccessibilityMinValue:(id)arg1 ;
-(id)accessibilityMaxValue;
-(void)setAccessibilityMaxValue:(id)arg1 ;
-(NSArray *)accessibilityLinkedUIElements;
-(void)setAccessibilityLinkedUIElements:(NSArray *)arg1 ;
-(id)accessibilityWindow;
-(void)setAccessibilityWindow:(id)arg1 ;
-(void)setAccessibilityIdentifier:(NSString *)arg1 ;
-(NSString *)accessibilityHelp;
-(void)setAccessibilityHelp:(NSString *)arg1 ;
-(NSString *)accessibilityFilename;
-(void)setAccessibilityFilename:(NSString *)arg1 ;
-(char)isAccessibilityExpanded;
-(void)setAccessibilityExpanded:(char)arg1 ;
-(char)isAccessibilityEdited;
-(void)setAccessibilityEdited:(char)arg1 ;
-(char)isAccessibilityEnabled;
-(void)setAccessibilityEnabled:(char)arg1 ;
-(NSArray *)accessibilityChildren;
-(void)setAccessibilityChildren:(NSArray *)arg1 ;
-(id)accessibilityClearButton;
-(void)setAccessibilityClearButton:(id)arg1 ;
-(id)accessibilityCancelButton;
-(void)setAccessibilityCancelButton:(id)arg1 ;
-(char)isAccessibilityProtectedContent;
-(void)setAccessibilityProtectedContent:(char)arg1 ;
-(NSArray *)accessibilityContents;
-(void)setAccessibilityContents:(NSArray *)arg1 ;
-(NSString *)accessibilityLabel;
-(void)setAccessibilityLabel:(NSString *)arg1 ;
-(char)isAccessibilityAlternateUIVisible;
-(void)setAccessibilityAlternateUIVisible:(char)arg1 ;
-(NSArray *)accessibilitySharedFocusElements;
-(void)setAccessibilitySharedFocusElements:(NSArray *)arg1 ;
-(id)accessibilityApplicationFocusedUIElement;
-(void)setAccessibilityApplicationFocusedUIElement:(id)arg1 ;
-(id)accessibilityMainWindow;
-(void)setAccessibilityMainWindow:(id)arg1 ;
-(char)isAccessibilityHidden;
-(void)setAccessibilityHidden:(char)arg1 ;
-(char)isAccessibilityFrontmost;
-(void)setAccessibilityFrontmost:(char)arg1 ;
-(id)accessibilityFocusedWindow;
-(void)setAccessibilityFocusedWindow:(id)arg1 ;
-(NSArray *)accessibilityWindows;
-(void)setAccessibilityWindows:(NSArray *)arg1 ;
-(id)accessibilityExtrasMenuBar;
-(void)setAccessibilityExtrasMenuBar:(id)arg1 ;
-(id)accessibilityMenuBar;
-(void)setAccessibilityMenuBar:(id)arg1 ;
-(NSArray *)accessibilityColumnTitles;
-(void)setAccessibilityColumnTitles:(NSArray *)arg1 ;
-(char)isAccessibilityOrderedByRow;
-(void)setAccessibilityOrderedByRow:(char)arg1 ;
-(long long)accessibilityHorizontalUnits;
-(void)setAccessibilityHorizontalUnits:(long long)arg1 ;
-(long long)accessibilityVerticalUnits;
-(void)setAccessibilityVerticalUnits:(long long)arg1 ;
-(NSString *)accessibilityHorizontalUnitDescription;
-(void)setAccessibilityHorizontalUnitDescription:(NSString *)arg1 ;
-(NSString *)accessibilityVerticalUnitDescription;
-(void)setAccessibilityVerticalUnitDescription:(NSString *)arg1 ;
-(NSArray *)accessibilityHandles;
-(void)setAccessibilityHandles:(NSArray *)arg1 ;
-(id)accessibilityWarningValue;
-(void)setAccessibilityWarningValue:(id)arg1 ;
-(id)accessibilityCriticalValue;
-(void)setAccessibilityCriticalValue:(id)arg1 ;
-(char)isAccessibilityDisclosed;
-(void)setAccessibilityDisclosed:(char)arg1 ;
-(id)accessibilityDisclosedByRow;
-(void)setAccessibilityDisclosedByRow:(id)arg1 ;
-(id)accessibilityDisclosedRows;
-(void)setAccessibilityDisclosedRows:(id)arg1 ;
-(long long)accessibilityDisclosureLevel;
-(void)setAccessibilityDisclosureLevel:(long long)arg1 ;
-(NSArray *)accessibilityMarkerUIElements;
-(void)setAccessibilityMarkerUIElements:(NSArray *)arg1 ;
-(id)accessibilityMarkerValues;
-(void)setAccessibilityMarkerValues:(id)arg1 ;
-(id)accessibilityMarkerGroupUIElement;
-(void)setAccessibilityMarkerGroupUIElement:(id)arg1 ;
-(long long)accessibilityUnits;
-(void)setAccessibilityUnits:(long long)arg1 ;
-(NSString *)accessibilityUnitDescription;
-(void)setAccessibilityUnitDescription:(NSString *)arg1 ;
-(long long)accessibilityRulerMarkerType;
-(void)setAccessibilityRulerMarkerType:(long long)arg1 ;
-(NSString *)accessibilityMarkerTypeDescription;
-(void)setAccessibilityMarkerTypeDescription:(NSString *)arg1 ;
-(id)accessibilityHorizontalScrollBar;
-(void)setAccessibilityHorizontalScrollBar:(id)arg1 ;
-(id)accessibilityVerticalScrollBar;
-(void)setAccessibilityVerticalScrollBar:(id)arg1 ;
-(NSArray *)accessibilityAllowedValues;
-(void)setAccessibilityAllowedValues:(NSArray *)arg1 ;
-(NSArray *)accessibilityLabelUIElements;
-(void)setAccessibilityLabelUIElements:(NSArray *)arg1 ;
-(float)accessibilityLabelValue;
-(void)setAccessibilityLabelValue:(float)arg1 ;
-(NSArray *)accessibilitySplitters;
-(void)setAccessibilitySplitters:(NSArray *)arg1 ;
-(id)accessibilityDecrementButton;
-(void)setAccessibilityDecrementButton:(id)arg1 ;
-(id)accessibilityIncrementButton;
-(void)setAccessibilityIncrementButton:(id)arg1 ;
-(NSArray *)accessibilityTabs;
-(void)setAccessibilityTabs:(NSArray *)arg1 ;
-(id)accessibilityHeader;
-(void)setAccessibilityHeader:(id)arg1 ;
-(long long)accessibilityColumnCount;
-(void)setAccessibilityColumnCount:(long long)arg1 ;
-(long long)accessibilityRowCount;
-(void)setAccessibilityRowCount:(long long)arg1 ;
-(long long)accessibilityIndex;
-(void)setAccessibilityIndex:(long long)arg1 ;
-(NSArray *)accessibilityColumns;
-(void)setAccessibilityColumns:(NSArray *)arg1 ;
-(NSArray *)accessibilityRows;
-(void)setAccessibilityRows:(NSArray *)arg1 ;
-(NSArray *)accessibilityVisibleRows;
-(void)setAccessibilityVisibleRows:(NSArray *)arg1 ;
-(NSArray *)accessibilitySelectedRows;
-(void)setAccessibilitySelectedRows:(NSArray *)arg1 ;
-(NSArray *)accessibilityVisibleColumns;
-(void)setAccessibilityVisibleColumns:(NSArray *)arg1 ;
-(NSArray *)accessibilitySelectedColumns;
-(void)setAccessibilitySelectedColumns:(NSArray *)arg1 ;
-(long long)accessibilitySortDirection;
-(void)setAccessibilitySortDirection:(long long)arg1 ;
-(NSArray *)accessibilityRowHeaderUIElements;
-(void)setAccessibilityRowHeaderUIElements:(NSArray *)arg1 ;
-(NSArray *)accessibilitySelectedCells;
-(void)setAccessibilitySelectedCells:(NSArray *)arg1 ;
-(NSArray *)accessibilityVisibleCells;
-(void)setAccessibilityVisibleCells:(NSArray *)arg1 ;
-(NSArray *)accessibilityColumnHeaderUIElements;
-(void)setAccessibilityColumnHeaderUIElements:(NSArray *)arg1 ;
-(NSRange)accessibilityRowIndexRange;
-(void)setAccessibilityRowIndexRange:(NSRange)arg1 ;
-(NSRange)accessibilityColumnIndexRange;
-(void)setAccessibilityColumnIndexRange:(NSRange)arg1 ;
-(long long)accessibilityInsertionPointLineNumber;
-(void)setAccessibilityInsertionPointLineNumber:(long long)arg1 ;
-(NSRange)accessibilitySharedCharacterRange;
-(void)setAccessibilitySharedCharacterRange:(NSRange)arg1 ;
-(NSArray *)accessibilitySharedTextUIElements;
-(void)setAccessibilitySharedTextUIElements:(NSArray *)arg1 ;
-(NSRange)accessibilityVisibleCharacterRange;
-(void)setAccessibilityVisibleCharacterRange:(NSRange)arg1 ;
-(long long)accessibilityNumberOfCharacters;
-(void)setAccessibilityNumberOfCharacters:(long long)arg1 ;
-(NSString *)accessibilitySelectedText;
-(void)setAccessibilitySelectedText:(NSString *)arg1 ;
-(NSRange)accessibilitySelectedTextRange;
-(void)setAccessibilitySelectedTextRange:(NSRange)arg1 ;
-(NSArray *)accessibilitySelectedTextRanges;
-(void)setAccessibilitySelectedTextRanges:(NSArray *)arg1 ;
-(id)accessibilityToolbarButton;
-(void)setAccessibilityToolbarButton:(id)arg1 ;
-(char)isAccessibilityModal;
-(void)setAccessibilityModal:(char)arg1 ;
-(id)accessibilityProxy;
-(void)setAccessibilityProxy:(id)arg1 ;
-(char)isAccessibilityMain;
-(void)setAccessibilityMain:(char)arg1 ;
-(id)accessibilityFullScreenButton;
-(void)setAccessibilityFullScreenButton:(id)arg1 ;
-(id)accessibilityGrowArea;
-(void)setAccessibilityGrowArea:(id)arg1 ;
-(NSString *)accessibilityDocument;
-(void)setAccessibilityDocument:(NSString *)arg1 ;
-(id)accessibilityDefaultButton;
-(void)setAccessibilityDefaultButton:(id)arg1 ;
-(id)accessibilityCloseButton;
-(void)setAccessibilityCloseButton:(id)arg1 ;
-(id)accessibilityZoomButton;
-(void)setAccessibilityZoomButton:(id)arg1 ;
-(id)accessibilityMinimizeButton;
-(void)setAccessibilityMinimizeButton:(id)arg1 ;
-(char)isAccessibilityMinimized;
-(void)setAccessibilityMinimized:(char)arg1 ;
-(void)setMenu:(NSMenu *)arg1 ;
-(char)isEditable;
-(long long)compare:(id)arg1 ;
-(id)initTextCell:(id)arg1 ;
-(void)setAlignment:(unsigned long long)arg1 ;
-(CGSize)cellSize;
-(void)setEditable:(char)arg1 ;
-(void)setSelectable:(char)arg1 ;
-(void)drawWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(unsigned long long)alignment;
-(char)isOpaque;
-(void)setTitleWithMnemonic:(id)arg1 ;
-(unsigned long long)hitTestForEvent:(id)arg1 inRect:(CGRect)arg2 ofView:(id)arg3 ;
-(void)setDrawsBackground:(char)arg1 ;
-(id)representedObject;
-(unsigned long long)_effectiveFocusRingType;
-(unsigned long long)controlSize;
-(void)setControlSize:(unsigned long long)arg1 ;
-(void)setRepresentedObject:(id)arg1 ;
-(char)isHighlighted;
-(char)acceptsFirstResponder;
-(void)highlight:(char)arg1 withFrame:(CGRect)arg2 inView:(id)arg3 ;
-(char)refusesFirstResponder;
-(char)drawsBackground;
-(char)_isWhite;
-(void)_setIsWhite:(char)arg1 ;
-(void)setHighlighted:(char)arg1 ;
-(id)objectValue;
-(void)setObjectValue:(id)arg1 ;
-(void)setBezeled:(char)arg1 ;
-(void)setWraps:(char)arg1 ;
-(long long)interiorBackgroundStyle;
-(long long)backgroundStyle;
-(char)_usingAlternateHighlightColorWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(CGRect)titleRectForBounds:(CGRect)arg1 ;
-(void)setLineBreakMode:(unsigned long long)arg1 ;
-(char)_drawingInRevealover;
-(void)_drawHighlightWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)drawInteriorWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)setBackgroundStyle:(long long)arg1 ;
-(int)_effectiveBackgroundStyleInView:(id)arg1 forSpecifiedStyle:(long long)arg2 ;
-(CGRect)imageRectForBounds:(CGRect)arg1 ;
-(id)_defaultImageHints;
-(unsigned long long)_lineBreakMode;
-(void)_setLineBreakMode:(unsigned long long)arg1 ;
-(id)highlightColorWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)_drawLiveResizeHighlightWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(CGRect)expansionFrameWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)drawWithExpansionFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)getPeriodicDelay:(float*)arg1 interval:(float*)arg2 ;
-(void)setShowsFirstResponder:(char)arg1 ;
-(void)_setMouseDownFlags:(long long)arg1 ;
-(void)updateTrackingAreaWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(id)mnemonic;
-(void)setUserInterfaceLayoutDirection:(long long)arg1 ;
-(void)setAllowsMixedState:(char)arg1 ;
-(char)allowsMixedState;
-(void)setNextState;
-(char)_updateStyledTextOptions:(id)arg1 withContentAppearanceInView:(id)arg2 ;
-(char)_shouldUseStyledTextInView:(id)arg1 ;
-(void)_convertToText:(id)arg1 ;
-(void)_commonInit;
-(id)initImageCell:(id)arg1 ;
-(id)_formatObjectValue:(id)arg1 invalid:(char)arg2 ;
-(id)_unformattedAttributedStringValue:(id)arg1 ;
-(id)_embossedEnabledForgroundColor;
-(char)_wantsBoldFont;
-(char)isBezeled;
-(char)_preferInactiveBezelArtInView:(id)arg1 ;
-(char)_needRedrawOnWindowChangedKeyState;
-(void)_setAnimationsAllowed:(char)arg1 ;
-(long long)nextState;
-(void)_setNeedsStateUpdate:(id)arg1 ;
-(void)setDoubleValue:(double)arg1 ;
-(char)_shouldSetHighlightToFlag:(char)arg1 ;
-(void)_clearMouseTracking;
-(char)_hasAppearanceTextEffectsWithAttributedString:(id)arg1 ;
-(long long)_initialBackgroundStyleCompatibilityGuessIgnoringExternalContext;
-(CFStringRef)_coreUIWidgetName;
-(unsigned long long)_realControlTint;
-(char)_finalizeStyleTextOptions:(id)arg1 ;
-(int)_effectiveBackgroundStyleInView:(id)arg1 ;
-(CGRect)drawingRectForBounds:(CGRect)arg1 ;
-(id)_updateInvalidatedObjectValue:(id)arg1 ;
-(char)_beginVibrantBlendGroupIfNeccessaryForControlView:(id)arg1 ;
-(void)_endVibrantBlendGroup;
-(void)setAttributedStringValue:(id)arg1 ;
-(void)setScrollable:(char)arg1 ;
-(void)_updateCoreUIOptions:(id)arg1 withContentAppearanceInView:(id)arg2 ;
-(unsigned long long)lineBreakMode;
-(id)_textAttributes;
-(char)_hasAttributedStringValue;
-(char)_customForegroundColorInTitle:(id)arg1 ;
-(char)_funkyOptOutLogicThatShouldGoAwayForView:(id)arg1 semanticContext:(int)arg2 ;
-(char)showsFirstResponder;
-(void)mouseEntered:(id)arg1 ;
-(void)mouseExited:(id)arg1 ;
-(void)_setMouseTrackingInRect:(CGRect)arg1 ofView:(id)arg2 ;
-(char)_isAnimatingDefaultCell;
-(char)trackMouse:(id)arg1 inRect:(CGRect)arg2 ofView:(id)arg3 untilMouseUp:(char)arg4 ;
-(char)startTrackingAt:(CGPoint)arg1 inView:(id)arg2 ;
-(char)continueTracking:(CGPoint)arg1 at:(CGPoint)arg2 inView:(id)arg3 ;
-(char)_sendActionFrom:(id)arg1 ;
-(char)_useHitTestInTrackMouse;
-(id)attributedStringValue;
-(void)setIntValue:(int)arg1 ;
-(void)setIntegerValue:(long long)arg1 ;
-(void)setFloatValue:(float)arg1 ;
-(char)_highlightsWithHighlightRect;
-(void)_windowChangedKeyStateInView:(id)arg1 ;
-(long long)cellAttribute:(unsigned long long)arg1 ;
-(void)setCellAttribute:(unsigned long long)arg1 to:(long long)arg2 ;
-(char)_allowsVibrancyForControlView:(id)arg1 ;
-(int)_vibrancyBlendModeForControlView:(id)arg1 ;
-(id)_vibrancyFilterForControlView:(id)arg1 ;
-(unsigned long long)_interiorContentAppearanceInView:(id)arg1 ;
-(unsigned long long)_interiorContentValueStateInView:(id)arg1 ;
-(id)_backgroundColorForFontSmoothing;
-(void)drawFocusRingMaskWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(CGRect)focusRingMaskBoundsForFrame:(CGRect)arg1 inView:(id)arg2 ;
-(char)wantsUpdateLayerInView:(id)arg1 ;
-(void)updateLayerWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)layoutLayerWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)stopTracking:(CGPoint)arg1 at:(CGPoint)arg2 inView:(id)arg3 mouseIsUp:(char)arg4 ;
-(char)canSmoothFontsInFrame:(CGRect)arg1 forLayerBackedView:(id)arg2 ;
-(void)heartBeat:(SCD_Struct_NS20*)arg1 ;
-(void)_setContents:(id)arg1 ;
-(id)accessibilityValueAttribute;
-(char)accessibilityIsValueAttributeSettable;
-(void)setImageInterpolation:(unsigned long long)arg1 ;
-(unsigned long long)imageInterpolation;
-(id)formatter;
-(void)setAllowsUndo:(char)arg1 ;
-(id)_contents;
-(void)setFormatter:(id)arg1 ;
-(char)_allowsContextMenus;
-(void)_cell_setRefusesFirstResponder:(char)arg1 ;
-(char)_cell_isEditable;
-(void)_restartEditingWithTextView:(id)arg1 ;
-(void)_setTextAttributeParaStyleNeedsRecalc;
-(char)wraps;
-(id)_stringForEditing;
-(char)_objectValue:(id*)arg1 forString:(id)arg2 errorDescription:(id*)arg3 ;
-(char)_isEditingTextView:(id)arg1 ;
-(char)_skipsSynchronizationForEditingTextView:(id)arg1 ;
-(void)_synchronizeTextView:(id)arg1 ;
-(char)_textDimsWhenDisabled;
-(void)_setCurrentlyEditing:(char)arg1 ;
-(char)allowsEditingTextAttributes;
-(char)allowsEditingTokens;
-(id)_attributedStringValue:(id)arg1 invalid:(char)arg2 ;
-(char)_objectValue:(id*)arg1 forString:(id)arg2 ;
-(unsigned long long)focusRingType;
-(long long)_integerValue;
-(void)_setIntegerValue:(long long)arg1 ;
-(void)_failsafeAllocAuxiliaryStorage;
-(id)_typeSelectAttributes;
-(char)_delegateValidation:(id)arg1 object:(id)arg2 uiHandled:(char*)arg3 ;
-(char)allowsUndo;
-(char)usesSingleLineMode;
-(long long)_typesetterBehavior;
-(char)isSelectable;
-(char)_isButtonTitleCell;
-(CFStringRef)customizedBackgroundTypeForControlView:(id)arg1 ;
-(unsigned long long)fontDilationStyle;
-(char)allowsAppearanceTextEffects;
-(char)truncatesLastVisibleLine;
-(char)isScrollable;
-(id)titleTextContainer;
-(id)_placeholderAttributedString;
-(void)_displaySomeWindowsIfNeeded:(id)arg1 ;
-(char)_hitTestForTrackMouseEvent:(id)arg1 inRect:(CGRect)arg2 ofView:(id)arg3 ;
-(char)_vetoMouseDragActionDispatch;
-(char)_MSMessengerTrackMouse:(id)arg1 inRect:(CGRect)arg2 ofView:(id)arg3 untilMouseUp:(char)arg4 ;
-(char)_usesDefaultContinuousBehavior;
-(long long)sendActionOn:(long long)arg1 ;
-(void)continueTrackingPeriodicEvent:(id)arg1 inView:(id)arg2 ;
-(char)_suppressMouseUpAction;
-(void)_setEditingTextView:(id)arg1 ;
-(CGRect)_centerInnerBounds:(CGRect)arg1 ;
-(void)endEditing:(id)arg1 ;
-(id)_selectOrEdit:(const CGRect*)arg1 inView:(id)arg2 target:(id)arg3 editor:(id)arg4 event:(id)arg5 start:(long long)arg6 end:(long long)arg7 ;
-(void)_clearEditingTextView:(id)arg1 ;
-(id)fieldEditorTextContainer;
-(id)_maybeSwapSystemFontForFont:(id)arg1 ;
-(void)_setNeedsHighlightedTextHint:(char)arg1 ;
-(void)_drawCellForDragWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(id)_imageComponentIfNonEmptyImagePortion:(id)arg1 rect:(CGRect)arg2 key:(id)arg3 ;
-(char)_prefersTrackingWhenDisabled;
-(id)_useUserKeyEquivalent;
-(char)_usesUserKeyEquivalent;
-(void)_setControlView:(id)arg1 ;
-(char)_hasTrackingGestureOverride;
-(void)setType:(unsigned long long)arg1 ;
-(char)isContinuous;
-(void)setContinuous:(char)arg1 ;
-(void)_setAcceptsFirstResponder:(char)arg1 ;
-(void)_setHorizontallyCentered:(char)arg1 ;
-(void)_setVerticallyCentered:(char)arg1 ;
-(long long)entryType;
-(void)setEntryType:(long long)arg1 ;
-(char)isEntryAcceptable:(id)arg1 ;
-(void)setFloatingPointFormat:(char)arg1 left:(unsigned long long)arg2 right:(unsigned long long)arg3 ;
-(char)_performKeyEquivalent:(id)arg1 conditionally:(char)arg2 ;
-(void)_invalidateObjectValue;
-(char)hasValidObjectValue;
-(id)_attributedStringForEditing;
-(void)setMnemonicLocation:(unsigned long long)arg1 ;
-(unsigned long long)mnemonicLocation;
-(void)setAllowsEditingTextAttributes:(char)arg1 ;
-(char)importsGraphics;
-(void)setImportsGraphics:(char)arg1 ;
-(void)takeIntValueFrom:(id)arg1 ;
-(void)takeIntegerValueFrom:(id)arg1 ;
-(void)takeFloatValueFrom:(id)arg1 ;
-(void)takeDoubleValueFrom:(id)arg1 ;
-(void)takeStringValueFrom:(id)arg1 ;
-(void)takeObjectValueFrom:(id)arg1 ;
-(void)_invalidateFont;
-(unsigned long long)controlTint;
-(void)setTruncatesLastVisibleLine:(char)arg1 ;
-(void)setUsesSingleLineMode:(char)arg1 ;
-(char)_addTypeSelectAttributesForString:(id)arg1 ;
-(void)_setDrawingInRevealover:(char)arg1 ;
-(char)_validateEntryString:(id)arg1 uiHandled:(char*)arg2 ;
-(char)textView:(id)arg1 shouldChangeTextInRange:(NSRange)arg2 replacementString:(id)arg3 ;
-(void)textDidChange:(id)arg1 ;
-(void)calcDrawInfo:(CGRect)arg1 ;
-(id)setUpFieldEditorAttributes:(id)arg1 ;
-(NSRange)_characterRangeForPoint:(CGPoint)arg1 inRect:(CGRect)arg2 ofView:(id)arg3 ;
-(char)_needsHighlightedTextHint;
-(void)_drawFocusRingWithFrame:(CGRect)arg1 ;
-(long long)mouseDownFlags;
-(char)continueTrackingGesture:(id)arg1 inView:(id)arg2 ;
-(long long)_currentEventStage;
-(char)keyDown:(id)arg1 inRect:(CGRect)arg2 ofView:(id)arg3 ;
-(char)keyUp:(id)arg1 inRect:(CGRect)arg2 ofView:(id)arg3 ;
-(CGRect)_focusRingFrameForFrame:(CGRect)arg1 cellFrame:(CGRect)arg2 ;
-(void)editWithFrame:(CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5 ;
-(void)selectWithFrame:(CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6 ;
-(void)_validateEditing:(id)arg1 ;
-(id)fieldEditorForView:(id)arg1 ;
-(void)resetCursorRect:(CGRect)arg1 inView:(id)arg2 ;
-(id)menuForEvent:(id)arg1 inRect:(CGRect)arg2 ofView:(id)arg3 ;
-(void)setSendsActionOnEndEditing:(char)arg1 ;
-(char)sendsActionOnEndEditing;
-(char)wantsNotificationForMarkedText;
-(CGRect)opaqueRectForTitleBounds:(CGRect)arg1 ;
-(id)draggingImageComponentsWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(char)_layerDrawingSupportsLinearMaskOverlayForLayerBackedView:(id)arg1 ;
-(void)setAllowsAppearanceTextEffects:(char)arg1 ;
-(void)setTitleTextContainer:(id)arg1 ;
-(void)setFieldEditorTextContainer:(id)arg1 ;
-(id)_accessibilityLabel;
-(CGRect)accessibilityFrameInParentSpace;
-(void)setAccessibilityFrameInParentSpace:(CGRect)arg1 ;
-(id)_mouseTrackingInfo;
-(void)_setMouseTrackingInfo:(id)arg1 ;
-(void)_viewDidChangeGeometryInWindow:(id)arg1 ;
-(void)_setMouseTrackingInRect:(CGRect)arg1 ofView:(id)arg2 withConfiguration:(id)arg3 ;
-(void)_setPlaceholderString:(id)arg1 ;
-(id)_placeholderString;
-(void)_setPlaceholderAttributedString:(id)arg1 ;
-(id)_defaultPlaceholderString;
-(unsigned long long)_textHitTest:(CGPoint)arg1 withFrame:(CGRect)arg2 inView:(id)arg3 ;
-(char)_externalContextSeemsLikelyToBeRaised;
-(long long)_initialBackgroundStyleCompatibilityGuess;
-(void)_accessibilityShowMenu:(id)arg1 ;
-(id)accessibilityCurrentEditor;
-(CGPoint)_accessibilityWindowPointForShowMenuWithProxy:(id)arg1 ;
-(CGPoint)accessibilityWindowPointForShowMenu;
-(void)_accessibilityShowMenu:(id)arg1 withProxy:(id)arg2 ;
-(void)accessibilitySetValueAttribute:(id)arg1 ;
-(id)accessibilitySelectedTextAttribute;
-(char)accessibilityIsSelectedTextAttributeSettable;
-(void)accessibilitySetSelectedTextAttribute:(id)arg1 ;
-(id)accessibilitySelectedTextRangeAttribute;
-(char)accessibilityIsSelectedTextRangeAttributeSettable;
-(void)accessibilitySetSelectedTextRangeAttribute:(id)arg1 ;
-(id)accessibilityNumberOfCharactersAttribute;
-(char)accessibilityIsNumberOfCharactersAttributeSettable;
-(id)accessibilityVisibleCharacterRangeAttribute;
-(char)accessibilityIsVisibleCharacterRangeAttributeSettable;
-(void)accessibilitySetVisibleCharacterRangeAttribute:(id)arg1 ;
-(id)accessibilityInsertionPointLineNumberAttribute;
-(char)accessibilityIsInsertionPointLineNumberAttributeSettable;
-(id)accessibilityLineForIndexAttributeForParameter:(id)arg1 ;
-(id)accessibilityRangeForLineAttributeForParameter:(id)arg1 ;
-(id)accessibilityStringForRangeAttributeForParameter:(id)arg1 ;
-(id)accessibilityRangeForPositionAttributeForParameter:(id)arg1 ;
-(id)accessibilityRangeForIndexAttributeForParameter:(id)arg1 ;
-(id)accessibilityBoundsForRangeAttributeForParameter:(id)arg1 ;
-(id)accessibilityRTFForRangeAttributeForParameter:(id)arg1 ;
-(id)accessibilityAttributedStringForRangeAttributeForParameter:(id)arg1 ;
-(id)accessibilityStyleRangeForIndexAttributeForParameter:(id)arg1 ;
-(char)_shouldHighlightCellWhenSelected;
@end

