/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 2:27:28 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <AppKit/NSActionCell.h>

@class NSString, NSImage, NSFont;

@interface NSButtonCell : NSActionCell {

	NSString* _altContents;
	id _sound;
	NSString* _keyEquivalent;
	struct {
		unsigned bezelStyle : 3;
		unsigned showsBorderOnlyWhileMouseInside : 1;
		unsigned mouseInside : 1;
		unsigned bezelStyle2 : 1;
		unsigned imageScaling : 2;
		unsigned keyEquivalentModifierMask : 24;
	}  _bcFlags2;
	unsigned short _periodicDelay;
	unsigned short _periodicInterval;
	struct {
		unsigned __reserved : 6;
		unsigned allowTitleTightening : 1;
		unsigned isDrawingFocus : 1;
		unsigned useButtonImageSource : 1;
		unsigned hasTitleTextField : 1;
		unsigned isDrawingDisclosure : 1;
		unsigned suppressAXValueChangeNote : 1;
		unsigned doesNotDimImage : 1;
		unsigned inset : 2;
		unsigned transparent : 1;
		unsigned inIntermediateDisclosure : 1;
		unsigned hasKeyEquivalentInsteadOfImage : 1;
		unsigned imageSizeDiff : 1;
		unsigned imageAndText : 1;
		unsigned bottomOrLeft : 1;
		unsigned horizontal : 1;
		unsigned imageOverlaps : 1;
		unsigned bordered : 1;
		unsigned drawing : 1;
		unsigned lightByGray : 1;
		unsigned lightByBackground : 1;
		unsigned lightByContents : 1;
		unsigned changeGray : 1;
		unsigned changeBackground : 1;
		unsigned changeContents : 1;
		unsigned pushIn : 1;
	}  _bcFlags;
	NSImage* _normalImage;
	id _alternateImageOrKeyEquivalentFont;

}

@property (copy) NSString * title; 
@property (copy) NSString * alternateTitle; 
@property (retain) NSImage * alternateImage; 
@property (assign) unsigned long long imagePosition; 
@property (assign) unsigned long long imageScaling; 
@property (assign) unsigned long long highlightsBy; 
@property (assign) unsigned long long showsStateBy; 
@property (getter=isOpaque,readonly) char opaque; 
@property (getter=isTransparent) char transparent; 
@property (copy) NSString * keyEquivalent; 
@property (assign) unsigned long long keyEquivalentModifierMask; 
@property (retain) NSFont * keyEquivalentFont; 
+(void)initialize;
+(void)_finishHitTracking:(id)arg1 ;
+(CGSize)_keyEquivalentSizeWithFont:(id)arg1 ;
+(char)_requireMainThreadDefaultBezelCaching;
+(void)_setDefaultButtonCycleTime:(float)arg1 ;
+(double)_defaultButtonCycleTime;
+(double)_defaultButtonCycleValue;
+(void)_resetDefaultButtonCycleValue;
+(void)_startHitTracking:(id)arg1 ;
-(id)init;
-(void)dealloc;
-(int)intValue;
-(void)setBackgroundColor:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(CGRect)accessibilityFocusRingBoundsForBounds:(CGRect)arg1 ;
-(void)setState:(long long)arg1 ;
-(id)image;
-(void)setImage:(id)arg1 ;
-(void)setButtonType:(unsigned long long)arg1 ;
-(void)setImagePosition:(unsigned long long)arg1 ;
-(void)setImageScaling:(unsigned long long)arg1 ;
-(void)setBordered:(char)arg1 ;
-(void)setEnabled:(char)arg1 ;
-(void)setHighlightsBy:(unsigned long long)arg1 ;
-(void)setShowsStateBy:(unsigned long long)arg1 ;
-(id)accessibilityAttributeNames;
-(long long)integerValue;
-(id)accessibilityActionDescription:(id)arg1 ;
-(id)accessibilityRoleAttribute;
-(id)accessibilityActionNames;
-(void)accessibilityPerformAction:(id)arg1 ;
-(id)accessibilityDescriptionAttribute;
-(char)accessibilityIsDescriptionAttributeSettable;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setControlView:(id)arg1 ;
-(void)setFont:(id)arg1 ;
-(void)setTitle:(NSString *)arg1 ;
-(void)setStringValue:(id)arg1 ;
-(id)stringValue;
-(char)isBordered;
-(unsigned long long)bezelStyle;
-(void)setBezelStyle:(unsigned long long)arg1 ;
-(void)setKeyEquivalent:(NSString *)arg1 ;
-(void)setKeyEquivalentModifierMask:(unsigned long long)arg1 ;
-(NSString *)title;
-(void)performClick:(id)arg1 ;
-(CGSize)cellSizeForBounds:(CGRect)arg1 ;
-(id)_imageView;
-(float)floatValue;
-(double)doubleValue;
-(char)_wantsHeartBeat;
-(NSString *)keyEquivalent;
-(unsigned long long)keyEquivalentModifierMask;
-(id)accessibilityTitleAttribute;
-(char)accessibilityIsTitleAttributeSettable;
-(long long)compare:(id)arg1 ;
-(double)_leading;
-(id)initTextCell:(id)arg1 ;
-(void)setAlignment:(unsigned long long)arg1 ;
-(char)isTransparent;
-(void)_removeBackgroundView;
-(void)_removeTitleTextField;
-(id)_backgroundView;
-(id)_titleTextField;
-(void)_setBackgroundView:(id)arg1 ;
-(void)_setTitleTextField:(id)arg1 ;
-(void)drawWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(char)isOpaque;
-(void)setTransparent:(char)arg1 ;
-(void)setTitleWithMnemonic:(id)arg1 ;
-(char)_contentHuggingDefault_isUsuallyFixedWidth;
-(char)_contentHuggingDefault_isUsuallyFixedHeight;
-(id)backgroundColor;
-(unsigned long long)hitTestForEvent:(id)arg1 inRect:(CGRect)arg2 ofView:(id)arg3 ;
-(id)_backgroundColor;
-(char)acceptsFirstResponder;
-(void)highlight:(char)arg1 withFrame:(CGRect)arg2 inView:(id)arg3 ;
-(void)setHighlighted:(char)arg1 ;
-(id)objectValue;
-(void)setObjectValue:(id)arg1 ;
-(long long)interiorBackgroundStyle;
-(NSImage *)alternateImage;
-(CGRect)titleRectForBounds:(CGRect)arg1 ;
-(void)drawInteriorWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)setBackgroundStyle:(long long)arg1 ;
-(CGRect)imageRectForBounds:(CGRect)arg1 ;
-(void)setAlternateImage:(NSImage *)arg1 ;
-(NSString *)alternateTitle;
-(void)setAlternateTitle:(NSString *)arg1 ;
-(id)attributedTitle;
-(void)setAttributedTitle:(id)arg1 ;
-(id)attributedAlternateTitle;
-(void)setAttributedAlternateTitle:(id)arg1 ;
-(unsigned long long)imagePosition;
-(unsigned long long)imageScaling;
-(void)getPeriodicDelay:(float*)arg1 interval:(float*)arg2 ;
-(void)setPeriodicDelay:(float)arg1 interval:(float)arg2 ;
-(CGRect)_focusRingBoundsWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(char)_canBecomeDefaultButtonCell;
-(void)_controlViewDidMoveToWindow:(id)arg1 ;
-(void)updateTrackingAreaWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(id)mnemonic;
-(char)_acceptsFirstMouseForEvent:(id)arg1 inView:(id)arg2 ;
-(unsigned long long)_buttonType;
-(void)setSound:(id)arg1 ;
-(id)sound;
-(CGSize)_autolayout_cellSize;
-(void)_setSound:(id)arg1 ;
-(id)_sound;
-(void)setShowsBorderOnlyWhileMouseInside:(char)arg1 ;
-(char)showsBorderOnlyWhileMouseInside;
-(char)_hasDefaultButtonIndicator;
-(void)_setDefaultButtonIndicatorNeedsDisplay;
-(char)_updateStyledTextOptions:(id)arg1 withContentAppearanceInView:(id)arg2 ;
-(char)_shouldUseStyledTextInView:(id)arg1 ;
-(char)_allowsVibrancyForTitleInView:(id)arg1 ;
-(void)_setIsDrawingDisclosure:(char)arg1 ;
-(void)_convertToText:(id)arg1 ;
-(void)setKeyEquivalentFont:(NSFont *)arg1 ;
-(void)_commonInit;
-(id)initImageCell:(id)arg1 ;
-(void)_setAltContents:(id)arg1 ;
-(NSFont *)keyEquivalentFont;
-(id)_buttonImageSource;
-(void)_setButtonImageSource:(id)arg1 ;
-(void)_setBackgroundColor:(id)arg1 ;
-(id)_imageSynthesizedForCheckOrRadio:(char*)arg1 ;
-(id)_alternateImageSynthesizedForCheckOrRadio:(char*)arg1 ;
-(void)_disposeAnimator;
-(char)_hasButtonCellAux;
-(id)_buttonCellAux;
-(id)_buttonCellAuxAllocatingIfNeeded:(char)arg1 ;
-(void)_setButtonCellAux:(id)arg1 ;
-(id)_embossedEnabledForgroundColor;
-(char)_wantsBoldFont;
-(void)_updateImageViewImageInView:(id)arg1 ;
-(void)_updateSubviewsWhenLayerBackedInView:(id)arg1 includeTitleTextField:(char)arg2 ;
-(char)_preferInactiveContentInView:(id)arg1 ;
-(char)_preferInactiveBezelArtInView:(id)arg1 ;
-(char)_isInlineBezelStyle;
-(char)_needRedrawOnWindowChangedKeyState;
-(void)_setAnimationsAllowed:(char)arg1 ;
-(char)_hasTitle;
-(char)_subclassOverridesDrawImage;
-(id)_obtainButtonAnimator;
-(char)_isDrawingDisclosure;
-(long long)_destinationDisclosureState;
-(long long)nextState;
-(void)_setNeedsStateUpdate:(id)arg1 ;
-(void)_updateAllOtherButtonsInGroupToNotBeChecked;
-(void)setDoubleValue:(double)arg1 ;
-(char)_shouldSetHighlightToFlag:(char)arg1 ;
-(char)_shouldShowFocus;
-(void)_updateMouseInside:(char)arg1 ;
-(void)_setButtonType:(unsigned long long)arg1 adjustingImage:(char)arg2 ;
-(void)_updateMouseTracking;
-(void)_clearMouseTracking;
-(long long)_initialBackgroundStyleCompatibilityGuessIgnoringExternalContext;
-(char)_shouldDrawBezel;
-(char)_isDefaultButton;
-(char)_preferOnArtForBezel;
-(unsigned long long)highlightsBy;
-(long long)_stateForDrawing;
-(unsigned long long)showsStateBy;
-(char)_preferAlternateContent;
-(char)_hasCustomFocusMask;
-(char)_hasImage;
-(CFStringRef)_coreUIWidgetName;
-(char)_shouldDrawDragged;
-(long long)_nextDisclosureState;
-(CFDictionaryRef)_coreUIBezelDrawOptionsWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(char)_subclassOverridesAnyDrawMethods;
-(char)_disabledForDrawing;
-(char)_preferAlternateContentForImage;
-(char)_preferSlightlyDarkerImageForOnBezel;
-(int)_effectiveBackgroundStyleInView:(id)arg1 ;
-(void)_preeffectBaseImage:(id*)arg1 state:(unsigned long long*)arg2 backgroundStyle:(int*)arg3 inView:(id)arg4 ;
-(CGRect)_centerTitle:(id)arg1 inRect:(CGRect)arg2 ;
-(CGRect)drawingRectForBounds:(CGRect)arg1 ;
-(CGRect)_insetRect:(CGRect)arg1 ;
-(CGRect)_imageRectWithRect:(CGRect*)arg1 ;
-(CGSize)_minCellSize;
-(CGRect)_alignedTitleRectWithRect:(CGRect)arg1 ;
-(unsigned long long)_preferredFocusLocationMask;
-(void)_drawCustomFocusMaskWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)drawBezelWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(double)_imageVerticalAdjustmentForBezel;
-(void)drawImage:(id)arg1 withFrame:(CGRect)arg2 inView:(id)arg3 ;
-(id)_currentTitle;
-(char)_wantsToUseFocusRingMask;
-(char)_canUseFocusRingMaskForText;
-(void)_legacyDrawFocusRingInCellFrame:(CGRect)arg1 inView:(id)arg2 ;
-(char)_templateImageShouldPunchHoleInBezel;
-(Class)_classForOverrideCheck;
-(CGRect)drawTitle:(id)arg1 withFrame:(CGRect)arg2 inView:(id)arg3 ;
-(char)_bezelStyleWantsUpdateLayerInView:(id)arg1 ;
-(id)_semanticContextKeyForView:(id)arg1 ;
-(id)_layerKeysForCachingWithFrame:(CGRect)arg1 inView:(id)arg2 drawingRect:(CGRect*)arg3 ;
-(id)_bezelContentsByDrawingWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(char)_needsToDoBezelDrawingForLayerInView:(id)arg1 ;
-(id)_bezelContentsFromCoreUIWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(id)_currentBezelContentsWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(char)_bezelStyleOnlyCenteredVertically;
-(char)_hasCenteredBezelBackground;
-(char)_backgroundIsSetOnLayer;
-(char)_shouldDrawTextWithDisabledAppearance;
-(id)_textDimColor;
-(void)_setLayerNeedsLayout;
-(void)_updateTitleTextFieldValue;
-(id)_currentTitleTextFieldAttributedString;
-(void)setAttributedStringValue:(id)arg1 ;
-(char)_titleTextIsScrollable;
-(void)_updateCoreUIOptions:(id)arg1 withContentAppearanceInView:(id)arg2 ;
-(void)_setImageView:(id)arg1 ;
-(char)_needsOutline;
-(CGRect)_commonBaseRectWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)_logImageState:(unsigned long long)arg1 andBGStyle:(int)arg2 forLabel:(id)arg3 ;
-(char)_maybeBeginStateChangeAnimationWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(CGRect)_imageViewFrameWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)_updateImageViewWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)_removeImageView;
-(void)_updateTitleTextFieldWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)_updateBackgroundViewWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(double)_roundCoordinate:(double)arg1 upToDevicePixelForView:(id)arg2 ;
-(void)_fillBackground:(CGRect)arg1 withAlternateColor:(char)arg2 ;
-(void)_configureAndDrawImageWithRect:(CGRect)arg1 cellFrame:(CGRect)arg2 controlView:(id)arg3 ;
-(void)_configureAndDrawTitleWithRect:(CGRect)arg1 cellFrame:(CGRect)arg2 controlView:(id)arg3 ;
-(id)_overrideImageRecolorColor;
-(char)_hasCustomForegroundColor;
-(char)_funkyOptOutLogicThatShouldGoAwayForView:(id)arg1 semanticContext:(int)arg2 ;
-(char)_shouldUseStyledTextInView:(id)arg1 forAttributedTitle:(id)arg2 ;
-(void)_appendBezierPath:(id)arg1 withBottomRoundRect:(CGRect)arg2 cornerRadius:(double)arg3 ;
-(char)_shouldTweakRoundingBehaviorWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)_drawPopoverBezelStyleWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)_setNextDisclosureState:(long long)arg1 ;
-(void)_setDestinationDisclosureState:(long long)arg1 ;
-(void)mouseEntered:(id)arg1 ;
-(void)mouseExited:(id)arg1 ;
-(void)_setMouseTrackingInRect:(CGRect)arg1 ofView:(id)arg2 ;
-(CGRect)_trackingBoundsWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(char)_isAnimatingDefaultCell;
-(id)_startSound;
-(char)trackMouse:(id)arg1 inRect:(CGRect)arg2 ofView:(id)arg3 untilMouseUp:(char)arg4 ;
-(char)startTrackingAt:(CGPoint)arg1 inView:(id)arg2 ;
-(char)continueTracking:(CGPoint)arg1 at:(CGPoint)arg2 inView:(id)arg3 ;
-(void)_doUserDisclosureExpandOrCollapseInRect:(CGRect)arg1 ;
-(char)_shouldUpdateLayersInControlView:(id)arg1 ;
-(char)_useHitTestInTrackMouse;
-(id)_altContents;
-(char)imageDimsWhenDisabled;
-(void)setImageDimsWhenDisabled:(char)arg1 ;
-(void)setKeyEquivalentFont:(id)arg1 size:(double)arg2 ;
-(char)_hasRolloverContentArt;
-(void)_stateAnimationDone;
-(id)attributedStringValue;
-(void)setIntValue:(int)arg1 ;
-(void)setIntegerValue:(long long)arg1 ;
-(void)setFloatValue:(float)arg1 ;
-(char)_highlightsWithHighlightRect;
-(void)_windowChangedKeyStateInView:(id)arg1 ;
-(long long)cellAttribute:(unsigned long long)arg1 ;
-(void)setCellAttribute:(unsigned long long)arg1 to:(long long)arg2 ;
-(char)_allowsVibrancyForControlView:(id)arg1 ;
-(int)_vibrancyBlendModeForControlView:(id)arg1 ;
-(id)_vibrancyFilterForControlView:(id)arg1 ;
-(unsigned long long)_interiorContentAppearanceInView:(id)arg1 ;
-(unsigned long long)_interiorContentValueStateInView:(id)arg1 ;
-(id)_backgroundColorForFontSmoothing;
-(void)drawFocusRingMaskWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(CGRect)focusRingMaskBoundsForFrame:(CGRect)arg1 inView:(id)arg2 ;
-(char)wantsUpdateLayerInView:(id)arg1 ;
-(void)updateLayerWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)layoutLayerWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)stopTracking:(CGPoint)arg1 at:(CGPoint)arg2 inView:(id)arg3 mouseIsUp:(char)arg4 ;
-(id)_attributedStringForDrawing;
-(unsigned long long)gradientType;
-(void)setGradientType:(unsigned long long)arg1 ;
-(void)setAlternateMnemonicLocation:(unsigned long long)arg1 ;
-(unsigned long long)alternateMnemonicLocation;
-(id)alternateMnemonic;
-(void)setAlternateTitleWithMnemonic:(id)arg1 ;
-(char)_alwaysShowBezelForCurrentBezelStyleAndState;
-(CGSize)_unconstrainedImageSize;
-(CGSize)_titleSizeWithSize:(CGSize)arg1 ;
-(char)canSmoothFontsInFrame:(CGRect)arg1 forLayerBackedView:(id)arg2 ;
-(id)_textHighlightColor;
-(char)_stateAnimationRunning;
-(void)_setState:(long long)arg1 animated:(char)arg2 ;
-(void)_setHighlighted:(char)arg1 animated:(char)arg2 ;
-(void)_renderCurrentAnimationFrameInContext:(CGContextRef)arg1 atLocation:(CGPoint)arg2 ;
-(char)_appRequiresOldHeartbeatBehavior;
-(void)heartBeat:(SCD_Struct_NS20*)arg1 ;
-(id)_stringDrawingContextForStyledTextOptions:(id)arg1 replacementColor:(id*)arg2 ;
-(id)_buttonCellAccessibilityRoleAttribute;
-(char)_accessibilityIncludeDescriptionAttribute;
-(id)accessibilityValueAttribute;
-(char)accessibilityIsValueAttributeSettable;
-(char)_shouldHighlightCellWhenSelected;
@end

