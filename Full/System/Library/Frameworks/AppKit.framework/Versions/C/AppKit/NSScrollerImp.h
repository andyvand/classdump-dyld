/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:32:20 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol NSScrollerImpDelegate;
#import <AppKit/AppKit-Structs.h>
@class NSScroller, NSTrackingArea, _NSScrollerGaussianBlur, CALayer, CAFilter;

@interface NSScrollerImp : NSObject {

	NSScroller* scroller;
	double doubleValue;
	double knobProportion;
	double knobLength;
	CGSize boundsSize;
	id<NSScrollerImpDelegate> delegate;
	id target;
	SEL action;
	double _uiStateTransitionProgress;
	double _expansionTransitionProgress;
	double trackAlpha;
	double knobAlpha;
	double rangeIndicatorAlpha;
	NSTrackingArea* contentViewTrackingArea;
	char* outstandingRolloverAnimationCancelledPtr;
	_NSScrollerGaussianBlur* blur;
	struct {
		unsigned isHoriz : 1;
		unsigned arrowsLoc : 2;
		unsigned partsUsable : 2;
		unsigned fine : 1;
		unsigned needsEnableFlush : 1;
		unsigned thumbing : 1;
		unsigned slotDrawn : 1;
		unsigned knobDrawn : 1;
		unsigned lit : 1;
		unsigned knobLit : 1;
		unsigned reserved : 1;
		unsigned controlTint : 3;
		unsigned repeatCount : 16;
	}  sFlags;
	struct {
		unsigned hitPart : 4;
		unsigned controlSize : 2;
		unsigned inMaxEnd : 1;
		unsigned setFloatValueOverridden : 1;
		unsigned setFloatValueKnobProportionOverridden : 1;
		unsigned style : 1;
		unsigned overlayScrollerState : 2;
		unsigned enabled : 1;
		unsigned avoidingOtherScrollerThumb : 1;
		unsigned tracking : 1;
		unsigned rangeIndicatorsShown : 1;
		unsigned knobStyle : 2;
		unsigned shouldDrawRolloverState : 1;
		unsigned isExpanded : 1;
		unsigned rectForPartUsesExpandedParts : 1;
		unsigned rectForPartUsesPresentationValue : 1;
		unsigned usePresentationValue : 1;
		unsigned reserved : 10;
	}  _sFlags2;
	CALayer* layer;
	CALayer* trackLayer;
	CALayer* knobLayer;
	CAFilter* _blurFilter;
	double presentationValue;

}

@property (retain) CALayer * layer; 
@property (retain) CALayer * trackLayer; 
@property (retain) CALayer * knobLayer; 
@property (readonly) unsigned long long controlSize; 
@property (readonly) long long scrollerStyle; 
@property (assign) long long knobStyle; 
@property (getter=isHorizontal) char horizontal; 
@property (assign) CGSize boundsSize; 
@property (getter=isEnabled) char enabled; 
@property (assign) char avoidingOtherScrollerThumb; 
@property (assign) double doubleValue; 
@property (assign) double presentationValue; 
@property (getter=shouldUsePresentationValue) char usePresentationValue; 
@property (assign) double knobProportion; 
@property (readonly) double knobLength; 
@property (assign) double uiStateTransitionProgress;                                  //@synthesize uiStateTransitionProgress=_uiStateTransitionProgress - In the implementation block
@property (assign) double expansionTransitionProgress; 
@property (assign) double trackAlpha; 
@property (assign) double knobAlpha; 
@property (assign) double rangeIndicatorAlpha; 
@property (assign) char shouldDrawRolloverState; 
@property (getter=isExpanded) char expanded; 
@property (assign) NSScroller * scroller; 
@property (assign) id<NSScrollerImpDelegate> delegate; 
@property (assign) id target; 
@property (assign) SEL action; 
@property (readonly) double trackBoxWidth; 
@property (readonly) double trackWidth; 
@property (readonly) double trackSideInset; 
@property (readonly) double trackEndInset; 
@property (readonly) double knobEndInset; 
@property (readonly) double knobMinLength; 
@property (readonly) double knobOverlapEndInset; 
@property (readonly) double trackOverlapEndInset; 
+(double)scrollerWidthForControlSize:(unsigned long long)arg1 scrollerStyle:(long long)arg2 ;
+(double)scrollerWidth;
+(id)scrollerImpWithStyle:(long long)arg1 controlSize:(unsigned long long)arg2 horizontal:(char)arg3 replacingScrollerImp:(id)arg4 ;
+(Class)scrollerImpClassForStyle:(long long)arg1 controlSize:(unsigned long long)arg2 ;
-(id)init;
-(void)setDelegate:(id<NSScrollerImpDelegate>)arg1 ;
-(void)dealloc;
-(void)drawLayer:(id)arg1 inContext:(CGContextRef)arg2 ;
-(CALayer *)layer;
-(void)setLayer:(CALayer *)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)setTarget:(id)arg1 ;
-(void)setAction:(SEL)arg1 ;
-(void)setEnabled:(char)arg1 ;
-(char)isEnabled;
-(id)target;
-(SEL)action;
-(void)setNeedsDisplay:(char)arg1 ;
-(id<NSScrollerImpDelegate>)delegate;
-(double)doubleValue;
-(void)setNeedsDisplayInRect:(CGRect)arg1 ;
-(unsigned long long)controlSize;
-(void)checkSpaceForParts;
-(long long)scrollerStyle;
-(CGRect)rectForPart:(unsigned long long)arg1 ;
-(void)setDoubleValue:(double)arg1 ;
-(void)setBoundsSize:(CGSize)arg1 ;
-(char)isTracking;
-(void)updateTrackingAreas;
-(char)isExpanded;
-(void)setExpanded:(char)arg1 ;
-(void)setScroller:(NSScroller *)arg1 ;
-(void)setKnobStyle:(long long)arg1 ;
-(unsigned long long)usableParts;
-(double)knobProportion;
-(char)allowsVibrancyForAppearance:(id)arg1 ;
-(id)_vibrancyFilterForAppearance:(id)arg1 ;
-(void)drawKnobWithAlpha:(double)arg1 ;
-(void)drawKnobSlotInRect:(CGRect)arg1 highlight:(char)arg2 ;
-(void)drawKnob;
-(void)_compositeScrollerPart:(unsigned long long)arg1 inRect:(CGRect)arg2 withAlpha:(double)arg3 drawHandler:(/*^block*/id)arg4 ;
-(double)knobEndInset;
-(double)knobLength;
-(char)hitTestForLocalPoint:(CGPoint)arg1 ;
-(void)setKnobProportion:(double)arg1 ;
-(long long)knobStyle;
-(void)setOverlayScrollerState:(unsigned long long)arg1 forceImmediately:(char)arg2 ;
-(void)setTracking:(char)arg1 ;
-(double)knobAlpha;
-(void)setKnobAlpha:(double)arg1 ;
-(double)trackAlpha;
-(void)setTrackAlpha:(double)arg1 ;
-(double)uiStateTransitionProgress;
-(void)setUiStateTransitionProgress:(double)arg1 ;
-(double)expansionTransitionProgress;
-(void)setExpansionTransitionProgress:(double)arg1 ;
-(char)avoidingOtherScrollerThumb;
-(void)setAvoidingOtherScrollerThumb:(char)arg1 ;
-(void)setHorizontal:(char)arg1 ;
-(char)layer:(id)arg1 shouldInheritContentsScale:(double)arg2 fromWindow:(id)arg3 ;
-(unsigned long long)overlayScrollerState;
-(void)setPresentationValue:(double)arg1 ;
-(void)setUsePresentationValue:(char)arg1 ;
-(CGSize)boundsSize;
-(void)_doWork:(/*^block*/id)arg1 ;
-(char)isHorizontal;
-(CGRect)_threadsafeRectForPart:(unsigned long long)arg1 preBlock:(/*^block*/id)arg2 postBlock:(/*^block*/id)arg3 ;
-(void)drawKnobSlotInRect:(CGRect)arg1 highlight:(char)arg2 alpha:(double)arg3 ;
-(CALayer *)knobLayer;
-(CALayer *)trackLayer;
-(id)_makeScrollerPartLayer;
-(void)_setupCommonLayerProperties:(id)arg1 ;
-(void)setTrackLayer:(CALayer *)arg1 ;
-(void)setKnobLayer:(CALayer *)arg1 ;
-(void)_updateLayerGeometry;
-(void)_updateKnobPresentation;
-(void)removeTrackingAreas;
-(void)setShouldDrawRolloverState:(char)arg1 ;
-(void)_animateCollapse;
-(double)trackWidth;
-(double)trackSideInset;
-(double)_expandedTrackWidth;
-(double)knobMinLength;
-(double)trackEndInset;
-(CGRect)_unsafeRectForPart:(unsigned long long)arg1 ;
-(double)_expandedTrackBoxWidth;
-(double)_expandedKnobMinLength;
-(double)trackBoxWidth;
-(double)trackOverlapEndInset;
-(double)knobOverlapEndInset;
-(double)knobInset;
-(double)presentationValue;
-(CFDictionaryRef)copyCoreUIOptions;
-(CFDictionaryRef)copyCoreUIKnobOptions;
-(void)loadImages;
-(void)_animateExpansion;
-(char)shouldDrawRolloverState;
-(CGRect)_rolloverTrackingRect;
-(void)_animateToRolloverState;
-(void)_installDelayedRolloverAnimation;
-(void)_animateOutOfRolloverState;
-(id)_makeMaskLayer;
-(char)shouldUsePresentationValue;
-(CFDictionaryRef)copyCoreUITrackOptions;
-(void)mouseEnteredScroller;
-(void)mouseExitedScroller;
-(double)rangeIndicatorAlpha;
-(void)setRangeIndicatorAlpha:(double)arg1 ;
-(NSScroller *)scroller;
@end

