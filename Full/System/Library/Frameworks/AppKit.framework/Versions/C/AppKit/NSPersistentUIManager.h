/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 12:15:51 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <AppKit/AppKit-Structs.h>
@class NSMutableArray, NSMapTable, NSMutableDictionary, NSURL, NSString, NSPersistentUIRestorer, NSPersistentUICrashHandler, NSPersistentUISecureURLHerder, NSPersistentUIWindowSnapshotter, NSPersistentUIPreservedStateDirectory;

@interface NSPersistentUIManager : NSObject {

	int spinlock;
	/*^block*/id flushTimer;
	double scheduledFlushDeadline;
	double scheduledFlushDate;
	unsigned disableRestorableStateWritingCounter;
	dispatch_queue_sRef workQueue;
	NSMutableArray* sortedWindowInfos;
	NSMapTable* objectToPendingKeyPaths;
	NSMutableArray* pendingRecords;
	NSMutableDictionary* additionalBuckets;
	NSURL* persistentStateDirectoryURL;
	NSString* bundleID;
	NSPersistentUIRestorer* stateRestorer;
	NSPersistentUICrashHandler* crashHandler;
	NSPersistentUISecureURLHerder* urlHerder;
	NSPersistentUIWindowSnapshotter* windowSnapshotter;
	dispatch_queue_sRef IOQueue;
	int stateFileFD;
	int publicPlistFD;
	unsigned long long currentFileSize;
	unsigned long long fileSizeAfterLastRewrite;
	unsigned publicPlistChecksum;
	char stateDirectoryHasBeenRefreshed;
	char stateFileHasBeenCreated;
	char elideAllFileWrites;
	char isClosedToChanges;
	NSPersistentUIPreservedStateDirectory* rawStateDirectoryAtLaunch;
	char rawHadValidStateDirectoryAtLaunch;
	char treatEverythingAsDirty;
	char suppressedCGWindowOrderingSuccessfully;
	int suppressedCGWindowOrderingStatus;
	unsigned contiguousInactiveFlushCount;

}

@property (retain) NSPersistentUIPreservedStateDirectory * rawStateDirectoryAtLaunch; 
@property (assign) char rawHadValidStateDirectoryAtLaunch; 
+(id)sharedManager;
+(void)_permitWindowOrderingUntilStateRestoration;
+(void)_resuppressWindowOrderingNowThatStateRestorationIsOccurring;
+(char)_suppressCGWindowOrdering;
+(/*^block*/id)_copyCGWindowOrderingReplayer;
+(id)unarchiver:(id)arg1 didDecodeObject:(id)arg2 ;
+(id)_debugUnrestoredWindows;
+(id)copyPersistentCarbonWindowDictionariesForBundleID:(id)arg1 ;
+(id)copyDebugDumpStateDirectory:(id)arg1 ;
+(id)_NSPersistentUIAcquireTalagentWindowsOnConnections:(unsigned)arg1 :(xpc_connection_sRef)arg2 ;
+(void)_NSPersistentUIDestroyTalagentWindows:(unsigned)arg1 :(id)arg2 ;
-(id)init;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)flushPersistentStateAndClose:(char)arg1 waitingUntilDone:(char)arg2 ;
-(void)clearCrashCountFileIfNecessary;
-(void)discardAllPersistentStateAndClose;
-(void)fullyDirtyAndReopenPersistentState;
-(char)hasPersistentStateToRestore;
-(char)promptToIgnorePersistentState;
-(char)restoreAllPersistentStateRegisteringAsReadyWhenDone:(char)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)ignoreAnyPreexistingPersistentState;
-(void)changeWindow:(unsigned)arg1 toStatus:(int)arg2 withConditionalGeneration:(unsigned)arg3 ;
-(char)hasFinishedRestoringWindows;
-(unsigned)acquireWindowIDForWindow:(id)arg1 ;
-(void)delayCGWindowOrderingIfNecessary;
-(char)performingWindowOrdering;
-(id)persistentStateDirectoryURL;
-(void)setRawHadValidStateDirectoryAtLaunch:(char)arg1 ;
-(void)setRawStateDirectoryAtLaunch:(NSPersistentUIPreservedStateDirectory *)arg1 ;
-(void)refreshEncryptionKey:(char)arg1 ;
-(char)refreshStateDirectoryIfNecessary;
-(id)windowInfoForWindowID:(unsigned)arg1 createIfNecessary:(char)arg2 ;
-(void)writeRecords:(id)arg1 withWindowInfos:(id)arg2 flushingStaleData:(char)arg3 ;
-(void)writePublicPlistWithOpenWindowIDs:(id)arg1 optionallyWaitingUntilDone:(char)arg2 ;
-(void)cancelFlushTimer;
-(void)acquireDirtyState;
-(void)tryCreatingPersistentStateDirectoryForURL:(id)arg1 ;
-(void)flushAllChangesOptionallyWaitingUntilDone:(char)arg1 updatingSnapshots:(char)arg2 ;
-(char)rawHadValidStateDirectoryAtLaunch;
-(NSPersistentUIPreservedStateDirectory *)rawStateDirectoryAtLaunch;
-(unsigned)modifyCrashBlameCounterBy:(int)arg1 ;
-(long long)crashBlameCounter;
-(void)addPendingKeyPath:(id)arg1 forObject:(id)arg2 ;
-(id)stateDirectoryAtLaunch;
-(void)performDockCommands:(id)arg1 withOldWindowIDToNewWindowID:(id)arg2 ;
-(void)resumeNormalWindowOrderingAndDrawing;
-(char)shouldUseOneWindowHeuristic;
-(id)persistentStateFileURL;
-(void)elideAllFileWrites;
-(char)_trySystemCallDescribedBy:(const char*)arg1 executor:(/*^block*/id)arg2 ;
-(unsigned long long)writeRecords:(id)arg1 toFile:(int)arg2 ;
-(int)openPersistentStateFile;
-(void)rewriteFile:(int)arg1 withWindowInfos:(id)arg2 withImpendingRecords:(id)arg3 ;
-(void)writePublicPlistData:(id)arg1 ;
-(void)addObjectForKeyedState:(id)arg1 type:(int)arg2 underKey:(id)arg3 forIdentifier:(id)arg4 inWindow:(unsigned)arg5 inBackground:(char)arg6 ;
-(void)disableRestorableStateWriting;
-(void)enableRestorableStateWriting;
-(OpaqueLSSharedFileListRefRef)getLSPersistentFileList;
-(void)applicationDidDeactivate:(id)arg1 ;
-(void)setPublicProperties:(id)arg1 forWindowID:(unsigned)arg2 ;
-(void)changePersistentKeyPathObservationForPaths:(id)arg1 inObject:(id)arg2 to:(char)arg3 ;
-(char)shouldRestoreStateOnLaunch;
-(unsigned)createPersistentWindow;
-(void)setObject:(id)arg1 forKey:(id)arg2 forPersistentWindowID:(unsigned)arg3 ;
-(void)deletePersistentWindow:(unsigned)arg1 ;
-(id)copyPersistentCarbonWindowDictionariesAtTimeOfAppLaunch;
-(void)beginAcquiringExternallyCreatedWindows;
-(id)copyAcquiredExternallyCreatedWindows;
-(void)destroyExternallyCreatedWindows:(id)arg1 ;
@end

