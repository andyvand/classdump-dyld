/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:32:11 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <AppKit/NSView.h>

@class NSControlAuxiliary, NSString, NSAttributedString;

@interface NSControl : NSView {

	NSControlAuxiliary* _aux;
	id _cell;
	struct {
		unsigned enabled : 1;
		unsigned ignoreMultiClick : 1;
		unsigned calcSize : 1;
		unsigned drawingAncestor : 1;
		unsigned ibReserved : 1;
		unsigned updateCellFocus : 1;
		unsigned allowsLogicalLayoutDirection : 1;
		unsigned asmlwidth : 1;
		unsigned hsmlwidth : 1;
		unsigned dontValidate : 1;
		unsigned reserved : 22;
	}  _conFlags;

}

@property (__weak) id target; 
@property (assign) SEL action; 
@property (assign) long long tag; 
@property (assign) char ignoresMultiClick; 
@property (getter=isContinuous) char continuous; 
@property (getter=isEnabled) char enabled; 
@property (assign) char refusesFirstResponder; 
@property (getter=isHighlighted) char highlighted; 
@property (assign) unsigned long long controlSize; 
@property (retain) id formatter; 
@property (copy) NSString * stringValue; 
@property (copy) NSAttributedString * attributedStringValue; 
@property (copy) id objectValue; 
@property (assign) int intValue; 
@property (assign) long long integerValue; 
@property (assign) float floatValue; 
@property (assign) double doubleValue; 
+(char)_controlTargetsAreWeak;
+(void)initialize;
+(Class)cellClass;
+(void)setCellClass:(Class)arg1 ;
+(char)accessibilityIsSingleCelled;
+(unsigned long long)defaultFocusRingType;
-(char)hasFocus;
-(id)validatedEmailAddressStringValue;
-(SCD_Struct_NS26)CMTimeValue;
-(void)setCMTimeValue:(SCD_Struct_NS26)arg1 ;
-(void)takeCMTimeValueFrom:(id)arg1 ;
-(SCD_Struct_NS27)QTTimeValue;
-(void)setQTTimeValue:(SCD_Struct_NS27)arg1 ;
-(void)takeQTTimeValueFrom:(id)arg1 ;
-(void)QTHUD_updateCellInside:(id)arg1 forAction:(void*)arg2 ;
-(CGRect)QTHUD_frameForCell:(id)arg1 ;
-(void)QTHUD_updateCell:(id)arg1 forAction:(void*)arg2 ;
-(void)sizeToFitAndAdjustWindowHeight;
-(void)dealloc;
-(void)setNeedsDisplay;
-(int)intValue;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)accessibilityFocusedUIElement;
-(id)accessibilityHitTest:(CGPoint)arg1 ;
-(char)accessibilityIsIgnored;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)setTarget:(id)arg1 ;
-(void)setAction:(SEL)arg1 ;
-(id)cell;
-(void)setEnabled:(char)arg1 ;
-(void)setTag:(long long)arg1 ;
-(void)setRefusesFirstResponder:(char)arg1 ;
-(void)setFocusRingType:(unsigned long long)arg1 ;
-(long long)tag;
-(CGSize)intrinsicContentSize;
-(void)drawRect:(CGRect)arg1 ;
-(id)accessibilityAttributeNames;
-(long long)integerValue;
-(id)accessibilityHelpStringForChild:(id)arg1 ;
-(char)accessibilityIsChildFocusable:(id)arg1 ;
-(void)accessibilitySetFocus:(id)arg1 forChild:(id)arg2 ;
-(id)accessibilityPositionOfChild:(id)arg1 ;
-(id)accessibilitySizeOfChild:(id)arg1 ;
-(id)accessibilityRoleAttribute;
-(id)accessibilityEnabledAttribute;
-(char)accessibilityIsEnabledAttributeSettable;
-(long long)baseWritingDirection;
-(char)isEnabled;
-(id)accessibilityChildrenAttribute;
-(id)target;
-(SEL)action;
-(id)font;
-(void)setFont:(id)arg1 ;
-(void)setStringValue:(NSString *)arg1 ;
-(NSString *)stringValue;
-(void)layout;
-(void)performClick:(id)arg1 ;
-(void)setBaseWritingDirection:(long long)arg1 ;
-(long long)userInterfaceLayoutDirection;
-(void)updateLayer;
-(void)sizeToFit;
-(float)floatValue;
-(double)doubleValue;
-(char)_wantsHeartBeat;
-(void)rightMouseDown:(id)arg1 ;
-(char)shouldBeTreatedAsInkEvent:(id)arg1 ;
-(void)becomeKeyWindow;
-(void)resignKeyWindow;
-(void)setAlignment:(unsigned long long)arg1 ;
-(char)wantsUpdateLayer;
-(char)canSmoothFontsInLayer;
-(void)setFrameSize:(CGSize)arg1 ;
-(void)setCell:(id)arg1 ;
-(void)_didRemoveLayer;
-(unsigned long long)alignment;
-(char)isOpaque;
-(char)allowsVibrancy;
-(char)_contentHuggingDefault_isUsuallyFixedHeight;
-(char)abortEditing;
-(id)representedObject;
-(void)_windowChangedKeyState;
-(unsigned long long)controlSize;
-(void)setControlSize:(unsigned long long)arg1 ;
-(void)setRepresentedObject:(id)arg1 ;
-(id)selectedCell;
-(char)isHighlighted;
-(id)_stringSearchParametersForListingViews;
-(char)sendAction:(SEL)arg1 to:(id)arg2 ;
-(char)acceptsFirstResponder;
-(void)keyDown:(id)arg1 ;
-(char)resignFirstResponder;
-(void)selectCell:(id)arg1 ;
-(char)_shouldDelegateTargetActionForSelector:(SEL)arg1 ;
-(void)updateCell:(id)arg1 ;
-(void)updateCellInside:(id)arg1 ;
-(char)becomeFirstResponder;
-(char)needsPanelToBecomeKey;
-(char)refusesFirstResponder;
-(id)menuForEvent:(id)arg1 ;
-(void)resetCursorRects;
-(void)mouseDown:(id)arg1 ;
-(void)setHighlighted:(char)arg1 ;
-(id)objectValue;
-(void)setObjectValue:(id)arg1 ;
-(void)setLineBreakMode:(unsigned long long)arg1 ;
-(void)invalidateIntrinsicContentSizeForCell:(id)arg1 ;
-(void)drawWithExpansionFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)_setWindow:(id)arg1 ;
-(char)allowsLogicalLayoutDirection;
-(void)setUserInterfaceLayoutDirection:(long long)arg1 ;
-(void)_setMouseTrackingForCell:(id)arg1 ;
-(void)_clearMouseTrackingForCell:(id)arg1 ;
-(void)_updateCellImage:(id)arg1 ;
-(void)setDoubleValue:(double)arg1 ;
-(void)setAttributedStringValue:(NSAttributedString *)arg1 ;
-(unsigned long long)lineBreakMode;
-(void)drawCell:(id)arg1 ;
-(NSAttributedString *)attributedStringValue;
-(void)setIntValue:(int)arg1 ;
-(void)setIntegerValue:(long long)arg1 ;
-(void)setFloatValue:(float)arg1 ;
-(id)_backgroundColorForFontSmoothing;
-(void)heartBeat:(SCD_Struct_NS20*)arg1 ;
-(id)formatter;
-(void)setFormatter:(id)arg1 ;
-(id)currentEditor;
-(void)validateEditing;
-(unsigned long long)focusRingType;
-(char)usesSingleLineMode;
-(long long)sendActionOn:(long long)arg1 ;
-(void)endEditing:(id)arg1 ;
-(char)isContinuous;
-(void)setContinuous:(char)arg1 ;
-(void)setFloatingPointFormat:(char)arg1 left:(unsigned long long)arg2 right:(unsigned long long)arg3 ;
-(char)_performKeyEquivalent:(id)arg1 conditionally:(char)arg2 ;
-(void)takeIntValueFrom:(id)arg1 ;
-(void)takeIntegerValueFrom:(id)arg1 ;
-(void)takeFloatValueFrom:(id)arg1 ;
-(void)takeDoubleValueFrom:(id)arg1 ;
-(void)takeStringValueFrom:(id)arg1 ;
-(void)takeObjectValueFrom:(id)arg1 ;
-(void)setUsesSingleLineMode:(char)arg1 ;
-(long long)mouseDownFlags;
-(void)_validateEditing:(id)arg1 ;
-(char)mouseDownCanMoveWindow;
-(NSRange)textView:(id)arg1 willChangeSelectionFromCharacterRange:(NSRange)arg2 toCharacterRange:(NSRange)arg3 ;
-(void)textViewDidChangeSelection:(id)arg1 ;
-(void)_commonEarlyInit;
-(void)_commonControlInit;
-(void)_removeAllCellMouseTracking;
-(char)_setsMaxLayoutWidthAtFirstLayout;
-(void)_setHasSetMaxLayoutWidth:(char)arg1 ;
-(char)_shouldShowFirstResponderForCell:(id)arg1 ;
-(void)drawFocusRingMask;
-(id)_findCurrentEditor;
-(char)_shouldTrackWithNonEditableCell;
-(void)keyUp:(id)arg1 ;
-(void)updateTrackingAreas;
-(char)allowsExpansionToolTips;
-(void)setAllowsExpansionToolTips:(char)arg1 ;
-(void)_rightMouseUpOrDown:(id)arg1 ;
-(id)_vibrancyFilter;
-(char)_shouldRerouteCellAPIs;
-(char)_layerDrawingSupportsLinearMaskOverlay;
-(char)_canShowExpansionTooltips;
-(CGRect)expansionFrameWithFrame:(CGRect)arg1 ;
-(CGSize)sizeThatFits:(CGSize)arg1 ;
-(void)calcSize;
-(void)_setSetsMaxLayoutWidthAtFirstLayout:(char)arg1 ;
-(char)_hasSetMaxLayoutWidth;
-(void)_resetMaxLayoutWidthAtNextLayout;
-(long long)selectedTag;
-(void)setIgnoresMultiClick:(char)arg1 ;
-(char)ignoresMultiClick;
-(void)drawCellInside:(id)arg1 ;
-(void)didBecomeActiveFirstResponder;
-(CGRect)focusRingMaskBounds;
-(char)_hasEditableCell;
-(char)_resetIncrementalSearchOnFailure;
-(char)skipEditValidation;
-(void)setSkipEditValidation:(char)arg1 ;
-(void)editWithFrame:(CGRect)arg1 editor:(id)arg2 delegate:(id)arg3 event:(id)arg4 ;
-(void)selectWithFrame:(CGRect)arg1 editor:(id)arg2 delegate:(id)arg3 start:(long long)arg4 length:(long long)arg5 ;
-(void)_setControlTextDelegateFromOld:(id)arg1 toNew:(id)arg2 ;
-(void)setAllowsLogicalLayoutDirection:(char)arg1 ;
-(id)accessibilityPopUpMenuParent:(id)arg1 ;
-(void)accessibilityPostNotification:(id)arg1 context:(id)arg2 ;
@end

