/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:33:36 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <AppKit/QLPreviewItem.h>

@class NSURL, NSString, NSImage, NSDate, NSDictionary;

@interface NSNavNode : NSObject <QLPreviewItem> {

	unsigned _selfChangeRegistrationCount : 16;
	unsigned _registeredForChildChanges : 1;
	unsigned _registeredForAttributeChanges : 1;
	unsigned _waitingForAttributeChangeCallback : 1;
	unsigned _openSyncStarted : 1;
	unsigned _aliasState : 3;
	unsigned _reserved2 : 1;
	unsigned _reserved3 : 1;
	unsigned _ejecting : 1;
	unsigned _reserved : 6;

}

@property (nonatomic,retain,readonly) NSNavNode * parent; 
@property (nonatomic,retain,readonly) NSNavNode * parentVolume; 
@property (nonatomic,copy,readonly) NSString * name; 
@property (nonatomic,copy,readonly) NSString * displayName; 
@property (nonatomic,copy,readonly) NSString * path; 
@property (nonatomic,copy,readonly) NSURL * URL; 
@property (nonatomic,retain,readonly) NSImage * icon; 
@property (nonatomic,retain,readonly) NSImage * sidebarIcon; 
@property (nonatomic,copy,readonly) NSDate * modDate; 
@property (nonatomic,copy,readonly) NSDate * creationDate; 
@property (nonatomic,retain,readonly) NSDate * lastOpenedDate; 
@property (nonatomic,readonly) long long physicalSize; 
@property (nonatomic,readonly) long long logicalSize; 
@property (nonatomic,readonly) long long usedSize; 
@property (nonatomic,copy,readonly) NSString * kind; 
@property (nonatomic,copy,readonly) NSString * kindWithoutPlatform; 
@property (nonatomic,copy,readonly) NSString * fileType; 
@property (nonatomic,copy,readonly) NSString * typeIdentifier; 
@property (nonatomic,copy,readonly) NSString * shortVersion; 
@property (nonatomic,copy,readonly) NSString * systemVersion; 
@property (nonatomic,copy,readonly) NSString * displayVersion; 
@property (nonatomic,copy,readonly) NSString * comment; 
@property (nonatomic,readonly) long long labelColorIndex; 
@property (nonatomic,copy,readonly) NSString * labelName; 
@property (nonatomic,readonly) long long sortingGroup; 
@property (nonatomic,readonly) long long permissions; 
@property (nonatomic,readonly) long long owner; 
@property (nonatomic,readonly) long long userGroups; 
@property (nonatomic,readonly) long long userAccess; 
@property (getter=isLocked,readonly) char locked; 
@property (getter=isContainer,nonatomic,readonly) char container; 
@property (getter=isVisible,nonatomic,readonly) char visible; 
@property (getter=isPackage,nonatomic,readonly) char package; 
@property (getter=isAlias,nonatomic,readonly) char alias; 
@property (assign,getter=isAliasResolving,nonatomic) char aliasResolving; 
@property (assign,getter=isAliasInvalid,nonatomic) char aliasInvalid; 
@property (assign,nonatomic) int aliasState; 
@property (nonatomic,readonly) char targetChanged; 
@property (getter=isVolume,nonatomic,readonly) char volume; 
@property (getter=isExtensionHidden,nonatomic,readonly) char extensionHidden; 
@property (nonatomic,readonly) char isNil; 
@property (getter=isValid,nonatomic,readonly) char valid; 
@property (nonatomic,readonly) char isDisconnectedMountPoint; 
@property (nonatomic,readonly) char isUnauthenticatedMountPoint; 
@property (nonatomic,readonly) char isComputerNode; 
@property (nonatomic,readonly) char isNetworkNode; 
@property (nonatomic,readonly) char isHomeNode; 
@property (nonatomic,readonly) char isSharedServer; 
@property (nonatomic,readonly) char isMediaNode; 
@property (nonatomic,readonly) char isODSNode; 
@property (nonatomic,readonly) char isODSRequiresAsk; 
@property (nonatomic,readonly) char isSharedFolder; 
@property (nonatomic,readonly) char isDiskImage; 
@property (nonatomic,readonly) char isFullyFormed; 
@property (nonatomic,readonly) char isMeetingRoom; 
@property (nonatomic,readonly) char canBrowse; 
@property (nonatomic,readonly) char canBeRead; 
@property (assign,nonatomic) char openSyncStarted; 
@property (getter=isEjectableOrUnmountable,nonatomic,readonly) char ejectableOrUnmountable; 
@property (getter=isEjectable,nonatomic,readonly) char ejectable; 
@property (getter=isUnmountable,nonatomic,readonly) char unmountable; 
@property (assign,getter=isEjecting,nonatomic) char ejecting; 
@property (nonatomic,copy) NSDictionary * previewAttributes; 
@property (nonatomic,copy,readonly) NSString * serverUserName; 
@property (nonatomic,readonly) int networkConnectionState; 
@property (nonatomic,readonly) char supportsFileSharing; 
@property (nonatomic,readonly) char supportsScreenSharing; 
@property (readonly) int networkMediaTypes; 
@property (nonatomic,readonly) char isQuery; 
@property (nonatomic,readonly) char isCannedSearch; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) NSURL * previewItemURL; 
@property (readonly) NSString * previewItemTitle; 
@property (readonly) id previewItemDisplayState; 
+(id)keyPathsForValuesAffectingValueForKey:(id)arg1 ;
+(id)findSidebarNodeForNode:(id)arg1 ;
+(id)nodeWithURL:(id)arg1 logonOK:(char)arg2 ;
+(id)nodeWithSimpleQueryString:(id)arg1 searchScopes:(id)arg2 sortDescriptors:(id)arg3 ;
+(id)nodeWithQueryString:(id)arg1 searchScopes:(id)arg2 title:(id)arg3 sortDescriptors:(id)arg4 ;
+(id)nodeWithSavedQueryData:(id)arg1 title:(id)arg2 sortDescriptors:(id)arg3 ;
+(Class)previewHelperClass;
-(NSString *)description;
-(NSURL *)URL;
-(NSImage *)icon;
-(id)sortDescriptors;
-(void)setSortDescriptors:(id)arg1 ;
-(id)labelColor;
-(NSString *)systemVersion;
-(char)isValid;
-(char)isLocked;
-(char)isQuery;
-(OpaqueIconRefRef)copyIcon;
-(char)isAliasInvalid;
-(id)ancestorsStartingWith:(id)arg1 ;
-(int)aliasState;
-(void)setAliasState:(int)arg1 ;
-(id)getNodeAsResolvedNode:(char)arg1 ;
-(char)isMediaNode;
-(char)isSharedServer;
-(long long)labelColorIndex;
-(char)isEjectableOrUnmountable;
-(char)ejectWithInteraction:(char)arg1 ;
-(char)acceptsRootNode;
-(char)isAliasResolving;
-(id)getNodeAsDeepResolvedNode:(char)arg1 ;
-(char)isCannedSearch;
-(id)childWithName:(id)arg1 ;
-(char)sortsChildrenEfficiently;
-(char)isFullyFormed;
-(id)getNodeAsContainerNodeForBrowsing:(char)arg1 ;
-(char)isNetworkNode;
-(void)setQueryHitResultsFilterUTIs:(id)arg1 ;
-(id)children;
-(char)isComputerNode;
-(void)unregisterForPropertyChangedNotifications;
-(char)openSyncStarted;
-(void)setOpenSyncStarted:(char)arg1 ;
-(char)isEjecting;
-(id)getNodeAsInfoNode:(char)arg1 ;
-(char)canBrowse;
-(void)registerForPropertyChangedNotifications;
-(NSString *)typeIdentifier;
-(char)supportsScreenSharing;
-(char)supportsFileSharing;
-(char)isODSNode;
-(char)isHomeNode;
-(void)setEjecting:(char)arg1 ;
-(char)isEjectable;
-(char)isNil;
-(char)isDiskImage;
-(id)otherVolumesOnSameDevice;
-(char)unmount;
-(char)eject;
-(NSNavNode *)parentVolume;
-(char)canBeRead;
-(void)registerForDeepChildChangedNotifications;
-(void)unregisterForDeepChildChangedNotifications;
-(id)getNodeAsResolvedNodeForSidebar;
-(id)getNodeAsResolvedNode:(char)arg1 withError:(int*)arg2 ;
-(NSDictionary *)previewAttributes;
-(void)setPreviewAttributes:(NSDictionary *)arg1 ;
-(NSString *)serverUserName;
-(int)networkConnectionState;
-(void)launchScreenSharingApp;
-(void)disconnectShare;
-(void)connectToSharedServerAs;
-(void)askToUseODS;
-(id)searchScopeDisplayName;
-(char)isUnmountable;
-(char)isSharedFolder;
-(char)isMeetingRoom;
-(NSImage *)sidebarIcon;
-(id)previewImageWithSize:(CGSize)arg1 isIconModeThumbnail:(char)arg2 ;
-(NSDate *)lastOpenedDate;
-(long long)sortingGroup;
-(long long)permissions;
-(NSString *)kindWithoutPlatform;
-(NSString *)shortVersion;
-(char)isODSRequiresAsk;
-(char)isDescendantOfNode:(id)arg1 ;
-(NSString *)previewItemTitle;
-(NSURL *)previewItemURL;
-(NSString *)labelName;
-(NSString *)displayVersion;
-(char)targetChanged;
-(char)isQueryChildNode;
-(id)queryHitResultsFilterUTIs;
-(id)previewItemDisplayName;
-(id)previewItemLocalizedDescription;
@end

