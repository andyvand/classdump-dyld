/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 2:26:52 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/TelephonyUtilities.framework/Versions/A/TelephonyUtilities
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <TelephonyUtilities/TelephonyUtilities-Structs.h>
#import <TelephonyUtilities/NSSecureCoding.h>

@class NSString, NSData, IMAVChatParticipant;

@interface TUCall : NSObject <NSSecureCoding> {

	NSString* _displayName;
	NSString* _overrideName;
	NSString* _companyName;
	long long _displayNameBreakPoint;
	NSString* _abLabel;
	NSString* _abUid;
	struct {
		unsigned imageType : 2;
		unsigned abUidIsValid : 1;
		unsigned dialAssisted : 1;
		unsigned dialedFromEmergencyUI : 1;
		unsigned isEmergencyCall : 1;
		unsigned isEmergencyCallIsValid : 1;
		unsigned joiningConference : 1;
		unsigned leavingConference : 1;
	}  _phoneCallFlags;
	char _requestingHandoff;
	char _endpointOnCurrentDevice;
	char _wantsHoldMusic;
	char _connected;
	char _hasUpdatedAudio;
	char _requiresAudioReinterruption;
	char _allowsTTYSettingChanges;
	char _connectingToRelay;
	int _disconnectedReason;
	int _faceTimeIDStatus;
	int _transitionStatus;
	NSString* _suggestedDisplayName;
	NSString* _uniqueProxyIdentifier;
	NSString* _sourceIdentifier;
	NSString* _isoCountryCode;
	long long _provisionalHoldStatus;

}

@property (copy) NSString * suggestedDisplayName;                                                        //@synthesize suggestedDisplayName=_suggestedDisplayName - In the implementation block
@property (assign,nonatomic) int disconnectedReason;                                                     //@synthesize disconnectedReason=_disconnectedReason - In the implementation block
@property (nonatomic,readonly) char wasDeclined; 
@property (nonatomic,readonly) int service; 
@property (nonatomic,readonly) int supportedModelType; 
@property (nonatomic,readonly) char isVideo; 
@property (nonatomic,readonly) int status; 
@property (assign,nonatomic) int faceTimeIDStatus;                                                       //@synthesize faceTimeIDStatus=_faceTimeIDStatus - In the implementation block
@property (nonatomic,readonly) char statusIsProvisional; 
@property (assign,getter=isRequestingHandoff,nonatomic) char requestingHandoff;                          //@synthesize requestingHandoff=_requestingHandoff - In the implementation block
@property (getter=isHostedOnCurrentDevice,nonatomic,readonly) char hostedOnCurrentDevice; 
@property (assign,getter=isEndpointOnCurrentDevice,nonatomic) char endpointOnCurrentDevice;              //@synthesize endpointOnCurrentDevice=_endpointOnCurrentDevice - In the implementation block
@property (nonatomic,readonly) char playsConnectedSound; 
@property (getter=isVoicemail,nonatomic,readonly) char voicemail; 
@property (assign,nonatomic) char isOnHold; 
@property (assign,nonatomic) char wantsHoldMusic;                                                        //@synthesize wantsHoldMusic=_wantsHoldMusic - In the implementation block
@property (assign,getter=isConnected,nonatomic) char connected;                                          //@synthesize connected=_connected - In the implementation block
@property (assign,nonatomic) char hasUpdatedAudio;                                                       //@synthesize hasUpdatedAudio=_hasUpdatedAudio - In the implementation block
@property (getter=isOutgoing,nonatomic,readonly) char outgoing; 
@property (getter=isBlocked,nonatomic,readonly) char blocked; 
@property (nonatomic,readonly) double startTime; 
@property (nonatomic,copy,readonly) NSString * destinationID; 
@property (nonatomic,copy,readonly) NSString * callIdentifier; 
@property (nonatomic,copy) NSString * uniqueProxyIdentifier;                                             //@synthesize uniqueProxyIdentifier=_uniqueProxyIdentifier - In the implementation block
@property (nonatomic,copy,readonly) NSString * callUUID; 
@property (nonatomic,copy) NSString * sourceIdentifier;                                                  //@synthesize sourceIdentifier=_sourceIdentifier - In the implementation block
@property (nonatomic,copy,readonly) NSString * callHistoryIdentifier; 
@property (nonatomic,copy) NSString * displayName;                                                       //@synthesize displayName=_displayName - In the implementation block
@property (nonatomic,copy,readonly) NSString * callerNameFromNetwork; 
@property (nonatomic,copy) NSString * isoCountryCode;                                                    //@synthesize isoCountryCode=_isoCountryCode - In the implementation block
@property (nonatomic,readonly) float localVolume; 
@property (nonatomic,retain,readonly) NSData * localFrequency; 
@property (nonatomic,retain,readonly) NSData * remoteFrequency; 
@property (assign,nonatomic) long long provisionalHoldStatus;                                            //@synthesize provisionalHoldStatus=_provisionalHoldStatus - In the implementation block
@property (getter=isStatusFinal,nonatomic,readonly) char statusFinal; 
@property (assign,nonatomic) int transitionStatus;                                                       //@synthesize transitionStatus=_transitionStatus - In the implementation block
@property (assign,nonatomic) char requiresAudioReinterruption;                                           //@synthesize requiresAudioReinterruption=_requiresAudioReinterruption - In the implementation block
@property (nonatomic,readonly) char shouldIgnoreStatusChange; 
@property (assign,nonatomic) char allowsTTYSettingChanges;                                               //@synthesize allowsTTYSettingChanges=_allowsTTYSettingChanges - In the implementation block
@property (assign,getter=isConnectingToRelay,nonatomic) char connectingToRelay;                          //@synthesize connectingToRelay=_connectingToRelay - In the implementation block
@property (nonatomic,retain,readonly) NSString * conferenceIdentifier; 
@property (assign,nonatomic) char isSendingAudio; 
@property (assign,nonatomic) char isSendingVideo; 
@property (nonatomic,readonly) char isActive; 
@property (nonatomic,readonly) char hasReceivedFirstFrame; 
@property (nonatomic,retain,readonly) IMAVChatParticipant * remoteParticipant; 
@property (nonatomic,readonly) unsigned endedReason; 
@property (nonatomic,readonly) int endedError; 
@property (nonatomic,copy,readonly) NSString * errorAlertTitle; 
@property (nonatomic,copy,readonly) NSString * errorAlertMessage; 
+(char)supportsSecureCoding;
-(float)localVolume;
-(int)service;
-(id)localizedLabel;
-(id)companyName;
-(double)startTime;
-(void)disconnect;
-(char)setMuted:(char)arg1 ;
-(char)isMuted;
-(id)displayFirstName;
-(char)isUplinkMuted;
-(char)isDownlinkMuted;
-(char)isTTY;
-(char)setUplinkMuted:(char)arg1 ;
-(char)setDownlinkMuted:(char)arg1 ;
-(int)supportedModelType;
-(int)callStatus;
-(id)audioCategory;
-(id)audioMode;
-(void)resetProvisionalHoldStatus;
-(long long)provisionalHoldStatus;
-(void)hold;
-(void)unhold;
-(char)shouldIgnoreStatusChange;
-(char)isHostedOnCurrentDevice;
-(char)isEndpointOnCurrentDevice;
-(NSString *)callUUID;
-(void)_setPrimitiveWantsHoldMusic:(char)arg1 ;
-(void)_setPrimitiveEndpointOnCurrentDevice:(char)arg1 ;
-(void)_setPrimitiveDisconnectedReason:(int)arg1 ;
-(NSData *)localFrequency;
-(NSData *)remoteFrequency;
-(NSString *)uniqueProxyIdentifier;
-(void)updateWithCall:(id)arg1 ;
-(void)inviteWithCallIdentifier:(id)arg1 ;
-(void)setIsOnHold:(char)arg1 ;
-(char)hasSupport:(int)arg1 ;
-(double)callDuration;
-(void)setWantsHoldMusic:(char)arg1 ;
-(void)answerWithSourceIdentifier:(id)arg1 ;
-(void)setTransitionStatus:(int)arg1 ;
-(void)disconnectWithReason:(int)arg1 ;
-(char)isRequestingHandoff;
-(void)setRequestingHandoff:(char)arg1 ;
-(char)isStatusFinal;
-(void)setConnected:(char)arg1 ;
-(NSString *)destinationID;
-(id)abUID;
-(int)disconnectedReason;
-(char)shouldPlayDTMFTone;
-(char)isConferenced;
-(void)joinConference;
-(void)leaveConference;
-(IMAVChatParticipant *)remoteParticipant;
-(NSString *)callerNameFromNetwork;
-(char)isAlerting;
-(NSString *)callIdentifier;
-(NSString *)callHistoryIdentifier;
-(id)totalDataUsed;
-(int)faceTimeIDStatus;
-(char)managesAudioInterruptions;
-(char)needsManualInCallSounds;
-(char)playsConnectedSound;
-(NSString *)conferenceIdentifier;
-(void)resetProvisionalStatuses;
-(void)setUniqueProxyIdentifier:(NSString *)arg1 ;
-(char)isOnHold;
-(void)setProvisionalHoldStatus:(long long)arg1 ;
-(void)setDisconnectedReason:(int)arg1 ;
-(char)wantsHoldMusic;
-(void)_loadCallDetails;
-(id)_displayNameWithSeparator:(id)arg1 ;
-(int)transitionStatus;
-(char)isVoicemail;
-(void)playDTMFToneForKey:(unsigned char)arg1 ;
-(char)wasDeclined;
-(void)resetWantsHoldMusic;
-(void)setEndpointOnCurrentDevice:(char)arg1 ;
-(id)multiLineDisplayName;
-(NSString *)isoCountryCode;
-(void)setOverrideName:(id)arg1 ;
-(char)wasDialAssisted;
-(void)setWasDialAssisted:(char)arg1 ;
-(char)wasDialedFromEmergencyUI;
-(void)setWasDialedFromEmergencyUI:(char)arg1 ;
-(char)isEmergencyCall;
-(int)causeCode;
-(id)callDurationString;
-(void)setFaceTimeIDStatus:(int)arg1 ;
-(char)statusIsProvisional;
-(char)allowsTTYSettingChanges;
-(NSString *)errorAlertTitle;
-(NSString *)errorAlertMessage;
-(NSString *)suggestedDisplayName;
-(void)setSuggestedDisplayName:(NSString *)arg1 ;
-(char)hasUpdatedAudio;
-(void)setHasUpdatedAudio:(char)arg1 ;
-(void)setIsoCountryCode:(NSString *)arg1 ;
-(char)requiresAudioReinterruption;
-(void)setRequiresAudioReinterruption:(char)arg1 ;
-(void)setAllowsTTYSettingChanges:(char)arg1 ;
-(char)isConnectingToRelay;
-(void)setConnectingToRelay:(char)arg1 ;
-(char)isBlocked;
-(char)isOutgoing;
-(void)setSourceIdentifier:(NSString *)arg1 ;
-(void)answer;
-(id)init;
-(void)dealloc;
-(id)description;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(char)isEqual:(id)arg1 ;
-(char)isActive;
-(char)isConnected;
-(int)status;
-(NSString *)displayName;
-(void)setDisplayName:(NSString *)arg1 ;
-(NSString *)sourceIdentifier;
-(char)isVideo;
-(char)isSendingAudio;
-(char)isSendingVideo;
-(unsigned)endedReason;
-(int)endedError;
-(void)setIsSendingAudio:(char)arg1 ;
-(void)setIsSendingVideo:(char)arg1 ;
-(char)hasReceivedFirstFrame;
@end

