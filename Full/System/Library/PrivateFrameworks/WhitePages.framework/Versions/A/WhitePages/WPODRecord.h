/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:32:57 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/WhitePages.framework/Versions/A/WhitePages
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <WhitePages/WPGenericRecord.h>

@class ODRecord, NSDictionary, WPBadgePicture, NSData;

@interface WPODRecord : WPGenericRecord {

	ODRecord* _record;
	NSDictionary* _cachedAttributes;
	WPBadgePicture* _badgePictureManager;
	NSData* _cachedImageData;
	WPODRecord* _normalizedRecord;

}
+(id)mapWPProperty:(id)arg1 ;
+(void)initStaticVariables;
+(id)recordWithGUID:(id)arg1 forRecordType:(id)arg2 inNodeWithPath:(id)arg3 attributesToBeReturned:(id)arg4 ;
+(id)recordWithGUID:(id)arg1 forRecordType:(id)arg2 inNodeWithPath:(id)arg3 attributesToBeReturned:(id)arg4 session:(id)arg5 ;
+(id)recordsWithName:(id)arg1 forRecordType:(id)arg2 inNodeWithPath:(id)arg3 attributesToBeReturned:(id)arg4 ;
+(id)recordsWithName:(id)arg1 forRecordType:(id)arg2 inNodeWithPath:(id)arg3 attributesToBeReturned:(id)arg4 session:(id)arg5 ;
+(id)recordsWithName:(id)arg1 forRecordType:(id)arg2 attributesToBeReturned:(id)arg3 ;
+(id)reflectedImage:(id)arg1 ;
+(id)NSImageToJPEG:(id)arg1 compressionfactor:(double)arg2 ;
+(id)recordWithODRecord:(id)arg1 session:(id)arg2 ;
+(id)recordWithGUID:(id)arg1 forRecordType:(id)arg2 attributesToBeReturned:(id)arg3 ;
+(id)recordWithGUID:(id)arg1 forRecordType:(id)arg2 attributesToBeReturned:(id)arg3 session:(id)arg4 ;
+(id)recordWithGUID:(id)arg1 forRecordType:(id)arg2 inNodesWithPaths:(id)arg3 attributesToBeReturned:(id)arg4 session:(id)arg5 ;
+(id)recordsWithName:(id)arg1 forRecordType:(id)arg2 attributesToBeReturned:(id)arg3 session:(id)arg4 ;
+(id)recordsWithName:(id)arg1 forRecordType:(id)arg2 inNodesWithPaths:(id)arg3 attributesToBeReturned:(id)arg4 session:(id)arg5 ;
+(id)defaultLargeImage;
+(id)NSImageToPDF:(id)arg1 ;
+(id)NSImageToJPEG:(id)arg1 ;
+(id)convertWPAttributesToODAttributes:(id)arg1 ;
+(id)supportedAddresses;
+(id)supportedCountries;
+(id)countryInfoForCode:(id)arg1 ;
+(id)countryInfoForCountryNamed:(id)arg1 ;
+(void)initialize;
+(id)defaultImage;
-(id)recordType;
-(id)valuesForAttribute:(id)arg1 error:(out id*)arg2 ;
-(id)map;
-(id)GUID;
-(void)setMap:(id)arg1 ;
-(id)recordName;
-(id)odRecord;
-(id)singleValueForProperty:(id)arg1 ;
-(id)multiValueForProperty:(id)arg1 ;
-(id)valuesWithPrefix:(id)arg1 forProperty:(id)arg2 ;
-(id)valueForProperty:(id)arg1 returnMultiValueIfSingleValue:(char)arg2 ;
-(char)setValue:(id)arg1 forAttribute:(id)arg2 ;
-(id)initRecordWithODRecord:(id)arg1 session:(id)arg2 ;
-(id)initRecordWithCachedAttributes:(id)arg1 session:(id)arg2 ;
-(id)nodePath;
-(id)webServicesVirtualHostsOfServiceType:(id)arg1 ;
-(id)calendarPrincipalURIsForSnowLeopard;
-(id)calendarPrincipalURIs;
-(id)webServicesReferences;
-(void)rebuildWebServicesReferences;
-(id)webServicesReferencesOfServiceType:(id)arg1 ;
-(id)recordsWithCalendaringDelegate;
-(id)webServicesVirtualHosts;
-(char)recordIsAssociatedWithHostKey:(id)arg1 forServiceType:(id)arg2 ;
-(void)setWebServicesReferenceWithRecord:(id)arg1 webServiceVirtualHost:(id)arg2 serviceOfType:(id)arg3 enabled:(char)arg4 ;
-(char)isCalendarEnabled;
-(char)isNewRecord;
-(id)normalizedRecordNeedingAttributes:(id)arg1 ;
-(id)secondaryInfoString;
-(id)displayedStringForPickerTableView:(id)arg1 ;
-(id)displayedStringForPickerTextField:(id)arg1 ;
-(void)setDisplayedName:(id)arg1 ;
-(id)recordNames;
-(id)recordNameWithoutSuffix;
-(id)sortableDescription;
-(id)mapCoordinates;
-(void)setMapCoordinates:(id)arg1 ;
-(id)xml;
-(void)setXMLPlist:(id)arg1 error:(out id*)arg2 ;
-(void)resetAndSynchronize:(char)arg1 ;
-(void)resetAndFetchUsingAttributes:(id)arg1 ;
-(id)badgePictureManager;
-(id)reflectedImage;
-(void)setReflectedImage:(id)arg1 ;
-(id)printableAttributedString;
-(id)mainCalendarPrincipalURI;
-(id)relativePrincipalURI;
-(char)updateWebServiceCalendarReferenceWithDelegate:(id)arg1 ;
-(id)webServicesVirtualHostWithKey:(id)arg1 ofServiceType:(id)arg2 ;
-(char)assignToVirtualHost:(id)arg1 error:(out id*)arg2 ;
-(void)removeWebServicesReferenceWithRecord:(id)arg1 webServiceVirtualHost:(id)arg2 serviceOfType:(id)arg3 ;
-(void)clearWebServicesReferences;
-(id)mainPhone;
-(long long)compareDisplayedName:(id)arg1 ;
-(id)init;
-(void)dealloc;
-(char)setValues:(id)arg1 ;
-(id)image;
-(void)setImage:(id)arg1 ;
-(id)timestamp;
-(void)reset;
-(id)attributes;
-(void)setAttributes:(id)arg1 ;
-(id)badgeImage;
-(unsigned long long)UID;
-(id)comments;
-(void)setComments:(id)arg1 ;
-(id)displayedName;
-(void)setImageData:(id)arg1 ;
-(id)imageData;
@end

