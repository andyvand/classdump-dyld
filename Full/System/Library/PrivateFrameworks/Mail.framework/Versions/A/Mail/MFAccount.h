/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:32:54 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/Mail.framework/Versions/A/Mail
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Mail/Mail-Structs.h>
#import <Mail/MCAccount.h>

@class NSString, NSArray, MCAuthScheme, NSURL, NSMutableDictionary, NSNumber, NSDate, NSImage, NSDictionary;

@interface MFAccount : NSObject <MCAccount> {

	NSMutableDictionary* _info;
	NSString* _brandName;
	id _brandIcon;
	id _supportURL;
	NSString* _supportURLLabel;
	NSString* _providerIdentifier;
	OpaqueSecIdentityRefRef _tlsIdentity;
	char _isActive;
	char _configureDynamically;
	char _allowInsecureAuthentication;
	char _primitiveIsOffline;
	char _primitiveIsWillingToGoOnline;
	char _autosynchronizingEnabled;
	NSString* _canonicalEmailAddress;
	NSNumber* _useMailDrop;
	NSDate* _lastConnectionValidationTime;

}

@property (copy) NSString * storedDisplayName; 
@property (copy,readonly) NSString * offlineDisplayName; 
@property (readonly) NSImage * brandIcon; 
@property (copy,readonly) NSString * brandName; 
@property (copy) NSString * providerIdentifier; 
@property (copy) NSString * ISPAccountID; 
@property (assign) char isInactivatedInsteadOfBeingDeleted; 
@property (copy) NSDictionary * accountInfo; 
@property (readonly) NSMutableDictionary * defaultsDictionary; 
@property (nonatomic,readonly) long long defaultPortNumber; 
@property (nonatomic,readonly) long long defaultSecurePortNumber; 
@property (assign) char isActive; 
@property (assign) char isOffline; 
@property (assign) char isWillingToGoOnline; 
@property (assign) char primitiveIsOffline;                                        //@synthesize primitiveIsOffline=_primitiveIsOffline - In the implementation block
@property (assign) char primitiveIsWillingToGoOnline;                              //@synthesize primitiveIsWillingToGoOnline=_primitiveIsWillingToGoOnline - In the implementation block
@property (nonatomic,readonly) char canGoOffline; 
@property (assign,nonatomic) char autosynchronizingEnabled;                        //@synthesize autosynchronizingEnabled=_autosynchronizingEnabled - In the implementation block
@property (readonly) char isValid; 
@property (readonly) NSURL * supportURL; 
@property (copy,readonly) NSString * supportURLLabel; 
@property (nonatomic,copy,readonly) NSString * iaServiceType; 
@property (nonatomic,retain) NSNumber * useMailDrop;                               //@synthesize useMailDrop=_useMailDrop - In the implementation block
@property (nonatomic,readonly) char usesConnectionBasedAutodiscovery; 
@property (retain) NSDate * lastConnectionValidationTime;                          //@synthesize lastConnectionValidationTime=_lastConnectionValidationTime - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (copy,readonly) NSString * accountTypeString; 
@property (copy,readonly) NSString * identifier; 
@property (copy) NSString * displayName; 
@property (nonatomic,copy,readonly) NSString * saslProfileName; 
@property (assign) char configureDynamically;                                      //@synthesize configureDynamically=_configureDynamically - In the implementation block
@property (assign) char allowInsecureAuthentication;                               //@synthesize allowInsecureAuthentication=_allowInsecureAuthentication - In the implementation block
@property (copy) NSString * canonicalEmailAddress;                                 //@synthesize canonicalEmailAddress=_canonicalEmailAddress - In the implementation block
@property (copy) NSString * hostname; 
@property (assign) long long portNumber; 
@property (nonatomic,copy,readonly) NSArray * standardPorts; 
@property (nonatomic,copy,readonly) NSArray * standardSSLPorts; 
@property (assign) long long securityLayerType; 
@property (retain) MCAuthScheme * preferredAuthScheme; 
@property (copy) NSString * username; 
@property (copy) NSString * password; 
@property (copy,readonly) NSString * applePersonID; 
@property (copy,readonly) NSString * appleAuthenticationToken; 
@property (copy,readonly) NSString * googleClientToken; 
@property (nonatomic,readonly) char requiresAuthentication; 
@property (assign) char shouldUseAuthentication; 
@property (assign) char usesSSL; 
@property (readonly) NSURL * subscriptionURL; 
@property (copy,readonly) NSString * subscriptionURLLabel; 
@property (copy) NSString * externalHostname; 
+(id)v2AccountsPlistName;
+(Class)accountClassForTypeString:(id)arg1 ;
+(id)readAccountsUsingStorageKey:(id)arg1 forceReadFromMail:(char)arg2 ;
+(void)saveAccounts:(id)arg1 usingStorageKey:(id)arg2 forceWriteToMail:(char)arg3 ;
+(char)_shouldAnnounceChangesFromAccountInfo:(id)arg1 toAccountInfo:(id)arg2 ;
+(id)standardPorts;
+(id)standardSSLPorts;
+(id)typeStringForAccountClass:(Class)arg1 ;
+(char)allObjectsInArrayAreOffline:(id)arg1 ;
+(id)accountTypeString;
+(void)saveAccountInfoToDefaults;
+(Class)classForProtocol:(id)arg1 ;
+(char)haveAccountsBeenConfigured;
+(id)readAccountsUsingStorageKey:(id)arg1 ;
+(void)saveAccounts:(id)arg1 usingStorageKey:(id)arg2 ;
+(id)genericAccountLargeImage;
+(void)resetConfigureDynamically;
+(id)keyPathsForValuesAffectingOfflineDisplayName;
+(char)defaultsToSSL;
+(id)keyPathsForValuesAffectingPreferredAuthScheme;
-(NSString *)password;
-(NSString *)username;
-(void)setUsername:(NSString *)arg1 ;
-(void)setHostname:(NSString *)arg1 ;
-(NSString *)hostname;
-(unsigned)accountType;
-(id)info;
-(id)initWithAccountInfo:(id)arg1 ;
-(void)setAutosynchronizingEnabled:(char)arg1 ;
-(NSMutableDictionary *)defaultsDictionary;
-(void)_setAccountInfo:(id)arg1 ;
-(void)_queueAccountInfoDidChange;
-(long long)defaultSecurePortNumber;
-(long long)defaultPortNumber;
-(void)setConfigureDynamically:(char)arg1 ;
-(NSArray *)standardPorts;
-(NSArray *)standardSSLPorts;
-(void)setUseMailDrop:(NSNumber *)arg1 ;
-(void)setTLSIdentity:(OpaqueSecIdentityRefRef)arg1 ;
-(void)setAllowInsecureAuthentication:(char)arg1 ;
-(void)setCanonicalEmailAddress:(NSString *)arg1 ;
-(void)setInfo:(id)arg1 ;
-(void)accountInfoDidChange;
-(char)autosynchronizingEnabled;
-(NSNumber *)useMailDrop;
-(char)configureDynamically;
-(char)allowInsecureAuthentication;
-(NSString *)canonicalEmailAddress;
-(OpaqueSecIdentityRefRef)copyTLSIdentity;
-(void)setIsInactivatedInsteadOfBeingDeleted:(char)arg1 ;
-(char)canGoOffline;
-(char)primitiveIsOffline;
-(void)setPrimitiveIsOffline:(char)arg1 ;
-(char)primitiveIsWillingToGoOnline;
-(void)setPrimitiveIsWillingToGoOnline:(char)arg1 ;
-(NSString *)storedDisplayName;
-(NSString *)accountTypeString;
-(void)releaseAllConnections;
-(id)_hostnameWithAccountInfoKey:(id)arg1 ;
-(void)_setHostname:(id)arg1 accountInfoKey:(id)arg2 ;
-(id)sessionPassword;
-(id)permanentPassword;
-(MCAuthScheme *)preferredAuthScheme;
-(void)setSessionPassword:(id)arg1 ;
-(void)setPermanentPassword:(id)arg1 ;
-(void*)keychainProtocol;
-(id)promptUserForPassword;
-(char)usesSSL;
-(void)_setPortNumber:(long long)arg1 releasingConnections:(char)arg2 ;
-(void)setSecurityLayerType:(long long)arg1 ;
-(void)setLastConnectionValidationTime:(NSDate *)arg1 ;
-(NSDate *)lastConnectionValidationTime;
-(void)validateConnections;
-(char)_usesSSLWithAccountInfoKey:(id)arg1 ;
-(void)_setUsesSSL:(char)arg1 releasingConnections:(char)arg2 ;
-(void)_setUsesSSL:(char)arg1 accountInfoKey:(id)arg2 releasingConnections:(char)arg3 ;
-(void)_setSecurityLayerType:(long long)arg1 releasingConnections:(char)arg2 ;
-(long long)securityLayerType;
-(NSDictionary *)accountInfo;
-(char)requiresAuthentication;
-(char)shouldUseAuthentication;
-(char)shouldRetryConnectionWithoutCertificateCheckingAfterError:(id)arg1 host:(id)arg2 didPromptUser:(char*)arg3 ;
-(NSString *)ISPAccountID;
-(id)iaSettingsIncludingPassword:(char)arg1 ;
-(void)validateConnectionsIfNeeded;
-(void)updateFromSuccessfulConnectionPortNumber:(long long)arg1 securityLayerType:(long long)arg2 ;
-(char)autodiscoverSettings:(id*)arg1 ;
-(char)connectAndAuthenticate:(id)arg1 ;
-(void)respondToHostBecomingReachable;
-(id)newConnectedConnectionDiscoveringBestSettings:(char)arg1 withConnectTimeout:(double)arg2 readWriteTimeout:(double)arg3 ;
-(id)authenticatedConnection;
-(char)canAuthenticateWithScheme:(id)arg1 ;
-(NSString *)saslProfileName;
-(void)setPreferredAuthScheme:(MCAuthScheme *)arg1 ;
-(NSString *)applePersonID;
-(NSString *)appleAuthenticationToken;
-(NSString *)googleClientToken;
-(void)setShouldUseAuthentication:(char)arg1 ;
-(void)setUsesSSL:(char)arg1 ;
-(NSString *)subscriptionURLLabel;
-(NSString *)iaServiceType;
-(void)setAccountInfo:(NSDictionary *)arg1 ;
-(id)objectForAccountInfoKey:(id)arg1 ;
-(char)boolForAccountInfoKey:(id)arg1 defaultResult:(char)arg2 ;
-(void)setObject:(id)arg1 forAccountInfoKey:(id)arg2 ;
-(char)setBool:(char)arg1 forAccountInfoKey:(id)arg2 withDefault:(char)arg3 ;
-(void)setBool:(char)arg1 forAccountInfoKey:(id)arg2 ;
-(void)removeObjectForAccountInfoKey:(id)arg1 ;
-(long long)portNumberForKeychain;
-(void)clearIsActiveCache;
-(char)isInactivatedInsteadOfBeingDeleted;
-(void)setIsOffline:(char)arg1 ;
-(char)isWillingToGoOnline;
-(void)setIsWillingToGoOnline:(char)arg1 ;
-(void)setStoredDisplayName:(NSString *)arg1 ;
-(NSString *)offlineDisplayName;
-(void)promptUserForPasswordWithCompletion:(/*^block*/id)arg1 ;
-(void)setISPAccountID:(NSString *)arg1 ;
-(id)nameForMailbox:(id)arg1 ;
-(char)usesConnectionBasedAutodiscovery;
-(char)_matchesDiscoveredSettings:(id)arg1 fromEmailAddress:(id)arg2 ;
-(char)_matchesEmailAddress:(id)arg1 ;
-(NSURL *)supportURL;
-(NSString *)supportURLLabel;
-(void)setProviderIdentifier:(NSString *)arg1 ;
-(NSImage *)brandIcon;
-(void)clearBrandingCache;
-(void)setAccountInfoObject:(id)arg1 forKey:(id)arg2 ;
-(void)removeAccountInfoObjectForKey:(id)arg1 ;
-(void)setAccountPassword:(id)arg1 ;
-(id)accountPassword;
-(void)setLoginName:(id)arg1 ;
-(void)setAccountName:(id)arg1 ;
-(unsigned)customAuthentication;
-(void)setCustomAuthentication:(unsigned)arg1 ;
-(id)init;
-(void)dealloc;
-(char)isActive;
-(NSString *)identifier;
-(void)setIsActive:(char)arg1 ;
-(char)isValid;
-(NSString *)displayName;
-(void)setDisplayName:(NSString *)arg1 ;
-(id)serverName;
-(void)setServerName:(id)arg1 ;
-(id)accountName;
-(NSURL *)subscriptionURL;
-(void)setPassword:(NSString *)arg1 ;
-(char)isOffline;
-(NSString *)providerIdentifier;
-(NSString *)brandName;
-(id)loginName;
-(long long)portNumber;
-(void)setPortNumber:(long long)arg1 ;
@end

