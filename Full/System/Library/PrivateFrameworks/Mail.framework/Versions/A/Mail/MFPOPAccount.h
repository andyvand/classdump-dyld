/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:32:56 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/Mail.framework/Versions/A/Mail
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Mail/MFMailAccount.h>
#import <Mail/MFPOPAccount.h>

@protocol MFPOPAccount <MCAccount>
@required
-(char)logPOPFetchTimes;

@end


@class NSLock, MFPOPStore, MCActivityMonitor, NSString, NSArray, MCAuthScheme, NSURL;

@interface MFPOPAccount : MFMailAccount <MFPOPAccount> {

	NSLock* _connectionActivityLock;
	id _seenMessagesManagerLock;
	char _fetcherNeedsReset;
	char _deletingMessages;
	char _hasDoneBackgroundSynchronization;
	MFPOPStore* _fetcher;
	MCActivityMonitor* _fetchMonitor;

}

@property (assign,nonatomic) char deletingMessages;                              //@synthesize deletingMessages=_deletingMessages - In the implementation block
@property (assign) char isFirstTimeSync; 
@property (nonatomic,retain) MFPOPStore * fetcher;                               //@synthesize fetcher=_fetcher - In the implementation block
@property (nonatomic,retain) MCActivityMonitor * fetchMonitor;                   //@synthesize fetchMonitor=_fetchMonitor - In the implementation block
@property (assign,nonatomic) char fetcherNeedsReset;                             //@synthesize fetcherNeedsReset=_fetcherNeedsReset - In the implementation block
@property (assign,nonatomic) char hasDoneBackgroundSynchronization;              //@synthesize hasDoneBackgroundSynchronization=_hasDoneBackgroundSynchronization - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (copy,readonly) NSString * accountTypeString; 
@property (copy,readonly) NSString * identifier; 
@property (copy) NSString * displayName; 
@property (nonatomic,copy,readonly) NSString * saslProfileName; 
@property (assign) char configureDynamically; 
@property (assign) char allowInsecureAuthentication; 
@property (copy) NSString * canonicalEmailAddress; 
@property (copy) NSString * hostname; 
@property (assign) long long portNumber; 
@property (nonatomic,copy,readonly) NSArray * standardPorts; 
@property (nonatomic,copy,readonly) NSArray * standardSSLPorts; 
@property (assign) long long securityLayerType; 
@property (retain) MCAuthScheme * preferredAuthScheme; 
@property (copy) NSString * username; 
@property (copy) NSString * password; 
@property (copy,readonly) NSString * applePersonID; 
@property (copy,readonly) NSString * appleAuthenticationToken; 
@property (copy,readonly) NSString * googleClientToken; 
@property (nonatomic,readonly) char requiresAuthentication; 
@property (assign) char shouldUseAuthentication; 
@property (assign) char usesSSL; 
@property (readonly) NSURL * subscriptionURL; 
@property (copy,readonly) NSString * subscriptionURLLabel; 
@property (copy) NSString * externalHostname; 
+(id)standardPorts;
+(id)standardSSLPorts;
+(id)accountTypeString;
-(id)initWithAccountInfo:(id)arg1 ;
-(long long)defaultSecurePortNumber;
-(long long)defaultPortNumber;
-(char)canGoOffline;
-(void)releaseAllConnections;
-(void*)keychainProtocol;
-(char)requiresAuthentication;
-(char)connectAndAuthenticate:(id)arg1 ;
-(id)newConnectedConnectionDiscoveringBestSettings:(char)arg1 withConnectTimeout:(double)arg2 readWriteTimeout:(double)arg3 ;
-(id)authenticatedConnection;
-(char)canAuthenticateWithScheme:(id)arg1 ;
-(NSString *)saslProfileName;
-(id)iaServiceType;
-(void)setIsOffline:(char)arg1 ;
-(char)containsMailboxes;
-(id)primaryMailbox;
-(void)fetchSynchronously;
-(Class)storeClassForMailbox:(id)arg1 ;
-(id)_infoForMatchingURL:(id)arg1 ;
-(id)mailboxPathExtension;
-(char)isFirstTimeSync;
-(char)canMailboxBeRenamed:(id)arg1 ;
-(id)_URLPersistenceScheme;
-(void)setIsFirstTimeSync:(char)arg1 ;
-(void)_readCustomInfoFromMailboxCache:(id)arg1 ;
-(id)storeForMailbox:(id)arg1 createIfNeeded:(char)arg2 ;
-(id)archiveMailboxCreateIfNeeded:(char)arg1 ;
-(void)insertInMailboxes:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(id)mailboxes;
-(char)_setPath:(id)arg1 ;
-(id)objectSpecifierForMailbox:(id)arg1 ;
-(long long)messageDeletionPolicy;
-(long long)delayedMessageDeletionInterval;
-(char)canCreateNewMailboxes;
-(id)valueInMailboxesWithName:(id)arg1 ;
-(void)setMessageDeletionPolicy:(long long)arg1 ;
-(MFPOPStore *)fetcher;
-(char)deleteMessagesWhenMovedFromInbox;
-(void)setDeleteMessagesWhenMovedFromInbox:(char)arg1 ;
-(char)deleteMessagesOnServer;
-(void)setDeleteMessagesOnServer:(char)arg1 ;
-(char)fetcherNeedsReset;
-(void)setFetcher:(MFPOPStore *)arg1 ;
-(void)setFetcherNeedsReset:(char)arg1 ;
-(char)_configureFetcherObject;
-(void)setFetchMonitor:(MCActivityMonitor *)arg1 ;
-(MCActivityMonitor *)fetchMonitor;
-(void)resetFetcher;
-(char)hasDoneBackgroundSynchronization;
-(void)setHasDoneBackgroundSynchronization:(char)arg1 ;
-(long long)bigMessageWarningSize;
-(void)setDelayedMessageDeletionInterval:(long long)arg1 ;
-(char)deletingMessages;
-(void)setDeletingMessages:(char)arg1 ;
-(id)newSeenMessagesManager;
-(void)deleteMessagesNow:(id)arg1 ;
-(void)_addAccountAndSeenMessagesToMessageManager;
-(char)logPOPFetchTimes;
-(void)setBigMessageWarningSize:(long long)arg1 ;
-(void)deleteSeenMessagesNow;
-(void)acquireConnectionActivityLock;
-(void)relinquishConnectionActivityLock;
@end

