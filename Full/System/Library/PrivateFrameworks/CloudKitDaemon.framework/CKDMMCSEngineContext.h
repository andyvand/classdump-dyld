/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:34:37 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_semaphore;
#import <CloudKitDaemon/CloudKitDaemon-Structs.h>
@class CKDMMCS, NSString, NSObject, NSRunLoop;

@interface CKDMMCSEngineContext : NSObject {

	char _stopMMCSThread;
	unsigned _maxChunkCountForSection;
	long long _refCount;
	long long _state;
	CKDMMCS* _MMCS;
	MMCSEngineRef _MMCSEngine;
	NSString* _applicationBundleID;
	NSString* _path;
	NSObject*<OS_dispatch_semaphore> _semaphore;
	NSRunLoop* _runLoop;
	NSString* _runLoopMode;
	NSString* _protocolVersion;

}

@property (assign,nonatomic) long long refCount;                                      //@synthesize refCount=_refCount - In the implementation block
@property (assign,nonatomic) long long state;                                         //@synthesize state=_state - In the implementation block
@property (assign,nonatomic) char stopMMCSThread;                                     //@synthesize stopMMCSThread=_stopMMCSThread - In the implementation block
@property (assign,nonatomic,__weak) CKDMMCS * MMCS;                                   //@synthesize MMCS=_MMCS - In the implementation block
@property (assign,nonatomic) MMCSEngineRef MMCSEngine;                                //@synthesize MMCSEngine=_MMCSEngine - In the implementation block
@property (nonatomic,retain) NSString * applicationBundleID;                          //@synthesize applicationBundleID=_applicationBundleID - In the implementation block
@property (nonatomic,retain) NSString * path;                                         //@synthesize path=_path - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_semaphore> semaphore;              //@synthesize semaphore=_semaphore - In the implementation block
@property (nonatomic,retain) NSRunLoop * runLoop;                                     //@synthesize runLoop=_runLoop - In the implementation block
@property (nonatomic,retain) NSString * runLoopMode;                                  //@synthesize runLoopMode=_runLoopMode - In the implementation block
@property (nonatomic,retain) NSString * protocolVersion;                              //@synthesize protocolVersion=_protocolVersion - In the implementation block
@property (assign,nonatomic) unsigned maxChunkCountForSection;                        //@synthesize maxChunkCountForSection=_maxChunkCountForSection - In the implementation block
+(id)sharedContextsQueue;
+(id)_appID;
+(id)sharedContextsByBundleID;
+(id)setupMMCSEngineWithApplicationBundleID:(id)arg1 path:(id)arg2 error:(id*)arg3 ;
+(void)tearDownMMCSEngineWithContext:(id)arg1 ;
-(CKDMMCS *)MMCS;
-(void)setMMCS:(CKDMMCS *)arg1 ;
-(void)setStopMMCSThread:(char)arg1 ;
-(void)setRunLoop:(NSRunLoop *)arg1 ;
-(void)_MMCSTreadAbort;
-(char)stopMMCSThread;
-(MMCSEngineRef)MMCSEngine;
-(void)_MMCSThread;
-(void)setMMCSEngine:(MMCSEngineRef)arg1 ;
-(void)setMaxChunkCountForSection:(unsigned)arg1 ;
-(char)_setupMMCSEngineWithError:(id*)arg1 ;
-(long long)incRefCount;
-(id)initWithApplicationBundleID:(id)arg1 path:(id)arg2 ;
-(char)_setupMMCSEngineWithRetryCount:(unsigned long long)arg1 error:(id*)arg2 ;
-(long long)decRefCount;
-(void)_tearDownMMCSEngine;
-(void)cancelRequestWithContext:(void*)arg1 ;
-(void)performOnRunLoop:(/*^block*/id)arg1 ;
-(int)fdForItemID:(unsigned long long)arg1 itemType:(id*)arg2 error:(id*)arg3 ;
-(void)setRefCount:(long long)arg1 ;
-(void)setSemaphore:(NSObject*<OS_dispatch_semaphore>)arg1 ;
-(unsigned)maxChunkCountForSection;
-(id)CKPropertiesDescription;
-(NSString *)applicationBundleID;
-(void)setApplicationBundleID:(NSString *)arg1 ;
-(NSObject*<OS_dispatch_semaphore>)semaphore;
-(NSString *)runLoopMode;
-(void)setRunLoopMode:(NSString *)arg1 ;
-(void)setProtocolVersion:(NSString *)arg1 ;
-(NSString *)protocolVersion;
-(void)dealloc;
-(id)description;
-(NSString *)path;
-(void)setState:(long long)arg1 ;
-(long long)state;
-(void)setPath:(NSString *)arg1 ;
-(NSRunLoop *)runLoop;
-(long long)refCount;
@end

