/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:34:24 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/AnnotationKit.framework/AnnotationKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AnnotationKit/AnnotationKit-Structs.h>
#import <AppKit/NSResponder.h>
#import <AnnotationKit/AKFormFeatureDetectorDelegate.h>

@class AKAnnotationEventHandler, AKController, AKPageController, AKAlignmentGuideController, NSEvent, AKAnnotation, NSString;

@interface AKMainEventHandler : NSResponder <AKFormFeatureDetectorDelegate> {

	char _mainEventHandlerIsInTrackingLoop;
	char _shouldEatNextLeftMouseUp;
	char _shouldEatNextRightMouseUp;
	char _mainEventHandlerTrackingLoopIsForIntelligentSketch;
	char _dragDidCopySelectedAnnotations;
	char _undoManagerWasGroupingByEvent;
	AKAnnotationEventHandler* _annotationEventHandler;
	unsigned long long _currentModifierFlags;
	AKController* _controller;
	AKPageController* _dragPageController;
	AKAlignmentGuideController* _dragAlignmentGuideController;
	NSEvent* _lastDragEvent;
	NSEvent* _lastLeftMouseDownEvent;
	AKAnnotation* _annotationToBeginEditingOnDragEnd;
	CGPoint _firstDragPoint;
	CGPoint _lastDragPoint;
	CGPoint _lastDragActualLocation;
	CGPoint _leftMouseDownPoint;

}

@property (assign) char mainEventHandlerIsInTrackingLoop;                                  //@synthesize mainEventHandlerIsInTrackingLoop=_mainEventHandlerIsInTrackingLoop - In the implementation block
@property (retain) AKAnnotationEventHandler * annotationEventHandler;                      //@synthesize annotationEventHandler=_annotationEventHandler - In the implementation block
@property (assign) unsigned long long currentModifierFlags;                                //@synthesize currentModifierFlags=_currentModifierFlags - In the implementation block
@property (__weak) AKController * controller;                                              //@synthesize controller=_controller - In the implementation block
@property (assign) char shouldEatNextLeftMouseUp;                                          //@synthesize shouldEatNextLeftMouseUp=_shouldEatNextLeftMouseUp - In the implementation block
@property (assign) char shouldEatNextRightMouseUp;                                         //@synthesize shouldEatNextRightMouseUp=_shouldEatNextRightMouseUp - In the implementation block
@property (assign) char mainEventHandlerTrackingLoopIsForIntelligentSketch;                //@synthesize mainEventHandlerTrackingLoopIsForIntelligentSketch=_mainEventHandlerTrackingLoopIsForIntelligentSketch - In the implementation block
@property (assign) char dragDidCopySelectedAnnotations;                                    //@synthesize dragDidCopySelectedAnnotations=_dragDidCopySelectedAnnotations - In the implementation block
@property (assign) char undoManagerWasGroupingByEvent;                                     //@synthesize undoManagerWasGroupingByEvent=_undoManagerWasGroupingByEvent - In the implementation block
@property (retain) AKPageController * dragPageController;                                  //@synthesize dragPageController=_dragPageController - In the implementation block
@property (retain) AKAlignmentGuideController * dragAlignmentGuideController;              //@synthesize dragAlignmentGuideController=_dragAlignmentGuideController - In the implementation block
@property (assign) CGPoint firstDragPoint;                                                 //@synthesize firstDragPoint=_firstDragPoint - In the implementation block
@property (assign) CGPoint lastDragPoint;                                                  //@synthesize lastDragPoint=_lastDragPoint - In the implementation block
@property (assign) CGPoint lastDragActualLocation;                                         //@synthesize lastDragActualLocation=_lastDragActualLocation - In the implementation block
@property (retain) NSEvent * lastDragEvent;                                                //@synthesize lastDragEvent=_lastDragEvent - In the implementation block
@property (retain) NSEvent * lastLeftMouseDownEvent;                                       //@synthesize lastLeftMouseDownEvent=_lastLeftMouseDownEvent - In the implementation block
@property (assign) CGPoint leftMouseDownPoint;                                             //@synthesize leftMouseDownPoint=_leftMouseDownPoint - In the implementation block
@property (__weak) AKAnnotation * annotationToBeginEditingOnDragEnd;                       //@synthesize annotationToBeginEditingOnDragEnd=_annotationToBeginEditingOnDragEnd - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)newMainEventHandlerForCurrentPlatformWithController:(id)arg1 ;
-(void)setLastDragEvent:(NSEvent *)arg1 ;
-(NSEvent *)lastDragEvent;
-(char)mainHandleEvent:(id)arg1 withOptionalTouches:(id)arg2 ;
-(char)mainEventHandlerIsInTrackingLoop;
-(AKAnnotationEventHandler *)annotationEventHandler;
-(id)pointsFromEvent:(id)arg1 withOptionalTouches:(id)arg2 onPageController:(id*)arg3 ;
-(id)annotationsPassingBoundingBoxHitTestsWithPoints:(id)arg1 onPageController:(id)arg2 ;
-(id)topmostAnnotationForBorderAndInteriorHitTestAtPoints:(id)arg1 inAnnotations:(id)arg2 onPageController:(id)arg3 wasOnBorder:(char*)arg4 wasOnText:(char*)arg5 ;
-(unsigned long long)currentModifierFlags;
-(void)applyTranslationToAllSelectedAnnotations:(CGPoint)arg1 ;
-(char)hitTestPointsOfInterestsAtPoint:(CGPoint)arg1 onPageController:(id)arg2 inAnnotations:(id)arg3 event:(id)arg4 touches:(id)arg5 cursorUpdateOnly:(char)arg6 ;
-(char)handleRightDownEvent:(id)arg1 ;
-(char)handleKeyboardEvent:(id)arg1 ;
-(void)updateCursorForEvent:(id)arg1 ;
-(void)updateCropHandleVisibilityForEvent:(id)arg1 ;
-(CGPoint)firstDragPoint;
-(void)setCurrentModifierFlags:(unsigned long long)arg1 ;
-(void)setAnnotationEventHandler:(AKAnnotationEventHandler *)arg1 ;
-(char)continueDragEventTrackingLoopWithEvent:(id)arg1 withOptionalTouches:(id)arg2 ;
-(void)setMainEventHandlerIsInTrackingLoop:(char)arg1 ;
-(void)setLeftMouseDownPoint:(CGPoint)arg1 ;
-(void)setLastLeftMouseDownEvent:(NSEvent *)arg1 ;
-(char)handleDownEvent:(id)arg1 withOptionalTouches:(id)arg2 ;
-(void)setShouldEatNextLeftMouseUp:(char)arg1 ;
-(void)setShouldEatNextRightMouseUp:(char)arg1 ;
-(char)shouldEatNextLeftMouseUp;
-(CGPoint)leftMouseDownPoint;
-(char)_detectFormElementInCurrentPageControllerUnderPointInWindow:(CGPoint)arg1 withStartingPoint:(CGPoint)arg2 ;
-(char)shouldEatNextRightMouseUp;
-(void)setAnnotationToBeginEditingOnDragEnd:(AKAnnotation *)arg1 ;
-(char)handleDoubleDownEvent:(id)arg1 withOptionalTouches:(id)arg2 ;
-(char)_didNotHandleEventSoDeselect;
-(void)_setCurrentPageBasedOnPageController:(id)arg1 ;
-(void)_updateSelectionWithAnnotation:(id)arg1 onPageController:(id)arg2 ;
-(char)enterDragEventTrackingLoopWithEvent:(id)arg1 withOptionalTouches:(id)arg2 ;
-(NSEvent *)lastLeftMouseDownEvent;
-(void)setDragPageController:(AKPageController *)arg1 ;
-(void)setDragAlignmentGuideController:(AKAlignmentGuideController *)arg1 ;
-(CGPoint)_alignedAnnotationDragPointForPoint:(CGPoint)arg1 withEvent:(id)arg2 ;
-(void)setFirstDragPoint:(CGPoint)arg1 ;
-(void)setLastDragPoint:(CGPoint)arg1 ;
-(CGPoint)lastDragPoint;
-(CGPoint)lastDragActualLocation;
-(AKPageController *)dragPageController;
-(void)setLastDragActualLocation:(CGPoint)arg1 ;
-(AKAnnotation *)annotationToBeginEditingOnDragEnd;
-(void)_beginEditingIfTextAnnotation:(id)arg1 withEvent:(id)arg2 ;
-(char)dragDidCopySelectedAnnotations;
-(char)undoManagerWasGroupingByEvent;
-(void)setDragDidCopySelectedAnnotations:(char)arg1 ;
-(void)setUndoManagerWasGroupingByEvent:(char)arg1 ;
-(AKAlignmentGuideController *)dragAlignmentGuideController;
-(char)mainEventHandlerTrackingLoopIsForIntelligentSketch;
-(void)setMainEventHandlerTrackingLoopIsForIntelligentSketch:(char)arg1 ;
-(void)teardown;
-(AKController *)controller;
-(id)initWithController:(id)arg1 ;
-(void)setController:(AKController *)arg1 ;
@end

