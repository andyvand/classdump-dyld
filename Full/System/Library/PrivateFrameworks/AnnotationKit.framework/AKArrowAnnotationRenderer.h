/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:34:24 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/AnnotationKit.framework/AnnotationKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AnnotationKit/AnnotationKit-Structs.h>
#import <AnnotationKit/AKAnnotationRenderer.h>

@interface AKArrowAnnotationRenderer : AKAnnotationRenderer
+(CGRect)_concreteDrawingBoundsOfAnnotation:(id)arg1 ;
+(CGSize)_concreteDraggingBoundsInsetsForAnnotation:(id)arg1 ;
+(void)_concreteRenderAnnotation:(id)arg1 intoContext:(CGContextRef)arg2 forDisplay:(char)arg3 pageControllerOrNil:(id)arg4 ;
+(char)_concretePointIsOnBorder:(CGPoint)arg1 ofAnnotation:(id)arg2 minimumBorderThickness:(double)arg3 ;
+(char)_concretePointIsOnInside:(CGPoint)arg1 ofAnnotation:(id)arg2 ;
+(CGRect)_concreteTextBoundsOfAnnotation:(id)arg1 withOptionalAnnotationRect:(CGRect)arg2 optionalText:(id)arg3 ;
+(CGPathRef)_newConcreteTextExclusionPathForAnnotation:(id)arg1 withOptionalAnnotationRect:(CGRect)arg2 ;
+(void)_drawPathForArrow:(id)arg1 inContext:(CGContextRef)arg2 inPath:(CGPathRef)arg3 pageControllerForPixelAlignmentOrNil:(id)arg4 minimumGrabbableBorderThickness:(double)arg5 ;
+(void)_controlPointsForArrow:(id)arg1 outControlPoint1:(CGPoint*)arg2 outControlPoint2:(CGPoint*)arg3 ;
+(void)_arrowHeadPathsForArrow:(id)arg1 outStartArrowHead:(CGPathRef)arg2 outBezierStartParameter:(double*)arg3 outEndArrowHead:(CGPathRef)arg4 outBezierEndParameter:(double*)arg5 ;
+(CGPathRef)_newLinePathForArrow:(id)arg1 withHeads:(char)arg2 fromBezierParameter:(double)arg3 toBezierParameter:(double)arg4 optionalPageController:(id)arg5 optionalContext:(CGContextRef)arg6 ;
+(void)_arrowHeadLineIntersection:(id)arg1 outStartIntersection:(CGPoint*)arg2 outBezierStartParameter:(double*)arg3 outEndIntersection:(CGPoint*)arg4 outBezierEndParameter:(double*)arg5 ;
+(unsigned long long)_drawableArrowHeads:(id)arg1 ;
+(double)_oneDimensionalCubicBezierValueForParameter:(double)arg1 start:(double)arg2 controlPt1:(double)arg3 controlPt2:(double)arg4 end:(double)arg5 ;
+(CGPoint)_cubicBezierPointForParameter:(double)arg1 start:(CGPoint)arg2 controlPt1:(CGPoint)arg3 controlPt2:(CGPoint)arg4 end:(CGPoint)arg5 ;
@end

