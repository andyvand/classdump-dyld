/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:34:24 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/AnnotationKit.framework/AnnotationKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <AnnotationKit/AnnotationKit-Structs.h>
@class TSDBezierPath, TSDBrushStroke, TSDLineEnd;

@interface TSDShape : NSObject {

	struct {
		unsigned path : 1;
		unsigned pathBounds : 1;
		unsigned pathBoundsWithoutStroke : 1;
		unsigned pathIsOpen : 1;
		unsigned pathIsLineSegment : 1;
		unsigned alignmentFrame : 1;
		unsigned headAndTail : 1;
		unsigned headLineEnd : 1;
		unsigned tailLineEnd : 1;
		unsigned clippedPath : 1;
	}  mShapeInvalidFlags;
	CGPoint mHeadPoint;
	CGPoint mTailPoint;
	CGPoint mHeadLineEndPoint;
	CGPoint mTailLineEndPoint;
	double mHeadLineEndAngle;
	double mTailLineEndAngle;
	long long mHeadCutSegment;
	long long mTailCutSegment;
	double mHeadCutT;
	double mTailCutT;
	TSDBezierPath* mCachedClippedPath;
	TSDBezierPath* _path;
	TSDBrushStroke* _stroke;
	TSDLineEnd* _headLineEnd;
	TSDLineEnd* _tailLineEnd;

}

@property (nonatomic,retain) TSDBezierPath * path;                  //@synthesize path=_path - In the implementation block
@property (nonatomic,retain) TSDBrushStroke * stroke;               //@synthesize stroke=_stroke - In the implementation block
@property (nonatomic,retain) TSDLineEnd * headLineEnd;              //@synthesize headLineEnd=_headLineEnd - In the implementation block
@property (nonatomic,retain) TSDLineEnd * tailLineEnd;              //@synthesize tailLineEnd=_tailLineEnd - In the implementation block
-(void)setStroke:(TSDBrushStroke *)arg1 ;
-(id)clippedPathForLineEnds;
-(void)p_drawLineEndForHead:(char)arg1 withDelta:(CGPoint)arg2 inContext:(CGContextRef)arg3 useFastDrawing:(char)arg4 ;
-(id)strokeHeadLineEnd;
-(id)strokeTailLineEnd;
-(CGPoint)headLineEndPoint;
-(CGPoint)tailLineEndPoint;
-(double)headLineEndAngle;
-(double)tailLineEndAngle;
-(double)lineEndScale;
-(TSDLineEnd *)headLineEnd;
-(TSDLineEnd *)tailLineEnd;
-(void)p_validateHeadLineEnd;
-(void)p_validateTailLineEnd;
-(id)_newClippedPath;
-(void)p_invalidateClippedPath;
-(void)p_validateHeadAndTail;
-(void)p_computeAngle:(double*)arg1 point:(CGPoint*)arg2 cutSegment:(long long*)arg3 cutT:(double*)arg4 forLineEndAtHead:(char)arg5 ;
-(void)p_invalidateHead;
-(void)p_invalidateTail;
-(void)setHeadLineEnd:(TSDLineEnd *)arg1 ;
-(void)setTailLineEnd:(TSDLineEnd *)arg1 ;
-(id)init;
-(TSDBezierPath *)path;
-(void)drawInContext:(CGContextRef)arg1 ;
-(TSDBrushStroke *)stroke;
-(void)setPath:(TSDBezierPath *)arg1 ;
@end

