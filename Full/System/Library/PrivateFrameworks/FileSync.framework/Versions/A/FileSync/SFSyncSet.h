/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:34:21 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/FileSync.framework/Versions/A/FileSync
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <FileSync/SFBase.h>
#import <FileSync/SFSyncSet.h>
@class NSNumber, NSString, NSArray, NSException, NSDictionary, NSDate, SFPeer, NSSet;


@protocol SFSyncSet
@property (assign) char abortOnUnresolvedConflict; 
@property (assign) double automaticSyncInterval; 
@property (assign) char autoSyncOnFileSystemModification; 
@property (readonly) char canSyncNow; 
@property (copy,readonly) NSNumber * completedBytes; 
@property (copy,readonly) NSNumber * completedItems; 
@property (copy,readonly) NSString * currentItemName; 
@property (copy,readonly) NSString * currentItemPath; 
@property (copy,readonly) NSNumber * currentPass; 
@property (copy) NSArray * defaultSyncOptions; 
@property (copy,readonly) NSString * descriptionDebug; 
@property (copy,readonly) NSException * firstSyncException; 
@property (copy,readonly) NSString * hoardPath; 
@property (readonly) char hasActiveUI; 
@property (readonly) char hasUnsyncedChanges; 
@property (copy) NSDictionary * info; 
@property (assign) char isAutomaticallySyncing; 
@property (readonly) char isPHDSyncSet; 
@property (copy,readonly) NSDate * lastSuccessfulSyncTime; 
@property (readonly) int lastSyncResult; 
@property (copy,readonly) NSArray * legacyConflicts; 
@property (copy,readonly) NSArray * legacyExceptions; 
@property (copy) NSString * name; 
@property (copy) NSDate * nextSyncTime; 
@property (copy,readonly) NSNumber * progress; 
@property (assign) char resetSyncHistoryAtNextSync; 
@property (assign) char resolveAllConflictsWithMostRecent; 
@property (copy) SFPeer * resolveConflictsInFavorOfPeer; 
@property (readonly) unsigned resolvedConflictCount; 
@property (readonly) int state; 
@property (assign) char suppressConflictDialogs; 
@property (assign) char suppressErrorDialogs; 
@property (copy,readonly) NSString * syncSetRef; 
@property (copy,readonly) NSNumber * totalBytes; 
@property (copy,readonly) NSNumber * totalItems; 
@property (copy,readonly) NSNumber * totalPasses; 
@property (readonly) unsigned unresolvedConflictCount; 
@property (readonly) unsigned unresolvedErrorCount; 
@property (copy,readonly) NSSet * allPeers; 
@property (copy,readonly) NSSet * localPeers; 
@property (copy,readonly) NSSet * remotePeers; 
@property (retain) id statusCallbackDelegate; 
@property (assign) SEL statusCallbackSelector; 
@optional
-(void)startSync;
-(id)createPeerHFSWithName:(n@)arg1 syncPointPath:(n@)arg2 storeID:(n@)arg3;
-(id)findPeerByName:(n@)arg1;
-(void)removePeer:(n@)arg1;
-(oneway void)abortSync;
-(void)startSyncWithOptions:(id)arg1;
-(void)displayConflictsAndErrors;
-(void)forget;
-(oneway void)reportedLegacyExceptions:(n@)arg1;
-(oneway void)resolvedLegacyConflicts:(n@)arg1;

@required
-(NSDictionary *)info;
-(char)isPHDSyncSet;
-(NSString *)syncSetRef;
-(char)abortOnUnresolvedConflict;
-(void)setAbortOnUnresolvedConflict:(char)arg1;
-(double)automaticSyncInterval;
-(void)setAutomaticSyncInterval:(double)arg1;
-(char)autoSyncOnFileSystemModification;
-(void)setAutoSyncOnFileSystemModification:(char)arg1;
-(char)canSyncNow;
-(NSNumber *)completedBytes;
-(NSNumber *)completedItems;
-(NSString *)currentItemName;
-(NSString *)currentItemPath;
-(NSNumber *)currentPass;
-(NSArray *)defaultSyncOptions;
-(void)setDefaultSyncOptions:(id)arg1;
-(NSString *)descriptionDebug;
-(NSException *)firstSyncException;
-(NSString *)hoardPath;
-(char)hasActiveUI;
-(char)hasUnsyncedChanges;
-(char)isAutomaticallySyncing;
-(void)setIsAutomaticallySyncing:(char)arg1;
-(NSDate *)lastSuccessfulSyncTime;
-(int)lastSyncResult;
-(NSArray *)legacyConflicts;
-(NSArray *)legacyExceptions;
-(NSDate *)nextSyncTime;
-(void)setNextSyncTime:(id)arg1;
-(char)resetSyncHistoryAtNextSync;
-(void)setResetSyncHistoryAtNextSync:(char)arg1;
-(char)resolveAllConflictsWithMostRecent;
-(void)setResolveAllConflictsWithMostRecent:(char)arg1;
-(SFPeer *)resolveConflictsInFavorOfPeer;
-(void)setResolveConflictsInFavorOfPeer:(id)arg1;
-(unsigned)resolvedConflictCount;
-(char)suppressConflictDialogs;
-(void)setSuppressConflictDialogs:(char)arg1;
-(char)suppressErrorDialogs;
-(void)setSuppressErrorDialogs:(char)arg1;
-(NSNumber *)totalPasses;
-(unsigned)unresolvedErrorCount;
-(NSSet *)localPeers;
-(NSSet *)remotePeers;
-(id)statusCallbackDelegate;
-(void)setStatusCallbackDelegate:(id)arg1;
-(SEL)statusCallbackSelector;
-(void)setStatusCallbackSelector:(SEL)arg1;
-(NSSet *)allPeers;
-(NSNumber *)totalItems;
-(void)setInfo:(id)arg1;
-(NSNumber *)totalBytes;
-(void)setName:(id)arg1;
-(NSString *)name;
-(int)state;
-(NSNumber *)progress;
-(unsigned)unresolvedConflictCount;

@end

#import <FileSync/SFSyncSetPriv.h>

@class NSNumber, NSString, NSArray, NSException, NSDictionary, NSDate, SFPeer, NSSet;

@interface SFSyncSet : SFBase <SFSyncSet, SFSyncSetPriv> {

	NSDictionary* _info;

}

@property (assign) char abortOnUnresolvedConflict; 
@property (assign) double automaticSyncInterval; 
@property (assign) char autoSyncOnFileSystemModification; 
@property (readonly) char canSyncNow; 
@property (copy,readonly) NSNumber * completedBytes; 
@property (copy,readonly) NSNumber * completedItems; 
@property (copy,readonly) NSString * currentItemName; 
@property (copy,readonly) NSString * currentItemPath; 
@property (copy,readonly) NSNumber * currentPass; 
@property (copy) NSArray * defaultSyncOptions; 
@property (copy,readonly) NSString * descriptionDebug; 
@property (copy,readonly) NSException * firstSyncException; 
@property (copy,readonly) NSString * hoardPath; 
@property (readonly) char hasActiveUI; 
@property (readonly) char hasUnsyncedChanges; 
@property (copy) NSDictionary * info; 
@property (assign) char isAutomaticallySyncing; 
@property (readonly) char isPHDSyncSet; 
@property (copy,readonly) NSDate * lastSuccessfulSyncTime; 
@property (readonly) int lastSyncResult; 
@property (copy,readonly) NSArray * legacyConflicts; 
@property (copy,readonly) NSArray * legacyExceptions; 
@property (copy) NSString * name; 
@property (copy) NSDate * nextSyncTime; 
@property (copy,readonly) NSNumber * progress; 
@property (assign) char resetSyncHistoryAtNextSync; 
@property (assign) char resolveAllConflictsWithMostRecent; 
@property (copy) SFPeer * resolveConflictsInFavorOfPeer; 
@property (readonly) unsigned resolvedConflictCount; 
@property (readonly) int state; 
@property (assign) char suppressConflictDialogs; 
@property (assign) char suppressErrorDialogs; 
@property (copy,readonly) NSString * syncSetRef; 
@property (copy,readonly) NSNumber * totalBytes; 
@property (copy,readonly) NSNumber * totalItems; 
@property (copy,readonly) NSNumber * totalPasses; 
@property (readonly) unsigned unresolvedConflictCount; 
@property (readonly) unsigned unresolvedErrorCount; 
@property (copy,readonly) NSSet * allPeers; 
@property (copy,readonly) NSSet * localPeers; 
@property (copy,readonly) NSSet * remotePeers; 
@property (retain) id statusCallbackDelegate; 
@property (assign) SEL statusCallbackSelector; 
@property (copy) NSDictionary * syncSetStatus; 
+(char)automaticallyNotifiesObserversForKey:(id)arg1 ;
+(char)accessInstanceVariablesDirectly;
-(NSDictionary *)info;
-(NSString *)syncSetRef;
-(void)registerForCallbacks;
-(void)_setInfoPrivate:(id)arg1 forwardToFSA:(char)arg2 ;
-(double)automaticSyncInterval;
-(NSNumber *)completedBytes;
-(NSNumber *)completedItems;
-(NSString *)currentItemName;
-(NSString *)currentItemPath;
-(NSNumber *)currentPass;
-(char)hasActiveUI;
-(char)isAutomaticallySyncing;
-(NSDate *)lastSuccessfulSyncTime;
-(int)lastSyncResult;
-(NSDate *)nextSyncTime;
-(NSNumber *)totalPasses;
-(unsigned)unresolvedErrorCount;
-(id)statusCallbackDelegate;
-(void)setStatusCallbackDelegate:(id)arg1 ;
-(SEL)statusCallbackSelector;
-(void)setStatusCallbackSelector:(SEL)arg1 ;
-(void)setAllPeers:(NSSet *)arg1 ;
-(void)statusCallback:(id)arg1 ;
-(NSNumber *)totalItems;
-(void)setInfo:(NSDictionary *)arg1 ;
-(NSNumber *)totalBytes;
-(id)init;
-(void)finalize;
-(void)dealloc;
-(NSString *)name;
-(void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void*)arg4 ;
-(int)state;
-(void)removeObserver:(id)arg1 forKeyPath:(id)arg2 ;
-(NSNumber *)progress;
-(unsigned)unresolvedConflictCount;
@end

