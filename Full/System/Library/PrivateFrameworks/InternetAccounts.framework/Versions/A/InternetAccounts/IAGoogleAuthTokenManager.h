/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:32:42 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/InternetAccounts.framework/Versions/A/InternetAccounts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol IAXPCProtocol;
#import <InternetAccounts/InternetAccounts-Structs.h>
@class NSXPCConnection, NSWindow, NSPanel, IAAListPlugin, NSString, NSArray, NSURL, WebView, NSButton;

@interface IAGoogleAuthTokenManager : NSObject {

	NSXPCConnection* _connection;
	id<IAXPCProtocol> _agent;
	NSWindow* _hostWindow;
	char _isSheet;
	NSPanel* _currentSheet;
	IAAListPlugin* _googlePlugin;
	NSString* _currentToken;
	NSArray* _topLevelObjects;
	NSURL* _webLoginURL;
	WebView* _webview;
	CFURLStorageSessionRef _privateSession;
	NSPanel* _googleWebLoginWebViewPanel;
	NSButton* _doneButton;
	/*^block*/id _completion;

}

@property (retain) NSString * currentToken;              //@synthesize currentToken=_currentToken - In the implementation block
+(id)keychainEntryForUserName:(id)arg1 ;
+(void)setKeychainEntry:(id)arg1 ForUserName:(id)arg2 ;
+(id)googleTokenForEmailAddress:(id)arg1 shouldCreateToken:(char)arg2 ;
+(void)removeKeychainEntryForUserName:(id)arg1 ;
+(id)shared;
-(void)loadNibIfNeeded;
-(void)loadGoogleWebView;
-(void)dropSheet:(id)arg1 ;
-(void)closeSheet;
-(void)cleanUpWebLoginUI;
-(void)setCurrentToken:(NSString *)arg1 ;
-(NSString *)currentToken;
-(void)verifyIdentityButtonPressed:(id)arg1 ;
-(void)setGooglePlugin:(id)arg1 ;
-(void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5 ;
-(id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5 ;
-(void)help:(id)arg1 ;
-(void)displayGoogleWebLoginAlertInWindow:(id)arg1 withWebLoginURL:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)init;
-(void)dealloc;
-(void)cancelButtonPressed:(id)arg1 ;
-(void)dismiss;
-(id)tokenForAccountWithEmailAddress:(id)arg1 shouldCreateToken:(char)arg2 ;
-(id)tokenForAccountUID:(id)arg1 shouldCreateToken:(char)arg2 ;
-(char)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 ;
-(id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3 ;
-(void)done:(id)arg1 ;
@end

