/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:33:26 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/SoftwareUpdate.framework/Versions/A/SoftwareUpdate
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <SoftwareUpdate/SoftwareUpdate-Structs.h>
#import <SoftwareUpdate/SUUpdateClient.h>

@class NSXPCConnection, NSLock, NSArray, SUPowerSourceMonitor, NSError, NSURLCredential, NSString;

@interface SUAppStoreUpdateController : NSObject <SUUpdateClient> {

	NSXPCConnection* _conn;
	NSLock* _connectionLock;
	NSArray* _currentUpdates;
	NSArray* _queuedUpdates;
	dispatch_queue_sRef _q;
	char _requireACPower;
	SUPowerSourceMonitor* _powerMonitor;
	dispatch_queue_sRef _scanAndSessionQ;
	NSError* _lastCantStartError;
	AuthorizationOpaqueRefRef _authRef;
	char _didSendAuth;
	char _destroyAuthRef;
	char _serviceInterrupted;
	long long _numServiceInterruptionsDetected;
	dispatch_queue_sRef _authQueue;
	NSLock* _statusTimerLock;
	NSURLCredential* _sharedURLCredential;

}

@property (assign) char requireACPower;                                //@synthesize requireACPower=_requireACPower - In the implementation block
@property (readonly) char canStartUpdate; 
@property (retain) NSURLCredential * sharedURLCredential;              //@synthesize sharedURLCredential=_sharedURLCredential - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_errorWithCode:(long long)arg1 userInfo:(id)arg2 underlyingError:(id)arg3 ;
+(id)sharedUpdateController;
+(id)keyPathsForValuesAffectingCanStartUpdate;
-(int)catalogTrustLevel;
-(void)authChallengeWasReceived:(id)arg1 handled:(char*)arg2 ;
-(void)availableUpdatesDidChange;
-(void)installStateDidChange:(id)arg1 forUpdateWithProductKey:(id)arg2 ;
-(char)setAuthorization:(AuthorizationOpaqueRefRef)arg1 ;
-(void)setRequireACPower:(char)arg1 ;
-(char)canStartUpdateReturningError:(id*)arg1 ;
-(char)requireACPower;
-(char)canStartUpdate;
-(void)_queryForAvailableUpdatesWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)_softwareUpdateDaemonStarted:(id)arg1 ;
-(id)catalogHostName;
-(char)_authorizeIfNeeded:(char)arg1 ;
-(void)_setAvailableUpdatesAndNotify:(id)arg1 currentStatus:(id)arg2 ;
-(void)_retrieveCatalogInformationWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)availableUpdates;
-(id)_productKeysFromUpdates:(id)arg1 ;
-(long long)actionRequiredForUpdates:(id)arg1 ;
-(id)_shortDescriptionOfUpdates:(id)arg1 ;
-(id)_dictFromUpdateStatus:(id)arg1 ;
-(id)_startSessionForUpdates:(id)arg1 withInstall:(char)arg2 notifyOn:(dispatch_queue_sRef)arg3 progress:(/*^block*/id)arg4 finish:(/*^block*/id)arg5 ;
-(char)installUpdatesAfterNextLogout:(id)arg1 restartingNow:(char)arg2 nowIsLater:(char)arg3 ;
-(void)_stashLoginCredentialsIfAppropriate:(id)arg1 ;
-(id)_updatesFromProductKeys:(id)arg1 ;
-(void)_stashLoginCredentialsEnablingFLO:(char)arg1 ;
-(id)_ignoredUpdateKeys;
-(NSURLCredential *)sharedURLCredential;
-(id)_lookupURLCredentialsFromUserKeychain:(id)arg1 ;
-(void)setSharedURLCredential:(NSURLCredential *)arg1 ;
-(void)_updateCanStartUpdate:(id)arg1 ;
-(id)startScanningForUpdatesIncludingPrerelease:(char)arg1 rampedUnseen:(char)arg2 evenIfUnchanged:(char)arg3 notifyOn:(dispatch_queue_sRef)arg4 progress:(/*^block*/id)arg5 finish:(/*^block*/id)arg6 ;
-(char)isSeedCatalog;
-(unsigned long long)diskSpaceRequiredForUpdates:(id)arg1 ;
-(id)applicationIdentifiersToCloseForUpdates:(id)arg1 ;
-(id)startInstallingUpdates:(id)arg1 notifyOn:(dispatch_queue_sRef)arg2 progress:(/*^block*/id)arg3 finish:(/*^block*/id)arg4 ;
-(char)isDownloadRequiredForPostLogoutUpdates:(id)arg1 ;
-(id)startDownloadingPostLogoutUpdates:(id)arg1 notifyOn:(dispatch_queue_sRef)arg2 progress:(/*^block*/id)arg3 finish:(/*^block*/id)arg4 ;
-(char)installUpdatesAfterNextLogout:(id)arg1 restartingNow:(char)arg2 ;
-(id)updatesToBeInstalledAfterLogout;
-(char)installUpdatesLater:(id)arg1 ;
-(char)removeAllUpdatesFromInstallLater;
-(id)updatesToBeInstalledLater;
-(char)registerRequestsToInstallAfterPostLogoutUpdates:(id)arg1 error:(id*)arg2 ;
-(char)ignoreUpdate:(id)arg1 ;
-(char)hasIgnoredUpdates;
-(char)resetIgnoredUpdates;
-(id)queuedUpdates;
-(void)_setQueuedUpdatesAndNotify:(id)arg1 ;
-(char)enqueueUpdate:(id)arg1 ;
-(char)dequeueUpdate:(id)arg1 ;
-(id)_queuedProductKeys;
-(long long)actionRequiredForQueuedUpdates;
-(unsigned long long)diskSpaceRequiredForQueuedUpdates;
-(id)applicationIdentifiersToCloseForQueuedUpdates;
-(id)startInstallingQueuedUpdatesAndNotifyOn:(dispatch_queue_sRef)arg1 progress:(/*^block*/id)arg2 finish:(/*^block*/id)arg3 ;
-(char)isDownloadRequiredForPostLogoutQueuedUpdates;
-(id)startDownloadingPostLogoutQueuedUpdatesAndNotifyOn:(dispatch_queue_sRef)arg1 progress:(/*^block*/id)arg2 finish:(/*^block*/id)arg3 ;
-(char)installQueuedUpdatesAfterNextLogoutRestartingNow:(char)arg1 ;
-(id)_connection;
-(id)init;
-(void)dealloc;
-(void)cancelOperation:(id)arg1 ;
@end

