/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:32:06 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/SoftwareUpdate.framework/Versions/A/SoftwareUpdate
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <SoftwareUpdate/SoftwareUpdate-Structs.h>
@class NSMutableArray, NSBackgroundActivityScheduler, NSMutableSet, NSError, NSString, NSSet;

@interface SUBackgroundManager : NSObject {

	NSMutableArray* _userVisibleUpdates;
	NSMutableArray* _configDataUpdates;
	NSMutableArray* _firmwareUpdates;
	NSMutableArray* _backgroundInstallCriticalUpdates;
	NSMutableArray* _registerForPostLogoutCriticalUpdates;
	NSMutableArray* _productsQueuedForStaging;
	NSMutableArray* _productsDownloadingInBackground;
	NSBackgroundActivityScheduler* _stageActivityScheduler;
	NSMutableSet* _errorUpdateKeys;
	long long _willAutoInstallNotifyCount;
	NSMutableArray* _willAutoInstallNotifyStrings;
	char _timeToScan;
	char _doCriticalAndConfigDataOnly;
	char _canDownloadAndStage;
	char _wasScanIncomplete;
	NSError* _error;
	NSString* _catalogTestMode;
	AuthorizationOpaqueRefRef _authRef;
	dispatch_queue_sRef _productStateQueue;
	dispatch_queue_sRef _backgroundOpsQueue;
	long long _numInflightOperations;
	NSSet* _previousIncompleteKeys;

}

@property (assign) long long numInflightOperations;              //@synthesize numInflightOperations=_numInflightOperations - In the implementation block
@property (retain) NSSet * previousIncompleteKeys;               //@synthesize previousIncompleteKeys=_previousIncompleteKeys - In the implementation block
+(id)sharedBackgroundManager;
-(void)archiveToCoder:(id)arg1 ;
-(void)restoreFromCoder:(id)arg1 ;
-(void)installStatus:(id)arg1 didChangeExternallyForProductKey:(id)arg2 ;
-(void)dumpDebugInfo;
-(char)downloadAndStageUpdates:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(long long)countOfUpdatesAutoInstalled;
-(id)autoInstallNotificationStrings;
-(void)clearAutoInstalledUpdates;
-(void)cancelBackgroundDownloadIfNecessaryForProductKeys:(id)arg1 replyWhenDone:(/*^block*/id)arg2 ;
-(char)refreshAvailableUpdatesIfRequired;
-(void)downloadRecommendedUpdates;
-(id)_appropriateProductsForAction:(long long)arg1 ;
-(char)_canDownloadAndStageUpdates;
-(char)_evaluateScanRequirements;
-(void)evaluateAvailableUpdatesAndLog:(char)arg1 ;
-(void)_reevaluateAvailableUpdatesIfNecessary;
-(long long)nextActionForProductKey:(id)arg1 returningProduct:(id*)arg2 ;
-(char)_shouldStageUpdate:(id)arg1 ;
-(void)_scheduleStagingForProduct:(id)arg1 ;
-(void)_performBackgroundInstallForProduct:(id)arg1 ;
-(void)_markPendingCriticalUpdateForPostLogoutInstallIfAppropriate:(id)arg1 ;
-(char)_authorizeForDownloadService;
-(long long)_activityDelay;
-(void)_pushProduct:(id)arg1 ;
-(id)_popProduct;
-(void)_stageProducts:(id)arg1 replyWhenDone:(/*^block*/id)arg2 ;
-(void)setCatalogTestMode:(id)arg1 ;
-(void)clearAuthForDownloadService;
-(char)performAnyBackgroundInstallsAndWaitUntilDone;
-(id)incompleteProductKeys;
-(char)shouldRetryAheadOfSchedule;
-(long long)numInflightOperations;
-(void)setNumInflightOperations:(long long)arg1 ;
-(NSSet *)previousIncompleteKeys;
-(void)setPreviousIncompleteKeys:(NSSet *)arg1 ;
-(id)init;
-(void)dealloc;
-(id)error;
-(void)resetState;
@end

