/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:34:28 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/AssistantServices.framework/assistantd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol ADSyncManagerDelegate;
@class ADAccount, ADServiceManager, NSString, NSMutableArray, SASyncAnchor, ADService, NSArray;

@interface ADSyncManager : NSObject {

	ADAccount* _account;
	ADServiceManager* _serviceManager;
	NSString* _anchorsRequestId;
	NSMutableArray* _anchorsToSync;
	NSMutableArray* _syncedAnchors;
	SASyncAnchor* _currentAnchor;
	ADService* _currentSyncService;
	id<ADSyncManagerDelegate> _delegate;
	/*^block*/id _continueBlock;
	char _currentSyncShouldCancel;
	char _syncNeededOverride;
	char _isAggressivelySyncing;
	NSArray* _queuedAnchors;
	char _forceResetOnNextSync;

}

@property (nonatomic,copy) NSString * anchorsRequestId;                                            //@synthesize anchorsRequestId=_anchorsRequestId - In the implementation block
@property (nonatomic,copy) NSArray * queuedAnchors;                                                //@synthesize queuedAnchors=_queuedAnchors - In the implementation block
@property (setter=_setForceResetOnNextSync:) char _forceResetOnNextSync;                           //@synthesize forceResetOnNextSync=_forceResetOnNextSync - In the implementation block
@property (setter=_setCurrentAnchor:,nonatomic,retain) SASyncAnchor * _currentAnchor;              //@synthesize currentAnchor=_currentAnchor - In the implementation block
@property (setter=_setContinueBlock:,nonatomic,copy) id _continueBlock;                            //@synthesize continueBlock=_continueBlock - In the implementation block
-(id)initWithAccount:(id)arg1 serviceManager:(id)arg2 ;
-(void)setAnchorsRequestId:(NSString *)arg1 ;
-(char)isAggressivelySyncing;
-(void)continueSync;
-(NSString *)anchorsRequestId;
-(id)anchorKeysNeedingSync;
-(void)setQueuedAnchors:(NSArray *)arg1 ;
-(void)prepareSyncWithAnchors:(id)arg1 delegate:(id)arg2 ;
-(void)cancelSyncForAnchor:(id)arg1 ;
-(void)setSyncNeeded;
-(void)beginAggressiveSyncWithAnchors:(id)arg1 delegate:(id)arg2 ;
-(NSArray *)queuedAnchors;
-(void)_setForceResetOnNextSync:(char)arg1 ;
-(void)_postSyncFinishedNotification;
-(void)_setCurrentAnchor:(id)arg1 ;
-(void)_setContinueBlock:(/*^block*/id)arg1 ;
-(void)_currentAnchorFinishedWithSuccess:(char)arg1 ;
-(void)_setCurrentAnchorToNext;
-(void)_syncFinishedForService:(id)arg1 ;
-(void)_syncingService:(id)arg1 receivedChunkWithPreAnchor:(id)arg2 post:(id)arg3 anchorValidity:(id)arg4 toAdd:(id)arg5 toRemove:(id)arg6 continueBlock:(/*^block*/id)arg7 ;
-(void)_finishSync;
-(SASyncAnchor *)_currentAnchor;
-(void)_continueSync;
-(id)_preferredSyncKeyOrder;
-(char)_needsSync;
-(id)_sortedAnchorsFromAnchors:(id)arg1 ;
-(void)_setAnchorsToSync:(id)arg1 ;
-(id)_whitelistedAggressiveSyncKeys;
-(char)_forceResetOnNextSync;
-(id)_continueBlock;
-(char)isSyncing;
@end

