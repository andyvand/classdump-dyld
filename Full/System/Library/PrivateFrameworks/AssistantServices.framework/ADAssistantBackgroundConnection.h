/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:34:28 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/AssistantServices.framework/assistantd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <assistantd/assistantd-Structs.h>
#import <assistantd/NSStreamDelegate.h>

@protocol ADAssistantConnectionDelegate;
@class ADAssistantConnection, ADAssistantConnectionInfo, NSInputStream, NSOutputStream, NSMutableData, ADDataDecompressor, ADDataCompressor, NSTimer, ADConnectionType, NSString;

@interface ADAssistantBackgroundConnection : NSObject <NSStreamDelegate> {

	ADAssistantConnection* _owningConnection;
	id<ADAssistantConnectionDelegate> _delegate;
	ADAssistantConnectionInfo* _connectionInfo;
	NSInputStream* _inputStream;
	NSOutputStream* _outputStream;
	NSMutableData* _bufferedInputData;
	NSMutableData* _bufferedOutputData;
	unsigned char _readBuffer[10240];
	ADDataDecompressor* _inputDecompressor;
	ADDataCompressor* _outputCompressor;
	CFHTTPMessageRef _httpResponseHeader;
	char _isOpened;
	char _isCanceled;
	NSTimer* _connectionTimeoutTimer;
	NSTimer* _keepAliveTimer;
	unsigned _currentPingIndex;
	CFDictionaryRef _unacknowledgedPings;
	int _interfaceIndex;
	ADConnectionType* _connectionType;

}

@property (assign,nonatomic,__weak) id<ADAssistantConnectionDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setSendKeepAlives:(char)arg1 ;
-(void)sendCommand:(id)arg1 errorHandler:(/*^block*/id)arg2 ;
-(id)analysisInfo;
-(void)_handleAceObject:(id)arg1 ;
-(id)initWithOwningConnection:(id)arg1 ;
-(void)startWithConnectionInfo:(id)arg1 ;
-(void)_configuredStreamPairForURL:(id)arg1 preferWWAN:(char)arg2 inputStream:(id*)arg3 outputStream:(id*)arg4 ;
-(void)_scheduleAceHeaderTimeoutTimerWithInterval:(double)arg1 ;
-(void)_sendHTTPHeader;
-(void)_sendAceHeader;
-(void)_cleanupRWTimer;
-(id)_presentationAddressFromSockAddr:(sockaddr_storage*)arg1 ;
-(int)_socketForStream:(id)arg1 ;
-(unsigned)_interfaceIndexForSocket:(int)arg1 ;
-(void)_setAdaptiveRWTimeoutEnabled:(char)arg1 forSocket:(int)arg2 ;
-(void)_logPeernameForSocket:(int)arg1 ;
-(void)_scheduleKeepAliveTimer;
-(void)_aceHeaderTimeoutFired:(id)arg1 ;
-(char)_hasReadACEHeader;
-(void)_timeoutWithError:(id)arg1 ;
-(void)_keepAliveTimerFired;
-(void)_sendAcePingWithId:(unsigned)arg1 ;
-(void)_inputStreamEvent:(unsigned long long)arg1 ;
-(void)_outputStreamEvent:(unsigned long long)arg1 ;
-(void)_inputStreamHasBytesAvailable;
-(void)_inputStreamErrorOccurred;
-(void)_inputStreamEndEncountered;
-(void)_outputStreamDidOpen;
-(void)_outputStreamHasSpaceAvailable;
-(void)_outputStreamErrorOccurred;
-(void)_outputStreamEndEncountered;
-(char)_tryReadingHTTPHeaderData:(id)arg1 withMessage:(CFHTTPMessageRef)arg2 remainingData:(id*)arg3 error:(id*)arg4 ;
-(id)_tryReadingAceHeaderFromData:(id)arg1 bytesParsed:(unsigned long long*)arg2 error:(id*)arg3 ;
-(id)_tryReadingParsedDataFromData:(id)arg1 bytesParsed:(unsigned long long*)arg2 error:(id*)arg3 ;
-(void)_handleParsedData:(id)arg1 ;
-(id)_readDataFromInputStream:(id)arg1 ;
-(char)_hasReadHTTPHeader;
-(char)_handleHTTPHeaderWithData:(id)arg1 remainingData:(id*)arg2 error:(id*)arg3 ;
-(char)_handleAceHeaderWithData:(id)arg1 remainingData:(id*)arg2 error:(id*)arg3 ;
-(char)_handleAceDataWithData:(id)arg1 remainingData:(id*)arg2 error:(id*)arg3 ;
-(void)_handleOpenedSocketForStream:(id)arg1 ;
-(void)_tryToWriteBufferedOutputData;
-(char)_shouldSendErrorOnEnd;
-(id)_userAgent;
-(id)_headerDataForURL:(id)arg1 aceHost:(id)arg2 languageCode:(id)arg3 ;
-(void)_sendData:(id)arg1 ;
-(char)_tryParsingHTTPHeaderData:(id)arg1 partialMessage:(CFHTTPMessageRef)arg2 statusCode:(long long*)arg3 remainingBody:(id*)arg4 error:(id*)arg5 ;
-(void)_handleAceNop;
-(void)_handleAcePing:(unsigned)arg1 ;
-(void)_handleAcePong:(unsigned)arg1 ;
-(void)_handleAceEnd;
-(void)_sendAcePongWithId:(unsigned)arg1 ;
-(void)_acknowledgePing:(unsigned)arg1 ;
-(id)_sendBufferBytesRemainingForStream:(id)arg1 ;
-(void)_logPeernameForStream:(id)arg1 ;
-(void)stream:(id)arg1 handleEvent:(unsigned long long)arg2 ;
-(void)_closeConnection;
-(void)setDelegate:(id<ADAssistantConnectionDelegate>)arg1 ;
-(void)dealloc;
-(void)cancel;
-(id<ADAssistantConnectionDelegate>)delegate;
@end

