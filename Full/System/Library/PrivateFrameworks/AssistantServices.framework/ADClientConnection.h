/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:34:28 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/AssistantServices.framework/assistantd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <assistantd/ADCommandCenterClient.h>
#import <assistantd/ADCommandCenterRequestDelegate.h>
#import <assistantd/ADCommandCenterSpeechDelegate.h>
#import <assistantd/AFClientService.h>

@protocol AFClientServiceDelegate;
@class NSString;

@interface ADClientConnection : NSObject <ADCommandCenterClient, ADCommandCenterRequestDelegate, ADCommandCenterSpeechDelegate, AFClientService> {

	id<AFClientServiceDelegate> _serviceDelegate;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithServiceDelegate:(id)arg1 ;
-(void)adSpeechRecordingDidFail:(id)arg1 ;
-(void)adSpeechRecognitionDidFail:(id)arg1 ;
-(void)adRequestDidFinish;
-(void)adSpeechRecordingDidEnd;
-(void)adRequestDidFailWithError:(id)arg1 requestClass:(id)arg2 ;
-(void)adSpeechRecognized:(id)arg1 usingSpeechModel:(id)arg2 ;
-(void)adRequestReplyContextMayInitiateCall;
-(void)adSpeechRecordingWillBegin;
-(void)adSpeechRecordingDidBegin;
-(void)adSpeechRecordingDidUpdateAveragePower:(float)arg1 peakPower:(float)arg2 ;
-(void)adSpeechRecordingDidCancel;
-(void)adShouldSpeakChanged:(char)arg1 ;
-(void)adRequestRequestedOpenURL:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)adRequestRequestedDismissAssistant;
-(void)adRequestDidReceiveCommand:(id)arg1 reply:(/*^block*/id)arg2 ;
-(oneway void)endSession;
-(oneway void)preheat;
-(oneway void)setLockState:(char)arg1 showingLockScreen:(char)arg2 ;
-(oneway void)sendAssistantRequest:(id)arg1 reply:(/*^block*/id)arg2 ;
-(oneway void)sendAssistantDirectActionRequest:(id)arg1 forBundleID:(id)arg2 ;
-(oneway void)startSpeechRequestWithOptions:(id)arg1 ;
-(oneway void)updateSpeechOptions:(id)arg1 ;
-(oneway void)startSpeechCorrectionWithText:(id)arg1 forCorrectionContext:(id)arg2 ;
-(oneway void)stopSpeechWithOptions:(id)arg1 ;
-(oneway void)requestStateUpdateWithReply:(/*^block*/id)arg1 ;
-(oneway void)performGenericAceCommand:(id)arg1 interruptOutstandingRequest:(char)arg2 reply:(/*^block*/id)arg3 ;
-(oneway void)clearAndSetApplicationContextWithBulletins:(id)arg1 ;
-(oneway void)checkLanguageReady:(id)arg1 completion:(/*^block*/id)arg2 ;
-(oneway void)undoRequest;
-(oneway void)redoRequest;
-(oneway void)setManagedStoreObject:(id)arg1 forKey:(id)arg2 ;
-(oneway void)fetchManagedStoreObjectForKey:(id)arg1 reply:(/*^block*/id)arg2 ;
-(oneway void)_listInstalledServicesWithReply:(/*^block*/id)arg1 ;
-(oneway void)_pingServiceForIdentifier:(id)arg1 reply:(/*^block*/id)arg2 ;
-(oneway void)_sendLargeData:(id)arg1 reply:(/*^block*/id)arg2 ;
-(oneway void)_performCommandDictionary:(id)arg1 forBundleIdentifier:(id)arg2 reply:(/*^block*/id)arg3 ;
-(oneway void)_broadcastCommandDictionary:(id)arg1 ;
-(oneway void)_fetchAppContextWithReply:(/*^block*/id)arg1 ;
-(oneway void)_clearAssistantInfoForAccountIdentifier:(id)arg1 ;
-(oneway void)_barrierWithReply:(/*^block*/id)arg1 ;
-(oneway void)_startSpeechWithURL:(id)arg1 isNarrowBand:(char)arg2 ;
-(oneway void)_refreshAssistantValidation;
-(oneway void)cancelRequest;
-(oneway void)cancelSpeech;
-(oneway void)clearContext;
-(oneway void)rollbackRequest;
@end

