/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:34:28 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/AssistantServices.framework/assistantd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <assistantd/AVVoiceControllerRecordDelegate.h>

@protocol OS_dispatch_queue, ADSpeechManagerDelegate, OS_dispatch_source;
@class NSObject, AVVoiceController, NSError, NSURL, NSString, AFDictationOptions, ADSpeechLog;

@interface ADSpeechManager : NSObject <AVVoiceControllerRecordDelegate> {

	NSObject*<OS_dispatch_queue> _queue;
	int _speechState;
	char _shouldTalkToDelegate;
	AVVoiceController* _voiceController;
	NSError* _recordingError;
	char _isCapturingForDictation;
	char _alertsSetUp;
	NSURL* _dictationStartURL;
	NSURL* _dictationStopURL;
	NSURL* _dictationErrorURL;
	NSURL* _assistantStartURL;
	NSURL* _assistantStopURL;
	NSURL* _assistantErrorURL;
	NSString* _recordDevice;
	long long _speechEvent;
	id _deviceIdentifier;
	NSString* _dictationLanguage;
	AFDictationOptions* _dictationOptions;
	id<ADSpeechManagerDelegate> _delegate;
	NSObject*<OS_dispatch_queue> _targetQueue;
	char _didDetectStartpoint;
	char _didDetectEndpoint;
	char _didTimeout;
	long long _packetCount;
	int _powerUpdateFrequency;
	NSObject*<OS_dispatch_source> _powerUpdateTimer;
	/*^block*/id _recordStartedCompletion;
	/*^block*/id _recordStoppedCompletion;
	ADSpeechLog* _speechLog;
	char _suppressRecordingStoppedAlert;
	id _context;
	char _shouldStopSpeechCapture;
	char _audioDuckingEnabled;
	NSString* _bluetoothDeviceAddress;

}

@property (readonly) char isCapturing; 
@property (nonatomic,copy) NSString * dictationLanguage;                                                       //@synthesize dictationLanguage=_dictationLanguage - In the implementation block
@property (nonatomic,retain) AFDictationOptions * dictationOptions; 
@property (nonatomic,retain) id context;                                                                       //@synthesize context=_context - In the implementation block
@property (setter=_setBluetoothDeviceAddress:,nonatomic,copy) NSString * _bluetoothDeviceAddress;              //@synthesize bluetoothDeviceAddress=_bluetoothDeviceAddress - In the implementation block
@property (setter=_setRecordingError:,nonatomic,retain) NSError * _recordingError;                             //@synthesize recordingError=_recordingError - In the implementation block
@property (setter=_setRecordStartedCompletion:,nonatomic,copy) id _recordStartedCompletion;                    //@synthesize recordStartedCompletion=_recordStartedCompletion - In the implementation block
@property (setter=_setRecordStoppedCompletion:,nonatomic,copy) id _recordStoppedCompletion;                    //@synthesize recordStoppedCompletion=_recordStoppedCompletion - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_speechCodecError;
+(id)recordingInterruptedError;
+(id)_speechEndFailureError;
+(id)_speechStartFailureError;
+(id)_badStateError;
+(id)_speechLogDecodingError;
+(id)_speechTimedOutError;
+(id)_noStartpointError;
-(void)setDelegate:(id)arg1 andTargetQueue:(id)arg2 ;
-(char)isCapturing;
-(void)cancelSpeechCaptureSuppressingAlert:(char)arg1 ;
-(void)stopSpeechCaptureForEvent:(long long)arg1 deviceIdentifier:(id)arg2 ;
-(NSString *)dictationLanguage;
-(AFDictationOptions *)dictationOptions;
-(void)setSpeechEvent:(long long)arg1 deviceIdentifier:(id)arg2 ;
-(void)startSpeechCaptureForDictation:(char)arg1 ;
-(void)startSpeechCaptureWithURL:(id)arg1 isNarrowBand:(char)arg2 isDictation:(char)arg3 ;
-(void)setDictationLanguage:(NSString *)arg1 ;
-(void)setDictationOptions:(AFDictationOptions *)arg1 ;
-(void)setRecordingDeviceIdentifier:(id)arg1 ;
-(void)preheatAudioSystemForEvent:(long long)arg1 deviceIdentifier:(id)arg2 ;
-(id)_voiceController;
-(void)_setDictationModeEnabled:(char)arg1 ;
-(char)_prepareVoiceController;
-(void)_loadDictationAlertURLs;
-(void)_loadAssistantAlertURLs;
-(id)_dictationStartAlertURL;
-(id)_dictationStopAlertURL;
-(id)_dictationErrorAlertURL;
-(id)_assistantStartAlertURL;
-(id)_assistantStopAlertURL;
-(id)_assistantErrorAlertURL;
-(void)_cleanupPowerTimer;
-(void)_cleanUpDelegateInfo;
-(void)_setRecordingError:(id)arg1 ;
-(void)_tellDelegateSpeechFailedWithError:(id)arg1 ;
-(void)_tellDelegateSpeechCanceled;
-(void)_tellDelegateSpeechFinishedWithPacketCount:(long long)arg1 endpointMode:(long long)arg2 ;
-(id)_recordStoppedCompletion;
-(void)_setRecordStoppedCompletion:(/*^block*/id)arg1 ;
-(id)_audioSource;
-(void)_tellDelegateSpeechStartedForDictation:(char)arg1 withCodec:(id)arg2 source:(id)arg3 ;
-(void)_setupPowerTimer;
-(void)_cancelRecordingWithError:(id)arg1 ;
-(id)_recordStartedCompletion;
-(void)_setRecordStartedCompletion:(/*^block*/id)arg1 ;
-(id)_errorForRecordingStoppedReason:(long long)arg1 ;
-(NSError *)_recordingError;
-(long long)_endpointModeForRecordingStoppedReason:(long long)arg1 ;
-(void)_recordingStoppedWithError:(id)arg1 shouldPlayAlert:(char)arg2 endpointMode:(long long)arg3 ;
-(void)_tellDelegateAboutSpeechPackets:(id)arg1 count:(long long)arg2 ;
-(void)_setExtendedWaitTime;
-(void)_setSpeechEvent:(long long)arg1 deviceIdentifier:(id)arg2 ;
-(char)_setUpForCapture;
-(void)_setUpAlertsForDictation:(char)arg1 ;
-(void)_tellDelegateSpeechWillBegin;
-(void)_releaseSession;
-(void)_setAudioDuckingEnabled:(char)arg1 ;
-(void)_setDictationAudioModeEnabled:(char)arg1 ;
-(void)_resetVoiceController;
-(id)_activationModeForEvent:(long long)arg1 ;
-(id)_currentDeviceContext;
-(void)_tellDelegateAboutAveragePower:(float)arg1 peak:(float)arg2 ;
-(void)voiceControllerCodecErrorDidOccur:(id)arg1 wasEncode:(char)arg2 wasDecode:(char)arg3 error:(id)arg4 ;
-(void)voiceControllerDidDetectEndpoint:(id)arg1 ;
-(void)voiceControllerBeginRecordInterruption:(id)arg1 ;
-(void)voiceControllerEndRecordInterruption:(id)arg1 ;
-(void)voiceControllerRecordHardwareConfigurationDidChange:(id)arg1 toConfiguration:(int)arg2 ;
-(NSString *)_bluetoothDeviceAddress;
-(void)_setBluetoothDeviceAddress:(id)arg1 ;
-(void)endSession;
-(void)voiceControllerDidStartRecording:(id)arg1 successfully:(char)arg2 ;
-(void)voiceControllerRecordBufferAvailable:(id)arg1 buffer:(id)arg2 ;
-(void)voiceControllerDidStopRecording:(id)arg1 forReason:(long long)arg2 ;
-(void)voiceControllerDidDetectStartpoint:(id)arg1 ;
-(void)voiceControllerDidDetectEndpoint:(id)arg1 ofType:(int)arg2 ;
-(id)init;
-(void)dealloc;
-(id)context;
-(void)setContext:(id)arg1 ;
@end

