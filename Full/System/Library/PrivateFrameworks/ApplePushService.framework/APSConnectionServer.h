/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:34:27 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/ApplePushService.framework/apsd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <apsd/APSWakeStateChangeAllNotificationsProtocol.h>

@protocol APSConnectionServerDelegate, OS_xpc_object;
@class NSString, NSData, NSSet, NSObject, NSOperationQueue, APSTokenState, NSArray, APSPerAppTokenMap, APSPowerAssertion, NSDate, APSPayloadMessageStats, NSMutableDictionary, APSPayloadMessageStats2;

@interface APSConnectionServer : NSObject <APSWakeStateChangeAllNotificationsProtocol> {

	id<APSConnectionServerDelegate> _delegate;
	NSString* _environmentName;
	NSData* _publicToken;
	unsigned _connectionMachPort;
	NSString* _connectionPortName;
	NSSet* _enabledTopics;
	NSSet* _ignoredTopics;
	NSSet* _opportunisticTopics;
	unsigned long long _messageSize;
	unsigned long long _largeMessageSize;
	char _enableCriticalReliability;
	char _usesAppLaunchStats;
	char _enableStatusChangeNotifications;
	int _clientPID;
	NSObject*<OS_xpc_object> _connection;
	NSOperationQueue* _queue;
	NSString* _name;
	APSTokenState* _tokenState;
	NSArray* _entitledTopics;
	APSPerAppTokenMap* _perAppTokenMap;
	NSString* _processName;
	char _isInitialized;
	char _isInvalidated;
	char _freshMachPort;
	char _pendingSavePersistentConnectionTopics;
	APSPowerAssertion* _changingTopicsPowerAssertion;
	NSDate* _dateCreated;
	APSPayloadMessageStats* _payloadMessageStats;
	NSMutableDictionary* _payloadMessageStatsByTopic;
	APSPayloadMessageStats2* _payloadMessageStats2;
	long long _numberNotifications;
	double _lastNotificationTime;
	long long _numberNotificationsQueued;
	long long _numberNotificationsDropped;
	long long _numberNotificationsLost;
	long long _numberNotificationsSent;
	double _lastNotificationSentTime;
	long long _numberNotificationsAcknowledged;
	double _lastNotificationAcknowledgedTime;
	char _enableDarkWake;
	NSSet* _pushWakeTopics;

}

@property (assign,nonatomic) id<APSConnectionServerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain,readonly) NSSet * enabledTopics;                        //@synthesize enabledTopics=_enabledTopics - In the implementation block
@property (nonatomic,retain,readonly) NSSet * ignoredTopics;                        //@synthesize ignoredTopics=_ignoredTopics - In the implementation block
@property (nonatomic,retain,readonly) NSSet * opportunisticTopics;                  //@synthesize opportunisticTopics=_opportunisticTopics - In the implementation block
@property (nonatomic,readonly) char hasIdentity; 
@property (nonatomic,readonly) char isConnected; 
@property (assign,nonatomic) NSObject*<OS_xpc_object> connection;                   //@synthesize connection=_connection - In the implementation block
@property (nonatomic,retain,readonly) NSString * environmentName;                   //@synthesize environmentName=_environmentName - In the implementation block
@property (nonatomic,retain,readonly) NSString * processName; 
@property (nonatomic,retain) NSData * publicToken;                                  //@synthesize publicToken=_publicToken - In the implementation block
@property (assign,nonatomic) unsigned long long messageSize;                        //@synthesize messageSize=_messageSize - In the implementation block
@property (assign,nonatomic) unsigned long long largeMessageSize;                   //@synthesize largeMessageSize=_largeMessageSize - In the implementation block
@property (assign,nonatomic) char enableCriticalReliability;                        //@synthesize enableCriticalReliability=_enableCriticalReliability - In the implementation block
@property (assign,nonatomic) char enableStatusChangeNotifications;                  //@synthesize enableStatusChangeNotifications=_enableStatusChangeNotifications - In the implementation block
@property (assign,nonatomic) char usesAppLaunchStats;                               //@synthesize usesAppLaunchStats=_usesAppLaunchStats - In the implementation block
@property (nonatomic,readonly) NSString * name;                                     //@synthesize name=_name - In the implementation block
@property (nonatomic,readonly) NSString * tokenName; 
@property (nonatomic,readonly) APSTokenState * tokenState;                          //@synthesize tokenState=_tokenState - In the implementation block
@property (nonatomic,readonly) char isInvalidated;                                  //@synthesize isInvalidated=_isInvalidated - In the implementation block
@property (nonatomic,readonly) char hasClient; 
@property (nonatomic,readonly) char enableDarkWake;                                 //@synthesize enableDarkWake=_enableDarkWake - In the implementation block
@property (nonatomic,retain) NSSet * pushWakeTopics;                                //@synthesize pushWakeTopics=_pushWakeTopics - In the implementation block
@property (assign,nonatomic) char isInitialized;                                    //@synthesize isInitialized=_isInitialized - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)serverFromServers:(id)arg1 havingEnvironmentName:(id)arg2 connectionPortName:(id)arg3 ;
+(id)serverEnvironmentNamesForUserID:(id)arg1 enableDarkWake:(char)arg2 ;
+(id)serversWithEnvironmentName:(id)arg1 tokenState:(id)arg2 excludeServers:(id)arg3 delegate:(id)arg4 ;
+(id)environmentForNamedPort:(id)arg1 uid:(unsigned)arg2 ;
-(NSString *)tokenName;
-(NSString *)environmentName;
-(id)connectionPortName;
-(id)initWithDelegate:(id)arg1 tokenState:(id)arg2 enableDarkWake:(char)arg3 environmentName:(id)arg4 connectionPortName:(id)arg5 connection:(id)arg6 ;
-(void)setEnableStatusChangeNotifications:(char)arg1 ;
-(void)populatePerAppTokenMappingsFromPreferences:(id)arg1 ;
-(void)_initiateConnectionIfNecessary;
-(void)performOSXInitializationWithTokenState:(id)arg1 enableDarkWake:(char)arg2 environmentName:(id)arg3 connectionPortName:(id)arg4 connection:(id)arg5 ;
-(void)_lookUpMachPort;
-(void)_suspendQueue;
-(id)processNameWithLabels:(char)arg1 ;
-(id)_commonDebugDescription;
-(id)copyConnectionInitiateEntitlementArray:(id)arg1 ;
-(void)_resumeQueue;
-(void)_requestAnyMissingPerAppTokens;
-(void)_enqueueXPCMessage:(/*^block*/id)arg1 wakingClient:(char)arg2 highPriority:(char)arg3 ;
-(void)_sendClientPerAppToken:(id)arg1 forTopic:(id)arg2 identifier:(id)arg3 ;
-(void)_savePersistentConnectionTopics;
-(void)_requestMissingPerAppTokenForTopic:(id)arg1 identifier:(id)arg2 ;
-(char)hasClient;
-(void)_clearAllPerAppTokens;
-(NSSet *)enabledTopics;
-(NSSet *)opportunisticTopics;
-(NSSet *)ignoredTopics;
-(char)isAcknowledgedPublicToken:(id)arg1 ;
-(void)_warnIfOverlappingTopics:(id)arg1 againstTopics:(id)arg2 string:(id)arg3 ;
-(char)areTopicsEntitled:(id)arg1 ;
-(char)_containsInvalidTopic:(id)arg1 ;
-(void)_informTopicManagerOfChangedFilter:(long long)arg1 newTopics:(id)arg2 oldTopics:(id)arg3 ;
-(void)saveAndUpdateDelegate;
-(void)refreshMessageStatsByTopicMapping;
-(void)_possiblyToggleAppRefreshSubscription;
-(char)_hasAppRefreshDarkWakeTopics;
-(void)_savePersistentConnectionTopicsImmediately;
-(id)perAppTokenMappingsForPreferences;
-(void)prepareForWakeStateChange:(id)arg1 ;
-(char)isTopicEntitled:(id)arg1 ;
-(id)tokenHashForToken:(id)arg1 ;
-(void)prepareForSleep;
-(void)prepareForDarkWake;
-(void)prepareForFullWake;
-(void)appendPrettyStatusToStatusPrinter:(id)arg1 forTopics:(id)arg2 type:(id)arg3 ;
-(void)connectionHandshakeDidComplete;
-(void)connectionInvalidated;
-(void)handleConnectionStatusChanged:(char)arg1 ;
-(void)handleReceivedMessage:(id)arg1 ;
-(void)handleResult:(id)arg1 forSendingOutgoingMessageWithID:(unsigned long long)arg2 ;
-(void)handleSendOutgoingMessage:(id)arg1 ;
-(void)handleCancelOutgoingMessageWithID:(unsigned long long)arg1 ;
-(void)handleFakeMessage:(id)arg1 ;
-(void)handleRequestPerAppTokenForTopic:(id)arg1 identifier:(id)arg2 ;
-(void)handleInvalidatePerAppTokenForTopic:(id)arg1 identifier:(id)arg2 ;
-(void)handleAckIncomingMessageWithGuid:(id)arg1 ;
-(void)handleReceivedPerAppToken:(id)arg1 forTopic:(id)arg2 identifier:(id)arg3 ;
-(void)setPublicToken:(NSData *)arg1 ;
-(void)handleNotificationAcknowledged;
-(id)perAppTokensForTopic:(id)arg1 ;
-(void)appendPrettyStatusToStatusPrinter:(id)arg1 ;
-(char)enableStatusChangeNotifications;
-(APSTokenState *)tokenState;
-(char)enableDarkWake;
-(NSSet *)pushWakeTopics;
-(void)acknowledgeDidReceivePublicToken:(id)arg1 ;
-(void)performOSXDeallocation;
-(void)setLargeMessageSize:(unsigned long long)arg1 ;
-(void)setEnabledTopics:(id)arg1 ignoredTopics:(id)arg2 opportunisticTopics:(id)arg3 ;
-(void)setUsesAppLaunchStats:(char)arg1 ;
-(char)usesAppLaunchStats;
-(char)hasIdentity;
-(id)allPerAppTokens;
-(NSData *)publicToken;
-(char)isInvalidated;
-(void)setPushWakeTopics:(NSSet *)arg1 ;
-(unsigned long long)messageSize;
-(void)setConnection:(NSObject*<OS_xpc_object>)arg1 ;
-(void)setMessageSize:(unsigned long long)arg1 ;
-(char)isInitialized;
-(NSObject*<OS_xpc_object>)connection;
-(void)setIsInitialized:(char)arg1 ;
-(void)setDelegate:(id<APSConnectionServerDelegate>)arg1 ;
-(void)dealloc;
-(NSString *)debugDescription;
-(NSString *)name;
-(char)isConnected;
-(id<APSConnectionServerDelegate>)delegate;
-(NSString *)processName;
-(void)close;
-(char)enableCriticalReliability;
-(void)setEnableCriticalReliability:(char)arg1 ;
-(unsigned long long)largeMessageSize;
@end

