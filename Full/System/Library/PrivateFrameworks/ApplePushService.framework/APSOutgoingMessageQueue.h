/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:34:27 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/ApplePushService.framework/apsd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <apsd/APSSystemMonitorListener.h>
#import <apsd/APSDecayTimerDelegate.h>

@protocol APSOutgoingMessageQueueDelegate;
@class APSEnvironment, NSMutableArray, NSTimer, APSPowerAssertion, APSDecayTimer, NSString;

@interface APSOutgoingMessageQueue : NSObject <APSSystemMonitorListener, APSDecayTimerDelegate> {

	id<APSOutgoingMessageQueueDelegate> _delegate;
	APSEnvironment* _environment;
	NSMutableArray* _queue;
	NSTimer* _timer;
	double _criticalMessageTimeout;
	NSTimer* _criticalMessageKeepAliveTimer;
	double _criticalMessageKeepAliveTimerDuration;
	unsigned long long _criticalMessageFlushCount;
	unsigned long long _numberOfCriticalMessageFlushesBeforeDisconnecting;
	unsigned long long _criticalMessageFlushSize;
	unsigned long long _lowPriorityMessageBatchSize;
	unsigned long long _maximumLowPriorityBatchesPerHour;
	double _forcedShortTimeoutDuration;
	double _lastReceivedAckOrReconnect;
	APSPowerAssertion* _powerAssertion;
	APSDecayTimer* _lowPriorityDecayTimer;
	NSTimer* _lowPriorityTimer;
	char _isEfficientToSendLowPriority;
	unsigned long long _numberQueued;
	double _lastNotificationQueued;
	unsigned long long _numberAcked;
	double _lastNotificationAcked;

}

@property (nonatomic,readonly) char hasPendingMessages; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)appendPrettyStatusToStatusPrinter:(id)arg1 ;
-(id)initWithDelegate:(id)arg1 environment:(id)arg2 ;
-(void)enqueueOutgoingMessage:(id)arg1 forConnection:(id)arg2 ;
-(void)cancelOutgoingMessageWithID:(unsigned long long)arg1 ;
-(void)handleConnectionClosed;
-(void)setNumberOfCriticalMessageFlushesBeforeDisconnecting:(id)arg1 ;
-(void)setCriticalMessageKeepAliveTimerDuration:(id)arg1 ;
-(void)setCriticalMessageTimeout:(id)arg1 ;
-(void)handleConnectionOpened;
-(void)handleSentOutgoingMessage:(id)arg1 ;
-(void)handleErrorSendingOutgoingMessage:(id)arg1 error:(id)arg2 ;
-(id)outgoingMessagesToSendForTokenName:(id)arg1 ;
-(void)handleAcknowledgmentForOutgoingMessageWithResult:(id)arg1 ;
-(void)decayTimerFired:(id)arg1 ;
-(void)_clearLowPriorityTimer;
-(void)_clearCriticalMessageKeepAliveTimer;
-(void)_lowPriorityTimerFired;
-(void)_recalculateLowPriorityTimer;
-(void)_queueChanged;
-(void)_deliverResult:(id)arg1 forMessage:(id)arg2 ;
-(void)_clearCriticalMessageKeepAliveTimerIfAppropriate;
-(void)_recalculateTimer;
-(void)_recalculatePowerAssertion;
-(char)_outgoingMessageIsLateCriticalMessage:(id)arg1 ;
-(void)_startCriticalMessageFlushTimerSendingFlush;
-(void)_criticalMessageKeepAliveTimerFired;
-(void)setIsPowerEfficientToSendLowPriorityMessages:(char)arg1 ;
-(unsigned long long)_costForLowPriorityMessageSendOnInterface:(long long)arg1 ;
-(char)hasPendingMessages;
-(void)setLowPriorityMessageBatchSize:(id)arg1 ;
-(void)setMaximumLowPriorityBatchesPerHour:(id)arg1 ;
-(void)setForcedShortTimeoutInterval:(id)arg1 ;
-(void)_timerFired:(id)arg1 ;
-(void)systemDidLock;
-(void)dealloc;
-(unsigned long long)count;
@end

