/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:34:27 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/ApplePushService.framework/apsd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <apsd/apsd-Structs.h>
#import <apsd/APSClientIdentityAvailabilityChangeNotificationProtocol.h>
#import <apsd/APSClientIdentityAvailabilityChangeAllNotificationsProtocol.h>
#import <apsd/APSWakeStateChangeAllNotificationsProtocol.h>
#import <apsd/APSTCPStreamDelegate.h>
#import <apsd/APSTopicManagerDelegate.h>
#import <apsd/APSNetworkMonitorDelegate.h>
#import <apsd/APSConnectionServerDelegate.h>
#import <apsd/APSOutgoingMessageQueueDelegate.h>
#import <apsd/APSSystemMonitorListener.h>
#import <apsd/APSAppLaunchStatsDelegate.h>

@protocol APSCourierDelegate;
@class APSEnvironment, APSPushHistory, APSProtocolParser, NSData, NSTimer, NSDate, APSFreshObjectCache, NSString, NSNumber, NSCountedSet, NSMutableSet, NSMutableDictionary, APSPowerAssertion, APSOutgoingMessageQueue, APSOutgoingQueue, APSTCPStreamMaster, APSConnectionServers, APSTokenState, APSConnectionServer;

@interface APSCourier : NSObject <APSClientIdentityAvailabilityChangeNotificationProtocol, APSClientIdentityAvailabilityChangeAllNotificationsProtocol, APSWakeStateChangeAllNotificationsProtocol, APSTCPStreamDelegate, APSTopicManagerDelegate, APSNetworkMonitorDelegate, APSConnectionServerDelegate, APSOutgoingMessageQueueDelegate, APSSystemMonitorListener, APSAppLaunchStatsDelegate> {

	id<APSCourierDelegate> _delegate;
	APSEnvironment* _environment;
	OpaqueSecIdentityRefRef _clientIdentity;
	APSPushHistory* _pushHistory;
	APSProtocolParser* _protocolParser;
	NSData* _cachedPublicToken;
	char _enabled;
	char _enableCriticalReliability;
	NSTimer* _criticalFlushTimer;
	char _forcedWWANInterface;
	char _useStandardPort;
	char _isConnectedToService;
	unsigned long long _consecutiveConnectionFailureCount;
	NSDate* _lastConnectionAttempt;
	double _lastClientRequestedKeepaliveTime;
	double _lastLateCriticalOutgoingMessageAcknowledgmentReconnectTime;
	APSFreshObjectCache* _recentMessages;
	NSData* _lastReceivedPayloadHash;
	NSString* _lastReceivedTopic;
	double _lastReceivedTopicTime;
	NSNumber* _lastReceivedTimestamp;
	NSString* _lastReceivedTopicToCauseWake;
	double _lastReceivedTopicToCauseWakeTime;
	NSCountedSet* _topicsToCauseWake;
	NSCountedSet* _offendingTopics;
	NSMutableSet* _everyPushWakeTopic;
	NSCountedSet* _inhibitedTopics;
	NSMutableDictionary* _hashesToTopics;
	NSTimer* _connectionEstablishTimer;
	APSPowerAssertion* _connectionEstablishPowerAssertion;
	NSTimer* _keepAliveTimer;
	APSPowerAssertion* _keepAlivePowerAssertion;
	APSOutgoingMessageQueue* _outgoingMessageQueue;
	APSOutgoingQueue* _tokenRequestQueue;
	NSDate* _startedOpeningStream;
	NSDate* _keepAliveSent;
	NSDate* _timeSinceLastKeepAlive;
	double _lastKeepAliveFailureTime;
	double _startedDarkWake;
	char _isIdentityAvailable;
	APSTCPStreamMaster* _tcpStream;
	NSString* _previousIPAddress;
	char _isStreamConnected;
	double _connectionTime;
	unsigned long long _scheduledReconnectionAttemptCount;
	int _interfacePreference;
	NSTimer* _resetInterfacePreferenceTimer;
	unsigned long long _failedDueToUntrustedPeerCount;
	unsigned long long _forceKeepAliveProxyInterfaceFailureCount;
	unsigned long long _obtainKeepAliveProxyFailureCount;
	unsigned long long _findKeepAliveProxyInterfaceFailureCount;
	char _firstPushSinceWake;
	SCNetworkReachabilityRef _connectionReachability;
	unsigned _lastReachabilityFlags;
	double _lastReachabilityChangeHandled;
	char _pendingReachabilityChange;
	char _lastHasConnectionsWithListeningTopics;
	APSConnectionServers* _connections;
	APSTokenState* _tokenStateForOutstandingPresenceMessage;
	APSConnectionServer* _connectionServerForOutstandingAppTokenMessage;
	APSPowerAssertion* _dataReceivedPowerAssertion;
	NSMutableDictionary* _tokenNameToTokenStateMapping;
	NSMutableDictionary* _tokenToTokenNameMapping;
	NSMutableDictionary* _perAppTokenToTokenNameMapping;
	char _disconnectingStream;
	NSTimer* _reconnectTimer;
	double _currentKeepAliveInterval;
	NSTimer* _sendKeepAliveTimer;
	NSTimer* _presenceMessageTimer;
	APSPowerAssertion* _presenceMessagePowerAssertion;
	NSMutableDictionary* _recreateCourierStateTimers;
	APSPowerAssertion* _recreateCourierStatePowerAssertion;
	long long _usersPotentiallyWithMessages;
	double _lastUserConnectTime;
	long long _successfulConnectionCount;
	APSPowerAssertion* _waitForStoredMessagesToArrivePowerAssertion;
	APSPowerAssertion* _waitForConnectionAttemptsPowerAssertion;

}

@property (nonatomic,readonly) char hasIdentity; 
@property (assign,nonatomic) char isConnectedToService;                          //@synthesize isConnectedToService=_isConnectedToService - In the implementation block
@property (nonatomic,retain,readonly) APSEnvironment * environment;              //@synthesize environment=_environment - In the implementation block
@property (nonatomic,retain,readonly) NSData * publicToken; 
@property (nonatomic,readonly) unsigned long long messageSize; 
@property (nonatomic,readonly) double currentKeepAliveInterval; 
@property (assign,nonatomic) id<APSCourierDelegate> delegate;                    //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)_updatePendingWork;
-(id)connectionServers;
-(id)connectionServersForTokenName:(id)arg1 ;
-(void)connectionDidClientDisconnect:(id)arg1 ;
-(void)connectionWasClosed:(id)arg1 ;
-(void)connection:(id)arg1 didReceiveOutgoingMessageToSend:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveCancellationForOutgoingMessageWithID:(unsigned long long)arg2 ;
-(void)connection:(id)arg1 didReceiveFakeMessageToSend:(id)arg2 ;
-(void)connection:(id)arg1 didInvalidatePerAppToken:(id)arg2 forTopic:(id)arg3 identifier:(id)arg4 ;
-(void)connection:(id)arg1 handleAckIncomingMessageWithGuid:(id)arg2 ;
-(void)connectionTopicsChanged:(id)arg1 ;
-(char)connectionDelegateHasIdentity:(id)arg1 ;
-(char)connectionDelegateIsConnectedToService:(id)arg1 ;
-(void)connectionChangedCriticalReliability:(id)arg1 ;
-(void)connection:(id)arg1 didRequestPerAppTokenForTopic:(id)arg2 identifier:(id)arg3 ;
-(void)prepareForSleep;
-(void)prepareForDarkWake;
-(void)prepareForFullWake;
-(void)appendPrettyStatusToStatusPrinter:(id)arg1 ;
-(void)pendingWorkCanProcess:(id)arg1 ;
-(void)performOSXInitialization;
-(OpaqueSecIdentityRefRef)_getClientIdentity;
-(void)performPreOSXDeallocation;
-(void)_disconnectStream;
-(void)_useInteractivePowerAssertionIfNeededForConnectionServer:(id)arg1 withReason:(id)arg2 ;
-(id)publicTokenForTokenName:(id)arg1 ;
-(void)_startRecreateCourierStateTimerForTokenName:(id)arg1 bePatient:(char)arg2 ;
-(id)connectionForConnectionPortName:(id)arg1 tokenName:(id)arg2 ;
-(void)clearOffendingTopicsFromTopics:(id)arg1 tokenState:(id)arg2 ;
-(void)_recalculateCriticalReliability;
-(id)tokenStateForTokenName:(id)arg1 ;
-(char)isConnectedToService;
-(void)_adjustConnection;
-(void)_connectTokenWithTokenName:(id)arg1 ;
-(void)_sendOutgoingMessage:(id)arg1 ;
-(void)_decideWhetherToSendOutgoingMessage:(id)arg1 connection:(id)arg2 ;
-(void)_notePush;
-(void)_notifyForIncomingMessage:(id)arg1 ;
-(char)_hasPendingRecreateCourierStateTimerForTokenName:(id)arg1 ;
-(id)_copyHashForTopic:(id)arg1 ;
-(void)_schedulePendingWorkUpdate;
-(void)_performKeepAlive;
-(void)_requestKeepAlive:(char)arg1 orConnection:(char)arg2 onInterface:(long long)arg3 ;
-(void)_requestKeepAlive:(char)arg1 orConnection:(char)arg2 ;
-(id)tokenStateForToken:(id)arg1 isPerAppToken:(char*)arg2 ;
-(char)_adjustConnectabilityOfTokenState:(id)arg1 ;
-(void)_clearAllRecreateCourierStateTimers;
-(char)_adjustConnectabilityInTokenStates;
-(void)_tryConnectingOrDisconnectingTokens;
-(void)_sendFilterMessageForTokenName:(id)arg1 ;
-(id)_copyHashForData:(id)arg1 ;
-(void)_processStoredIncomingMessages;
-(void)_processStoredOutgoingMessages;
-(char)_hasListeningTopics;
-(char)_isConnectable;
-(void)_connectStream;
-(void)_clearReconnectTimer;
-(char)_requestKeepAliveProxy;
-(void)_clearResetInterfacePreferenceTimer;
-(void)_startConnectionEstablishTimer;
-(void)_startReconnectTimer;
-(void)setIsConnectedToService:(char)arg1 ;
-(void)_clearConnectionEstablishTimer;
-(void)_clearKeepAliveResponseTimer;
-(void)_clearPresenceMessageTimer;
-(void)_clearSendKeepAliveTimer;
-(void)_disconnectTokenWithTokenName:(id)arg1 ;
-(void)_fireAllRecreateCourierStateTimers;
-(void)_processPendingWorkForTopic:(id)arg1 ;
-(void)_recalculateKeepAliveInterval;
-(void)_handleDisconnectedMessage:(id)arg1 ;
-(void)_handleConnectedMessage:(id)arg1 ;
-(void)_handleMessageMessage:(id)arg1 ;
-(void)_handleOutgoingMessageAcknowledgment:(id)arg1 ;
-(void)_handleKeepAliveResponseMessage:(id)arg1 ;
-(void)_handleFlushMessage:(id)arg1 ;
-(void)_handleAppTokenGenerateResponse:(id)arg1 ;
-(void)_handleNoStorageMessage:(id)arg1 ;
-(void)_handleConnectionFailureForcingDelayedReconnect:(char)arg1 ;
-(void)possiblyDeleteKeychainBasedOnError:(id)arg1 ;
-(void)setPublicToken:(id)arg1 forTokenName:(id)arg2 ;
-(void)_startSendKeepAliveTimer;
-(void)_sendActiveStateMessageWithSendAllBlueListMessages:(char)arg1 ;
-(id)_topicNamesFromTopicStates:(id)arg1 ;
-(void)_sendQueuedOutgoingMessagesForTokenState:(id)arg1 ;
-(id)tokenNameForToken:(id)arg1 isPerAppToken:(char*)arg2 ;
-(char)_incomingPayloadDisplaysUI:(id)arg1 ;
-(id)_cacheObjectWithTopic:(id)arg1 payloadHash:(id)arg2 ;
-(id)_copyParsedPayload:(id)arg1 messageId:(id*)arg2 errorString:(id*)arg3 ;
-(void)_tracePayload:(id)arg1 withTopic:(id)arg2 tokenName:(id)arg3 ;
-(void)_handleIncomingMessage:(id)arg1 userInfo:(id)arg2 topic:(id)arg3 topicHash:(id)arg4 tokenName:(id)arg5 topicCausedWake:(char)arg6 ;
-(double)currentKeepAliveInterval;
-(void)_startKeepAliveResponseTimer;
-(void)_performFlushWithPaddingLength:(unsigned long long)arg1 ;
-(void)_connectionEstablishTimerFired:(id)arg1 ;
-(void)_keepAliveResponseTimerFired:(id)arg1 ;
-(void)_loadPublicTokenForTokenName:(id)arg1 ;
-(void)clientIdentityAvailabilityDidChange:(id)arg1 ;
-(void)_clearRecreateCourierStateTimerForTokenName:(id)arg1 ;
-(void)_recreateCourierStateTimerFired:(id)arg1 ;
-(void)_recreateCourierStateForTokenName:(id)arg1 ;
-(char)_hasPendingRecreateCourierStateTimers;
-(void)clientIdentityDidBecomeAvailable;
-(void)clientIdentityDidBecomeUnavailable;
-(void)handleReachabilityChange:(unsigned)arg1 ;
-(void)raiseReachabilityChange;
-(void)_deleteClientIdentityRequestingReplacement;
-(void)_finishDisconnectOfTokenState:(id)arg1 ;
-(void)_startPresenceMessageTimer;
-(void)_clearTopicsForGuestUserWithTokenState:(id)arg1 ;
-(void)_sendKeepAliveTimerFired:(id)arg1 ;
-(void)_reconnectTimerFired:(id)arg1 ;
-(void)_resetInterfacePreferenceTimerFired:(id)arg1 ;
-(void)_useInteractivePowerAssertionIfNeededWithReason:(id)arg1 ;
-(void)_presenceMessageTimerFired:(id)arg1 ;
-(void)tcpStream:(id)arg1 errorOccured:(id)arg2 ;
-(id)_usersWithConnected:(char)arg1 ;
-(char)isInteractivePushDuringSleepEnabled;
-(char)_neededToSwitchToKeepAliveProxyInterface;
-(void)_switchToKeepAliveProxyInterface;
-(void)_startResetInterfacePreferenceTimer;
-(char)_isInteractivePushDuringSleepEnabledForConnectionServer:(id)arg1 ;
-(char)isKeepAliveProxyConfigured;
-(unsigned long long)tcpStream:(id)arg1 dataReceived:(id)arg2 ;
-(void)tcpStreamEndEncountered:(id)arg1 ;
-(void)tcpStreamDidFailDueToUntrustedPeer:(id)arg1 ;
-(void)tcpStreamDidFailToForceKeepAliveProxyInterface:(id)arg1 ;
-(void)tcpStreamDidFailToObtainKeepAliveProxy:(id)arg1 ;
-(void)tcpStreamDidFailToFindKeepAliveProxyInterface:(id)arg1 ;
-(void)tcpStream:(id)arg1 receivedServerBag:(id)arg2 ;
-(void)tcpStream:(id)arg1 hasDeterminedServerHostname:(id)arg2 ;
-(void)tcpStreamHasConnected:(id)arg1 ;
-(void)topicManagerRequestToSendFilter:(id)arg1 forTokenName:(id)arg2 ;
-(void)outgoingMessageQueue:(id)arg1 lateAcknowledgmentForCriticalOutgoingMessage:(id)arg2 ;
-(void)outgoingMessageQueue:(id)arg1 requestCriticalMessageFlushWithPaddingLength:(unsigned long long)arg2 ;
-(void)outgoingMessageQueue:(id)arg1 requestToSendLowPriorityMessages:(id)arg2 ;
-(void)outgoingMessageQueueShortMessageTimeoutExceeded:(id)arg1 ;
-(char)shouldForceShortTimeouts;
-(void)resourceUpdate:(unsigned long long)arg1 withStatus:(unsigned long long)arg2 ;
-(id)initWithEnvironment:(id)arg1 delegate:(id)arg2 ;
-(void)removeConnectionForConnectionPortName:(id)arg1 tokenName:(id)arg2 ;
-(void)requestConnectionIfNeeded;
-(void)periodicSignalFired;
-(void)_logTopics;
-(void)loginUserID:(id)arg1 ;
-(void)logoutUserID:(id)arg1 ;
-(void)flushUserID:(id)arg1 ;
-(id)daemonUserIDs;
-(APSEnvironment *)environment;
-(char)isIdle;
-(void)performOSXDeallocation;
-(void)setLargeMessageSize:(unsigned long long)arg1 ;
-(char)hasIdentity;
-(void)addConnection:(id)arg1 ;
-(unsigned long long)messageSize;
-(void)setMessageSize:(unsigned long long)arg1 ;
-(void)setDelegate:(id<APSCourierDelegate>)arg1 ;
-(void)dealloc;
-(NSString *)debugDescription;
-(void)setEnabled:(char)arg1 ;
-(id<APSCourierDelegate>)delegate;
-(unsigned long long)largeMessageSize;
@end

