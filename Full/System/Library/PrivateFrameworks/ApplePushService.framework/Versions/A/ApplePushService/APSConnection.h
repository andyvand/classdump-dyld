/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:31:44 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <ApplePushService/ApplePushService-Structs.h>
@class APSCUTWeakReference, NSString, NSData, NSArray, NSMutableDictionary, NSMutableArray, APSPerAppTokenMap;

@interface APSConnection : NSObject {

	APSCUTWeakReference* _delegateReference;
	dispatch_queue_sRef _ivarQueue;
	NSString* _environmentName;
	NSData* _publicToken;
	unsigned long long _messageSize;
	unsigned long long _largeMessageSize;
	NSString* _connectionPortName;
	unsigned _connectionPort;
	NSArray* _enabledTopics;
	NSArray* _ignoredTopics;
	NSArray* _opportunisticTopics;
	char _enableCriticalReliability;
	char _enableStatusNotifications;
	char _isConnected;
	char _usesAppLaunchStats;
	NSMutableDictionary* _idsToOutgoingMessages;
	unsigned long long _nextOutgoingMessageID;
	dispatch_queue_sRef _machQueue;
	dispatch_source_sRef _mach_source;
	xpc_connection_sRef _connection;
	dispatch_queue_sRef _delegateQueue;
	char _everHadDelegate;
	NSMutableArray* _queuedDelegateBlocks;
	APSPerAppTokenMap* _perAppTokenMap;
	void* _dynamicStore;
	double _reconnectDelay;
	char _isReconnectScheduled;
	char _isDisconnected;
	char _isDeallocing;
	char _isShutdown;
	char _enablePushDuringSleep;
	NSArray* _pushWakeTopics;

}

@property (nonatomic,retain,readonly) NSData * publicToken; 
@property (assign,nonatomic) unsigned long long messageSize; 
@property (assign,nonatomic) unsigned long long largeMessageSize; 
@property (assign,nonatomic) id<APSConnectionDelegate> delegate; 
@property (nonatomic,readonly) dispatch_queue_sRef delegateQueue;              //@synthesize delegateQueue=_delegateQueue - In the implementation block
@property (nonatomic,readonly) dispatch_queue_sRef ivarQueue;                  //@synthesize ivarQueue=_ivarQueue - In the implementation block
@property (nonatomic,readonly) char isShutdown;                                //@synthesize isShutdown=_isShutdown - In the implementation block
+(id)environmentForNamedPort:(id)arg1 ;
+(void)_safelyCancelAndReleaseConnection:(xpc_connection_sRef)arg1 ;
+(void)_safelyCancelAndReleaseAfterBarrierConnection:(xpc_connection_sRef)arg1 ;
+(void)_blockingXPCCallWithArgumentBlock:(/*^block*/id)arg1 resultHandler:(/*^block*/id)arg2 ;
+(void)_nonblockingXPCCallWithArgumentBlock:(/*^block*/id)arg1 ;
+(void)_blockingXPCCallWithArgumentBlock:(/*^block*/id)arg1 resultHandler:(/*^block*/id)arg2 timeout:(double)arg3 ;
+(char)isValidEnvironment:(id)arg1 ;
+(void)requestCourierConnection;
+(double)keepAliveIntervalForEnvironmentName:(id)arg1 ;
+(id)connectionsDebuggingState;
+(OpaqueSecIdentityRefRef)copyIdentity;
+(char)sendActivationRecordToMachService:(id)arg1 ;
+(void)finishLogin;
+(id)preference:(id)arg1 ;
+(void)initialize;
-(void)acknowledgeDidReceivePublicToken:(id)arg1 ;
-(void)_connectIfNecessaryOnIvarQueue;
-(void)_dispatch_async_to_ivarQueue:(/*^block*/id)arg1 ;
-(void)_flushConnection;
-(void)_disconnectOnIvarQueue;
-(void)_shutdownOnIvarQueue;
-(void)_deliverConnectionStatusFromDealloc:(char)arg1 ;
-(void)_shutdownFromDealloc;
-(void)performOSXDeallocation;
-(void)_callDelegateOnIvarQueueWithBlock:(/*^block*/id)arg1 ;
-(void)setEnableStatusNotifications:(char)arg1 ;
-(void)_deliverConnectionStatusChange:(char)arg1 ;
-(void)_cancelConnectionOnIvarQueue;
-(void)_reconnectIfNecessaryOnIvarQueueAfterDelay;
-(void)_noteDisconnectedFromDaemonOnIvarQueue;
-(void)_connectIfNecessary;
-(void)_deliverOutgoingMessageResultWithID:(unsigned long long)arg1 error:(id)arg2 ;
-(void)registerForConsoleUserChangeNotifications;
-(void)deregisterForConsoleUserChangeNotifications;
-(void)_connectOnIvarQueue;
-(void)_addEnableCriticalReliabilityToXPCMessage:(void*)arg1 ;
-(void)_addEnableStatusNotificationsToXPCMessage:(void*)arg1 ;
-(void)_addUsesAppLaunchStatsToXPCMessage:(void*)arg1 ;
-(void)_addPushWakeTopicsToXPCMessage:(void*)arg1 ;
-(void)_setEnabledTopics:(id)arg1 ignoredTopics:(id)arg2 opportunisticTopics:(id)arg3 sendToDaemon:(char)arg4 ;
-(void)_setEnableStatusNotifications:(char)arg1 sendToDaemon:(char)arg2 ;
-(void)setLargeMessageSize:(unsigned long long)arg1 ;
-(void)_deliverDidReconnectOnIvarQueue;
-(void)_deliverPublicTokenOnIvarQueue:(id)arg1 ;
-(void)_rerequestPerAppTokens;
-(void)_handleEvent:(void*)arg1 withHandler:(/*^block*/id)arg2 ;
-(void)_onIvarQueue_setEnabledTopics:(id)arg1 ignoredTopics:(id)arg2 opportunisticTopics:(id)arg3 sendToDaemon:(char)arg4 ;
-(void)_sendOutgoingMessage:(id)arg1 fake:(char)arg2 ;
-(void)_sendPerAppTokenRequestForTopic:(id)arg1 identifier:(id)arg2 ;
-(void)_setPushWakeTopics:(id)arg1 ;
-(id)initWithEnvironmentName:(id)arg1 ;
-(id)initWithEnvironmentName:(id)arg1 namedDelegatePort:(id)arg2 ;
-(void)_disconnectFromDealloc;
-(void)scheduleInRunLoop:(id)arg1 ;
-(void)removeFromRunLoop;
-(void)setEnabledTopics:(id)arg1 ignoredTopics:(id)arg2 opportunisticTopics:(id)arg3 ;
-(void)setEnabledTopics:(id)arg1 ignoredTopics:(id)arg2 ;
-(void)setOpportunisticTopics:(id)arg1 ;
-(void)setIgnoredTopics:(id)arg1 ;
-(void)setUsesAppLaunchStats:(char)arg1 ;
-(char)usesAppLaunchStats;
-(void)_deliverPublicToken:(id)arg1 ;
-(void)_deliverToken:(id)arg1 forTopic:(id)arg2 identifier:(id)arg3 ;
-(char)hasIdentity;
-(void)sendFakeMessage:(id)arg1 ;
-(void)requestTokenForTopic:(id)arg1 identifier:(id)arg2 ;
-(void)invalidateTokenForTopic:(id)arg1 identifier:(id)arg2 ;
-(dispatch_queue_sRef)ivarQueue;
-(char)isShutdown;
-(id)initWithEnvironmentName:(id)arg1 namedDelegatePort:(id)arg2 queue:(dispatch_queue_sRef)arg3 ;
-(id)initWithEnvironmentName:(id)arg1 queue:(dispatch_queue_sRef)arg2 ;
-(void)setEnabledTopics:(id)arg1 ;
-(NSData *)publicToken;
-(void)_disconnect;
-(void)setPushWakeTopics:(id)arg1 ;
-(unsigned long long)messageSize;
-(void)setMessageSize:(unsigned long long)arg1 ;
-(void)_deliverMessage:(id)arg1 ;
-(void)setDelegate:(id<APSConnectionDelegate>)arg1 ;
-(void)dealloc;
-(char)isConnected;
-(id<APSConnectionDelegate>)delegate;
-(void)shutdown;
-(dispatch_queue_sRef)delegateQueue;
-(id)initWithEnvironmentName:(id)arg1 namedDelegatePort:(id)arg2 enablePushDuringSleep:(char)arg3 queue:(dispatch_queue_sRef)arg4 ;
-(void)setEnabledTopicsAreInteractive:(char)arg1 ;
-(void)setEnableCriticalReliability:(char)arg1 ;
-(void)cancelOutgoingMessage:(id)arg1 ;
-(void)sendOutgoingMessage:(id)arg1 ;
-(unsigned long long)largeMessageSize;
@end

