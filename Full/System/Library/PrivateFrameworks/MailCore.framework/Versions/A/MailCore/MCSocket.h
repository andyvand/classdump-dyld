/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 2:28:24 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/MailCore.framework/Versions/A/MailCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MailCore/MailCore-Structs.h>
#import <MailCore/NSStreamDelegate.h>

@class NSArray, NSPort, NSInputStream, NSOutputStream, NSString;

@interface MCSocket : NSObject <NSStreamDelegate> {

	NSArray* _clientCertificates;
	char _useSSL;
	char _scheduledForBytesToArrive;
	unsigned long long _identifier;
	long long _activityType;
	double _connectTimeout;
	double _readWriteTimeout;
	NSArray* _trustedCertificates;
	NSPort* _wakeupPort;
	NSInputStream* _inputStream;
	NSOutputStream* _outputStream;
	/*^block*/id _bytesAvailableHandler;

}

@property (readonly) unsigned long long identifier;                 //@synthesize identifier=_identifier - In the implementation block
@property (assign) long long activityType;                          //@synthesize activityType=_activityType - In the implementation block
@property (assign,nonatomic) double connectTimeout;                 //@synthesize connectTimeout=_connectTimeout - In the implementation block
@property (assign,nonatomic) double readWriteTimeout;               //@synthesize readWriteTimeout=_readWriteTimeout - In the implementation block
@property (nonatomic,readonly) char isExpensive; 
@property (copy) NSArray * trustedCertificates;                     //@synthesize trustedCertificates=_trustedCertificates - In the implementation block
@property (nonatomic,readonly) NSPort * wakeupPort;                 //@synthesize wakeupPort=_wakeupPort - In the implementation block
@property (retain) NSInputStream * inputStream;                     //@synthesize inputStream=_inputStream - In the implementation block
@property (retain) NSOutputStream * outputStream;                   //@synthesize outputStream=_outputStream - In the implementation block
@property (copy) id bytesAvailableHandler;                          //@synthesize bytesAvailableHandler=_bytesAvailableHandler - In the implementation block
@property (assign) char scheduledForBytesToArrive;                  //@synthesize scheduledForBytesToArrive=_scheduledForBytesToArrive - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(SecTrustRef)serverTrust;
-(double)connectTimeout;
-(char)isReadable;
-(unsigned)cipherKeyLength;
-(char)isExpensive;
-(char)connectToHost:(id)arg1 withPort:(long long)arg2 isBackground:(char)arg3 ;
-(void)setClientIdentity:(OpaqueSecIdentityRefRef)arg1 ;
-(void)setTrustedCertificates:(NSArray *)arg1 ;
-(long long)readBytes:(void*)arg1 maxLength:(unsigned long long)arg2 error:(id*)arg3 ;
-(long long)writeBytes:(const void*)arg1 maxLength:(unsigned long long)arg2 error:(id*)arg3 ;
-(NSInputStream *)inputStream;
-(char)_setSSLStreamProperties:(char)arg1 ;
-(id)_waitForSecurityLayerNegotiationStreamsAreScheduled:(char)arg1 ;
-(NSOutputStream *)outputStream;
-(char)_setupStreamsWithHostname:(id)arg1 port:(long long)arg2 needToEstablishInternetConnection:(char*)arg3 useSSL:(char*)arg4 isBackground:(char)arg5 error:(id*)arg6 ;
-(NSPort *)wakeupPort;
-(void)setInputStream:(NSInputStream *)arg1 ;
-(void)setOutputStream:(NSOutputStream *)arg1 ;
-(NSArray *)trustedCertificates;
-(void)_unscheduleInputStreamFromMainRunLoopIfNecessary;
-(void)_handleReadWriteErrorOnStream:(id)arg1 timedOut:(char)arg2 logDetails:(id)arg3 error:(id*)arg4 ;
-(void)_scheduleInputStreamInMainRunLoopIfNecessary;
-(void)setBytesAvailableHandler:(id)arg1 ;
-(id)bytesAvailableHandler;
-(char)scheduledForBytesToArrive;
-(void)setScheduledForBytesToArrive:(char)arg1 ;
-(void)_cancelLookupForHost:(CFHostRef)arg1 infoType:(int)arg2 ;
-(void)registerForBytesToArriveWithHandler:(/*^block*/id)arg1 ;
-(void)unregisterForBytesToArrive;
-(char)setUsesSSL:(char)arg1 ;
-(void)setConnectTimeout:(double)arg1 ;
-(void)setReadWriteTimeout:(double)arg1 ;
-(void)setActivityType:(long long)arg1 ;
-(long long)remotePortNumber;
-(double)readWriteTimeout;
-(id)securityLevel;
-(id)remoteHostname;
-(id)sourceHostname;
-(id)sourceIPAddress;
-(void)stream:(id)arg1 handleEvent:(unsigned long long)arg2 ;
-(id)init;
-(void)dealloc;
-(unsigned long long)identifier;
-(void)close;
-(char)isValid;
-(long long)activityType;
-(char)isWritable;
@end

