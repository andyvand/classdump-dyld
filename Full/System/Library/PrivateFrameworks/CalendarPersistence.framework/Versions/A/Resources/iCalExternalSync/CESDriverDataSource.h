/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:34:34 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/CalendarPersistence.framework/Versions/A/Resources/iCalExternalSync
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iCalExternalSync/ISyncSessionDriverDataSource.h>

@class CESCalStoreSource, ISyncSessionDriver, CalClientIDChangeTracker, NSString;

@interface CESDriverDataSource : NSObject <ISyncSessionDriverDataSource> {

	CESCalStoreSource* actualSource;
	ISyncSessionDriver* driver;
	char _isPullingTheTruth;
	CalClientIDChangeTracker* _idChangeTracker;
	char pendingIdMappingRelease;
	int _preferredSyncMode;
	NSString* _clientName;
	NSString* _workingPath;

}

@property (assign) int preferredSyncMode;               //@synthesize preferredSyncMode=_preferredSyncMode - In the implementation block
@property (retain) NSString * clientName;               //@synthesize clientName=_clientName - In the implementation block
@property (retain) NSString * workingPath;              //@synthesize workingPath=_workingPath - In the implementation block
+(char)isOnlyRunningInstance;
+(void)runningInstanceIsDone;
-(void)setRestoreInProgress:(char)arg1 ;
-(int)syncModeFromString:(id)arg1 ;
-(char)restoreInProgress;
-(int)initializeSyncMode;
-(int)preferredSyncMode;
-(void)releaseIdMappings;
-(NSString *)workingPath;
-(char)patchedObject:(id)arg1 withError:(id)arg2 changeType:(id)arg3 ;
-(char)finishAndSaveAll:(id*)arg1 ;
-(void)logException:(id)arg1 ;
-(char)syncWithError:(id*)arg1 ;
-(char)deleteObjectForRecordIdentifier:(id)arg1 forEntityName:(id)arg2 ;
-(void)scheduleNewSyncIfNeeded;
-(void)setPreferredSyncMode:(int)arg1 ;
-(void)setClientName:(NSString *)arg1 ;
-(void)setWorkingPath:(NSString *)arg1 ;
-(id)driver;
-(NSString *)clientName;
-(id)init;
-(char)needsRefresh;
-(void)setNeedsRefresh:(char)arg1 ;
-(id)clientIdentifier;
-(id)entityNamesToSync;
-(double)sessionPullChangesTimeout;
-(id)changedRecordsForEntityName:(id)arg1 moreComing:(char*)arg2 error:(id*)arg3 ;
-(id)identifiersForRecordsToDeleteForEntityName:(id)arg1 moreComing:(char*)arg2 error:(id*)arg3 ;
-(int)applyChange:(id)arg1 forEntityName:(id)arg2 remappedRecordIdentifier:(id*)arg3 formattedRecord:(id*)arg4 error:(id*)arg5 keepAwayFromServer:(char*)arg6 ;
-(char)sessionDriver:(id)arg1 didRegisterClientAndReturnError:(id*)arg2 ;
-(char)sessionDriver:(id)arg1 willPushAndReturnError:(id*)arg2 ;
-(char)sessionDriver:(id)arg1 didPushAndReturnError:(id*)arg2 ;
-(char)sessionDriver:(id)arg1 willPullAndReturnError:(id*)arg2 ;
-(char)sessionDriver:(id)arg1 didPullAndReturnError:(id*)arg2 ;
-(char)sessionDriver:(id)arg1 willFinishSessionAndReturnError:(id*)arg2 ;
-(void)sessionDriverDidFinishSession:(id)arg1 ;
-(void)sessionDriverDidCancelSession:(id)arg1 ;
-(id)schemaBundleURLs;
-(id)clientDescriptionURL;
-(int)preferredSyncModeForEntityName:(id)arg1 ;
-(id)recordsForEntityName:(id)arg1 moreComing:(char*)arg2 error:(id*)arg3 ;
-(char)deleteAllRecordsForEntityName:(id)arg1 error:(id*)arg2 ;
-(int)applyChange:(id)arg1 forEntityName:(id)arg2 remappedRecordIdentifier:(id*)arg3 formattedRecord:(id*)arg4 error:(id*)arg5 ;
@end

