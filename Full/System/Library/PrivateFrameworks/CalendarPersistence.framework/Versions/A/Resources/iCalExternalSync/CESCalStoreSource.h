/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:34:34 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/CalendarPersistence.framework/Versions/A/Resources/iCalExternalSync
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class NSDictionary, NSMutableDictionary, NSMutableSet, NSManagedObjectContext, NSPersistentStoreCoordinator, CalAbstractCDChangeTracker, NSString, NSArray, ISyncSessionDriver, NSMutableArray;

@interface CESCalStoreSource : NSObject {

	NSDictionary* _syncEntityMappings;
	NSDictionary* _entityMappings;
	NSMutableDictionary* _knownObjectWrappers;
	NSMutableDictionary* _modsForNextSync;
	NSMutableDictionary* _deletesForNextSync;
	NSMutableDictionary* _aliasToIdMap;
	NSMutableSet* _rejectedIds;
	char _shouldSyncAgain;
	int _expectedSyncNumber;
	char _hasChanges;
	NSManagedObjectContext* _context;
	NSPersistentStoreCoordinator* _coordinator;
	char _createdChangeDB;
	NSMutableDictionary* _brandNewIDMappings;
	NSMutableDictionary* _reverseIDMappings;
	NSMutableDictionary* _acceptanceDepending;
	NSMutableDictionary* _forwardReferences;
	CalAbstractCDChangeTracker* _changeTracker;
	NSString* _databaseID;
	NSArray* _allCalendars;
	NSArray* _allNodes;
	NSMutableSet* _singletons;
	NSMutableSet* _masterEventsWithExceptions;
	ISyncSessionDriver* _sessionDriver;
	char _pullingTruth;
	NSMutableArray* _toBeDeleted;
	NSMutableSet* _allKnownIds;
	NSMutableDictionary* _prefetchedIdsByEntity;

}

@property (readonly) NSManagedObjectContext * context;                        //@synthesize context=_context - In the implementation block
@property (readonly) NSPersistentStoreCoordinator * coordinator;              //@synthesize coordinator=_coordinator - In the implementation block
@property (readonly) char createdChangeDB;                                    //@synthesize createdChangeDB=_createdChangeDB - In the implementation block
@property (readonly) NSMutableDictionary * brandNewIDMappings;                //@synthesize brandNewIDMappings=_brandNewIDMappings - In the implementation block
@property (readonly) NSMutableDictionary * reverseIDMappings;                 //@synthesize reverseIDMappings=_reverseIDMappings - In the implementation block
@property (readonly) NSMutableDictionary * acceptanceDepending;               //@synthesize acceptanceDepending=_acceptanceDepending - In the implementation block
@property (readonly) CalAbstractCDChangeTracker * changeTracker;              //@synthesize changeTracker=_changeTracker - In the implementation block
@property (readonly) NSString * databaseID;                                   //@synthesize databaseID=_databaseID - In the implementation block
@property (readonly) NSMutableSet * masterEventsWithExceptions;               //@synthesize masterEventsWithExceptions=_masterEventsWithExceptions - In the implementation block
+(id)default;
+(id)context;
-(void)recordClientID:(id)arg1 forSyncID:(id)arg2 ;
-(id)objectFromPossibleID:(id)arg1 ;
-(id)objectWrapperFor:(id)arg1 ;
-(char)objectUnknownInThisSync:(id)arg1 ;
-(char)shouldAcceptChangesForCalendar:(id)arg1 ;
-(char)isSubscriptionBasedCalendar:(id)arg1 ;
-(id)vettedObjectWithId:(id)arg1 ;
-(id)createManagedObjectOfType:(id)arg1 ;
-(void)noteSingleton:(id)arg1 ;
-(void)addModOnNextSyncOfId:(id)arg1 ofEntity:(id)arg2 ;
-(id)calendarsForThisSync;
-(void)remapId:(id)arg1 toNewId:(id)arg2 ;
-(id)fetchManagedObjectsFromVettedObjectIds:(id)arg1 ;
-(id)fetchSatisfying:(id)arg1 onEntity:(id)arg2 withErrorIn:(id*)arg3 ;
-(id)stringToObjectID:(id)arg1 ;
-(char)attemptObjectIDConversion:(id)arg1 belongingTo:(id)arg2 ;
-(id)convertObjectIDsToClientRelationForm:(id)arg1 arity:(int)arg2 ;
-(void)prefetch;
-(void)releaseMemoryFromPushing;
-(id)getStore;
-(id)asLocalID:(id)arg1 ;
-(id)entityWrapperFor:(id)arg1 ;
-(NSMutableDictionary *)brandNewIDMappings;
-(id)faultInObjectWithID:(id)arg1 ;
-(NSMutableDictionary *)acceptanceDepending;
-(NSMutableDictionary *)reverseIDMappings;
-(id)findAllPendingFor:(id)arg1 ;
-(id)forwardReferencesFromObjectOrNil:(id)arg1 ;
-(id)forwardReferencesToObjectOrNil:(id)arg1 ;
-(id)forwardReferencesToObject:(id)arg1 ;
-(id)forwardReferencesFromObject:(id)arg1 ;
-(void)ensureIdAvailable:(id)arg1 ;
-(void)setAlias:(id)arg1 forID:(id)arg2 ;
-(void)removeObjectForwardReference:(id)arg1 ;
-(void)removeForwardReferencesTo:(id)arg1 ;
-(void)resolveForwardReferencesTo:(id)arg1 ;
-(void)markPending:(id)arg1 property:(id)arg2 withData:(id)arg3 arity:(int)arg4 ;
-(char)singletonExists:(id)arg1 ;
-(void)addDeleteOnNextSyncOfId:(id)arg1 ofEntity:(id)arg2 ;
-(id)iCalChangePathURL;
-(void)setIsPullingTruth:(char)arg1 ;
-(char)isPullingTruth;
-(char)deferDelete:(id)arg1 ;
-(void)processDeferredDeletes;
-(id)nodesForThisSync;
-(char)databaseHasChanged;
-(void)saveLastKnownGoodState;
-(id)idForAlias:(id)arg1 ;
-(id)objectWrapperForLocalID:(id)arg1 ;
-(id)entityWithFullName:(id)arg1 ;
-(id)filterOutOidsUnsafeForThisSync:(id)arg1 ;
-(id)prefetchedIdsForEntity:(id)arg1 ;
-(id)fetchAnySatisfying:(id)arg1 onEntity:(id)arg2 withErrorIn:(id*)arg3 ;
-(void)removePendingProperty:(id)arg1 originalID:(id)arg2 ;
-(void)trackRejection:(id)arg1 ;
-(char)isRejectedId:(id)arg1 ;
-(char)attemptToAcceptPending:(id*)arg1 error:(id*)arg2 ;
-(char)setClientRelationship:(id)arg1 fromSyncData:(id)arg2 withArity:(int)arg3 inObject:(id)arg4 ;
-(id)getSyncRelationship:(id)arg1 withArity:(int)arg2 inObject:(id)arg3 ;
-(void)setSessionDriver:(id)arg1 ;
-(id)syncRecordWithId:(id)arg1 ;
-(char)singletonEntity:(id)arg1 named:(id)arg2 shouldAcceptChanges:(id)arg3 syncId:(id)arg4 isInsert:(char)arg5 ;
-(char)handleValidationError:(id)arg1 ;
-(void)addModOnNextSync:(id)arg1 ;
-(void)addDeleteOnNextSync:(id)arg1 ;
-(void)saveToSyncNextTime;
-(void)scheduleImmediateSync;
-(char)shouldSyncAgain;
-(char)createdChangeDB;
-(NSMutableSet *)masterEventsWithExceptions;
-(NSString *)databaseID;
-(NSPersistentStoreCoordinator *)coordinator;
-(id)entities;
-(id)entityNamed:(id)arg1 ;
-(id)init;
-(void)dealloc;
-(NSManagedObjectContext *)context;
-(void)deleteObject:(id)arg1 ;
-(id)objectWithID:(id)arg1 ;
-(char)hasChanges;
-(CalAbstractCDChangeTracker *)changeTracker;
@end

