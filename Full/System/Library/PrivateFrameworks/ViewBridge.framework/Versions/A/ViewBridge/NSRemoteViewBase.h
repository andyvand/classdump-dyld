/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:33:10 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <ViewBridge/ViewBridge-Structs.h>
#import <AppKit/NSView.h>
#import <ViewBridge/NSXPCListenerDelegate.h>
#import <ViewBridge/NSXPCConnectionDelegate.h>
#import <ViewBridge/NSVBXPCConnectionClient.h>

@protocol NSXPCProxyCreating;
@class NSMutableSet, NSWindow, NSSet, NSXPCListenerEndpoint, NSString, NSRemoteViewMarshal, NSAccessibilityRemoteUIElement, NSArray, NSMutableArray, NSXPCInterface, NSObject, NSProxy, NSXPCConnection, NSVBAccessoryWindow, NSView, NSViewBridge;

@interface NSRemoteViewBase : NSView <NSXPCListenerDelegate, NSXPCConnectionDelegate, NSVBXPCConnectionClient> {

	NSMutableSet* _potentialKeyFocusThieves;
	unsigned char _shouldMaskToBounds;
	unsigned _mouseDisassociatedFromMouseCursor;
	NSWindow* _lastKnownKeyTestWindow;
	unsigned long long _serviceWindowStyleMask;
	NSSet* _rendezvousWindowBridgeKeys;
	CGSize _serviceWindowFrameSizeAtBootstrap;
	CGSize _intrinsicContentSize;
	CGSize _windowContentMinSize;
	CGSize _windowContentMaxSize;
	unsigned char _bridgePhase;
	NSXPCListenerEndpoint* _serviceEndpoint;
	NSString* _serviceName;
	NSString* _serviceSubclassName;
	NSString* _rendezvousWindowIdentifier;
	NSRemoteViewMarshal* _remoteViewMarshal;
	unsigned _isSettingWindowStyleMask : 1;
	unsigned _isSettingViewFrame : 1;
	unsigned _disabledSuddenTermination : 1;
	unsigned _warnedAboutAbsentBridge : 1;
	unsigned _hostWindowIsKnownToBeKey : 1;
	unsigned _invalid : 1;
	unsigned _serviceWindowKeynessChangeInProgress : 1;
	unsigned _serviceWindowIsKey : 1;
	unsigned _serviceTrustsRemoteKeyEvents : 1;
	unsigned _trustsServiceKeyEvents : 1;
	unsigned _alterFirstResponder : 1;
	unsigned _beganSheet : 1;
	unsigned _isSheetBeginning : 1;
	unsigned _hasSheetsBeginning : 1;
	unsigned _holdingPossibleWindowResizingMouseDown : 1;
	unsigned _registeredForAppNotifications : 1;
	unsigned _registeredForAppNapNotifications : 1;
	unsigned _fencingCurrentTransaction : 1;
	unsigned _allowsSuspensions : 1;
	unsigned _synchronizesImplicitAnimations : 1;
	unsigned _refuseFirstResponder : 1;
	unsigned long long _containingWindowNotifications;
	unsigned long long _wrappedModifySubviewsInProgress;
	NSAccessibilityRemoteUIElement* _accessoryViewAccessibilityParent;
	NSArray* _remoteAccessibilityChildren;
	NSModalSessionRef _appModalSession;
	id _remoteWindowLocalEventMonitor;
	id _processNotificationEventMonitor;
	NSMutableArray* _deferredSheets;
	NSXPCInterface* _clientExportedInterface;
	NSObject* _clientExportedObject;
	NSProxy*<NSXPCProxyCreating> _serviceViewControllerProxyWithClientInterface;
	NSProxy*<NSXPCProxyCreating> _serviceViewControllerProxyWithAnimationSyncInterface;
	int _appNapState;
	NSXPCConnection* _serviceMarshalConnection;
	unsigned _refuseResignFirstResponder : 1;
	unsigned _accessoryViewVisible : 1;
	NSMutableSet* _resizeTransactionsInProgress;
	unsigned _serviceConnectionID;
	NSVBAccessoryWindow* _accessoryWindow;
	CGPoint _accessoryViewOrigin;
	NSObject* _delegate;

}

@property (assign) char alterFirstResponder; 
@property (retain) NSView * accessoryView; 
@property (assign) NSObject*<NSRemoteViewDelegate> delegate;                                       //@synthesize delegate=_delegate - In the implementation block
@property (assign) char trustsServiceKeyEvents; 
@property (readonly) char invalid; 
@property (readonly) char valid; 
@property (readonly) NSViewBridge * bridge; 
@property (readonly) char hasBridge; 
@property (copy) NSString * serviceName;                                                           //@synthesize serviceName=_serviceName - In the implementation block
@property (copy) NSString * serviceSubclassName;                                                   //@synthesize serviceSubclassName=_serviceSubclassName - In the implementation block
@property (assign) unsigned char bridgePhase;                                                      //@synthesize bridgePhase=_bridgePhase - In the implementation block
@property (readonly) char serviceTrustsRemoteKeyEvents; 
@property (retain) NSRemoteViewMarshal * remoteViewMarshal;                                        //@synthesize remoteViewMarshal=_remoteViewMarshal - In the implementation block
@property (retain) NSArray * remoteAccessibilityChildren;                                          //@synthesize remoteAccessibilityChildren=_remoteAccessibilityChildren - In the implementation block
@property (copy) NSString * rendezvousWindowIdentifier;                                            //@synthesize rendezvousWindowIdentifier=_rendezvousWindowIdentifier - In the implementation block
@property (retain) NSAccessibilityRemoteUIElement * accessoryViewAccessibilityParent;              //@synthesize accessoryViewAccessibilityParent=_accessoryViewAccessibilityParent - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)deferBlockOntoMainThread:(/*^block*/id)arg1 ;
+(char)allowSetObjectForKey:(id)arg1 bridge:(id)arg2 bridgePhase:(unsigned char)arg3 withReply:(/*^block*/id)arg4 ;
+(void)initAll;
+(CFStringRef)privateRunLoopMode;
+(id)_findFirstKeyViewInDirection:(unsigned long long)arg1 forKeyLoopGroupingView:(id)arg2 ;
-(void)applicationWillHide:(id)arg1 ;
-(void)applicationDidHide:(id)arg1 ;
-(void)applicationWillUnhide:(id)arg1 ;
-(void)applicationDidUnhide:(id)arg1 ;
-(NSString *)serviceName;
-(void)retreatToConfigPhase;
-(char)advanceToRunPhase;
-(void)forgetAccessoryView;
-(void)sendKeyEventFromServiceAccessoryViewToRemoteAccessoryView:(id)arg1 eventOwner:(unsigned)arg2 withReply:(/*^block*/id)arg3 ;
-(void)beginSheet:(id)arg1 modalForWindow:(id)arg2 size:(CGSize)arg3 isCritical:(char)arg4 withReply:(/*^block*/id)arg5 ;
-(void)setAccessoryViewOrigin:(CGPoint)arg1 ;
-(void)serviceAccessoryViewBecameFirstResponder:(unsigned long long)arg1 ;
-(void)serviceAccessoryViewResignedFirstResponder;
-(void)updateAccessibilityChildren:(id)arg1 ;
-(void)updateContentMinSize:(CGSize)arg1 ;
-(void)discloseAccessoryView:(char)arg1 withOffset:(CGPoint)arg2 andAnimationState:(int)arg3 andDuration:(double)arg4 ;
-(void)remoteViewControllerProxy:(/*^block*/id)arg1 ;
-(void)syncServiceWindow:(id)arg1 ;
-(void)remoteWindowLevelDidChange:(id)arg1 ;
-(id)serviceViewControllerProxy:(const char*)arg1 ;
-(unsigned char)bridgePhase;
-(void)setWindow:(id)arg1 styleMask:(unsigned long long)arg2 ;
-(void)orderWindow:(unsigned)arg1 mode:(long long)arg2 relativeTo:(unsigned)arg3 ;
-(void)deallocOnAppKitThread;
-(void)setBridgePhase:(unsigned char)arg1 ;
-(void)setServiceAccessoryViewSize:(CGSize)arg1 ;
-(void)updateAccessoryViewAccessibility;
-(NSAccessibilityRemoteUIElement *)accessoryViewAccessibilityParent;
-(id)serviceMarshalConnection;
-(void)setServiceObject:(id)arg1 forKey:(id)arg2 ;
-(char)_shouldAdjustToServiceStyleMask;
-(NSRemoteViewMarshal *)remoteViewMarshal;
-(void)maintainAppNapNotifications:(char)arg1 ;
-(void)maintainWindowEventMonitor:(unsigned)arg1 ;
-(void)maintainProcessNotificationEventMonitor:(char)arg1 ;
-(void)maintainWindowNotifications:(char)arg1 ;
-(void)maintainApplicationNotifications:(char)arg1 ;
-(void)invalidateWindowBridgeKeys;
-(void)endAllModalSessions:(char)arg1 ;
-(void)invalidateWindowRelationships;
-(void)setRendezvousWindowIdentifier:(NSString *)arg1 ;
-(void)_invalidate:(char)arg1 ;
-(NSObject*)viewServiceMarshalProxy:(const char*)arg1 ;
-(id)keyTestWindow;
-(char)shouldUpdateWindowEdgeResizingRegion;
-(char)setServiceWindowOrigin;
-(NSObject*)viewServiceMarshalProxy:(const char*)arg1 withErrorHandler:(/*^block*/id)arg2 ;
-(char)synchronizesImplicitAnimations;
-(void)synchronizeAnimationsInActions:(/*^block*/id)arg1 ;
-(id)stolenKeyFocusEventFilter:(id)arg1 ;
-(char)shouldInformServiceOfKeynessChange:(id)arg1 ;
-(void)sendFontSmoothingBackgroundColorToServiceBasedOnWindow:(id)arg1 ;
-(char)evaluateKeyness:(char)arg1 forWindow:(id)arg2 ;
-(char)evaluateKeynessForWindow:(id)arg1 ;
-(char)alterFirstResponder;
-(unsigned long long)_oldFirstResponderBeforeBecomingTextSelectionDirection;
-(void)_remoteViewBecameFirstResponder:(unsigned long long)arg1 ;
-(void)maintainContainingWindowNotifications:(char)arg1 ;
-(void)maintainKeyTestWindowNotifications:(char)arg1 ;
-(id)_copyServiceValueForEntitlement:(id)arg1 ;
-(char)_serviceHasTrueValueForEntitlement:(id)arg1 ;
-(id)_semaphore;
-(void)advanceToConfigPhase;
-(void)setAccessoryViewAccessibilityParent:(NSAccessibilityRemoteUIElement *)arg1 ;
-(void)updateAccessoryViewAccessibilityParent:(id)arg1 ;
-(void)setRemoteAccessibilityChildren:(NSArray *)arg1 ;
-(char)_willBecomeAssociatedWithRemoteWindow:(unsigned)arg1 withBlock:(/*^block*/id)arg2 ;
-(char)windowRelationshipsHaveBroken:(int)arg1 attempting:(const char*)arg2 ;
-(void)sendFontSmoothingBackgroundColorToService:(id)arg1 ;
-(char)maintainAssociation;
-(char)_hasLayerHost;
-(void)stopMonitoringEvents;
-(char)_adjustToServiceWindowStyleMask;
-(char)evaluateKeyness;
-(char)updateWindowEdgeResizingRegion;
-(void)adjustToServiceWindowContentMinMaxSizes;
-(char)maintainAssociationForcingDisassociation:(char)arg1 ;
-(void)applicationHideUnhide:(unsigned long long)arg1 attempting:(const char*)arg2 ;
-(void)setRemoteViewMarshal:(NSRemoteViewMarshal *)arg1 ;
-(void)ensureRemoteViewMarshal;
-(void)stopAwaitingWindowRights;
-(void)_configureAndRetainServiceMarshalConnection:(id)arg1 ;
-(char)shouldMaskToBounds;
-(void)advanceToConfigPhase:(id)arg1 awaitingWindowRights:(/*^block*/id)arg2 ;
-(void)_addPotentialKeyFocusThief:(int)arg1 ;
-(void)_serviceRequestsResize:(CGSize)arg1 animate:(char)arg2 transaction:(id)arg3 completion:(/*^block*/id)arg4 ;
-(char)setServiceWindowBorderViewLayerContextID:(unsigned)arg1 ;
-(void)_adjustToServiceWindowKeyness;
-(NSString *)serviceSubclassName;
-(NSString *)rendezvousWindowIdentifier;
-(char)trustsServiceKeyEvents;
-(void)_copyViewServiceMarshalReply:(const SCD_Struct_NS7*)arg1 ;
-(void)_finishAdvanceToConfigPhase:(unsigned)arg1 ;
-(id)wrapProxyForAnimationFencing:(id)arg1 ;
-(char)serviceTrustsRemoteKeyEvents;
-(void)forwardKeyEventToService:(id)arg1 ;
-(void)keyEvent:(id)arg1 ;
-(char)serviceValidatesAction:(id)arg1 menuItem:(SCD_Struct_NS12*)arg2 userInterfaceItem:(SCD_Struct_NS12*)arg3 targetIdentifier:(id*)arg4 ;
-(id)withoutCatchSupplementalTargetForAction:(SEL)arg1 sender:(id)arg2 ;
-(void)maintainFirstResponderInProgress:(/*^block*/id)arg1 ;
-(void)_serviceWindowRequestsResizeInProgress:(CGSize)arg1 ;
-(void)_serviceRequestsResize:(CGSize)arg1 animate:(char)arg2 completion:(/*^block*/id)arg3 ;
-(void)_ensureBridgeObserversForWindowBase:(unsigned char)arg1 ;
-(Class)rendezvousWindowClass:(Class)arg1 contentShouldMatchFrame:(char)arg2 ;
-(id)rendezvousWindow:(Class)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 content:(CGRect)arg4 identifier:(id)arg5 remoteViewClass:(Class)arg6 contentShouldMatchFrame:(char)arg7 ;
-(id)rendezvousPanel:(CGRect)arg1 identifier:(id)arg2 childOrderingMode:(long long)arg3 ;
-(void)sheetCompleted:(id)arg1 ;
-(char)beginSheet:(id)arg1 modalForWindow:(id)arg2 size:(CGSize)arg3 isCritical:(char)arg4 ;
-(char)beginAppModalSessionForWindow;
-(void)beginDeferredSheet:(id)arg1 ;
-(void)beginDeferredSheets;
-(char)_isContentView;
-(void)_sendWindowFakeClick:(const char*)arg1 ;
-(void)_serviceWindowKeynessChangeInProgress:(/*^block*/id)arg1 ;
-(void)_adjustToServiceWindowBecomingKey;
-(void)_adjustToServiceWindowResigningKey;
-(void)ensureAccessoryWindow:(CGRect)arg1 ;
-(void)setAccessoryViewCanBecomeKeyView:(id)arg1 ;
-(void)setRemoteAccessibilityChildrenTokens:(id)arg1 ;
-(void)remoteWindowReceivedEvent:(id)arg1 ;
-(unsigned)windowIDToPassToSetFrontProcess;
-(id)serviceMarshalForRemoteViewWindow:(id)arg1 ;
-(void)sendKeyEventFromServiceAccessoryViewToRemoteAccessoryView:(id)arg1 ;
-(unsigned)_synchronizeDrawingAcrossProcessesWithPreCommitHandler:(/*^block*/id)arg1 ;
-(void)_ensureClientExportedInterface;
-(id)serviceViewControllerProxyWithErrorHandler:(/*^block*/id)arg1 ;
-(void)_ensureClientExportedObject;
-(char)allowsSuspensions;
-(void)titleWindow:(id)arg1 serviceName:(id)arg2 serviceSubclassName:(id)arg3 ;
-(void)_slideWindowOntoScreen:(id)arg1 withDelegate:(id)arg2 andCompletion:(/*^block*/id)arg3 ;
-(char)hasBridge;
-(char)setServiceWindowOrigin:(const CGSize*)arg1 ;
-(char)shouldNotifyServiceOfChangeToHostOriginOrSize;
-(void)syncServiceWindow;
-(void)_remoteViewSizeDidChange:(CGSize)arg1 completion:(/*^block*/id)arg2 ;
-(void)_synchronizeImplictAnimationsInActions:(/*^block*/id)arg1 ;
-(void)_enableScreenUpdates:(id)arg1 afterDisableError:(id)arg2 ;
-(void)didSetOriginOrSize:(CGRect)arg1 ;
-(void)updateAccessibilityConnection:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(char)_serviceHasTransparentChildWindowEntitlement;
-(char)_serviceSignedByApple;
-(void)_ensureBridgeObserversForWindow;
-(void)_serviceDidFinishDisplayingAfterDidChangeAppearance;
-(void)setAlterFirstResponder:(char)arg1 ;
-(CGSize)serviceViewSize;
-(void)remoteWindowDidResignKey:(id)arg1 ;
-(void)remoteWindowDidBecomeKey:(id)arg1 ;
-(void)wrappedAddSubview:(id)arg1 ;
-(char)_willBecomeAssociatedWithRemoteWindow:(unsigned)arg1 atLevel:(long long)arg2 withBlock:(/*^block*/id)arg3 ;
-(unsigned)eventReceieverConnectionID:(unsigned)arg1 ;
-(unsigned)presenterConnectionID:(unsigned)arg1 ;
-(int)orderOutChildrenOfServiceWindow;
-(CGSize)accessoryWindowOffset:(CGPoint)arg1 ;
-(void)_preventAuxiliaryAppNap:(id)arg1 ;
-(void)_allowAuxiliaryAppNap:(id)arg1 ;
-(void)containingWindowDidOrderOnScreen:(id)arg1 ;
-(void)containingWindowWillOrderOffScreen:(id)arg1 ;
-(void)setShouldMaskToBounds:(char)arg1 ;
-(int)maintainFirstResponder:(int)arg1 inDirection:(unsigned long long)arg2 ;
-(void)_setServiceWindowStyleMask:(unsigned long long)arg1 ;
-(void)_setServiceContextID:(unsigned)arg1 ;
-(void)_setServiceWindowKeyness:(char)arg1 ;
-(char)_beginModalSession:(id)arg1 title:(id)arg2 size:(CGSize)arg3 ;
-(void)sendEventBypassingSubclasses:(id)arg1 toWindow:(id)arg2 ;
-(void)_serviceWindowWouldActivate;
-(void)_serviceWindowReceivedScrollWheel:(id)arg1 eventOwner:(unsigned)arg2 ;
-(void)_serviceViewReceivedLeftMouseDown;
-(char)_hasValidKeyViewInDirection:(unsigned long long)arg1 ;
-(void)setSynchronizesImplicitAnimations:(char)arg1 ;
-(id)serviceViewControllerProxy;
-(id)_suspendInFavorOfEndpoint:(id)arg1 serviceName:(id)arg2 serviceSubclassName:(id)arg3 serviceWindowIsKey:(char)arg4 initialBridge:(id)arg5 completion:(/*^block*/id)arg6 ;
-(void)_associate:(/*^block*/id)arg1 ;
-(void)_disassociate:(/*^block*/id)arg1 ;
-(char)wouldAssociate;
-(void)_setServiceWindowEventMask:(unsigned long long)arg1 ;
-(id)_addChildWindow:(id)arg1 windowBase:(unsigned char)arg2 ordered:(long long)arg3 frame:(CGRect)arg4 ;
-(id)_associateMouseAndMouseCursorPosition:(char)arg1 ;
-(void)_lastCallImpliedByAdvancingToPhase:(unsigned char)arg1 ;
-(void)_beginPrivateEventLoop:(id)arg1 ;
-(void)_endPrivateEventLoop:(id)arg1 ;
-(NSArray *)remoteAccessibilityChildren;
-(void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(char)arg3 ;
-(void)setDelegate:(NSObject*<NSRemoteViewDelegate>)arg1 ;
-(void)dealloc;
-(void)setFrame:(CGRect)arg1 ;
-(char)valid;
-(void)invalidate;
-(id)accessibilityFocusedUIElement;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)addSubview:(id)arg1 ;
-(CGSize)intrinsicContentSize;
-(id)accessibilityChildrenAttribute;
-(void)setFrameOrigin:(CGPoint)arg1 ;
-(NSObject*<NSRemoteViewDelegate>)delegate;
-(void)setAccessoryView:(NSView *)arg1 ;
-(NSView *)accessoryView;
-(char)performKeyEquivalent:(id)arg1 ;
-(void)endModalSession:(id)arg1 ;
-(id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2 ;
-(void)setFrameSize:(CGSize)arg1 ;
-(void)addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3 ;
-(char)acceptsFirstResponder;
-(void)keyDown:(id)arg1 ;
-(char)resignFirstResponder;
-(char)becomeFirstResponder;
-(void)viewDidMoveToWindow;
-(void)viewDidMoveToSuperview;
-(char)isValid;
-(void)cancel:(id)arg1 ;
-(void)viewWillMoveToWindow:(id)arg1 ;
-(void)keyUp:(id)arg1 ;
-(void)flagsChanged:(id)arg1 ;
-(void)setSubviews:(id)arg1 ;
-(void)viewDidEndLiveResize;
-(void)_dragWindowRelativeToMouseDown:(CGPoint)arg1 ;
-(char)_wantsKeyDownForEvent:(id)arg1 ;
-(void)_viewDidChangeAppearance:(id)arg1 ;
-(void)viewWillStartLiveResize;
-(void)invalidate:(char)arg1 ;
-(NSViewBridge *)bridge;
-(void)setServiceName:(NSString *)arg1 ;
-(void)setServiceSubclassName:(NSString *)arg1 ;
-(void)setTrustsServiceKeyEvents:(char)arg1 ;
-(char)advanceToRunPhaseIfNeeded;
-(void)setAllowsSuspensions:(char)arg1 ;
-(char)invalid;
@end

