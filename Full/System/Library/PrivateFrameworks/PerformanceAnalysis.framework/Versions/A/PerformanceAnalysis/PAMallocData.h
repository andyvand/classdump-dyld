/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 2:26:49 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PerformanceAnalysis/PerformanceAnalysis-Structs.h>
#import <PerformanceAnalysis/NSCoding.h>

@class NSMutableDictionary, NSMutableArray, PAMallocStackTree;

@interface PAMallocData : NSObject <NSCoding> {

	NSMutableDictionary* pointersByZone;
	NSMutableArray* leaksArray;
	NSMutableDictionary* allocationCategoryDict;
	NSMutableDictionary* leaksCategoryDict;
	PAMallocStackTree* stackTree;
	unsigned long long totalBytes;
	unsigned long long totalNodes;
	unsigned long long totalLeakedBytes;
	unsigned long long totalLeakedNodes;
	char stacksAvailable;
	char calculatedTotals;
	char calculatedLeaksTotals;
	char categoriesUpdated;

}

@property (retain) NSMutableDictionary * pointersByZone; 
@property (retain) NSMutableArray * leaksArray; 
@property (retain) NSMutableDictionary * allocationCategoryDict; 
@property (retain) NSMutableDictionary * leaksCategoryDict; 
@property (assign) unsigned long long totalBytes; 
@property (assign) unsigned long long totalNodes; 
@property (assign) unsigned long long totalLeakedBytes; 
@property (assign) unsigned long long totalLeakedNodes; 
@property (assign) char calculatedTotals; 
@property (assign) char calculatedLeaksTotals; 
+(id)newMemRangeArrayFromVMURangeArray:(id)arg1 MallocZone:(id)arg2 ;
+(id)newAllAllocationsFromPointersDict:(id)arg1 ;
-(id)initWithTask:(unsigned)arg1 ;
-(NSMutableDictionary *)pointersByZone;
-(void)gatherPurgeStateOfAllocs:(id)arg1 ;
-(void)gatherObjectTypes:(unsigned)arg1 withStacks:(char)arg2 ;
-(id)mallocDataWithFilter:(int)arg1 ;
-(id)totalAllocatedMemoryString;
-(id)totalLeakedMemoryString;
-(id)memorySummaryString;
-(void)discardIndividualAllocations;
-(void)setPointersByZone:(NSMutableDictionary *)arg1 ;
-(void)setLeaksArray:(NSMutableArray *)arg1 ;
-(void)calculateLeaksTotalsWithArray:(id)arg1 ;
-(void)fillMallocDataHeader:(PAMallocDataHeader*)arg1 ;
-(void)fillBufferWithZones:(void*)arg1 StringDict:(id)arg2 ;
-(unsigned long long)fillIndexToStringMapping:(id*)arg1 FromStringDict:(id)arg2 ;
-(void)fillInStringsSection:(void*)arg1 BufferLength:(unsigned long long)arg2 IndexToString:(id*)arg3 NumStrings:(unsigned long long)arg4 ;
-(id)serializedAllocationCategoriesWithStringsDict:(id)arg1 ;
-(id)serializedStackTreeWithStringsDict:(id)arg1 ;
-(id)serializedAllocationsWithStringsDict:(id)arg1 ;
-(id)serializedStringsWithStringsDict:(id)arg1 ;
-(void)setAllocationCategoryDict:(NSMutableDictionary *)arg1 ;
-(void)setLeaksCategoryDict:(NSMutableDictionary *)arg1 ;
-(void)extractDataFromPointersDict:(id)arg1 ;
-(void)findLeaks:(unsigned)arg1 WithPointers:(id)arg2 ;
-(unsigned long long)totalNodes;
-(unsigned long long)totalLeakedNodes;
-(unsigned long long)totalLeakedBytes;
-(void)identifyObject:(id)arg1 FromZone:(id)arg2 WithIdentifier:(id)arg3 ;
-(NSMutableArray *)leaksArray;
-(id*)newNSStringArrayWithStringIndexHeader:(PAStringIndexHeader*)arg1 ;
-(id*)deserializeMemAllocationCategoriesAndReturnIndexArray:(id)arg1 WithStringsIndexArray:(id*)arg2 ;
-(id*)deserializedMallocStackTreeAndReturnIndexArray:(id)arg1 WithStringsIndexArray:(id*)arg2 ;
-(void)populateInstanceFields:(id)arg1 ;
-(void)getPointersByZoneDictFromSerializedMemAllocations:(id)arg1 WithIndexToMemCategoriesArray:(id*)arg2 WithIndexToStackFramesArray:(id*)arg3 WithStringsIndex:(id*)arg4 ;
-(void)calculateTotals;
-(char)calculatedTotals;
-(void)organizeAndCalculateTotals;
-(void)addCopyOfMemAllocationFromOtherMallocData:(id)arg1 ;
-(id)sortedAllocationCategories;
-(id)sortedLeaksCategories;
-(id)totalAllocatedShortString;
-(id)totalLeakedShortString;
-(id)stackTreeStringWithMemoryStats:(char)arg1 ;
-(NSMutableDictionary *)allocationCategoryDict;
-(NSMutableDictionary *)leaksCategoryDict;
-(void)setTotalNodes:(unsigned long long)arg1 ;
-(void)setTotalLeakedBytes:(unsigned long long)arg1 ;
-(void)setTotalLeakedNodes:(unsigned long long)arg1 ;
-(void)setCalculatedTotals:(char)arg1 ;
-(char)calculatedLeaksTotals;
-(void)setCalculatedLeaksTotals:(char)arg1 ;
-(void)setTotalBytes:(unsigned long long)arg1 ;
-(unsigned long long)totalBytes;
-(id)init;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(char)isEqual:(id)arg1 ;
@end

