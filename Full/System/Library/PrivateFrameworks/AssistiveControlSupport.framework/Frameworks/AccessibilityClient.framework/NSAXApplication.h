/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:34:29 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/AssistiveControlSupport.framework/Frameworks/AccessibilityClient.framework/AccessibilityClient
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AccessibilityClient/AccessibilityClient-Structs.h>
#import <AccessibilityClient/NSAXElement.h>

@protocol OS_dispatch_queue;
@class NSMutableSet, NSObject, NSAXElement, NSAXTextRange, NSString, NSLock, NSMutableArray;

@interface NSAXApplication : NSAXElement {

	ProcessSerialNumber _psn;
	char _isAppValid;
	char _checkingIsAppReady;
	char _isAppReady;
	char _hasExecutedPendingBlocks;
	NSMutableSet* _notificationsBeingObserved;
	NSObject*<OS_dispatch_queue> _appQueue;
	char _shouldClearAppQueue;
	NSAXElement* _kbFocusedElement;
	unsigned long long _previousNumOfChars;
	NSAXTextRange* _previousSelectionRange;
	double _lastTextChangeTime;
	NSString* _bundleIdentifier;
	long long* _currentBlockGen;
	AXObserverRef _observer;
	NSLock* _lock;
	NSMutableArray* __menuStackLocked;
	NSMutableArray* _trackUIElementsLocked;
	NSMutableArray* _pendingBlocks;
	SCD_Struct_NS3 _connectionRetry;
	char _isResponsive;
	int _pid;
	int _appType;
	unsigned long long _appID;
	double _defaultDispatchWaitTime;

}

@property (nonatomic,readonly) ProcessSerialNumber psn;                            //@synthesize psn=_psn - In the implementation block
@property (nonatomic,readonly) NSString * bundleIdentifier;                        //@synthesize bundleIdentifier=_bundleIdentifier - In the implementation block
@property (assign,nonatomic) unsigned long long appID;                             //@synthesize appID=_appID - In the implementation block
@property (assign,nonatomic) int pid;                                              //@synthesize pid=_pid - In the implementation block
@property (assign,nonatomic) double defaultDispatchWaitTime;                       //@synthesize defaultDispatchWaitTime=_defaultDispatchWaitTime - In the implementation block
@property (assign,nonatomic) int appType;                                          //@synthesize appType=_appType - In the implementation block
@property (assign,nonatomic) char isResponsive;                                    //@synthesize isResponsive=_isResponsive - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> appQueue;              //@synthesize appQueue=_appQueue - In the implementation block
+(id)_newElementForAXElement:(AXUIElementRef)arg1 ;
-(const char*)_queueIdentifier;
-(void)setDefaultDispatchWaitTime:(double)arg1 ;
-(void)registerNotification:(id)arg1 forElement:(id)arg2 ;
-(char)shouldEnableEnhancedUserInterface;
-(void)unregisterNotification:(id)arg1 forElement:(id)arg2 ;
-(void)_checkIsAppReady;
-(void)_queueConnectToApp;
-(void)_registerAXObserver;
-(void)_performBlockOnAppThread:(/*^block*/id)arg1 waitUntilDone:(char)arg2 ;
-(void)_startConnectToApp;
-(char)_registerNotification:(id)arg1 forElement:(id)arg2 ;
-(char)_unregisterNotification:(id)arg1 forElement:(id)arg2 ;
-(double)defaultDispatchWaitTime;
-(id)dispatchBlockToAppThread:(/*^block*/id)arg1 waitTime:(double)arg2 ;
-(id)dispatchBlockToAppThread:(/*^block*/id)arg1 waitTime:(double)arg2 allowCancel:(char)arg3 ;
-(char)isResponsive;
-(id)dispatchBlockToAppThread:(/*^block*/id)arg1 waitTime:(double)arg2 allowCancel:(char)arg3 didFinish:(char*)arg4 ;
-(char)shouldCancelBlockGen:(long long)arg1 ;
-(id)dispatchBlockToAppThread:(/*^block*/id)arg1 ;
-(void)_updateKbFocusedElement;
-(void)focusedWindowChanged;
-(void)menuOpened:(id)arg1 ;
-(void)menuClosed:(id)arg1 ;
-(void)addedElement:(id)arg1 ;
-(void)removedUIElement:(id)arg1 ;
-(void)handleAXNotificationCallback:(id)arg1 forElement:(AXUIElementRef)arg2 withAppID:(unsigned long long)arg3 ;
-(void)_setKbFocusedElement:(id)arg1 ;
-(id)menubar;
-(char)_thirdPartyMenuExtraIsOpen:(id)arg1 ;
-(void)_openThirdPartyMenuExtra:(id)arg1 ;
-(char)_shouldClearAppQueue;
-(char)_isAppValid;
-(id)_appQueue;
-(id)initWithPSN:(ProcessSerialNumber)arg1 bundleIdentifier:(CFStringRef)arg2 ;
-(void)becameFrontmost;
-(void)resignFrontmost;
-(void)_clearAppQueue;
-(id)dispatchBlockToAppThread:(/*^block*/id)arg1 allowCancel:(char)arg2 ;
-(void)restoreApplicationSettings;
-(void)_handleAXNotificationCallback:(id)arg1 forElement:(AXUIElementRef)arg2 withContext:(void*)arg3 ;
-(id)_kbFocusedElement;
-(void)updateKbFocusedElement;
-(void)focusedUIElementChanged;
-(void)closeAllMenus;
-(id)menuStack;
-(BOOL)focusedElementDepth;
-(BOOL)hasOpenMenus;
-(CGRect)menubarRect;
-(id)applicationMenuExtraItems;
-(void)openMenuExtra:(id)arg1 ;
-(void)addTrackUIElement:(id)arg1 ;
-(void)removeTrackUIElement:(id)arg1 ;
-(id)trackUIElements;
-(char)shouldBailQueueJob;
-(ProcessSerialNumber)psn;
-(int)appType;
-(void)setAppType:(int)arg1 ;
-(void)setIsResponsive:(char)arg1 ;
-(NSObject*<OS_dispatch_queue>)appQueue;
-(id)application;
-(int)pid;
-(void)connect;
-(unsigned long long)appID;
-(void)setPid:(int)arg1 ;
-(void)setAppID:(unsigned long long)arg1 ;
-(void)initialSetup;
-(void)dealloc;
-(id)description;
-(void)invalidate;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(NSString *)bundleIdentifier;
-(id)windows;
-(void)_invalidate;
-(char)isValid;
@end

