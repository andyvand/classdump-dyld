/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 1:33:08 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/FinderKit.framework/Versions/A/FinderKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <FinderKit/FinderKit-Structs.h>
#import <FinderKit/FI_TViewController.h>
#import <FinderKit/NSAnimationDelegate.h>

@class NSView, NSLayoutConstraint, FI_TBrowserContainerController, FI_TSidebarViewController, NSString;

@interface FI_TSidebarSplitterController : FI_TViewController <NSAnimationDelegate> {

	NSView* _sidebarViewContainer;
	NSView* _browserViewContainer;
	NSLayoutConstraint* _minimumSidebarWidthConstraint;
	NSLayoutConstraint* _maximumSidebarWidthConstraint;
	FI_TBrowserContainerController* _containerController;
	FI_TSidebarViewController* _sidebarViewController;
	BOOL _windowIsResizing;
	BOOL _browserWidthIsDynamic;
	BOOL _animatingSidebar;
	BOOL _snapToOptimalPosition;
	BOOL _initialSizeDone;
	BOOL _initialWindowStateShowSidebar;
	double _lastSplitterPosition;
	double _resizePosition;

}

@property (nonatomic,readonly) FI_TBrowserContainerController * browserContainerController;              //@synthesize containerController=_containerController - In the implementation block
@property (assign,nonatomic) BOOL browserWidthIsDynamic;                                                 //@synthesize browserWidthIsDynamic=_browserWidthIsDynamic - In the implementation block
@property (assign,nonatomic) double lastSplitterPosition;                                                //@synthesize lastSplitterPosition=_lastSplitterPosition - In the implementation block
@property (assign,nonatomic) BOOL animatingSidebar;                                                      //@synthesize animatingSidebar=_animatingSidebar - In the implementation block
@property (assign,nonatomic) BOOL initialWindowStateShowSidebar;                                         //@synthesize initialWindowStateShowSidebar=_initialWindowStateShowSidebar - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * minimumSidebarWidthConstraint;                         //@synthesize minimumSidebarWidthConstraint=_minimumSidebarWidthConstraint - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * maximumSidebarWidthConstraint;                         //@synthesize maximumSidebarWidthConstraint=_maximumSidebarWidthConstraint - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)sidebarViewController;
-(void)aboutToTearDown;
-(CGSize)idealViewSize;
-(double)splitterPosition;
-(id)browserViewContainer;
-(BOOL)sidebarIsVisible;
-(id)sidebarViewContainer;
-(void)setSplitterPosition:(double)arg1 ;
-(BOOL)animatingSidebar;
-(void)setAnimatingSidebar:(BOOL)arg1 ;
-(void)setBrowserWidthIsDynamic:(BOOL)arg1 ;
-(id)sidebarSplitView;
-(void)_updateWidthConstraints;
-(void)setMinimumSidebarWidthConstraint:(NSLayoutConstraint *)arg1 ;
-(void)setMaximumSidebarWidthConstraint:(NSLayoutConstraint *)arg1 ;
-(BOOL)sidebarIsHidden;
-(void)addSidebarIfNecessary;
-(void)setLastSplitterPosition:(double)arg1 ;
-(BOOL)browserWidthIsDynamic;
-(id)initWithFrame:(CGRect)arg1 andParent:(id)arg2 ;
-(void)setSplitterPosition:(double)arg1 snapToOptimalPosition:(BOOL)arg2 ;
-(void)configureSidebar:(BOOL)arg1 setSplitterPosition:(BOOL)arg2 ;
-(void)initialResize;
-(void)sidebarToggleForAppCentric:(BOOL)arg1 newSplitterPosition:(double)arg2 animate:(BOOL)arg3 ;
-(void)animateSidebarToggle:(BOOL)arg1 ;
-(void)resizeStart;
-(void)resizeEnd;
-(FI_TBrowserContainerController *)browserContainerController;
-(double)lastSplitterPosition;
-(BOOL)initialWindowStateShowSidebar;
-(void)setInitialWindowStateShowSidebar:(BOOL)arg1 ;
-(NSLayoutConstraint *)minimumSidebarWidthConstraint;
-(NSLayoutConstraint *)maximumSidebarWidthConstraint;
-(void)viewDidMoveToWindow;
-(id)nibName;
-(BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2 ;
-(double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3 ;
-(BOOL)splitView:(id)arg1 shouldHideDividerAtIndex:(long long)arg2 ;
-(CGRect)splitView:(id)arg1 effectiveRect:(CGRect)arg2 forDrawnRect:(CGRect)arg3 ofDividerAtIndex:(long long)arg4 ;
-(void)splitViewWillResizeSubviews:(id)arg1 ;
-(void)splitViewDidResizeSubviews:(id)arg1 ;
-(CGSize)minimumViewSize;
@end

