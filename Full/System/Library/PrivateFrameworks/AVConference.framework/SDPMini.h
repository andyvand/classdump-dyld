/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:34:30 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/AVConference.framework/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <AVConference/AVConference-Structs.h>
@class NSMutableArray, NSString, NSMutableDictionary, VCImageAttributeRules, NSNumber, NSDictionary;

@interface SDPMini : NSObject {

	NSMutableArray* _videoAttributes;
	NSString* _sdpUsername;
	NSMutableDictionary* _audioParameters;
	NSString* origin;
	NSMutableArray* audioPayloads;
	NSMutableArray* secondaryAudioPayloads;
	NSMutableArray* videoPayloads;
	VCImageAttributeRules* imageAttributeRules;
	NSString* sessionIP;
	NSNumber* audioRTPPort;
	NSNumber* audioRTCPPort;
	NSNumber* audioRTPID;
	NSNumber* videoRTPPort;
	NSNumber* videoRTCPPort;
	NSNumber* videoRTPID;
	char allowRTCPFB;
	NSNumber* answerBandwidth;
	NSNumber* maxBandwidth;
	char allowsDynamicMaxBitrate;
	char allowsContentsChangeWithAspectPreservation;
	NSDictionary* featuresListDict;
	NSNumber* aacBlockSize;
	NSNumber* audioUnitModel;
	char allowAudioRecording;
	NSString* basebandCodecType;
	NSNumber* basebandCodecSampleRate;

}

@property (nonatomic,retain) NSString * origin; 
@property (nonatomic,readonly) NSMutableArray * audioPayloads; 
@property (nonatomic,readonly) NSMutableArray * secondaryAudioPayloads; 
@property (nonatomic,readonly) NSMutableArray * videoPayloads; 
@property (nonatomic,retain) VCImageAttributeRules * imageAttributeRules; 
@property (nonatomic,retain) NSString * sessionIP; 
@property (nonatomic,retain) NSNumber * audioRTPPort; 
@property (nonatomic,retain) NSNumber * audioRTCPPort; 
@property (nonatomic,retain) NSNumber * audioRTPID; 
@property (nonatomic,retain) NSNumber * videoRTPPort; 
@property (nonatomic,retain) NSNumber * videoRTCPPort; 
@property (nonatomic,retain) NSNumber * videoRTPID; 
@property (assign,nonatomic) char allowRTCPFB; 
@property (nonatomic,retain) NSNumber * answerBandwidth; 
@property (nonatomic,retain) NSNumber * maxBandwidth; 
@property (assign,nonatomic) char allowsDynamicMaxBitrate; 
@property (nonatomic,retain) NSDictionary * featuresListDict; 
@property (assign,nonatomic) char allowsContentsChangeWithAspectPreservation; 
@property (nonatomic,retain) NSNumber * aacBlockSize; 
@property (nonatomic,retain) NSNumber * audioUnitModel; 
@property (assign,nonatomic) char allowAudioRecording; 
-(void)parseSDPFromString:(id)arg1 ;
-(id)composeSessionString;
-(id)composeAudioString;
-(id)composeVideoString;
-(char)setVideoPayloads:(int*)arg1 count:(int)arg2 ;
-(id)toStringWithVideoEnabled:(char)arg1 ;
-(void)setBasebandCodecType:(id)arg1 sampleRate:(id)arg2 ;
-(char)getBasebandCodecType:(id*)arg1 sampleRate:(id*)arg2 ;
-(NSMutableArray *)audioPayloads;
-(NSMutableArray *)secondaryAudioPayloads;
-(NSMutableArray *)videoPayloads;
-(VCImageAttributeRules *)imageAttributeRules;
-(void)setImageAttributeRules:(VCImageAttributeRules *)arg1 ;
-(NSString *)sessionIP;
-(void)setSessionIP:(NSString *)arg1 ;
-(NSNumber *)audioRTPPort;
-(void)setAudioRTPPort:(NSNumber *)arg1 ;
-(void)setAudioRTCPPort:(NSNumber *)arg1 ;
-(NSNumber *)videoRTPPort;
-(void)setVideoRTPPort:(NSNumber *)arg1 ;
-(void)setVideoRTCPPort:(NSNumber *)arg1 ;
-(char)allowRTCPFB;
-(void)setAllowRTCPFB:(char)arg1 ;
-(NSNumber *)answerBandwidth;
-(void)setAnswerBandwidth:(NSNumber *)arg1 ;
-(char)allowsDynamicMaxBitrate;
-(void)setAllowsDynamicMaxBitrate:(char)arg1 ;
-(NSDictionary *)featuresListDict;
-(void)setFeaturesListDict:(NSDictionary *)arg1 ;
-(NSNumber *)aacBlockSize;
-(void)setAacBlockSize:(NSNumber *)arg1 ;
-(NSNumber *)audioUnitModel;
-(void)setAudioUnitModel:(NSNumber *)arg1 ;
-(char)allowsContentsChangeWithAspectPreservation;
-(void)setAllowsContentsChangeWithAspectPreservation:(char)arg1 ;
-(char)allowAudioRecording;
-(void)setAllowAudioRecording:(char)arg1 ;
-(id)composeBandwidthString;
-(id)composeFLSString;
-(id)composeAudioFMTPForPayload:(id)arg1 ;
-(id)parseIP:(id)arg1 ;
-(void)parseBandwidth:(id)arg1 ;
-(void)parseMedia:(id)arg1 ;
-(void)parseSessionAttributes:(id)arg1 ;
-(void)parseAudioMediaAttributes:(id)arg1 ;
-(void)parseVideoMediaAttributes:(id)arg1 ;
-(void)parseImageAttributeRules:(id)arg1 ;
-(id)parseRTPID:(id)arg1 ;
-(id)parseRTCPPort:(id)arg1 ;
-(void)parseAudioFormatAttribute:(id)arg1 ;
-(void)setUseSbr:(char)arg1 blockSize:(int)arg2 forAACFormat:(int)arg3 ;
-(char)getUseSbr:(char*)arg1 blockSize:(int*)arg2 forAACFormat:(int)arg3 ;
-(void)setVideoRTCPFB:(char)arg1 useNACK:(char)arg2 ;
-(void)createVideoImageAttr:(int)arg1 direction:(int)arg2 dimensions:(imageTag*)arg3 count:(int)arg4 ;
-(void)fillImageStructWithDictionary:(id)arg1 forInterface:(int)arg2 imageStruct:(imageTag*)arg3 ;
-(void)getNegotiatedResolutionForPayload:(int)arg1 forInterface:(int)arg2 withRule:(id)arg3 direction:(int)arg4 result:(imageTag*)arg5 remoteSupportsHD:(char)arg6 ;
-(void)addVideoImageAttr:(id)arg1 ForPayload:(int)arg2 ;
-(void)fillImageStruct:(id)arg1 imageStruct:(imageTag*)arg2 ;
-(id)videoImageAttributes:(int)arg1 ;
-(id)getVideoSendImages:(id)arg1 ;
-(char)supportImage:(id)arg1 width:(int)arg2 height:(int)arg3 rate:(int)arg4 ;
-(id)getVideoRecvImages:(id)arg1 ;
-(void)fillImageArray:(id)arg1 imageArray:(imageTag*)arg2 ;
-(char)videoDisplayAttribute:(int*)arg1 withHeight:(int*)arg2 ;
-(void)setMaxBandwidth:(NSNumber *)arg1 ;
-(void)setAudioRTPID:(NSNumber *)arg1 ;
-(int)rulesFramerate:(int)arg1 ;
-(void)rulesImageSize:(int)arg1 pWidth:(int*)arg2 pHeight:(int*)arg3 ;
-(void)setVideoRTPID:(NSNumber *)arg1 ;
-(NSNumber *)audioRTCPPort;
-(NSNumber *)videoRTCPPort;
-(NSNumber *)maxBandwidth;
-(id)SDPUsername;
-(NSNumber *)audioRTPID;
-(NSNumber *)videoRTPID;
-(id)init;
-(void)dealloc;
-(id)initWithString:(id)arg1 ;
-(NSString *)origin;
-(void)setOrigin:(NSString *)arg1 ;
@end

