/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 2:28:30 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/Safari.framework/Versions/A/Safari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class NSObject, NSString, NSXPCConnection, BrowserBookmarkImporter, BrowserHistoryImporter, BrowserCredentialImporter, NSURL;

@interface BrowserDataImporterController : NSObject {

	NSObject*<OS_dispatch_queue> _dataTypesAccessQueue;
	unsigned long long _dataTypesBeingImported;
	unsigned long long _dataTypesThatSucceeded;
	unsigned long long _dataTypesThatFailed;
	char _importHasBeenCanceled;
	unsigned long long _numberOfResumptionAttempts;
	NSString* _sourceBrowserBundleIdentifier;
	NSXPCConnection* _browserDataImporterServiceConnection;
	BrowserBookmarkImporter* _bookmarkImporter;
	BrowserHistoryImporter* _historyImporter;
	BrowserCredentialImporter* _credentialImporter;

}

@property (nonatomic,readonly) char canImportFromChrome; 
@property (nonatomic,readonly) char canImportFromFirefox; 
@property (nonatomic,readonly) NSURL * chromeBundleURL; 
@property (nonatomic,readonly) NSURL * firefoxBundleURL; 
@property (nonatomic,readonly) char canResumeInterruptedImport; 
@property (nonatomic,readonly) char isImporting; 
@property (nonatomic,copy) NSString * sourceBrowserBundleIdentifier;                              //@synthesize sourceBrowserBundleIdentifier=_sourceBrowserBundleIdentifier - In the implementation block
@property (nonatomic,retain) NSXPCConnection * browserDataImporterServiceConnection;              //@synthesize browserDataImporterServiceConnection=_browserDataImporterServiceConnection - In the implementation block
@property (nonatomic,retain) BrowserBookmarkImporter * bookmarkImporter;                          //@synthesize bookmarkImporter=_bookmarkImporter - In the implementation block
@property (nonatomic,retain) BrowserHistoryImporter * historyImporter;                            //@synthesize historyImporter=_historyImporter - In the implementation block
@property (nonatomic,retain) BrowserCredentialImporter * credentialImporter;                      //@synthesize credentialImporter=_credentialImporter - In the implementation block
+(id)sharedController;
-(char)canResumeInterruptedImport;
-(void)resumeInterruptedImport;
-(NSString *)sourceBrowserBundleIdentifier;
-(id)_chromeApplicationBundle;
-(void)importDataTypes:(unsigned long long)arg1 fromBrowserWithApplicationBundle:(id)arg2 ;
-(id)_firefoxApplicationBundle;
-(void)_importDataTypes:(unsigned long long)arg1 fromBrowserWithApplicationBundle:(id)arg2 forTestDriveImport:(char)arg3 ;
-(void)setSourceBrowserBundleIdentifier:(NSString *)arg1 ;
-(void)_updateStoredState;
-(NSXPCConnection *)browserDataImporterServiceConnection;
-(BrowserBookmarkImporter *)bookmarkImporter;
-(BrowserHistoryImporter *)historyImporter;
-(BrowserCredentialImporter *)credentialImporter;
-(void)_resumeInterruptedImportForTestDrive:(char)arg1 ;
-(id)_storedState;
-(void)abandonInterruptedImport;
-(void)performTestDriveImportOfDataTypes:(unsigned long long)arg1 fromBrowserWithApplicationBundle:(id)arg2 ;
-(id)_existingBrowserDataImporterServiceConnection;
-(char)isImporting;
-(char)_isStoredStateValid;
-(unsigned long long)_dataTypesRemainingToBeImported;
-(NSURL *)chromeBundleURL;
-(NSURL *)firefoxBundleURL;
-(void)_invalidateBrowserDataImporterServiceConnectionIfPossible;
-(void)setBrowserDataImporterServiceConnection:(NSXPCConnection *)arg1 ;
-(void)_postCompletionNotificationsAndResetState;
-(void)_didCompleteImportingDataTypes:(unsigned long long)arg1 success:(char)arg2 ;
-(void)setBookmarkImporter:(BrowserBookmarkImporter *)arg1 ;
-(void)setHistoryImporter:(BrowserHistoryImporter *)arg1 ;
-(void)setCredentialImporter:(BrowserCredentialImporter *)arg1 ;
-(void)importDataTypesFromChrome:(unsigned long long)arg1 ;
-(void)importDataTypesFromFirefox:(unsigned long long)arg1 ;
-(void)resumeInterruptedImportForTestDrive:(char)arg1 ;
-(void)importDataTypesFromDefaultBrowser:(unsigned long long)arg1 ;
-(void)cancelImport;
-(char)canImportFromChrome;
-(char)canImportFromFirefox;
-(id)init;
-(void)_resetState;
@end

