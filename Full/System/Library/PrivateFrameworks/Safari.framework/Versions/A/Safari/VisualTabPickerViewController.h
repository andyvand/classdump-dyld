/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 2:28:32 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/Safari.framework/Versions/A/Safari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Safari/Safari-Structs.h>
#import <AppKit/NSViewController.h>
#import <Safari/VisualTabPickerSearchFieldDelegate.h>
#import <Safari/VisualTabPickerCloudTabsViewDataSource.h>
#import <Safari/VisualTabPickerCloudTabsViewDelegate.h>
#import <Safari/VisualTabPickerGridViewDataSource.h>
#import <Safari/VisualTabPickerGridViewDelegate.h>

@protocol VisualTabPickerDelegate;
@class VisualTabPickerRootView, NSArray, NSOperationQueue, NSString, NSMutableArray, NSDictionary, BrowserWindowControllerMac, NSImage;

@interface VisualTabPickerViewController : NSViewController <VisualTabPickerSearchFieldDelegate, VisualTabPickerCloudTabsViewDataSource, VisualTabPickerCloudTabsViewDelegate, VisualTabPickerGridViewDataSource, VisualTabPickerGridViewDelegate> {

	VisualTabPickerRootView* _rootView;
	NSArray* _orderedTabViewItems;
	NSArray* _filteredTabViewItems;
	NSOperationQueue* _filterQueue;
	NSString* _searchText;
	NSMutableArray* _allCloudTabDevices;
	NSArray* _filteredCloudTabDevices;
	NSDictionary* _overriddenCloudDevicesNames;
	char _isPostponingClosingVisualTabPickerWhenNewTabIsInserted;
	char _shouldStackThumbnails;
	char _tabsShouldBeClosable;
	char _addingNewTab;
	BrowserWindowControllerMac* _browserWindowController;
	id<VisualTabPickerDelegate> _delegate;
	NSImage* _tabBarSnapshot;
	NSImage* _sidebarSnapshot;

}

@property (assign,nonatomic,__weak) BrowserWindowControllerMac * browserWindowController;              //@synthesize browserWindowController=_browserWindowController - In the implementation block
@property (assign,nonatomic,__weak) id<VisualTabPickerDelegate> delegate;                              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) char shouldStackThumbnails;                                               //@synthesize shouldStackThumbnails=_shouldStackThumbnails - In the implementation block
@property (assign,nonatomic) char tabsShouldBeClosable;                                                //@synthesize tabsShouldBeClosable=_tabsShouldBeClosable - In the implementation block
@property (getter=isAddingNewTab,nonatomic,readonly) char addingNewTab;                                //@synthesize addingNewTab=_addingNewTab - In the implementation block
@property (nonatomic,retain) NSImage * tabBarSnapshot;                                                 //@synthesize tabBarSnapshot=_tabBarSnapshot - In the implementation block
@property (nonatomic,retain) NSImage * sidebarSnapshot;                                                //@synthesize sidebarSnapshot=_sidebarSnapshot - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)visualTabPickerActiveWindowToolbarBackgroundColor;
+(id)visualTabPickerInactiveWindowToolbarBackgroundColor;
+(id)springAnimationForVisualTabPicker;
-(BrowserWindowControllerMac *)browserWindowController;
-(void)focusSearchField;
-(void)postponeClosingVisualTabPickerWhenNewTabIsInserted;
-(void)closeVisualTabPicker;
-(char)entryOrExitAnimationInProgress;
-(void)browserWindowControllerWillInsertTab:(id)arg1 ;
-(void)browserWindowController:(id)arg1 didInsertTab:(id)arg2 ;
-(void)setBrowserWindowController:(BrowserWindowControllerMac *)arg1 ;
-(void)setTabBarSnapshot:(NSImage *)arg1 ;
-(void)setSidebarSnapshot:(NSImage *)arg1 ;
-(void)startEntryAnimation;
-(char)isAddingNewTab;
-(void)_syncedCloudTabDevicesDidChange:(id)arg1 ;
-(id)visualTabPickerCloudTabsView:(id)arg1 nameOfDeviceAtIndex:(unsigned long long)arg2 ;
-(unsigned long long)visualTabPickerCloudTabsView:(id)arg1 numberOfTabsForDeviceAtIndex:(unsigned long long)arg2 ;
-(id)visualTabPickerCloudTabsView:(id)arg1 titleOfTabAtIndex:(unsigned long long)arg2 forDeviceAtIndex:(unsigned long long)arg3 ;
-(void)visualTabPickerCloudTabsView:(id)arg1 didSelectCloudTabAtIndex:(unsigned long long)arg2 forDeviceAtIndex:(unsigned long long)arg3 ;
-(void)visualTabPickerCloudTabsView:(id)arg1 didRemoveCloudTabAtIndex:(unsigned long long)arg2 forDeviceAtIndex:(unsigned long long)arg3 ;
-(unsigned long long)numberOfDevicesForVisualTabPickerCloudTabsView:(id)arg1 ;
-(char)closeRequestSupportedForVisualTabPickerCloudTabsView:(id)arg1 forDeviceAtIndex:(unsigned long long)arg2 ;
-(double)tabPickerAnimationDuration;
-(NSImage *)sidebarSnapshot;
-(NSImage *)tabBarSnapshot;
-(char)shouldStackMultipleThumbnailsInOneContainerIfPossible;
-(char)shouldDisplayRealWebViews;
-(void)visualTabPickerGridViewCloseTabViewItem:(id)arg1 ;
-(unsigned long long)indexOfSelectedTab;
-(double)tilesHeightToWidthRatioInVisualTabPickerGridView:(id)arg1 ;
-(id)orderedTabItemsInVisualTabPickerGridView:(id)arg1 ;
-(void)setShouldStackThumbnails:(char)arg1 ;
-(id)selectedTabItemInVisualTabPickerGridView:(id)arg1 ;
-(void)visualTabPickerSearchFieldTextDidChange:(id)arg1 ;
-(char)tabsShouldBeClosable;
-(void)_updateTabsShouldBeClosable;
-(void)_reloadCloudTabData;
-(void)_tabsDidChange:(id)arg1 ;
-(char)_doesSearchResultsContainSelectedTab;
-(void)_resetFilterState;
-(void)_reloadGridView;
-(void)removeVisualTabPickerFromViewHierarchy;
-(void)_reloadCloudTabsView;
-(void)_performAsynchronousFilter;
-(id)_displayedCloudTabDevices;
-(id)_cloudDeviceAtIndex:(unsigned long long)arg1 ;
-(id)_cloudTabAtIndex:(unsigned long long)arg1 forDeviceAtIndex:(unsigned long long)arg2 ;
-(void)_loadTabURL:(id)arg1 withWindowPolicy:(long long)arg2 ;
-(id)_tabFilterInfoForOrderedTabs;
-(id)_tabItemForRepresentedCloudTabObject:(id)arg1 ;
-(id)visualTabPickerCloudTabsView:(id)arg1 iconForDeviceAtIndex:(unsigned long long)arg2 ;
-(void)_reloadLocalTabData;
-(id)_dictionaryForCloudDeviceAtIndex:(unsigned long long)arg1 ;
-(char)shouldStackThumbnails;
-(void)setTabsShouldBeClosable:(char)arg1 ;
-(void)setDelegate:(id<VisualTabPickerDelegate>)arg1 ;
-(void)dealloc;
-(id<VisualTabPickerDelegate>)delegate;
-(void)loadView;
-(char)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3 ;
-(char)isSearching;
-(CGRect)contentLayoutRect;
@end

