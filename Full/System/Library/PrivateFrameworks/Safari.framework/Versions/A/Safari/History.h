/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:34:27 PM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/Safari.framework/Versions/A/Safari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Safari/Safari-Structs.h>
#import <Safari/WBSHistory.h>
#import <Safari/WBSHistoryLoaderDelegate.h>

@class HistoryTextCache, HistorySpotlightDataSource, NSTimer, NSMutableDictionary, HistoryBookmarkSource, NSArray, NSString;

@interface History : WBSHistory <WBSHistoryLoaderDelegate> {

	HistoryTextCache* _textCache;
	HistorySpotlightDataSource* _spotlightDataSource;
	unsigned long long _historyModificationsSinceLastReport;
	NSTimer* _collectHistoryDataTimer;
	NSMutableDictionary* _lastImportedVisitDatesByBrowserBundleIdentifier;
	unique_ptr<SafariShared::CoalescedAsynchronousWriter, std::__1::default_delete<SafariShared::CoalescedAsynchronousWriter> >* _writer;
	HistoryBookmarkSource* _bookmarkSource;

}

@property (nonatomic,readonly) HistoryBookmarkSource * bookmarkSource;              //@synthesize bookmarkSource=_bookmarkSource - In the implementation block
@property (nonatomic,readonly) NSArray * allItems; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)setShouldCheckIntegrityOnOpen:(char)arg1 ;
+(void)setIsStringForUserTypedDomainExpansionInHistoryFunction;
+(id)sharedHistory;
+(void)setReadOnly:(char)arg1 ;
-(HistoryBookmarkSource *)bookmarkSource;
-(void)populateVisitedLinksInContext:(Context*)arg1 ;
-(id)itemForURLString:(id)arg1 ;
-(id)URLStringMatchesFromCachedPageTextForString:(id)arg1 ;
-(id)itemForURL:(id)arg1 ;
-(char)shouldOmitURLString:(id)arg1 ;
-(id)dateOfLatestImportedVisitForBundleIdentifier:(id)arg1 ;
-(id)insertImportedVisitWithURLString:(id)arg1 forTestDrive:(char)arg2 title:(id)arg3 onDate:(id)arg4 sourceBrowser:(id)arg5 ;
-(void)cachePageText:(id)arg1 page:(const Page*)arg2 url:(id)arg3 ;
-(void)clearHistory;
-(void)updateHistoryAgeLimitFromPreferences;
-(void)_collectHistoryDataTimerFired;
-(void)_setVisitedLinkTrackingEnabled:(char)arg1 ;
-(void)_removeAllVisitedLinks;
-(id)itemVisitedAtURLString:(id)arg1 title:(id)arg2 timeOfVisit:(double)arg3 wasHTTPNonGet:(char)arg4 wasFailure:(char)arg5 increaseVisitCount:(char)arg6 origin:(long long)arg7 ;
-(NSArray *)allItems;
-(void)historyLoaderDidFinishLoading:(id)arg1 ;
-(void)enumerateItemsUsingBlock:(/*^block*/id)arg1 ;
-(void)_dispatchHistoryItemsAdded:(id)arg1 ;
-(void)_dispatchHistoryItemsRemoved:(id)arg1 ;
-(void)_dispatchHistoryCleared:(id)arg1 ;
-(id)_removeItemForURLString:(id)arg1 ;
-(void)savePendingChangesBeforeTermination:(/*^block*/id)arg1 ;
-(Class)_historyItemClass;
-(id)_createHistoryStore;
-(void)_addVisitedLinksForItemsIfNeeded:(id)arg1 ;
-(char)historyStoreShouldCheckDatabaseIntegrity:(id)arg1 ;
-(void)historyStoreDidFailDatabaseIntegrityCheck:(id)arg1 ;
-(char)historyStoreShouldRemoveItemsWithURLStringsThatAreNotValidURLs:(id)arg1 ;
-(id)init;
-(void)removeItems:(id)arg1 ;
@end

