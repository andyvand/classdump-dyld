/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:34:38 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/CommerceKit.framework/Versions/A/Resources/storeassetd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <StoreFoundation/ISOperation.h>
#import <storeassetd/ISDownloadQueueObserver.h>

@protocol ISUpdateDelegate;
@class NSMutableDictionary, NSCondition, NSArray, NSString, NSMutableString, NSMutableArray;

@interface UpdateOperation : ISOperation <ISDownloadQueueObserver> {

	unsigned _powerAssertion;
	NSMutableDictionary* _auditInfo;
	char _downloadQueueIsIdle;
	NSCondition* _idleDownloadQueueCondition;
	char _userInitiated;
	char _nowIsLater;
	char _restartCountdownWasDeferred;
	char _shouldUpdateNotificationsOnly;
	char _shouldCheckForAndStageAppUpdates;
	char _shouldStartAutoInstallOfUpdates;
	char _shouldPostAvailableUpdatesNotification;
	char _shouldInstallCriticalUpdatesOnly;
	char _criticalOSUpdatesHaveDelayedAutoInstall;
	char _criticalOSUpdatesShouldBeInstalledImmediately;
	char _criticalOSUpdatesRequireRestart;
	char _startedInDarkWake;
	char _shouldRestartToInstallUpdates;
	char _userDidDeclineRestart;
	char _didSnapshotTAL;
	id<ISUpdateDelegate> _updateDelegate;
	NSArray* _appUpdatesToInstall;
	NSArray* _osUpdatesToInstall;
	NSMutableDictionary* _osUpdateCancelTokens;
	NSArray* _osUpdatesToInstallLater;
	long long _doItLaterMode;
	NSArray* _postLogoutInstalledLaterUpdates;
	NSArray* _postLogoutFailedUpdates;
	NSArray* _postLogoutInstalledUpdates;
	long long _criticalOSUpdateCount;
	NSString* _criticalOSUpdateNotificationTitle;
	NSString* _criticalOSUpdateNotificationText;
	NSMutableString* _stagedBundleIDs;
	NSArray* _restartIsBlockedByRunningApplications;
	NSArray* _osUpdatesToInstallOnRestart;
	NSMutableArray* _relaunchAppHelpers;
	NSArray* _autoInstalledAppUpdates;

}

@property (__weak) id<ISUpdateDelegate> updateDelegate;                             //@synthesize updateDelegate=_updateDelegate - In the implementation block
@property (assign) char userInitiated;                                              //@synthesize userInitiated=_userInitiated - In the implementation block
@property (copy) NSArray * appUpdatesToInstall;                                     //@synthesize appUpdatesToInstall=_appUpdatesToInstall - In the implementation block
@property (copy) NSArray * osUpdatesToInstall;                                      //@synthesize osUpdatesToInstall=_osUpdatesToInstall - In the implementation block
@property (retain) NSMutableDictionary * osUpdateCancelTokens;                      //@synthesize osUpdateCancelTokens=_osUpdateCancelTokens - In the implementation block
@property (retain) NSArray * osUpdatesToInstallLater;                               //@synthesize osUpdatesToInstallLater=_osUpdatesToInstallLater - In the implementation block
@property (assign) char nowIsLater;                                                 //@synthesize nowIsLater=_nowIsLater - In the implementation block
@property (assign) char restartCountdownWasDeferred;                                //@synthesize restartCountdownWasDeferred=_restartCountdownWasDeferred - In the implementation block
@property (assign) long long doItLaterMode;                                         //@synthesize doItLaterMode=_doItLaterMode - In the implementation block
@property (assign) char shouldUpdateNotificationsOnly;                              //@synthesize shouldUpdateNotificationsOnly=_shouldUpdateNotificationsOnly - In the implementation block
@property (assign) char shouldCheckForAndStageAppUpdates;                           //@synthesize shouldCheckForAndStageAppUpdates=_shouldCheckForAndStageAppUpdates - In the implementation block
@property (assign) char shouldStartAutoInstallOfUpdates;                            //@synthesize shouldStartAutoInstallOfUpdates=_shouldStartAutoInstallOfUpdates - In the implementation block
@property (assign) char shouldPostAvailableUpdatesNotification;                     //@synthesize shouldPostAvailableUpdatesNotification=_shouldPostAvailableUpdatesNotification - In the implementation block
@property (copy) NSArray * postLogoutInstalledLaterUpdates;                         //@synthesize postLogoutInstalledLaterUpdates=_postLogoutInstalledLaterUpdates - In the implementation block
@property (copy) NSArray * postLogoutFailedUpdates;                                 //@synthesize postLogoutFailedUpdates=_postLogoutFailedUpdates - In the implementation block
@property (copy) NSArray * postLogoutInstalledUpdates;                              //@synthesize postLogoutInstalledUpdates=_postLogoutInstalledUpdates - In the implementation block
@property (assign) char shouldInstallCriticalUpdatesOnly;                           //@synthesize shouldInstallCriticalUpdatesOnly=_shouldInstallCriticalUpdatesOnly - In the implementation block
@property (assign) long long criticalOSUpdateCount;                                 //@synthesize criticalOSUpdateCount=_criticalOSUpdateCount - In the implementation block
@property (copy) NSString * criticalOSUpdateNotificationTitle;                      //@synthesize criticalOSUpdateNotificationTitle=_criticalOSUpdateNotificationTitle - In the implementation block
@property (copy) NSString * criticalOSUpdateNotificationText;                       //@synthesize criticalOSUpdateNotificationText=_criticalOSUpdateNotificationText - In the implementation block
@property (assign) char criticalOSUpdatesHaveDelayedAutoInstall;                    //@synthesize criticalOSUpdatesHaveDelayedAutoInstall=_criticalOSUpdatesHaveDelayedAutoInstall - In the implementation block
@property (assign) char criticalOSUpdatesShouldBeInstalledImmediately;              //@synthesize criticalOSUpdatesShouldBeInstalledImmediately=_criticalOSUpdatesShouldBeInstalledImmediately - In the implementation block
@property (assign) char criticalOSUpdatesRequireRestart;                            //@synthesize criticalOSUpdatesRequireRestart=_criticalOSUpdatesRequireRestart - In the implementation block
@property (assign) char startedInDarkWake;                                          //@synthesize startedInDarkWake=_startedInDarkWake - In the implementation block
@property (retain) NSMutableString * stagedBundleIDs;                               //@synthesize stagedBundleIDs=_stagedBundleIDs - In the implementation block
@property (assign) char shouldRestartToInstallUpdates;                              //@synthesize shouldRestartToInstallUpdates=_shouldRestartToInstallUpdates - In the implementation block
@property (assign) char userDidDeclineRestart;                                      //@synthesize userDidDeclineRestart=_userDidDeclineRestart - In the implementation block
@property (copy) NSArray * restartIsBlockedByRunningApplications;                   //@synthesize restartIsBlockedByRunningApplications=_restartIsBlockedByRunningApplications - In the implementation block
@property (copy) NSArray * osUpdatesToInstallOnRestart;                             //@synthesize osUpdatesToInstallOnRestart=_osUpdatesToInstallOnRestart - In the implementation block
@property (readonly) NSMutableArray * relaunchAppHelpers;                           //@synthesize relaunchAppHelpers=_relaunchAppHelpers - In the implementation block
@property (assign) char didSnapshotTAL;                                             //@synthesize didSnapshotTAL=_didSnapshotTAL - In the implementation block
@property (copy) NSArray * autoInstalledAppUpdates;                                 //@synthesize autoInstalledAppUpdates=_autoInstalledAppUpdates - In the implementation block
+(id)_synchronizationLock;
-(char)isMaintenanceDarkWake;
-(char)powerNapIsEnabled;
-(void)createPowerAssertion;
-(NSArray *)appUpdatesToInstall;
-(id<ISUpdateDelegate>)updateDelegate;
-(NSArray *)osUpdatesToInstall;
-(char)userInitiated;
-(char)shouldStartAutoInstallOfUpdates;
-(char)shouldCheckForAndStageAppUpdates;
-(void)setStartedInDarkWake:(char)arg1 ;
-(char)shouldUpdateNotificationsOnly;
-(void)checkUpdateQueue;
-(id)_bundleIDsStringWithAppUpdates:(id)arg1 ;
-(id)_productKeysStringWithOSUpdates:(id)arg1 ;
-(char)prepareSystemForDoItLater;
-(id)osUpdatesToInstallNow;
-(id)appUpdatesToStageOrInstallNow;
-(void)performUserInteractionRequiredForAppUpdates:(id)arg1 andOSUpdates:(id)arg2 ;
-(void)purchaseAppUpdates:(id)arg1 toBeInstalledWithOSUpdated:(id)arg2 returningDownloads:(id*)arg3 ;
-(void)downloadAndInstallUpdatesWithAppDownloads:(id)arg1 osUpdates:(id)arg2 ;
-(void)resetTimestamps;
-(char)shouldRestartToInstallUpdates;
-(char)userDidDeclineRestart;
-(void)restartToInstallUpdates;
-(void)showDoItLaterFailureAlert;
-(void)validateAndPostAvailableUpdatesNotification;
-(void)relaunchTerminatedApplications;
-(NSArray *)osUpdatesToInstallOnRestart;
-(void)writeAuditInfoToDisk;
-(char)_shouldCheckUpdateQueue;
-(void)setUserDidDeclineRestart:(char)arg1 ;
-(char)shouldInstallCriticalUpdatesOnly;
-(NSArray *)osUpdatesToInstallLater;
-(char)_shouldInstallOSUpdate:(id)arg1 abortCode:(long long*)arg2 abortReason:(id*)arg3 abortBundleID:(id*)arg4 abortApplicationNames:(id*)arg5 ;
-(void)auditOSUpdate:(id)arg1 shouldInstall:(char)arg2 abortCode:(long long)arg3 abortReason:(id)arg4 abortBundleID:(id)arg5 abortAppNames:(id)arg6 ;
-(NSArray *)restartIsBlockedByRunningApplications;
-(void)setOsUpdatesToInstallLater:(NSArray *)arg1 ;
-(char)shouldRestartAfterShowingRestartCountdown;
-(char)_shouldDownloadAppUpdateAssets;
-(char)_shouldAutoInstallAppUpdateWithBundleID:(id)arg1 download:(id)arg2 abortCode:(long long*)arg3 abortReason:(id*)arg4 abortAppName:(id*)arg5 ;
-(void)auditAppUpdate:(id)arg1 shouldInstall:(char)arg2 abortCode:(long long)arg3 abortReason:(id)arg4 abortAppName:(id)arg5 ;
-(void)_loadAppleIDForPurchase:(id)arg1 receipt:(id)arg2 ;
-(char)_isStubReceipt:(id)arg1 ;
-(void)_downloadAndInstallAppUpdateDownloads:(id)arg1 withCompletionHander:(/*^block*/id)arg2 ;
-(void)_downloadAndInstallOSUpdates:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)_logAppAutoUpdateAbortCode:(long long)arg1 reason:(id)arg2 forBundleID:(id)arg3 itemID:(unsigned long long)arg4 ;
-(void)_messageTraceAppAutoUpdateWithSuccess:(char)arg1 abortCode:(long long)arg2 reason:(id)arg3 error:(id)arg4 forBundleID:(id)arg5 itemID:(unsigned long long)arg6 ;
-(void)_reportProgressForOSUpdates:(id)arg1 state:(long long)arg2 percentComplete:(double)arg3 statusInfo:(id)arg4 includesCriticalUpdates:(char)arg5 canCancel:(char)arg6 ;
-(void)_reportError:(id)arg1 forOSUpdates:(id)arg2 ;
-(void)setShouldRestartToInstallUpdates:(char)arg1 ;
-(void)setOsUpdatesToInstallOnRestart:(NSArray *)arg1 ;
-(void)_downloadUpdatesForPostLogoutInstall:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(long long)criticalOSUpdateCount;
-(char)criticalOSUpdatesShouldBeInstalledImmediately;
-(char)shouldPostAvailableUpdatesNotification;
-(char)criticalOSUpdatesRequireRestart;
-(NSString *)criticalOSUpdateNotificationTitle;
-(NSString *)criticalOSUpdateNotificationText;
-(char)criticalOSUpdatesHaveDelayedAutoInstall;
-(char)_updatesAreInProgressOrQueuedForLater;
-(NSArray *)postLogoutFailedUpdates;
-(NSArray *)postLogoutInstalledLaterUpdates;
-(NSArray *)postLogoutInstalledUpdates;
-(NSArray *)autoInstalledAppUpdates;
-(char)restartCountdownWasDeferred;
-(void)setDidSnapshotTAL:(char)arg1 ;
-(void)setRestartIsBlockedByRunningApplications:(NSArray *)arg1 ;
-(NSMutableArray *)relaunchAppHelpers;
-(char)didSnapshotTAL;
-(void)setUpdateDelegate:(id<ISUpdateDelegate>)arg1 ;
-(void)setUserInitiated:(char)arg1 ;
-(void)setAppUpdatesToInstall:(NSArray *)arg1 ;
-(void)setOsUpdatesToInstall:(NSArray *)arg1 ;
-(NSMutableDictionary *)osUpdateCancelTokens;
-(void)setOsUpdateCancelTokens:(NSMutableDictionary *)arg1 ;
-(void)setRestartCountdownWasDeferred:(char)arg1 ;
-(long long)doItLaterMode;
-(void)setDoItLaterMode:(long long)arg1 ;
-(void)setShouldUpdateNotificationsOnly:(char)arg1 ;
-(void)setShouldCheckForAndStageAppUpdates:(char)arg1 ;
-(void)setShouldStartAutoInstallOfUpdates:(char)arg1 ;
-(void)setShouldPostAvailableUpdatesNotification:(char)arg1 ;
-(void)setPostLogoutInstalledLaterUpdates:(NSArray *)arg1 ;
-(void)setPostLogoutFailedUpdates:(NSArray *)arg1 ;
-(void)setPostLogoutInstalledUpdates:(NSArray *)arg1 ;
-(void)setShouldInstallCriticalUpdatesOnly:(char)arg1 ;
-(void)setCriticalOSUpdateCount:(long long)arg1 ;
-(void)setCriticalOSUpdateNotificationTitle:(NSString *)arg1 ;
-(void)setCriticalOSUpdateNotificationText:(NSString *)arg1 ;
-(void)setCriticalOSUpdatesHaveDelayedAutoInstall:(char)arg1 ;
-(void)setCriticalOSUpdatesShouldBeInstalledImmediately:(char)arg1 ;
-(void)setCriticalOSUpdatesRequireRestart:(char)arg1 ;
-(char)startedInDarkWake;
-(NSMutableString *)stagedBundleIDs;
-(void)setStagedBundleIDs:(NSMutableString *)arg1 ;
-(void)setAutoInstalledAppUpdates:(NSArray *)arg1 ;
-(void)releasePowerAssertion;
-(char)nowIsLater;
-(void)setNowIsLater:(char)arg1 ;
-(id)initWithStoreClient:(id)arg1 ;
-(void)run;
-(id)updateController;
-(void)_run;
-(void)downloadQueueDidAddDownload:(id)arg1 ;
-(void)downloadQueueDidRemoveDownload:(id)arg1 queueIsIdle:(char)arg2 ;
-(void)download:(id)arg1 didUpdateStatus:(id)arg2 ;
-(void)downloadQueueDidCheckServerDownloadQueueForAccount:(id)arg1 withDownloadCount:(long long)arg2 newDownloads:(id)arg3 ;
@end

