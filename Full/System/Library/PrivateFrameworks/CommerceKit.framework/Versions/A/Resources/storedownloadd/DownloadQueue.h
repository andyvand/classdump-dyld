/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:34:39 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/PrivateFrameworks/CommerceKit.framework/Versions/A/Resources/storedownloadd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <storedownloadd/DownloadQueueSourceDelegate.h>
#import <storedownloadd/ISOperationDelegate.h>

@class Download, DownloadErrorHandler, StoreDownloadQueueSource, NSMutableArray, NSLock, ISStoreClient, ISServiceProxy, NSString;

@interface DownloadQueue : NSObject <DownloadQueueSourceDelegate, ISOperationDelegate> {

	Download* _activeStagingDownload;
	DownloadErrorHandler* _errorHandler;
	char _isSynching;
	StoreDownloadQueueSource* _source;
	NSMutableArray* _activeDownloads;
	NSMutableArray* _observers;
	NSLock* _observersLock;
	NSMutableArray* _queueCheckClients;
	ISStoreClient* _storeClient;
	ISServiceProxy* _serviceProxy;

}

@property (readonly) ISStoreClient * storeClient;                           //@synthesize storeClient=_storeClient - In the implementation block
@property (readonly) long long numberOfActiveDownloads; 
@property (readonly) long long numberOfDownloadsWaiting; 
@property (readonly) long long numberOfDownloadsInstalling; 
@property (getter=isActive,nonatomic,readonly) char active; 
@property (nonatomic,retain) Download * activeStagingDownload;              //@synthesize activeStagingDownload=_activeStagingDownload - In the implementation block
@property (readonly) ISServiceProxy * serviceProxy;                         //@synthesize serviceProxy=_serviceProxy - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)queueForStoreClient:(id)arg1 ;
+(id)downloadWithItemIdentifier:(unsigned long long)arg1 ;
-(void)downloadQueueSourceChangedFirstReadyDownload:(id)arg1 ;
-(char)checkQueue;
-(char)retryFailedDownloads;
-(char)resumeDownload:(id)arg1 ;
-(void)cancelDownload:(id)arg1 confirm:(char)arg2 ;
-(long long)numberOfDownloadsWaiting;
-(long long)numberOfActiveDownloads;
-(long long)numberOfDownloadsInstalling;
-(id)downloadForIdentifier:(unsigned long long)arg1 ;
-(void)_startWatchingSources;
-(void)checkManifest;
-(void)_stopWatchingSources;
-(void)removeDownloads:(id)arg1 ;
-(char)addDownloads:(id)arg1 ;
-(id)copyDownloads;
-(id)_downloadForSSDownload:(id)arg1 ;
-(Download *)activeStagingDownload;
-(void)setActiveStagingDownload:(Download *)arg1 ;
-(char)startFirstReadyDownload;
-(char)isActiveDownload:(id)arg1 ;
-(void)updateManifest;
-(void)_notifyObserversOfStatusUpdateForDownload:(id)arg1 ;
-(char)pauseDownload:(id)arg1 ;
-(id)downloadsForPurchaseResponse:(id)arg1 ;
-(char)_runCancelConfirmDialogForDownload:(id)arg1 askToDelete:(char)arg2 ;
-(void)_informServerThatUserCanceledDownload:(id)arg1 ;
-(void)cancelDownload:(id)arg1 confirm:(char)arg2 askToDelete:(char)arg3 ;
-(char)canStartDownload:(id)arg1 ;
-(void)_setDownloadsToPaused:(id)arg1 ;
-(long long)_availableDiskSpaceAtPath:(id)arg1 excludingDownload:(id)arg2 ;
-(void)_pauseDownloadWithIdentifier:(id)arg1 ;
-(void)_resumeDownloadWithIdentifier:(id)arg1 ;
-(void)tellDockToAddDownload:(id)arg1 ;
-(void)_triggerDownloadsNotification:(id)arg1 ;
-(void)_removeDownloadWithIdentifier:(id)arg1 confirm:(char)arg2 ;
-(void)_notifyObserversOfAdditions:(id)arg1 ;
-(void)_notifyObserversOfRemovals:(id)arg1 ;
-(void)_handleDownloadsChange;
-(id)_threadSafeClientsArrayCopy;
-(void)_setWaitingStateForDownload:(id)arg1 ;
-(id)downloadWithItemIdentifier:(unsigned long long)arg1 ;
-(void)downloadDidChange:(id)arg1 changeType:(unsigned long long)arg2 changeSet:(id)arg3 ;
-(void)downloadQueueSourceFinishedCheckWithNewDownloads:(unsigned long long)arg1 totalFound:(unsigned long long)arg2 ;
-(id)downloadsWithType:(long long)arg1 ;
-(void)pauseDownloads:(id)arg1 ;
-(void)_purchaseOperationFinishedSuccessfully:(id)arg1 ;
-(void)mergeInQueueResponse:(id)arg1 forIdentifier:(unsigned long long)arg2 ;
-(long long)availableDiskSpaceForDownload:(id)arg1 ;
-(id)downloadsWithInfo:(id)arg1 ;
-(void)pauseDownloadWithXPCInfo:(id)arg1 ;
-(void)resumeDownloadWithXPCInfo:(id)arg1 ;
-(void)cancelDownloadWithXPCInfo:(id)arg1 confirm:(char)arg2 ;
-(id)createDownloadStatusListForProducts:(id)arg1 ;
-(char)addDownloadWithDownload:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)pauseDownloadWithIdentifer:(id)arg1 ;
-(void)checkServerQueueWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)checkServerDownloadQueueWithDSID:(id)arg1 forPurchaseItems:(id)arg2 ;
-(void)checkQueuesWithInfo:(id)arg1 ;
-(void)removeDownloadWithIdentifer:(id)arg1 ;
-(void)removeDownloadWithInfo:(id)arg1 ;
-(void)resumeDownloadWithIdentifer:(id)arg1 ;
-(char)cacheReceiptAsString:(id)arg1 forDownload:(id)arg2 returningError:(id*)arg3 ;
-(void)sendDownloadListToDock;
-(void)_notifyClientsAboutDownloadsChange:(id)arg1 forSource:(id)arg2 ;
-(id)_sourceForDownload:(id)arg1 ;
-(void)contentSizeDidChangeForDownload:(id)arg1 ;
-(id)automaticDownloadKinds;
-(void)operation:(id)arg1 failedWithError:(id)arg2 ;
-(id)initWithStoreClient:(id)arg1 ;
-(void)dealloc;
-(char)isActive;
-(ISStoreClient *)storeClient;
-(ISServiceProxy *)serviceProxy;
-(void)operation:(id)arg1 updatedProgress:(id)arg2 ;
-(void)operationFinished:(id)arg1 ;
-(char)checkStoreDownloadQueueForAccount:(id)arg1 ;
-(id)availableSpaceOnDiskAtPath:(id)arg1 ;
-(void)addDownloadQueueObserver:(id)arg1 ;
-(void)removeDownloadQueueObserver:(id)arg1 ;
-(char)checkAutomaticDownloadQueue;
@end

