/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 7:29:28 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /System/Library/LoginPlugins/BezelServices.loginPlugin/Contents/MacOS/BezelServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol NSObject;
@class VolumeState, NSSound, NSString, NSTimer, NSDate;

@interface VolumeStateMachine : NSObject {

	VolumeState* _currentState;
	id<NSObject> _faceTimeProxy;
	NSSound* _beepSound;
	NSString* _beepPath;
	NSTimer* _beepTimer;
	NSDate* _beepTimeout;
	char _volIncKeyDown;
	char _volDecKeyDown;
	char _muteKeyDown;
	char _sleeping;
	char _muted;
	char _negateSilentPreference;
	char _singleBeepWhenFinished;
	int _eventType;
	short _graphicType;

}

@property (retain) VolumeState * currentState;               //@synthesize currentState=_currentState - In the implementation block
@property (retain) id<NSObject> faceTimeProxy;               //@synthesize faceTimeProxy=_faceTimeProxy - In the implementation block
@property (retain) NSSound * beepSound;                      //@synthesize beepSound=_beepSound - In the implementation block
@property (retain) NSString * beepPath;                      //@synthesize beepPath=_beepPath - In the implementation block
@property (retain) NSTimer * beepTimer;                      //@synthesize beepTimer=_beepTimer - In the implementation block
@property (retain) NSDate * beepTimeout;                     //@synthesize beepTimeout=_beepTimeout - In the implementation block
@property (assign) char volIncKeyDown;                       //@synthesize volIncKeyDown=_volIncKeyDown - In the implementation block
@property (assign) char volDecKeyDown;                       //@synthesize volDecKeyDown=_volDecKeyDown - In the implementation block
@property (assign) char muteKeyDown;                         //@synthesize muteKeyDown=_muteKeyDown - In the implementation block
@property (assign) char sleeping;                            //@synthesize sleeping=_sleeping - In the implementation block
@property (assign) char muted; 
@property (assign) char negateSilentPreference;              //@synthesize negateSilentPreference=_negateSilentPreference - In the implementation block
@property (assign) char singleBeepWhenFinished;              //@synthesize singleBeepWhenFinished=_singleBeepWhenFinished - In the implementation block
@property (assign) int eventType;                            //@synthesize eventType=_eventType - In the implementation block
@property (assign) short graphicType;                        //@synthesize graphicType=_graphicType - In the implementation block
+(id)getSingleton;
+(void)releaseSingleton;
+(id)alloc;
-(char)volIncKeyDown;
-(void)setBeepTimer:(NSTimer *)arg1 ;
-(void)setGraphicType:(short)arg1 ;
-(void)setBeepSound:(NSSound *)arg1 ;
-(char)singleBeepWhenFinished;
-(void)displaySoundPrefs;
-(NSTimer *)beepTimer;
-(void)playOneBeep:(id)arg1 ;
-(void)powerChanged:(id)arg1 ;
-(void)setBeepTimeout:(NSDate *)arg1 ;
-(void)setNegateSilentPreference:(char)arg1 ;
-(void)setVolIncKeyDown:(char)arg1 ;
-(void)startRepeatedBeeps;
-(void)handleSleepEvent:(char)arg1 ;
-(void)changeVolumeBy:(int)arg1 type:(int)arg2 ;
-(void)muteFaceTimeCall;
-(void)setFaceTimeProxy:(id<NSObject>)arg1 ;
-(void)changeState:(int)arg1 smallIncrements:(char)arg2 ;
-(void)setSleeping:(char)arg1 ;
-(char)negateSilentPreference;
-(void)setSingleBeepWhenFinished:(char)arg1 ;
-(void)setVolDecKeyDown:(char)arg1 ;
-(void)setMuteKeyDown:(char)arg1 ;
-(char)muteKeyDown;
-(void)stopBeeps;
-(NSString *)beepPath;
-(NSDate *)beepTimeout;
-(short)graphicType;
-(char)volDecKeyDown;
-(void)startOneBeep;
-(void)handleKeyEvent:(int)arg1 shift:(char)arg2 control:(char)arg3 option:(char)arg4 command:(char)arg5 ;
-(id<NSObject>)faceTimeProxy;
-(void)handleFaceTimeEvent:(char)arg1 faceTimeProxy:(id)arg2 ;
-(void)setBeepPath:(NSString *)arg1 ;
-(char)sleeping;
-(void)displayOSD;
-(NSSound *)beepSound;
-(void)setEventType:(int)arg1 ;
-(void)setCurrentState:(VolumeState *)arg1 ;
-(void)setMuted:(char)arg1 ;
-(int)eventType;
-(char)muted;
-(id)init;
-(void)dealloc;
-(void)stop;
-(VolumeState *)currentState;
-(void)toggleMute;
@end

