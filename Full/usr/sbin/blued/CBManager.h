/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:57:34 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/sbin/blued
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <blued/blued-Structs.h>
#import <blued/GATTDelegate.h>

@protocol OS_dispatch_source;
@class NSMutableSet, NSMutableArray, NSMutableDictionary, ScanManager, IOBluetoothHostController, NSString, SystemPowerNotifier, NSSet, NSObject;

@interface CBManager : NSObject <GATTDelegate> {

	NSMutableSet* currentClients;
	NSMutableArray* _internalDevices;
	NSMutableSet* outstandingDevicesToConnect;
	NSMutableSet* systemDevices;
	NSMutableDictionary* uuidStorage;
	NSMutableArray* currentGATTOperations;
	BluetoothDeviceAddress randAddress;
	BluetoothDeviceAddress nonResolvableAddress;
	unsigned char randomAddress_outHandles;
	unsigned char publicAddress_outHandles;
	unsigned char nonresolvableAddress_outHandles;
	char connectingForMidi;
	char _isAdvertising;
	char _isAdvertisingRandom;
	char _isAdvertisingPublic;
	char _isAdvertisingNonResolvable;
	char _systemIsSleeping;
	char _disableCaching;
	char _controllerSupportsLowEnergy;
	char _controllerSupportsScatternet;
	char _isConnecting;
	ScanManager* _scanManager;
	IOBluetoothHostController* _controller;
	NSMutableArray* _peerTrackingTypes;
	NSMutableArray* _IDSPairedDevices;
	NSMutableArray* _userIDSPairedDevices;
	NSString* _currentUser;
	NSString* _currentCloudID;
	NSMutableArray* _trackingTypes;
	SystemPowerNotifier* _powerNotifier;
	NSSet* _servicesNotAllowedToBePublishedByClients;
	NSSet* _characteristicsNotAllowedToBeUsedByClients;
	NSObject*<OS_dispatch_source> _usr1SignalSource;

}

@property (retain) ScanManager * scanManager;                                       //@synthesize scanManager=_scanManager - In the implementation block
@property (retain) IOBluetoothHostController * controller;                          //@synthesize controller=_controller - In the implementation block
@property (assign) char isAdvertising;                                              //@synthesize isAdvertising=_isAdvertising - In the implementation block
@property (assign) char isAdvertisingRandom;                                        //@synthesize isAdvertisingRandom=_isAdvertisingRandom - In the implementation block
@property (assign) char isAdvertisingPublic;                                        //@synthesize isAdvertisingPublic=_isAdvertisingPublic - In the implementation block
@property (assign) char isAdvertisingNonResolvable;                                 //@synthesize isAdvertisingNonResolvable=_isAdvertisingNonResolvable - In the implementation block
@property (retain) NSMutableArray * peerTrackingTypes;                              //@synthesize peerTrackingTypes=_peerTrackingTypes - In the implementation block
@property (retain) NSMutableArray * IDSPairedDevices;                               //@synthesize IDSPairedDevices=_IDSPairedDevices - In the implementation block
@property (retain) NSMutableArray * userIDSPairedDevices;                           //@synthesize userIDSPairedDevices=_userIDSPairedDevices - In the implementation block
@property (retain) NSString * currentUser;                                          //@synthesize currentUser=_currentUser - In the implementation block
@property (retain) NSString * currentCloudID;                                       //@synthesize currentCloudID=_currentCloudID - In the implementation block
@property (retain) NSMutableArray * trackingTypes;                                  //@synthesize trackingTypes=_trackingTypes - In the implementation block
@property (retain) SystemPowerNotifier * powerNotifier;                             //@synthesize powerNotifier=_powerNotifier - In the implementation block
@property (assign) char systemIsSleeping;                                           //@synthesize systemIsSleeping=_systemIsSleeping - In the implementation block
@property (retain) NSSet * servicesNotAllowedToBePublishedByClients;                //@synthesize servicesNotAllowedToBePublishedByClients=_servicesNotAllowedToBePublishedByClients - In the implementation block
@property (retain) NSSet * characteristicsNotAllowedToBeUsedByClients;              //@synthesize characteristicsNotAllowedToBeUsedByClients=_characteristicsNotAllowedToBeUsedByClients - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> usr1SignalSource;                  //@synthesize usr1SignalSource=_usr1SignalSource - In the implementation block
@property (assign) char disableCaching;                                             //@synthesize disableCaching=_disableCaching - In the implementation block
@property (assign) char controllerSupportsLowEnergy;                                //@synthesize controllerSupportsLowEnergy=_controllerSupportsLowEnergy - In the implementation block
@property (assign) char controllerSupportsScatternet;                               //@synthesize controllerSupportsScatternet=_controllerSupportsScatternet - In the implementation block
@property (assign) char isConnecting;                                               //@synthesize isConnecting=_isConnecting - In the implementation block
+(id)sharedManager;
-(void)hostControllerTerminated:(id)arg1 ;
-(void)hostControllerReset:(id)arg1 ;
-(void)controllerOnline;
-(void)hostControllerPowerChanged:(id)arg1 ;
-(NSMutableArray *)userIDSPairedDevices;
-(id)uuidForDevice:(id)arg1 addressType:(unsigned char)arg2 ;
-(NSMutableArray *)peerTrackingTypes;
-(id)uuidForDevice:(id)arg1 ;
-(void)removeScanClient:(id)arg1 ;
-(void)saveIDSDeviceToPrefs:(id)arg1 ;
-(NSString *)currentCloudID;
-(id)deviceForUUID:(id)arg1 ;
-(void)removeIDSDeviceToPrefs:(id)arg1 ;
-(NSMutableArray *)IDSPairedDevices;
-(void)clearAllIDSDevices;
-(char)deviceIsIDSDevice:(id)arg1 ;
-(void)handleCoreBluetoothMessage:(id)arg1 ;
-(void)forceRemoveDevice:(id)arg1 ;
-(char)addressTypeForUUID:(id)arg1 ;
-(void)addUUIDToCoreBluetoothCache:(id)arg1 ;
-(void)updateCurrentUser:(id)arg1 ;
-(void)GATTCharacteristicDiscoveryComplete:(id)arg1 service:(id)arg2 context:(id)arg3 status:(int)arg4 ;
-(void)GATTIncludedServiceDiscoveryComplete:(id)arg1 service:(id)arg2 context:(id)arg3 status:(int)arg4 ;
-(void)GATTMTUExchangeComplete:(id)arg1 status:(int)arg2 ;
-(void)GATTHandleValueIndication:(id)arg1 handle:(unsigned short)arg2 value:(id)arg3 ;
-(void)GATTHandleValueNotification:(id)arg1 handle:(unsigned short)arg2 value:(id)arg3 ;
-(void)pairingCompleted:(id)arg1 ;
-(void)sendReadRequest:(id)arg1 clientID:(unsigned long long)arg2 handle:(unsigned short)arg3 offset:(id)arg4 requestType:(unsigned char)arg5 ;
-(void)sendWriteRequests:(id)arg1 clientID:(unsigned long long)arg2 handle:(unsigned short)arg3 offset:(id)arg4 data:(id)arg5 requestType:(unsigned char)arg6 ;
-(void)GATTNotificationUpdated:(id)arg1 attribute:(id)arg2 notify:(unsigned short)arg3 ;
-(void)GATTConnectionClosed:(id)arg1 ;
-(id)coreBluetoothCache;
-(void)restoreSystemDevices;
-(void)setPowerNotifier:(SystemPowerNotifier *)arg1 ;
-(void)gattDatabaseDidChange:(id)arg1 ;
-(void)setServicesNotAllowedToBePublishedByClients:(NSSet *)arg1 ;
-(void)setCharacteristicsNotAllowedToBeUsedByClients:(NSSet *)arg1 ;
-(void)setUsr1SignalSource:(NSObject*<OS_dispatch_source>)arg1 ;
-(NSObject*<OS_dispatch_source>)usr1SignalSource;
-(void)printDiagnosticInfo;
-(void)setSystemIsSleeping:(char)arg1 ;
-(char)isAdvertisingPublic;
-(void)setIsAdvertisingPublic:(char)arg1 ;
-(char)isAdvertisingRandom;
-(void)setIsAdvertisingRandom:(char)arg1 ;
-(char)isAdvertisingNonResolvable;
-(void)setIsAdvertisingNonResolvable:(char)arg1 ;
-(void)sendCBManagerStateForConnection:(id)arg1 cbManagerState:(long long)arg2 ;
-(void)enableMultipleAdvertisements;
-(void)updateWhiteListWithUUID:(id)arg1 add:(char)arg2 ;
-(void)setStateForConnection:(id)arg1 ;
-(id)clientForXPCConnection:(id)arg1 ;
-(void)addClient:(id)arg1 name:(id)arg2 isPeripheral:(char)arg3 ;
-(void)startAdvertisingForClient:(id)arg1 advertisementData:(id)arg2 ;
-(void)stopAdvertisingForClient:(id)arg1 ;
-(void)setConnectionLatencyForClient:(id)arg1 connLatency:(id)arg2 centralUUID:(id)arg3 ;
-(void)startTrackingDevice:(id)arg1 UUID:(id)arg2 options:(id)arg3 ;
-(void)stopTrackingDevice:(id)arg1 UUID:(id)arg2 options:(id)arg3 ;
-(void)addServiceForClient:(id)arg1 cbServiceAttID:(id)arg2 serviceData:(id)arg3 ;
-(void)removeServiceForClient:(id)arg1 cbServiceAttID:(id)arg2 ;
-(void)removeAllServicesForClient:(id)arg1 ;
-(void)respondToRequestForClient:(id)arg1 transactionID:(id)arg2 value:(id)arg3 result:(id)arg4 cbAttributeID:(id)arg5 ;
-(void)sendValueNotificationForClient:(id)arg1 cbCharAttID:(id)arg2 updateValue:(id)arg3 centralUUIDsArray:(id)arg4 ;
-(void)retrievePeripherals:(id)arg1 connection:(id)arg2 ;
-(void)retrievePeripheralsWithIdentifiers:(id)arg1 connection:(id)arg2 xpcObj:(id)arg3 ;
-(void)retrieveConnectedPeripheralsWithServices:(id)arg1 connection:(id)arg2 xpcObj:(id)arg3 ;
-(void)peripheral:(id)arg1 tag:(id)arg2 ;
-(void)peripheral:(id)arg1 untag:(id)arg2 ;
-(char)peripheral:(id)arg1 hasTag:(id)arg2 ;
-(void)addScanClient:(id)arg1 services:(id)arg2 options:(id)arg3 ;
-(void)connectToDevice:(id)arg1 client:(id)arg2 ;
-(void)connectCancel:(id)arg1 force:(char)arg2 client:(id)arg3 ;
-(void)updateRSSI:(id)arg1 connection:(id)arg2 ;
-(void)discoverServices:(id)arg1 withUUIDs:(id)arg2 connection:(id)arg3 ;
-(void)pair:(id)arg1 connection:(id)arg2 ;
-(void)unpair:(id)arg1 client:(id)arg2 ;
-(void)discoverIncludedServices:(id)arg1 startHandle:(unsigned short)arg2 endHandle:(unsigned short)arg3 UUIDs:(id)arg4 connection:(id)arg5 ;
-(void)discoverCharacteristics:(id)arg1 startHandle:(unsigned short)arg2 endHandle:(unsigned short)arg3 UUIDs:(id)arg4 connection:(id)arg5 ;
-(void)readCharacteristic:(id)arg1 characteristicHandle:(unsigned short)arg2 valueHandle:(unsigned short)arg3 connection:(id)arg4 ;
-(void)writeCharacteristic:(id)arg1 characteristicHandle:(unsigned short)arg2 valueHandle:(unsigned short)arg3 response:(char)arg4 value:(id)arg5 connection:(id)arg6 ;
-(void)setBroadcast:(char)arg1 forPeripheral:(id)arg2 characteristic:(unsigned short)arg3 connection:(id)arg4 ;
-(void)setNotify:(char)arg1 forPeripheral:(id)arg2 characteristic:(unsigned short)arg3 client:(id)arg4 ;
-(void)discoverDescriptors:(id)arg1 characteristicHandle:(unsigned short)arg2 connection:(id)arg3 ;
-(void)readDescriptor:(id)arg1 handle:(unsigned short)arg2 connection:(id)arg3 ;
-(void)writeDescriptor:(id)arg1 handle:(unsigned short)arg2 data:(id)arg3 connection:(id)arg4 ;
-(void)setPeripheralConnectionLatency:(id)arg1 connLatency:(id)arg2 UUID:(id)arg3 ;
-(void)evaluateConnections;
-(int)evaluateAdvertisingClients;
-(void)setIsAdvertising:(char)arg1 ;
-(NSSet *)servicesNotAllowedToBePublishedByClients;
-(void)recoverMultipleAdvertisements;
-(id)mappingForUUID:(id)arg1 ;
-(void)removeSystemDevice:(id)arg1 ;
-(void)removeUUIDFromCoreBluetoothCache:(id)arg1 ;
-(void)setPeerTrackingTypes:(NSMutableArray *)arg1 ;
-(void)sendMessage:(long long)arg1 nsArguments:(id)arg2 client:(id)arg3 ;
-(id)gattConnectionForUUID:(id)arg1 ;
-(id)uuidForCentral:(id)arg1 ;
-(id)mappingForConnection:(id)arg1 ;
-(void)setCurrentUser:(NSString *)arg1 ;
-(void)setCurrentCloudID:(NSString *)arg1 ;
-(void)startLEConnections;
-(void)sendCharacteristicStateUpdate:(id)arg1 characteristicHandle:(unsigned short)arg2 stateMsg:(long long)arg3 state:(char)arg4 status:(int)arg5 connection:(id)arg6 ;
-(NSSet *)characteristicsNotAllowedToBeUsedByClients;
-(void)sendMessage:(long long)arg1 arguments:(id)arg2 client:(id)arg3 ;
-(void)addSystemDevice:(id)arg1 ;
-(void)connection:(id)arg1 didReadDeviceName:(id)arg2 status:(int)arg3 ;
-(id)currentPeripheralManagerClients;
-(void)updateCoreBluetoothCacheWithPublicAddress:(id)arg1 publicAddress:(id)arg2 ;
-(id)mappingForDevice:(id)arg1 ;
-(void)connection:(id)arg1 primaryServiceDiscoveryComplete:(int)arg2 ;
-(void)sendConnectedNotificationForIdentifier:(id)arg1 ;
-(void)sendConnectionParameterUpdate:(unsigned short)arg1 connectionInterval:(unsigned short)arg2 slaveLatency:(unsigned short)arg3 timeout:(unsigned short)arg4 ;
-(void)LEConnectionComplete:(BluetoothHCIEventLEConnectionCompleteResults)arg1 ;
-(id)currentCentralManagerClients;
-(void)sendMessage:(long long)arg1 arguments:(id)arg2 clients:(id)arg3 ;
-(void)setIDSPairedDevices:(NSMutableArray *)arg1 ;
-(void)setUserIDSPairedDevices:(NSMutableArray *)arg1 ;
-(SystemPowerNotifier *)powerNotifier;
-(char)controllerSupportsLowEnergy;
-(void)setControllerSupportsLowEnergy:(char)arg1 ;
-(char)controllerSupportsScatternet;
-(void)setControllerSupportsScatternet:(char)arg1 ;
-(char)disableCaching;
-(void)setDisableCaching:(char)arg1 ;
-(NSString *)currentUser;
-(void)setTrackingTypes:(NSMutableArray *)arg1 ;
-(NSMutableArray *)trackingTypes;
-(void)removeDevice:(id)arg1 ;
-(void)l2capChannelPublished:(id)arg1 ;
-(char)systemPowerNotification:(unsigned)arg1 ;
-(void)BluetoothHCIEventNotificationMessage:(id)arg1 inNotificationMessage:(const IOBluetoothHCIEventNotificationMessage*)arg2 ;
-(void)setIsConnecting:(char)arg1 ;
-(char)isConnecting;
-(char)systemIsSleeping;
-(ScanManager *)scanManager;
-(void)setScanManager:(ScanManager *)arg1 ;
-(char)isAdvertising;
-(id)init;
-(IOBluetoothHostController *)controller;
-(void)setController:(IOBluetoothHostController *)arg1 ;
-(void)removeClient:(id)arg1 ;
@end

