/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:57:34 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/sbin/blued
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <blued/blued-Structs.h>
@class IOBluetoothUserNotification, IOBluetoothHostController, NSMutableArray, NSMutableDictionary;

@interface BluetoothLESecurityManager : NSObject {

	IOBluetoothUserNotification* mL2CAPChannelNotification;
	IOBluetoothHostController* hostController;
	NSMutableArray* remoteDeviceArray;
	int localIOCapability;
	int localOOBDataFlag;
	unsigned char localAuthReq;
	unsigned char localMaxEncKeySize;
	unsigned char localInitiatorKeyDistribution;
	unsigned char localResponderKeyDistribution;
	BluetoothDeviceAddress localAddress;
	BluetoothLEData localER;
	BluetoothLEData localIR;
	BluetoothLEData localIRK;
	BluetoothLEData localDHK;
	char _suppressUI;
	NSMutableDictionary* _deviceInfo;

}

@property (assign) char suppressUI;                               //@synthesize suppressUI=_suppressUI - In the implementation block
@property (retain) NSMutableDictionary * deviceInfo;              //@synthesize deviceInfo=_deviceInfo - In the implementation block
+(id)securityManager;
-(void)controllerOnline;
-(char)haveLTKForDevice:(id)arg1 ;
-(void)registerL2CAPChannelNotification;
-(void)hciNotificationHandler:(id)arg1 ;
-(void)unregisterL2CAPChannelNotification;
-(int)initLESecurityManagerPairingKeys;
-(void)handleL2CAPChannelOpened:(id)arg1 channel:(id)arg2 ;
-(BluetoothLEPairingData*)remoteDevicePairingData:(id)arg1 ;
-(void)removeRemoteDevicePairingData:(id)arg1 ;
-(void)printBluetoothLEData:(BluetoothLEData*)arg1 name:(id)arg2 ;
-(int)diversifiyingFunctionD1:(BluetoothLEData*)arg1 d:(unsigned short)arg2 r:(unsigned short)arg3 outDivKey:(BluetoothLEData*)arg4 ;
-(int)remoteDeviceLTK:(id)arg1 outLTK:(BluetoothLEData*)arg2 outRAND:(char*)arg3 outEDIV:(char*)arg4 outMITMProtection:(BOOL*)arg5 ;
-(int)pairingRequest:(id)arg1 IOCapability:(int)arg2 OOBDataFlag:(int)arg3 authReq:(unsigned char)arg4 maxEncryptionKeySize:(unsigned char)arg5 initiatorKeyDistribution:(unsigned char)arg6 responderKeyDistribution:(unsigned char)arg7 ;
-(int)securityRequest:(id)arg1 authReq:(unsigned char)arg2 ;
-(void)randomAddressHashFunctionAH:(BluetoothLEData*)arg1 r:(RandomHash*)arg2 outRandAddr:(BluetoothDeviceAddress*)arg3 ;
-(void)cancelTimer:(id)arg1 ;
-(id)remoteDeviceSMPDictionary:(id)arg1 localDeviceDict:(id)arg2 ;
-(void)timeoutTimerFired:(id)arg1 ;
-(void)resetRemotePairingData:(id)arg1 ;
-(void)postPairingCompletedNotification:(id)arg1 status:(int)arg2 ;
-(int)encryptData:(char*)arg1 plaintextData:(char*)arg2 encryptedData:(char*)arg3 ;
-(void)DIVmaskGenerationFunctionDM:(BluetoothLEData*)arg1 r:(char*)arg2 mask:(unsigned short*)arg3 ;
-(int)deviceCSRK:(id)arg1 outCSRK:(BluetoothLEData*)arg2 outSignCounter:(char*)arg3 localCSRK:(char)arg4 ;
-(void)computeMAC:(BluetoothLEData*)arg1 message:(char*)arg2 length:(unsigned long long)arg3 signatureCounter:(unsigned)arg4 outMac:(BluetoothLEData*)arg5 ;
-(void)saveSignCounter:(id)arg1 signCounter:(unsigned)arg2 ;
-(void)setBluetoothAddress:(BluetoothLEPairingData*)arg1 handle:(id)arg2 ;
-(void)startTimer:(id)arg1 ;
-(void)saveCSRK:(id)arg1 csrk:(BluetoothLEData)arg2 localCSRK:(char)arg3 ;
-(void)deleteKeysForRemoteDevice:(id)arg1 ;
-(char)suppressUI;
-(void)userDisplayYesNo:(char)arg1 deviceAddress:(const char*)arg2 ;
-(int)pairingFailed:(id)arg1 reason:(int)arg2 ;
-(void)initializeRemotePairingData:(id)arg1 IOCapability:(int)arg2 OOBDataFlag:(int)arg3 authReq:(unsigned char)arg4 maxEncryptionKeySize:(unsigned char)arg5 initiatorKeyDistribution:(unsigned char)arg6 responderKeyDistribution:(unsigned char)arg7 ;
-(int)stkGenerationMethodUsingIOCaps:(int)arg1 responder:(int)arg2 ;
-(int)pairingResponse:(id)arg1 IOCapability:(int)arg2 OOBDataFlag:(int)arg3 authReq:(unsigned char)arg4 maxEncryptionKeySize:(unsigned char)arg5 initiatorKeyDistribution:(unsigned char)arg6 responderKeyDistribution:(unsigned char)arg7 ;
-(void)generateRandomValue:(BluetoothLEData*)arg1 ;
-(int)confirmValueGenerationFunctionC1:(id)arg1 confirmValue:(BluetoothLEData*)arg2 isChecking:(char)arg3 ;
-(int)pairingConfirm:(id)arg1 confirmData:(BluetoothLEData*)arg2 ;
-(int)pairingRandom:(id)arg1 randomValue:(BluetoothLEData*)arg2 ;
-(int)keyGenerationFunctionS1:(BluetoothLEData*)arg1 r1:(BluetoothLEData*)arg2 r2:(BluetoothLEData*)arg3 stk:(BluetoothLEData*)arg4 ;
-(void)saveRemoteLTK:(id)arg1 ltk:(BluetoothLEData*)arg2 ltkLength:(unsigned char)arg3 ediv:(unsigned short)arg4 rand:(unsigned long long)arg5 originalAddrType:(unsigned char)arg6 mitmProtection:(BOOL)arg7 ;
-(void)saveLocalKeysForRemoteDevice:(id)arg1 ltk:(BluetoothLEData*)arg2 ltkLength:(unsigned char)arg3 ediv:(unsigned short)arg4 rand:(char*)arg5 ;
-(void)checkKeyDistribution:(id)arg1 remotePairingData:(BluetoothLEPairingData*)arg2 role:(unsigned char)arg3 ;
-(void)saveRemoteIRK:(id)arg1 irk:(BluetoothIRK)arg2 address:(BluetoothDeviceAddress*)arg3 addressType:(unsigned char)arg4 ;
-(void)storeLinkKeysUnderPublicAddress:(id)arg1 remotePairingData:(BluetoothLEPairingData*)arg2 ;
-(int)generateDistributionKeys:(BluetoothLEPairingData*)arg1 ;
-(void)removeAllIDSPairedDevices;
-(int)encryptionInformation:(id)arg1 ltk:(BluetoothLEData*)arg2 ;
-(int)masterIdentification:(id)arg1 ediv:(unsigned short)arg2 rand:(char*)arg3 ;
-(int)identityInformation:(id)arg1 irk:(BluetoothLEData*)arg2 ;
-(int)identityAddressInformation:(id)arg1 addressType:(unsigned char)arg2 deviceAddress:(BluetoothDeviceAddress)arg3 ;
-(int)signingInformation:(id)arg1 csrk:(BluetoothLEData*)arg2 ;
-(int)sendTransportSpecificKeyDistribution:(id)arg1 remotePairingData:(BluetoothLEPairingData*)arg2 ;
-(void)handleSecurityRequest:(id)arg1 authReq:(unsigned char)arg2 ;
-(void)handlePairingRequest:(id)arg1 IOCapability:(int)arg2 OOBDataFlag:(int)arg3 authReq:(unsigned char)arg4 maxEncryptionKeySize:(unsigned char)arg5 initiatorKeyDistribution:(unsigned char)arg6 responderKeyDistribution:(unsigned char)arg7 ;
-(void)handlePairingResponse:(id)arg1 IOCapability:(int)arg2 OOBDataFlag:(int)arg3 authReq:(unsigned char)arg4 maxEncryptionKeySize:(unsigned char)arg5 initiatorKeyDistribution:(unsigned char)arg6 responderKeyDistribution:(unsigned char)arg7 ;
-(void)handlePairingConfirm:(id)arg1 confirmValue:(BluetoothLEData*)arg2 ;
-(void)handlePairingRandom:(id)arg1 randomValue:(BluetoothLEData*)arg2 ;
-(void)handlePairingFailed:(id)arg1 reason:(int)arg2 ;
-(void)handleEncryptionInfo:(id)arg1 ltk:(BluetoothLEData*)arg2 ;
-(void)handleMasterIdentification:(id)arg1 ediv:(unsigned short)arg2 rand:(unsigned long long)arg3 ;
-(void)handleIdentityInformation:(id)arg1 irk:(BluetoothLEData*)arg2 ;
-(void)handleIdentityAddressInformation:(id)arg1 addressType:(unsigned char)arg2 deviceAddress:(BluetoothDeviceAddress)arg3 ;
-(void)handleSigningInformation:(id)arg1 csrk:(BluetoothLEData*)arg2 ;
-(int)localKeysForRemoteDevice:(id)arg1 outLocalStoredLTK:(BluetoothLEData*)arg2 outLocalStoredRAND:(char*)arg3 outLocalStoredEDIV:(char*)arg4 outLocalStoredLength:(char*)arg5 ;
-(int)remoteDeviceLTKLength:(id)arg1 outLength:(char*)arg2 ;
-(int)recoverLTK:(char*)arg1 ediv:(unsigned short)arg2 ltk:(BluetoothLEData*)arg3 ;
-(int)startLESecurityManagerPairing:(id)arg1 mitmProtection:(char)arg2 bondingFlag:(char)arg3 ;
-(void)setDeviceInfo:(id)arg1 forConnectionHandle:(unsigned short)arg2 ;
-(BluetoothDeviceAddress)generateRandomAddress;
-(BluetoothDeviceAddress)generateRandomNonResolvableAddress;
-(int)ioCapability:(int)arg1 output:(int)arg2 ;
-(void)deleteAllStoredKeys;
-(int)signCounter:(id)arg1 outSignCounter:(char*)arg2 ;
-(int)signData:(id)arg1 data:(void*)arg2 length:(unsigned long long)arg3 outSignature:(void*)arg4 ;
-(int)verifySignature:(id)arg1 data:(void*)arg2 length:(unsigned long long)arg3 receivedSignature:(void*)arg4 ;
-(id)handleiCloudPairingRequest:(id)arg1 ;
-(char)SMPInformationExistsForDevice:(id)arg1 ;
-(int)handleiCloudKeyDistribution:(id)arg1 ;
-(void)saveUniqueIDtoIDSDevice:(id)arg1 ;
-(void)checkAllIDSPairedDevices:(id)arg1 ;
-(void)userInputPasskey:(char)arg1 deviceAddress:(const char*)arg2 passkey:(unsigned)arg3 ;
-(void)userDisplayPasskey:(char)arg1 deviceAddress:(const char*)arg2 ;
-(void)setLEPairingParams:(char)arg1 bonding:(char)arg2 OOBDataFlag:(char)arg3 initLTKRequest:(char)arg4 initIRKRequest:(char)arg5 initCSRKRequest:(char)arg6 respLTKRequest:(char)arg7 respIRKRequest:(char)arg8 respCSRKRequest:(char)arg9 maxEncKeySize:(unsigned char)arg10 IOCapability:(unsigned char)arg11 ;
-(void)pairLEDevice:(char)arg1 deviceAddress:(const char*)arg2 mitmProtection:(char)arg3 bondingFlag:(char)arg4 ;
-(void)handleATTErrorResponse:(unsigned char)arg1 device:(id)arg2 ;
-(char)isLinkEncrypted:(id)arg1 ;
-(char)isAuthenticatedLTK:(id)arg1 outMITMflag:(char*)arg2 ;
-(char)isValidEncryptionKeySize:(id)arg1 ;
-(void)setSuppressUI:(char)arg1 ;
-(void)l2capChannelOpenComplete:(id)arg1 status:(int)arg2 ;
-(void)l2capChannelClosed:(id)arg1 ;
-(void)l2capChannelData:(id)arg1 data:(void*)arg2 length:(unsigned long long)arg3 ;
-(void)l2capChannelReconfigured:(id)arg1 ;
-(void)l2capChannelWriteComplete:(id)arg1 refcon:(void*)arg2 status:(int)arg3 ;
-(void)BluetoothHCIEventNotificationMessage:(id)arg1 inNotificationMessage:(const IOBluetoothHCIEventNotificationMessage*)arg2 ;
-(NSMutableDictionary *)deviceInfo;
-(void)setDeviceInfo:(NSMutableDictionary *)arg1 ;
-(id)init;
-(void)dealloc;
@end

