/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:57:34 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/sbin/bluetoothaudiod
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <bluetoothaudiod/bluetoothaudiod-Structs.h>
#import <bluetoothaudiod/AudioProtocol.h>
#import <bluetoothaudiod/IOBluetoothL2CAPChannelDelegate.h>

@class IOBluetoothDevice, IOBluetoothL2CAPChannel, NSMutableArray, NSTimer, NSData, NSMutableData;

@interface AVRCP : AudioProtocol <IOBluetoothL2CAPChannelDelegate> {

	unsigned char _responseCode;
	unsigned short _previousResponseOffset;
	unsigned short _characterSet;
	IOBluetoothDevice* _device;
	IOBluetoothL2CAPChannel* _channel;
	NSMutableArray* _commandQueue;
	NSTimer* _commandTimer;
	NSData* _command;
	SCD_Struct_AV9* _transportFrame;
	SCD_Struct_AV10* _commandFrame;
	NSMutableData* _response;
	NSMutableData* _previousResponse;
	NSMutableArray* _players;

}

@property (retain) IOBluetoothDevice * device;                               //@synthesize device=_device - In the implementation block
@property (nonatomic,retain) IOBluetoothL2CAPChannel * channel;              //@synthesize channel=_channel - In the implementation block
@property (retain) NSMutableArray * commandQueue;                            //@synthesize commandQueue=_commandQueue - In the implementation block
@property (retain) NSTimer * commandTimer;                                   //@synthesize commandTimer=_commandTimer - In the implementation block
@property (nonatomic,retain) NSData * command;                               //@synthesize command=_command - In the implementation block
@property (assign) SCD_Struct_AV9* transportFrame;                           //@synthesize transportFrame=_transportFrame - In the implementation block
@property (assign) SCD_Struct_AV10* commandFrame;                            //@synthesize commandFrame=_commandFrame - In the implementation block
@property (retain) NSMutableData * response;                                 //@synthesize response=_response - In the implementation block
@property (retain) NSMutableData * previousResponse;                         //@synthesize previousResponse=_previousResponse - In the implementation block
@property (assign) unsigned short previousResponseOffset;                    //@synthesize previousResponseOffset=_previousResponseOffset - In the implementation block
@property (assign) unsigned char responseCode;                               //@synthesize responseCode=_responseCode - In the implementation block
@property (retain) NSMutableArray * players;                                 //@synthesize players=_players - In the implementation block
@property (assign) unsigned short characterSet;                              //@synthesize characterSet=_characterSet - In the implementation block
-(void)respondToCurrentCommand:(int)arg1 ;
-(void)nextCommand;
-(void)incomingConnection:(id)arg1 ;
-(void)parseVendorDependentCommandGetCapabilities;
-(void)parseVendorCommandListPlayerApplicationSettingAttributes;
-(void)parseVendorCommandListPlayerApplicationSettingValues;
-(void)parseVendorCommandGetCurrentPlayerApplicationSettingValue;
-(void)parseVendorCommandSetPlayerApplicationSettingValue;
-(void)parseVendorCommandGetElementAttributes;
-(void)parseVendorCommandGetPlayStatus;
-(void)parseVendorCommandRegisterNotification;
-(void)parseVendorCommandRequestContinuingResponse;
-(void)parseVendorCommandAbortContinuingResponse;
-(void)parseVendorCommandSetAddressedPlayer;
-(void)parseVendorCommandGetFolderItems;
-(void)packVendorDependentResponse;
-(void)packDataFromElementAttribute:(unsigned)arg1 ;
-(NSMutableData *)previousResponse;
-(void)setPreviousResponse:(NSMutableData *)arg1 ;
-(NSMutableArray *)players;
-(void)packDataForMediaPlayerList:(unsigned)arg1 ;
-(SCD_Struct_AV10*)commandFrame;
-(SCD_Struct_AV9*)transportFrame;
-(void)queueIncomingCommand:(void*)arg1 length:(unsigned long long)arg2 ;
-(void)processIncomingCommand;
-(NSTimer *)commandTimer;
-(void)commandTimeout:(id)arg1 ;
-(void)setCommandTimer:(NSTimer *)arg1 ;
-(void)sendResponse;
-(void)parsePassThroughCommand;
-(void)parseVendorDependentCommand;
-(void)setCommandQueue:(NSMutableArray *)arg1 ;
-(void)setTransportFrame:(SCD_Struct_AV9*)arg1 ;
-(void)setCommandFrame:(SCD_Struct_AV10*)arg1 ;
-(unsigned short)previousResponseOffset;
-(void)setPreviousResponseOffset:(unsigned short)arg1 ;
-(void)setPlayers:(NSMutableArray *)arg1 ;
-(void)setCommand:(NSData *)arg1 ;
-(void)setCharacterSet:(unsigned short)arg1 ;
-(void)setResponseCode:(unsigned char)arg1 ;
-(void)l2capChannelOpenComplete:(id)arg1 status:(int)arg2 ;
-(void)l2capChannelClosed:(id)arg1 ;
-(void)l2capChannelData:(id)arg1 data:(void*)arg2 length:(unsigned long long)arg3 ;
-(IOBluetoothL2CAPChannel *)channel;
-(void)setChannel:(IOBluetoothL2CAPChannel *)arg1 ;
-(unsigned short)characterSet;
-(void)disconnect;
-(void)connect;
-(unsigned char)responseCode;
-(id)init;
-(id)name;
-(void)setState:(long long)arg1 ;
-(IOBluetoothDevice *)device;
-(NSData *)command;
-(void)setResponse:(NSMutableData *)arg1 ;
-(void)setDevice:(IOBluetoothDevice *)arg1 ;
-(NSMutableData *)response;
-(NSMutableArray *)commandQueue;
@end

