/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:57:34 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/sbin/bluetoothaudiod
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class BluetoothAudio, IOBluetoothDevice, NSDictionary, NSMutableArray, NSTimer, IOBluetoothRFCOMMChannel, AudioProtocol;

@interface AudioDevice : NSObject {

	char _supportsInput;
	char _supportsOutput;
	char _shuttingDown;
	char _inputActive;
	char _outputActive;
	char _inputActiveBeforeSleep;
	char _outputActiveBeforeSleep;
	char _switchAudio;
	float _sampleRate;
	BluetoothAudio* _audioApp;
	IOBluetoothDevice* _bluetoothDevice;
	NSDictionary* _workaroundDictionary;
	NSMutableArray* _protocols;
	NSTimer* _commandTimer;
	NSMutableArray* _commandQueue;
	NSDictionary* _currentCommand;
	IOBluetoothRFCOMMChannel* _incomingRFCOMMChannel;
	AudioProtocol* _currentProtocol;
	double _latency;

}

@property (assign) BluetoothAudio * audioApp;                                     //@synthesize audioApp=_audioApp - In the implementation block
@property (retain) IOBluetoothDevice * bluetoothDevice;                           //@synthesize bluetoothDevice=_bluetoothDevice - In the implementation block
@property (retain) NSDictionary * workaroundDictionary;                           //@synthesize workaroundDictionary=_workaroundDictionary - In the implementation block
@property (assign) char supportsInput;                                            //@synthesize supportsInput=_supportsInput - In the implementation block
@property (assign) char supportsOutput;                                           //@synthesize supportsOutput=_supportsOutput - In the implementation block
@property (retain) NSMutableArray * protocols;                                    //@synthesize protocols=_protocols - In the implementation block
@property (nonatomic,retain) NSTimer * commandTimer;                              //@synthesize commandTimer=_commandTimer - In the implementation block
@property (retain) NSMutableArray * commandQueue;                                 //@synthesize commandQueue=_commandQueue - In the implementation block
@property (nonatomic,retain) NSDictionary * currentCommand;                       //@synthesize currentCommand=_currentCommand - In the implementation block
@property (retain) IOBluetoothRFCOMMChannel * incomingRFCOMMChannel;              //@synthesize incomingRFCOMMChannel=_incomingRFCOMMChannel - In the implementation block
@property (assign,nonatomic) AudioProtocol * currentProtocol;                     //@synthesize currentProtocol=_currentProtocol - In the implementation block
@property (assign) float sampleRate;                                              //@synthesize sampleRate=_sampleRate - In the implementation block
@property (readonly) char allProtocolsDisconnected; 
@property (assign) char shuttingDown;                                             //@synthesize shuttingDown=_shuttingDown - In the implementation block
@property (readonly) char active; 
@property (assign) char inputActive;                                              //@synthesize inputActive=_inputActive - In the implementation block
@property (assign) char outputActive;                                             //@synthesize outputActive=_outputActive - In the implementation block
@property (assign) char inputActiveBeforeSleep;                                   //@synthesize inputActiveBeforeSleep=_inputActiveBeforeSleep - In the implementation block
@property (assign) char outputActiveBeforeSleep;                                  //@synthesize outputActiveBeforeSleep=_outputActiveBeforeSleep - In the implementation block
@property (assign) char switchAudio;                                              //@synthesize switchAudio=_switchAudio - In the implementation block
@property (assign) double latency;                                                //@synthesize latency=_latency - In the implementation block
@property (readonly) NSDictionary * debugInfo; 
+(id)withDevice:(id)arg1 audioApp:(id)arg2 ;
-(void)createAudioDevice;
-(BluetoothAudio *)audioApp;
-(void)updateAudioState;
-(void)nextCommand;
-(int)sendXPCResponse:(int)arg1 ;
-(char)allProtocolsDisconnected;
-(void)setLatency:(double)arg1 ;
-(char)supportsInput;
-(char)supportsOutput;
-(void)setSupportsInput:(char)arg1 ;
-(void)setSupportsOutput:(char)arg1 ;
-(char)inputActive;
-(void)setInputActiveBeforeSleep:(char)arg1 ;
-(char)outputActive;
-(void)setOutputActiveBeforeSleep:(char)arg1 ;
-(void)setInputActive:(char)arg1 ;
-(void)setOutputActive:(char)arg1 ;
-(char)inputActiveBeforeSleep;
-(char)outputActiveBeforeSleep;
-(void)setSniffAllowed:(char)arg1 ;
-(void)incomingRFCOMMChannel:(id)arg1 ;
-(void)incomingA2DPChannel:(id)arg1 ;
-(void)incomingAVRCPChannel:(id)arg1 ;
-(AudioProtocol *)currentProtocol;
-(void)queueXPCCommand:(id)arg1 ;
-(void)updateDefault:(id)arg1 defaultValue:(id)arg2 ;
-(NSDictionary *)workaroundDictionary;
-(void)setWorkaroundDictionary:(NSDictionary *)arg1 ;
-(NSTimer *)commandTimer;
-(void)setCommandTimer:(NSTimer *)arg1 ;
-(void)setCommandQueue:(NSMutableArray *)arg1 ;
-(void)setShuttingDown:(char)arg1 ;
-(void)setProtocols:(NSMutableArray *)arg1 ;
-(void)setAudioApp:(BluetoothAudio *)arg1 ;
-(void)handleDeviceConnectedNotification:(id)arg1 ;
-(id)protocol:(Class)arg1 ;
-(char)switchAudio;
-(void)setSwitchAudio:(char)arg1 ;
-(char)shuttingDown;
-(void)removeAudioDevice;
-(void)setCurrentProtocol:(AudioProtocol *)arg1 ;
-(void)handleXPCCommand:(id)arg1 ;
-(void)handleXPCTimerFired:(id)arg1 ;
-(void)processNextXPCCommand;
-(void)setCurrentCommand:(NSDictionary *)arg1 ;
-(void)startXPCTimer:(double)arg1 ;
-(void)setSampleRate:(float)arg1 ;
-(int)sendXPCResponse:(int)arg1 returnString:(id)arg2 ;
-(int)sendXPCDictResponse:(id)arg1 ;
-(IOBluetoothRFCOMMChannel *)incomingRFCOMMChannel;
-(void)setIncomingRFCOMMChannel:(IOBluetoothRFCOMMChannel *)arg1 ;
-(float)sampleRate;
-(NSDictionary *)currentCommand;
-(double)latency;
-(void)sdpQueryComplete:(id)arg1 status:(int)arg2 ;
-(IOBluetoothDevice *)bluetoothDevice;
-(void)setBluetoothDevice:(IOBluetoothDevice *)arg1 ;
-(void)stopAudio;
-(void)handleDeviceDisconnectedNotification:(id)arg1 ;
-(void)dealloc;
-(char)active;
-(void)shutdown;
-(NSDictionary *)debugInfo;
-(NSMutableArray *)protocols;
-(NSMutableArray *)commandQueue;
@end

