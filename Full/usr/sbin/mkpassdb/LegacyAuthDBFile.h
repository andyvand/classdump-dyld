/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:57:36 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/sbin/mkpassdb
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <mkpassdb/mkpassdb-Structs.h>
@class LegacyAuthOverflowFile;

@interface LegacyAuthDBFile : NSObject {

	_sFILE* mFreeListFile;
	unsigned long long mPWFileLen;
	LPWFileHeader mPWFileHeader;
	unsigned char mPWFileValidated;
	char mPWFilePermission[10];
	BOOL mGotHeader;
	char* mFilePathStr;
	char* mDirPathStr;
	BOOL mDBFileLocked;
	BOOL mReadOnlyFileSystem;
	LegacyAuthOverflowFile* mOverflow;
	char mTestSpillBucket;
	unsigned mKerberosCacheLimit;
	char* mSearchBase;
	int mPWFileNO;
	int mPWLockCount;
	opaque_pthread_mutex_t mLocksLock;
	long long mPWHdrLastMod;

}
-(int)getHeader:(LPWFileHeader*)arg1 cachedCopyOK:(char)arg2 ;
-(int)addRSAKeys:(unsigned)arg1 ;
-(int)addRSAKeys:(char*)arg1 publicKeyLen:(unsigned)arg2 privateKey:(char*)arg3 privateKeyLen:(unsigned)arg4 ;
-(int)getHeader:(LPWFileHeader*)arg1 ;
-(int)setPassword:(LPWFileEntry*)arg1 atSlot:(unsigned)arg2 obfuscate:(char)arg3 setModDate:(char)arg4 ;
-(int)addPassword:(LPWFileEntry*)arg1 atSlot:(unsigned)arg2 obfuscate:(char)arg3 setModDate:(char)arg4 ;
-(int)setPasswordFast:(LPWFileEntry*)arg1 atSlot:(unsigned)arg2 ;
-(int)initPasswordRecord:(LPWFileEntry*)arg1 obfuscate:(char)arg2 ;
-(int)getPasswordRec:(unsigned)arg1 putItHere:(LPWFileEntry*)arg2 unObfuscate:(char)arg3 ;
-(int)getValidPasswordRec:(LPWFileEntry*)arg1 fromSpillBucket:(char*)arg2 unObfuscate:(char)arg3 ;
-(int)freeSlot:(LPWFileEntry*)arg1 deathCertificate:(char)arg2 ;
-(int)shouldTryLDAP;
-(int)getAccountIDFromLDAP:(const char*)arg1 slotID:(char*)arg2 ;
-(char*)getLDAPSearchBase;
-(int)getUserIDFromName:(const char*)arg1 anyUser:(char)arg2 maxBuffSize:(long long)arg3 pwsID:(char*)arg4 ;
-(void)createOverflowObject;
-(void)closePasswordFile;
-(void)closeFreeListFile;
-(int)validatePasswordFile;
-(int)validateFreeListFile;
-(char)pwLock:(unsigned long long)arg1 ;
-(void)pwUnlock;
-(int)validateFiles;
-(void)pwWait;
-(void)pwSignal;
-(char)pwLockLock:(unsigned long long)arg1 ;
-(void)pwLockUnlock;
-(int)openPasswordFile:(const char*)arg1 ;
-(int)isWeakAuthMethod:(const char*)arg1 ;
-(int)getPasswordRec:(unsigned)arg1 putItHere:(LPWFileEntry*)arg2 ;
-(int)expandDatabase:(unsigned)arg1 nextAvailableSlot:(unsigned*)arg2 ;
-(int)setPassword:(LPWFileEntry*)arg1 atSlot:(unsigned)arg2 ;
-(unsigned)nextSlot;
-(int)addPassword:(LPWFileEntry*)arg1 atSlot:(unsigned)arg2 obfuscate:(char)arg3 ;
-(void)setFilePath:(char*)arg1 maxPathSize:(unsigned long long)arg2 forEntry:(LPWFileEntry*)arg3 ;
-(int)addPassword:(LPWFileEntry*)arg1 obfuscate:(char)arg2 ;
-(long long)historySlotToOffset:(unsigned long long)arg1 ;
-(int)createPasswordFile;
-(void)resetPasswordFileState;
-(void)pwLock;
-(int)getRSAPublicKey:(char*)arg1 ;
-(int)addWeakAuthMethod:(const char*)arg1 ;
-(int)removeWeakAuthMethod:(const char*)arg1 ;
-(int)addRSAKeys;
-(int)addGenesisUser:(const char*)arg1 password:(const char*)arg2 pwsRec:(LPWFileEntry*)arg3 ;
-(int)addPasswordFast:(LPWFileEntry*)arg1 atSlot:(unsigned)arg2 ;
-(int)newPasswordForUser:(const char*)arg1 password:(const char*)arg2 slotStr:(char*)arg3 slotRec:(LPWFileEntry*)arg4 ;
-(int)getValidPasswordRec:(LPWFileEntry*)arg1 ;
-(int)getValidOrZeroPasswordRec:(LPWFileEntry*)arg1 fromSpillBucket:(char*)arg2 unObfuscate:(char)arg3 ;
-(CFArrayRef)purgeDeadSlots:(CFDateRef)arg1 deleteWait:(long long)arg2 purgeWait:(long long)arg3 ;
-(int)freeSlot:(LPWFileEntry*)arg1 ;
-(char)isOwner:(const char*)arg1 forEntry:(LPWFileEntry*)arg2 ;
-(char)removeKey:(CFStringRef)arg1 fromAdditionalDataFile:(const char*)arg2 ;
-(int)getUserRecordFromPrincipal:(const char*)arg1 record:(LPWFileEntry*)arg2 ;
-(void)requireNewPasswordForAllAccounts:(char)arg1 ;
-(int)addPasswordForUser:(const char*)arg1 password:(const char*)arg2 pwsID:(char*)arg3 ;
-(int)newPasswordSlot:(const char*)arg1 password:(const char*)arg2 pwsID:(char*)arg3 pwsRec:(LPWFileEntry*)arg4 ;
-(int)getHistory:(LPWFileEntry*)arg1 data:(char*)arg2 ;
-(id)free;
-(int)setHeader:(const LPWFileHeader*)arg1 ;
-(id)init;
-(void)dealloc;
-(id)initWithFile:(const char*)arg1 ;
@end

