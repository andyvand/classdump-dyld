/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:57:38 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/sbin/spindump
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <spindump/spindump-Structs.h>
#import <spindump/SPProcessEvent.h>

@interface SPMonitoredProcess : SPProcessEvent {

	char _sampleOnlyTargetProcess;
	unsigned _samplingIntervalUs;
	unsigned _occasionalDataIntervalSec;

}

@property (assign,nonatomic) char sampleOnlyTargetProcess;                    //@synthesize sampleOnlyTargetProcess=_sampleOnlyTargetProcess - In the implementation block
@property (assign,nonatomic) unsigned samplingIntervalUs;                     //@synthesize samplingIntervalUs=_samplingIntervalUs - In the implementation block
@property (assign,nonatomic) unsigned occasionalDataIntervalSec;              //@synthesize occasionalDataIntervalSec=_occasionalDataIntervalSec - In the implementation block
+(id)copyMonitoredProcessForPid:(int)arg1 isWSBased:(char)arg2 createIfUnmonitored:(char)arg3 wasMonitored:(char*)arg4 ;
+(id)allMonitoredProcesses;
-(char)_saveReportToStream:(_sFILE*)arg1 ;
-(id)initWithPid:(int)arg1 isWSBased:(char)arg2 ;
-(void)stopSamplingWithReason:(unsigned char)arg1 ;
-(void)removeSelfFromPidCache;
-(void)_samplingHasCompletedWithEndSnapshot:(id)arg1 withReason:(unsigned char)arg2 ;
-(void)setSampleOnlyTargetProcess:(char)arg1 ;
-(void)setSamplingIntervalUs:(unsigned)arg1 ;
-(void)setOccasionalDataIntervalSec:(unsigned)arg1 ;
-(void)setSamplingTimeoutAtTime:(double)arg1 ;
-(void)setSamplingCompletionHandlerQueue:(id)arg1 andBlock:(/*^block*/id)arg2 ;
-(void)setStopWhenProcessExits:(char)arg1 ;
-(char)startSampling;
-(unsigned)samplingIntervalUs;
-(unsigned)occasionalDataIntervalSec;
-(char)sampleOnlyTargetProcess;
@end

