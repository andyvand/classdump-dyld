/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:57:38 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/sbin/slapconfig
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class NSMutableArray, NSString, NSMutableDictionary, NSMutableString;

@interface DSConfiguration : NSObject {

	char _searchPolicyLoaded;
	int _selectedSearchPolicy;
	NSMutableArray* _searchPath;
	NSMutableArray* _customSearchPath;
	NSMutableArray* _localSearchPath;
	int _contactSearchPolicy;
	NSMutableArray* _contactSearchPath;
	NSMutableArray* _customContactPath;
	NSMutableArray* _localContactPath;
	NSString* _currentSet;
	NSMutableDictionary* _ldapConfigDict;
	char _ldapServer;
	char _ldapServerLoaded;
	char _ldapReplica;
	char _ldapReplicaLoaded;
	NSMutableString* _slapdConfig;
	char _slapdConfigDirty;
	NSMutableString* _slapdConfigMacOSX;
	char _slapdConfigMacOSXDirty;
	NSString* _pathPrefix;

}
+(int)maxNumberOfReplicas;
+(id)replicaList;
+(id)defaultSlapdConfig:(char)arg1 ;
+(id)defaultSlapdMacOSXConfigWithSuffix:(id)arg1 rootDN:(id)arg2 realmName:(id)arg3 andHostName:(id)arg4 ;
+(void)saveReplicatorPassword:(id)arg1 ;
+(id)replicatorPassword;
+(void)setLDAPSSLEnabled:(char)arg1 ;
+(unsigned)setStandalone;
+(void)enableLDAPPlugIn;
+(void)setMaxNumberOfReplicas:(id)arg1 ;
+(char)setLDAPServer:(char)arg1 ;
+(char)restartLDAPServer;
+(void)bindToServer:(id)arg1 withUser:(id)arg2 password:(id)arg3 computerID:(id)arg4 error:(id*)arg5 ;
+(void)stopLDAPServer:(char)arg1 ;
+(char)startLDAPServer;
+(void)setLDAPReplica:(char)arg1 ;
+(void)bindToServer:(id)arg1 ;
+(void)setParentCAIdentityName:(id)arg1 ;
+(void)setRootCAIdentityName:(id)arg1 ;
+(void)setCAIdentityName:(id)arg1 ;
+(void)addReplica:(id)arg1 ;
+(void)removeReplica:(id)arg1 ;
+(void)applyTemplate:(const char*)arg1 toDictionary:(id)arg2 ;
+(void)saveReplicatorPassword:(id)arg1 withPathPrefix:(id)arg2 ;
+(void)removeReplica:(id)arg1 withPathPrefix:(id)arg2 ;
+(char)LDAPSSLEnabled:(id)arg1 ;
+(void)unsetLDAPReplica;
+(id)defaultIndexes;
+(void)stopLDAPServerAndReplicatorConfirm:(char)arg1 ;
+(char)LDAPSSLEnabled;
+(void)unbindFromServer:(id)arg1 ;
+(int)setDSSearchPolicy:(int)arg1 withCustomNodes:(id)arg2 ;
+(id)slapdConfiguration;
+(id)ldapConfiguration:(id)arg1 ;
+(id)slapdConfiguration:(id)arg1 ;
+(void)setLDAPSSLEnabled:(char)arg1 atPath:(id)arg2 ;
+(void)setSlapdLaunchdState:(char)arg1 ;
+(int)setDSContactPolicy:(int)arg1 withCustomNodes:(id)arg2 ;
+(id)getAutoSwitchDictionary:(id)arg1 withSuffix:(id)arg2 ;
+(id)ldapConfiguration;
+(id)CAIdentityName;
+(id)ParentCAIdentityName;
+(id)RootCAIdentityName;
-(id)getLDAPServerDirective:(id)arg1 ;
-(char)isLDAPServer;
-(id)getServerMappings:(id)arg1 withSuffix:(id)arg2 ;
-(void)saveLDAPConfigDictionary;
-(void)forceSearchPolicy;
-(void)forceContactPolicy;
-(void)setPathPrefix:(id)arg1 ;
-(void)createConfigFileForMigration:(id)arg1 andDirectoryLocation:(id)arg2 withAuthdata:(char)arg3 ;
-(void)removeLDAPServerDirective:(id)arg1 ;
-(char)saveLDAPServerConfigFile;
-(void)addLocalLDAPServerToSearchPolicy;
-(void)addLocalLDAPServerToSearchContactPolicy;
-(void)removeLocalLDAPServerFromSearchPolicy;
-(void)removeLocalLDAPServerFromSearchContactPolicy;
-(char)isLDAPReplica;
-(void)setLDAPServerDirective:(id)arg1 toValue:(id)arg2 ;
-(void)changeIP:(id)arg1 toIP:(id)arg2 andOldHostname:(id)arg3 toHostname:(id)arg4 ;
-(id)childConfigString;
-(int)selectedSearchPolicy;
-(id)searchPath;
-(id)getLDAPServerDictionary:(id)arg1 ;
-(void)loadLDAPServerConfigFile;
-(void)loadLDAPConfigDictionary;
-(void)loadSearchPolicy;
-(void)loadContactSearchPolicy;
-(char)fileExists:(char*)arg1 ;
-(char)hasLDAPServerDirective:(id)arg1 ;
-(void)setLDAPServerDirective:(id)arg1 toPreEscapedValue:(id)arg2 ;
-(id)accessControls;
-(void)clearReplicaLists:(id)arg1 ;
-(void)modifyReplicaLists:(id)arg1 ipaddresses:(id)arg2 readAndWrite:(char)arg3 ;
-(void)modifyLDAPServerDictionary:(id)arg1 ;
-(void)removeLDAPServerDictionary:(id)arg1 ;
-(void)setStaticLDAP:(id)arg1 port:(int)arg2 withSSL:(char)arg3 searchBase:(id)arg4 ;
-(void)setAuthServer;
-(id)init;
-(void)dealloc;
-(id)description;
-(int)style;
@end

