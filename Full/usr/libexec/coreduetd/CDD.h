/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:05:11 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/libexec/coreduetd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue, OS_dispatch_source;
#import <coreduetd/coreduetd-Structs.h>
@class CDDAirplaneModeMonitor, CDDAppStateMonitor, CDDBacklightMonitor, CDDBatteryMonitor, CDDSleepwakeMonitor, CDDNotifydMonitor, CDDCoreData, CDDNetworkMonitor, CDDTrending, CDDPools, CDDAttributeTable, CDDBudgetModulator, CDDPlugins, CDDEnergyAccounting, CDDNetworkAccounting, CDDAdmissionCheckQueue, NSDictionary, CDDEngineCache, NSObject, NSMutableDictionary, Cache, CDDConfig, CDDebug, CDDDiagnostics, CDDSystemBudgets, CDDThermalMonitor, NSString;

@interface CDD : NSObject {

	CDDAirplaneModeMonitor* airplanemode;
	CDDAppStateMonitor* appstatechange;
	CDDBacklightMonitor* backlight;
	CDDBatteryMonitor* battery;
	CDDSleepwakeMonitor* sleepwake;
	CDDNotifydMonitor* notifyd;
	CDDCoreData* coreData;
	CDDNetworkMonitor* networkMonitor;
	CDDTrending* trending;
	CDDPools* pools;
	CDDAttributeTable* attributeTable;
	CDDBudgetModulator* budgetModulator;
	CDDPlugins* plugins;
	CDDEnergyAccounting* powerAccountant;
	CDDNetworkAccounting* networkAccountant;
	CDDAdmissionCheckQueue* admissionCheckQueue;
	NSDictionary* systemAttributeIdMapper;
	NSDictionary* systemBudgetIdMapper;
	CDDEngineCache* basicQueryCache;
	CDDEngineCache* scoreQueryCache;
	NSObject*<OS_dispatch_queue> cacheQueue;
	NSObject*<OS_dispatch_queue> cullingTimerQueue;
	NSObject*<OS_dispatch_source> cullingTimer;
	NSObject*<OS_dispatch_queue> logQueue;
	NSMutableDictionary* attributeNameReverseMapFromIntegerIDSystemNameCache;
	Cache* attributeNameReverseMapFromIntegerIDCache;
	Cache* appBundleIDReverseMapFromIntegerIDCache;
	Cache* poolNameReverseMapFromIntegerIDCache;
	Cache* integerIDReverseMapFromAttributeNameIDCache;
	Cache* integerIDReverseMapFromAppBundleIDCache;
	Cache* integerIdReverseMapFromDeviceDescriptionCache;
	Cache* deviceDescriptionReverseMapFromIntegerIdCache;
	CDDConfig* config;
	CDDebug* debug;
	char isIdle;
	int notificationOTAToken;
	int settingsToken;
	int bundleIdRetryToken;
	NSMutableDictionary* postOccurrenceMonitors;
	CDDDiagnostics* diagnostics;
	char classCLocked;
	char passcodeLocked;
	CDDAirplaneModeMonitor* airplaneModeMonitor;
	CDDAppStateMonitor* appStateMonitor;
	CDDBacklightMonitor* backlightMonitor;
	CDDBatteryMonitor* batteryMonitor;
	CDDSleepwakeMonitor* sleepWakeMonitor;
	CDDNotifydMonitor* notifydMonitor;
	CDDSystemBudgets* systemBudgets;
	CDDThermalMonitor* thermalMonitor;
	NSString* rejectedAdmissionCheck;
	CDDDiagnostics* _diagnostics;

}

@property (nonatomic,readonly) CDDAirplaneModeMonitor * airplaneModeMonitor; 
@property (nonatomic,readonly) CDDAppStateMonitor * appStateMonitor; 
@property (nonatomic,readonly) CDDBacklightMonitor * backlightMonitor; 
@property (nonatomic,readonly) CDDBatteryMonitor * batteryMonitor; 
@property (nonatomic,readonly) CDDSleepwakeMonitor * sleepWakeMonitor; 
@property (nonatomic,readonly) CDDNotifydMonitor * notifydMonitor; 
@property (nonatomic,readonly) CDDCoreData * coreData; 
@property (nonatomic,readonly) CDDNetworkMonitor * networkMonitor; 
@property (nonatomic,readonly) CDDTrending * trending; 
@property (nonatomic,readonly) CDDPools * pools; 
@property (nonatomic,readonly) CDDAttributeTable * attributeTable; 
@property (nonatomic,readonly) CDDEngineCache * basicQueryCache; 
@property (nonatomic,readonly) CDDEngineCache * scoreQueryCache; 
@property (nonatomic,readonly) CDDebug * debug; 
@property (assign) char isIdle; 
@property (nonatomic,readonly) CDDConfig * config; 
@property (nonatomic,readonly) CDDBudgetModulator * budgetModulator; 
@property (nonatomic,readonly) CDDPlugins * plugins; 
@property (nonatomic,readonly) CDDSystemBudgets * systemBudgets; 
@property (nonatomic,readonly) CDDEnergyAccounting * powerAccountant; 
@property (nonatomic,readonly) CDDThermalMonitor * thermalMonitor; 
@property (nonatomic,readonly) CDDNetworkAccounting * networkAccountant; 
@property (nonatomic,readonly) CDDAdmissionCheckQueue * admissionCheckQueue; 
@property (readonly) char classCLocked; 
@property (readonly) char passcodeLocked; 
@property (nonatomic,readonly) NSString * rejectedAdmissionCheck; 
@property (nonatomic,readonly) CDDDiagnostics * diagnostics;                              //@synthesize diagnostics=_diagnostics - In the implementation block
-(void)invalidatePoolIDMapCache;
-(CDDBudgetModulator *)budgetModulator;
-(CDDCoreData *)coreData;
-(void)dumpLight;
-(char)classCLocked;
-(id)findOrAllocIntegerIdForAppBundleId:(id)arg1 ;
-(CDDNetworkMonitor *)networkMonitor;
-(CDDTrending *)trending;
-(CDDSystemBudgets *)systemBudgets;
-(CDDEnergyAccounting *)powerAccountant;
-(CDDPools *)pools;
-(id)queryAllMappedPools;
-(char)entryOlderThan:(unsigned long long)arg1 ;
-(id)pmfOverHourOfDayWithParams:(SCD_Struct_CD1*)arg1 ;
-(char)hasRejectedAdmissionChecks:(double)arg1 immediate:(char)arg2 ;
-(CDDAttributeTable *)attributeTable;
-(CDDNetworkAccounting *)networkAccountant;
-(CDDDiagnostics *)diagnostics;
-(id)poolNameReverseMapFromIntegerId:(id)arg1 ;
-(char)passcodeLocked;
-(CDDEngineCache *)basicQueryCache;
-(CDDEngineCache *)scoreQueryCache;
-(void)invalidateIDMapCaches;
-(id)integerIdReverseMapFromAppBundleId:(id)arg1 ;
-(void)setIsIdle:(char)arg1 ;
-(char)readConfigParamsFromPlist;
-(void)setDefaultConfigParams;
-(unsigned long long)registerClientAttribute:(id)arg1 withType:(long long)arg2 clientId:(unsigned long long)arg3 dataProtectionClass:(id)arg4 error:(id*)arg5 ;
-(id)integerIdReverseMapFromAttributeName:(id)arg1 clientId:(unsigned long long)arg2 ;
-(char)attributeId:(unsigned long long)arg1 occurredWithValue:(id)arg2 cost:(long long)arg3 type:(long long)arg4 clientId:(unsigned long long)arg5 onDate:(id)arg6 risingEdge:(char)arg7 fallingEdge:(char)arg8 ;
-(id)representationStringFromAttribute:(unsigned long long)arg1 clientId:(unsigned long long)arg2 type:(long long)arg3 value:(id)arg4 error:(id*)arg5 ;
-(id)retrieveForecast:(SCD_Struct_CD1*)arg1 withTemporalLeeway:(double)arg2 identifier:(unsigned)arg3 error:(id*)arg4 ;
-(id)pmfOverSiblingEventsWithParams:(SCD_Struct_CD1*)arg1 ;
-(id)historyWithParams:(SCD_Struct_CD1*)arg1 filter:(long long)arg2 ;
-(id)integerIdReverseMapFromPoolName:(id)arg1 clientId:(unsigned long long)arg2 ;
-(unsigned long long)registerClientPool:(id)arg1 withType:(long long)arg2 clientId:(unsigned long long)arg3 parentIntegerId:(unsigned long long)arg4 maxFraction:(double)arg5 error:(id*)arg6 ;
-(id)queryUniqueApps;
-(id)queryLaunchedSince:(unsigned long long)arg1 NonPrewarmedSince:(unsigned long long)arg2 ;
-(id)queryAttributeNamesForClientId:(unsigned long long)arg1 ;
-(id)queryPoolNamesForClientId:(unsigned long long)arg1 ;
-(void)deleteDataForClientId:(unsigned long long)arg1 ;
-(id)admissionIdFromAttributeId:(unsigned long long)arg1 clientId:(unsigned long long)arg2 attributeType:(long long)arg3 attributeValues:(id)arg4 admissionCheckType:(long long)arg5 options:(id)arg6 ;
-(CDDAdmissionCheckQueue *)admissionCheckQueue;
-(id)statistic:(long long)arg1 forParameters:(SCD_Struct_CD1*)arg2 repeated:(char)arg3 ;
-(id)retrieveStatistics:(long long)arg1 params:(SCD_Struct_CD1*)arg2 identifier:(unsigned)arg3 error:(id*)arg4 ;
-(NSString *)rejectedAdmissionCheck;
-(void)classCAndPasscodeCheck;
-(void)registerSystemAttributeIfAbsent:(id)arg1 ;
-(void)initializeBookkeepingIfAbsent;
-(void)registerSystemBudgetIfAbsent:(id)arg1 poolID:(unsigned long long)arg2 ;
-(void)configPluginOverrides;
-(void)handleOTAupdate;
-(void)handleSettingsChange;
-(void)checkPoolAssignment;
-(id)appBundleIdReverseMapFromIntegerId:(id)arg1 ;
-(id)fetchDeviceDescriptionReverseMapFromIntegerId:(id)arg1 ;
-(id)fetchAppBundleIdReverseMapFromIntegerId:(id)arg1 ;
-(id)fetchAttributeNameReverseMapFromIntegerId:(id)arg1 ;
-(id)fetchPoolNameReverseMapFromIntegerId:(id)arg1 ;
-(id)fetchIntegerIdReverseMapFromDeviceDescription:(id)arg1 ;
-(id)fetchIntegerIdReverseMapFromAppBundleId:(id)arg1 ;
-(id)fetchIntegerIdReverseMapFromAttributeName:(id)arg1 clientId:(unsigned long long)arg2 ;
-(id)attributeNameReverseMapFromIntegerId:(id)arg1 ;
-(id)contextForAttributeId:(unsigned long long)arg1 ;
-(id)entityDescriptionForAttributeId:(unsigned long long)arg1 ;
-(id)valueColumnNameForAttributeId:(unsigned long long)arg1 ;
-(char)shouldPredicateOnIntegerIdIfOnlyInterestedInAttributeId:(unsigned long long)arg1 ;
-(id)valuePredicateStringFromParams:(SCD_Struct_CD1*)arg1 ;
-(id)predictateStringFromParams:(SCD_Struct_CD1*)arg1 ;
-(id)predicateFromParams:(SCD_Struct_CD1*)arg1 ;
-(id)queryWithParamsBasic:(SCD_Struct_CD1*)arg1 predicate:(id)arg2 ;
-(char)permitDatabaseAccessGivenLockStateForAttributeId:(unsigned long long)arg1 ;
-(id)basisObjectFromAttributeId:(unsigned long long)arg1 managedObject:(id)arg2 ;
-(id)queryWithParams:(SCD_Struct_CD1*)arg1 ;
-(void)stuffDictionary:(id*)arg1 withBasisObject:(id)arg2 xpcKey:(const char*)arg3 ;
-(void)deleteForecastDataForClientId:(unsigned long long)arg1 ;
-(void)loadParamsFromDict:(id)arg1 userDefaults:(id)arg2 ;
-(void)setupCommunicator;
-(char)isClassCLocked;
-(unsigned)hashFromDeviceDescription:(id)arg1 ;
-(id)findOrAllocIntegerIdForDeviceDescription:(id)arg1 ;
-(id)findOrAllocIntegerIdForPoolName:(id)arg1 clientId:(unsigned long long)arg2 ;
-(void)backgroundLaunchStarted:(id)arg1 ;
-(void)backgroundLaunchEnded:(id)arg1 ;
-(id)deviceDescriptionReverseMapFromIntegerId:(id)arg1 ;
-(id)integerIdReverseMapFromDeviceDescription:(id)arg1 ;
-(char)saveStatistics:(long long)arg1 statistics:(id)arg2 queryParameters:(SCD_Struct_CD1*)arg3 deviceIdentifier:(id)arg4 error:(id*)arg5 ;
-(char)saveForecast:(id)arg1 queryParameters:(SCD_Struct_CD1*)arg2 deviceIdentifier:(id)arg3 error:(id*)arg4 ;
-(id)remoteFocalApp:(unsigned long long)arg1 error:(id*)arg2 ;
-(id)registeredDevicesWithError:(id*)arg1 ;
-(id)registeredDeviceFromDescription:(id)arg1 error:(id*)arg2 ;
-(id)remoteSystemData:(unsigned)arg1 error:(id*)arg2 ;
-(id)requestForecastDataFromDevice:(unsigned)arg1 params:(SCD_Struct_CD1*)arg2 error:(id*)arg3 ;
-(id)requestStatisticDataFromDevice:(unsigned)arg1 statistic:(long long)arg2 params:(SCD_Struct_CD1*)arg3 error:(id*)arg4 ;
-(id)getTransactionWithIdentifier:(unsigned long long)arg1 ;
-(char)registerPostOccurrenceMonitorForAttributeId:(unsigned long long)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)invalidateDeviceIDMapCaches;
-(void)clearRejectedAdmissionCheck;
-(CDDAirplaneModeMonitor *)airplaneModeMonitor;
-(CDDAppStateMonitor *)appStateMonitor;
-(CDDBacklightMonitor *)backlightMonitor;
-(CDDBatteryMonitor *)batteryMonitor;
-(CDDSleepwakeMonitor *)sleepWakeMonitor;
-(CDDNotifydMonitor *)notifydMonitor;
-(CDDThermalMonitor *)thermalMonitor;
-(char)isIdle;
-(CDDConfig *)config;
-(CDDPlugins *)plugins;
-(void)log:(const char*)arg1 ;
-(void)dumpAll;
-(CDDebug *)debug;
-(id)init;
-(void)dealloc;
-(char)isLocked;
@end

