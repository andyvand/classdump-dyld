/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:05:17 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/libexec/sharingd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_source, SDFileZipperDelegate;
#import <sharingd/sharingd-Structs.h>
@class NSURL, NSString, SDStatusMonitor, NSMutableArray, NSObject, NSMutableDictionary, SDAdaptiveCompressor, NSArray;

@interface SDFileZipper : NSObject {

	char _usePKZip;
	long long _fileCount;
	long long _totalBytes;
	BOMBomRef _bomArchive;
	NSURL* _tempFolder;
	NSString* _bomPath;
	NSURL* _destination;
	BOMCopierRef _bomCopier;
	long long _lastBytesCopied;
	long long _totalBytesCopied;
	SDStatusMonitor* _monitor;
	CFReadStreamRef _readStream;
	CFWriteStreamRef _writeStream;
	double _timeStarted;
	double _lastProgress;
	NSMutableArray* _topLevelFiles;
	NSMutableArray* _placeholderFiles;
	NSObject*<OS_dispatch_source> _progressTimer;
	FSQuarantineDataRef _quarantineData;
	NSMutableDictionary* _nameConflicts;
	SDAdaptiveCompressor* _compressionEngine;
	int _clientPid;
	NSArray* _sourceFiles;
	NSString* _senderName;
	NSString* _compressionType;
	id<SDFileZipperDelegate> _delegate;

}

@property (assign) int clientPid;                                  //@synthesize clientPid=_clientPid - In the implementation block
@property (copy) NSURL * destination; 
@property (copy) NSArray * sourceFiles;                            //@synthesize sourceFiles=_sourceFiles - In the implementation block
@property (copy) NSString * senderName;                            //@synthesize senderName=_senderName - In the implementation block
@property (copy) NSString * compressionType;                       //@synthesize compressionType=_compressionType - In the implementation block
@property (__weak) id<SDFileZipperDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
-(void)setClientPid:(int)arg1 ;
-(int)clientPid;
-(char)isCompressor;
-(id)timeRemaining:(long long)arg1 timeNow:(double)arg2 ;
-(void)notifyClientForEvent:(long long)arg1 withProperty:(void*)arg2 ;
-(id)fixedRelativePath:(const char*)arg1 ;
-(id)absoluteURLIfTopLevelFile:(const char*)arg1 isDirectory:(char)arg2 base:(CFURLRef)arg3 ;
-(void)notifyProgress:(long long)arg1 force:(char)arg2 ;
-(void)quarantineFile:(id)arg1 ;
-(char)pathExistsInPlaceholderInfo:(const char*)arg1 ;
-(char)validFileName:(id)arg1 ;
-(void)removeFileFromPlaceholderList:(id)arg1 ;
-(CFArrayRef)copyReverseParentChain:(CFURLRef)arg1 base:(CFURLRef)arg2 ;
-(char)addFile:(CFURLRef)arg1 withBase:(CFURLRef)arg2 toBom:(BOMBomRef)arg3 ;
-(void)addParentChain:(BOMBomRef)arg1 file:(CFURLRef)arg2 base:(CFURLRef)arg3 ;
-(char)addFileURLToBom:(BOMBomRef)arg1 file:(CFURLRef)arg2 base:(CFURLRef)arg3 propertyKeys:(id)arg4 topLevel:(char)arg5 ;
-(long long)totalFileSize:(CFURLRef)arg1 ;
-(id)URLFromFileInfo:(id)arg1 ;
-(id)generateUniqueFileName:(id)arg1 ;
-(id)conflictResolvedURL:(id)arg1 ;
-(void)moveFile:(CFURLRef)arg1 toDestination:(CFURLRef)arg2 ;
-(char)isDecompressor;
-(char)createPlaceholderFiles;
-(int)bomCopierCopy:(id)arg1 destination:(id)arg2 options:(id)arg3 ;
-(void)moveFilesToDestination;
-(void)removeUnusedPlaceholderFiles;
-(void)allowProgressCircleToComplete;
-(char)initBomWithFiles;
-(void)startBomCopy:(id)arg1 destination:(id)arg2 options:(id)arg3 ;
-(id)temporaryBomPath;
-(void)startZipping;
-(void)startUnzipping;
-(void)setPlaceholderFiles:(id)arg1 ;
-(void)setReadStream:(CFReadStreamRef)arg1 ;
-(CFReadStreamRef)copyReadStream;
-(void)bomCopierCopyFileFinished:(const char*)arg1 type:(int)arg2 size:(long long)arg3 operation:(int)arg4 ;
-(void)bomCopierFatalFileError:(int)arg1 ;
-(void)bomCopierFatalError:(const char*)arg1 ;
-(void)unzip;
-(NSArray *)sourceFiles;
-(void)setSourceFiles:(NSArray *)arg1 ;
-(void)setSenderName:(NSString *)arg1 ;
-(NSString *)compressionType;
-(void)setCompressionType:(NSString *)arg1 ;
-(void)zip;
-(NSString *)senderName;
-(void)setTotalBytes:(id)arg1 ;
-(id)init;
-(void)setDelegate:(id<SDFileZipperDelegate>)arg1 ;
-(void)dealloc;
-(void)stop;
-(id<SDFileZipperDelegate>)delegate;
-(NSURL *)destination;
-(void)setDestination:(NSURL *)arg1 ;
@end

