/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:05:17 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/libexec/sharingd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <sharingd/sharingd-Structs.h>
#import <sharingd/SDWormholeClientDelegate.h>
#import <sharingd/SDIconCacherDelegate.h>
#import <sharingd/WPAWDLDelegate.h>

@protocol SDBonjourBrowserDelegate;
@class NSString, WPAWDL, NSTimer, SDStatusMonitor, NSMutableDictionary, NSArray;

@interface SDBonjourBrowser : NSObject <SDWormholeClientDelegate, SDIconCacherDelegate, WPAWDLDelegate> {

	char _isAirDrop;
	char _isNetBIOS;
	char _isMyDomain;
	char _isWorkgroups;
	int _maxServices;
	NSString* _domain;
	WPAWDL* _proximity;
	long long _mode;
	unsigned _awdlIndex;
	NSTimer* _restartTimer;
	SDStatusMonitor* _monitor;
	DNSServiceRef_tRef _connection;
	double _firstTime;
	double _startTime;
	NSMutableDictionary* _servers;
	NSMutableDictionary* _iconCache;
	NSMutableDictionary* _dnsQueries;
	NSMutableDictionary* _serverCache;
	NSMutableDictionary* _iconCachers;
	NSMutableDictionary* _wormholeRequests;
	CFDictionaryRef _identityQueries;
	NSString* _bundleID;
	NSArray* _types;
	id<SDBonjourBrowserDelegate> _delegate;

}

@property (assign) long long mode; 
@property (copy) NSString * bundleID;                                  //@synthesize bundleID=_bundleID - In the implementation block
@property (copy,readonly) NSArray * types;                             //@synthesize types=_types - In the implementation block
@property (copy,readonly) NSArray * nodes; 
@property (copy,readonly) NSString * domain; 
@property (copy,readonly) NSString * virtualDomain; 
@property (__weak) id<SDBonjourBrowserDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)awdl:(id)arg1 failedToStartAdvertisingWithError:(id)arg2 ;
-(char)awdl:(id)arg1 foundDevice:(id)arg2 ;
-(void)awdlDidUpdateState:(id)arg1 ;
-(char)shouldStart;
-(void)restartBrowser:(id)arg1 ;
-(void)notifyClient;
-(void)updateBrowserState;
-(void)somethingChanged:(id)arg1 ;
-(void)airDropPublished:(id)arg1 ;
-(void)legacyModeChanged:(id)arg1 ;
-(void)consoleUserChanged:(id)arg1 ;
-(void)linkStateChanged:(id)arg1 ;
-(void)advertiseHashes;
-(void)startConnectionlessAdvertisingWithData:(id)arg1 ;
-(char)thisIsTheFinder;
-(unsigned)getInterface:(unsigned)arg1 ;
-(void)cancelIdentityQueries;
-(void)cancelWormholeRequests;
-(void)stopConnectionlessAdvertising;
-(void)removeInvalidNodes:(id)arg1 ;
-(void)updateSecondaryNameForNodes:(id)arg1 ;
-(void)updateServerCacheIfNecessary;
-(void)startRecordQuery:(id)arg1 type:(id)arg2 domain:(id)arg3 recordType:(unsigned short)arg4 interface:(unsigned)arg5 ;
-(id)queryKey:(id)arg1 type:(id)arg2 domain:(id)arg3 recordType:(unsigned short)arg4 ;
-(void)queryRecordTimerCallBack:(id)arg1 ;
-(void)addQueryToDictionary:(DNSServiceRef_t*)arg1 name:(id)arg2 type:(id)arg3 domain:(id)arg4 recordType:(unsigned short)arg5 ;
-(void)cleanupRecordQueryForKey:(id)arg1 ;
-(void)cleanupRecordQuery:(id)arg1 type:(id)arg2 domain:(id)arg3 recordType:(unsigned short)arg4 ;
-(void)ejectDisksIfNecessary:(id)arg1 diskNames:(id)arg2 ;
-(void)cleanupWormholeRequest:(id)arg1 ;
-(id)odiskMountPoints:(id)arg1 ;
-(SFNodeRef)copyNodeForService:(id)arg1 ;
-(id)redGreenBlueFromEcolor:(id)arg1 ;
-(id)iconCacherKey:(id)arg1 pictureHash:(id)arg2 ;
-(void)startPictureQuery:(id)arg1 ;
-(void)clearCacheAndNotify;
-(void)updateIdentityWithQueryResults:(CSIdentityQueryRef)arg1 ;
-(void)cancelIdentityQuery:(CSIdentityQueryRef)arg1 ;
-(void)startIdentityQueryForNode:(SFNodeRef)arg1 ;
-(void)startWormholeRequestForNode:(SFNodeRef)arg1 type:(id)arg2 ;
-(void)restartAfterDelay:(double)arg1 ;
-(void)personIconChanged:(id)arg1 iconData:(id)arg2 ;
-(char)validAirDropInterface:(unsigned)arg1 ;
-(void)addService:(id)arg1 type:(id)arg2 domain:(id)arg3 interface:(unsigned)arg4 ;
-(void)removeService:(id)arg1 type:(id)arg2 domain:(id)arg3 ;
-(void)notifyClientIfDone:(unsigned)arg1 ;
-(id)serviceFromServiceName:(id)arg1 ;
-(id)valueForKey:(id)arg1 inTXTRecord:(const void*)arg2 withLength:(unsigned short)arg3 ;
-(void)deviceInfoChanged:(id)arg1 model:(id)arg2 ecolor:(id)arg3 osxvers:(id)arg4 ;
-(void)commentChanged:(id)arg1 comment:(id)arg2 ;
-(void)personInfoChanged:(id)arg1 flags:(id)arg2 cname:(id)arg3 phash:(id)arg4 ehash:(id)arg5 nhash:(id)arg6 ;
-(void)systemInfoChanged:(id)arg1 diskInfo:(CFDictionaryRef)arg2 ;
-(void)processTXTRecordUpdate:(const char*)arg1 rdlen:(unsigned short)arg2 rdata:(const void*)arg3 ;
-(void)processNULLRecordUpdate:(const char*)arg1 rdlen:(unsigned short)arg2 rdata:(const void*)arg3 ;
-(void)wormholeClient:(id)arg1 event:(long long)arg2 withResults:(id)arg3 ;
-(void)iconCacher:(id)arg1 didStoreDataWithError:(id)arg2 ;
-(void)iconCacher:(id)arg1 didFetchDataWithError:(id)arg2 ;
-(id)initWithDomain:(id)arg1 types:(id)arg2 ;
-(SFNodeRef)copyNodeForName:(id)arg1 ;
-(void)handleIdentityCallback:(CSIdentityQueryRef)arg1 event:(long long)arg2 error:(CFErrorRef)arg3 ;
-(void)lockStatusChanged:(id)arg1 ;
-(void)screenStatusChanged:(id)arg1 ;
-(void)setIconData:(id)arg1 iconHash:(id)arg2 forPerson:(SFNodeRef)arg3 ;
-(NSString *)virtualDomain;
-(void)handleBrowseCallBack:(unsigned)arg1 interface:(unsigned)arg2 error:(int)arg3 name:(const char*)arg4 type:(const char*)arg5 domain:(const char*)arg6 ;
-(void)handleQueryCallBack:(unsigned)arg1 error:(int)arg2 fullname:(const char*)arg3 rrtype:(unsigned short)arg4 rdlen:(unsigned short)arg5 rdata:(const void*)arg6 ;
-(NSString *)bundleID;
-(void)addObservers;
-(void)removeObservers;
-(void)addressBookChanged:(id)arg1 ;
-(void)clearCache;
-(void)setDelegate:(id<SDBonjourBrowserDelegate>)arg1 ;
-(void)dealloc;
-(void)stop;
-(void)start;
-(void)invalidate;
-(id<SDBonjourBrowserDelegate>)delegate;
-(NSString *)domain;
-(long long)mode;
-(void)setMode:(long long)arg1 ;
-(NSArray *)types;
-(void)setBundleID:(NSString *)arg1 ;
-(NSArray *)nodes;
@end

