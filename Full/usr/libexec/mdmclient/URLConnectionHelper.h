/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:05:15 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/libexec/mdmclient
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <mdmclient/mdmclient-Structs.h>
#import <mdmclient/NSURLConnectionDelegate.h>

@class NSURLConnection, NSMutableData, NSString, NSMutableArray, NSURLRequest, NSMutableIndexSet, NSRunLoop, NSURLResponse, NSError;

@interface URLConnectionHelper : NSObject <NSURLConnectionDelegate> {

	NSURLConnection* fConnection;
	NSMutableData* fResponseData;
	BOOL fStopRequested;
	NSString* fAuthUserName;
	NSString* fAuthPassword;
	NSMutableArray* fAuthMethodsTried;
	unsigned long long fKerberosRetryCount;
	NSString* fLastKerberosHost;
	NSString* fBaseURL;
	NSURLRequest* fRequest;
	NSMutableIndexSet* fValidStatusCodes;
	NSRunLoop* fRunLoop;
	BOOL fIgnoreInvalidServerCertificates;
	OpaqueSecIdentityRefRef fClientIdentityForAuth;
	NSURLResponse* fResponse;
	NSError* fError;

}

@property (setter=setResponse:,getter=response,copy) NSURLResponse * fResponse; 
@property (setter=setError:,getter=error,copy) NSError * fError; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)helper;
-(id)absolutePathForRelativePath:(id)arg1 ;
-(id)httpResponse;
-(BOOL)sendSynchronousRequest:(id)arg1 forOpDesc:(id)arg2 returningError:(id*)arg3 ;
-(unsigned long long)recordAuthMethod:(id)arg1 ;
-(void)setAuthUserName:(id)arg1 password:(id)arg2 ;
-(void)setIgnoreInvalidServerCertificates:(BOOL)arg1 ;
-(id)buildRequest:(id)arg1 forRelPath:(id)arg2 ;
-(void)setValidStatusCodes:(id)arg1 ;
-(id)sendSynchronousRequest:(id)arg1 forOpDesc:(id)arg2 returningResponse:(id*)arg3 error:(id*)arg4 ;
-(void)retry;
-(id)responseData;
-(void)setClientIdentity:(OpaqueSecIdentityRefRef)arg1 ;
-(void)setBaseURL:(id)arg1 ;
-(id)init;
-(void)dealloc;
-(void)stop;
-(id)error;
-(void)setError:(id)arg1 ;
-(void)setResponse:(id)arg1 ;
-(void)connection:(id)arg1 didFailWithError:(id)arg2 ;
-(char)connectionShouldUseCredentialStorage:(id)arg1 ;
-(void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2 ;
-(id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3 ;
-(void)connection:(id)arg1 didReceiveResponse:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveData:(id)arg2 ;
-(void)connectionDidFinishLoading:(id)arg1 ;
-(id)response;
-(long long)statusCode;
@end

