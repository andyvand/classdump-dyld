/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:05:14 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/libexec/kcproxy
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <kcproxy/kcproxy-Structs.h>
#import <kcproxy/KeychainProxyProtocol.h>
#import <kcproxy/NSConnectionDelegate.h>

@class NSConnection, NSData, NSProtocolChecker, NSMachPort, NSString;

@interface KeychainProxy : NSObject <KeychainProxyProtocol, NSConnectionDelegate> {

	NSConnection* _theConnection;
	AuthorizationOpaqueRefRef _authRef;
	NSData* _privateKeyPersistentRef;
	NSData* _publicKeyPersistentRef;
	NSProtocolChecker* _protocolChecker;
	long long _clientRefCount;
	NSMachPort* _clientBootstrapPort;
	NSMachPort* _clientSecuritySessionPort;
	unsigned _bootstrapPort;
	unsigned _securitySessionPort;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)runWithTimeout:(double)arg1 ;
-(void)setClientBootstrapPort:(id)arg1 ;
-(void)setClientSecuritySessionPort:(id)arg1 ;
-(int)cloneItem:(id)arg1 to:(id)arg2 forUser:(unsigned)arg3 ;
-(void)clientConnectionDidDie:(id)arg1 ;
-(long long)verifyKeychain:(id)arg1 ;
-(long long)verifyAuthorization:(char*)arg1 forKeychain:(id)arg2 ;
-(void)_setPublicKeyPersistentRef:(CFDataRef)arg1 ;
-(void)_setPrivateKeyPersistentRef:(CFDataRef)arg1 ;
-(void)switchToUserContext;
-(void)restoreContext;
-(void)connectionDidDie:(id)arg1 ;
-(void)shutDown;
-(long long)addItem:(unsigned)arg1 attributes:(id)arg2 data:(id)arg3 label:(id)arg4 to:(id)arg5 forUser:(unsigned)arg6 item:(id*)arg7 ;
-(long long)addCertificate:(id)arg1 to:(id)arg2 forUser:(unsigned)arg3 domain:(unsigned)arg4 settings:(id)arg5 ;
-(long long)addCertificate:(id)arg1 to:(id)arg2 forUser:(unsigned)arg3 ;
-(int)createKeyPair:(unsigned)arg1 keySizeInBits:(unsigned)arg2 contextHandle:(unsigned long long)arg3 publicKeyUsage:(unsigned)arg4 publicKeyAttr:(unsigned)arg5 privateKeyUsage:(unsigned)arg6 privateKeyAttr:(unsigned)arg7 initialAccess:(id)arg8 to:(id)arg9 forUser:(unsigned)arg10 commonName:(id)arg11 ;
-(void)setKeyPrintNamesWithCommonName:(id)arg1 forKey:(OpaqueSecKeyRefRef)arg2 ;
-(id)privateKeyPersistentRef;
-(id)publicKeyPersistentRef;
-(long long)modifyItem:(id)arg1 attributes:(id)arg2 data:(id)arg3 from:(id)arg4 forUser:(unsigned)arg5 ;
-(long long)deleteItem:(id)arg1 from:(id)arg2 forUser:(unsigned)arg3 ;
-(int)copyItem:(id)arg1 to:(id)arg2 forUser:(unsigned)arg3 ;
-(int)p12Import:(id)arg1 prompt:(id)arg2 passphrase:(id)arg3 importKeychain:(id)arg4 outItems:(id*)arg5 forUser:(unsigned)arg6 ;
-(int)exportItems:(id)arg1 prompt:(id)arg2 passphrase:(id)arg3 exportKeychain:(id)arg4 format:(unsigned)arg5 flags:(unsigned)arg6 outData:(id*)arg7 forUser:(unsigned)arg8 ;
-(int)keychainItemCopyContent:(id)arg1 fromPath:(id)arg2 data:(id*)arg3 forUser:(unsigned)arg4 ;
-(int)changeItemACL:(id)arg1 promptSelector:(cssm_acl_keychain_prompt_selector)arg2 promptDescription:(id)arg3 appData:(id)arg4 from:(id)arg5 forUser:(unsigned)arg6 ;
-(id)protocolChecker;
-(void)setAuthorization:(id)arg1 ;
-(char)connection:(id)arg1 shouldMakeNewConnection:(id)arg2 ;
-(id)init;
-(void)finalize;
-(void)dealloc;
-(void)terminate;
@end

