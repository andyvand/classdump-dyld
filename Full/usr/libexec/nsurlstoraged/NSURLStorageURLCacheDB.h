/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:05:16 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/libexec/nsurlstoraged
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <nsurlstoraged/nsurlstoraged-Structs.h>
#import <nsurlstoraged/NSURLStorageDB.h>

@class NSMutableArray;

@interface NSURLStorageURLCacheDB : NSURLStorageDB {

	sqlite3_stmtRef _sqlUpdateReceiverDataStmt;
	sqlite3_stmtRef _sqlInsertStmtResponse;
	sqlite3_stmtRef _sqlInsertStmtBlobData;
	sqlite3_stmtRef _sqlInsertStmtReceiverData;
	sqlite3_stmtRef _sqlUpdateResponseStmt;
	sqlite3_stmtRef _sqlUpdateBlobDataStmt;
	sqlite3_stmtRef _sqlSelectStmt;
	sqlite3_stmtRef _sqlSelectEntry_idAndRecevierDataForKeyStmt;
	sqlite3_stmtRef _sqlSelectIsDataOnFSForEntry_IDStmt;
	sqlite3_stmtRef _sqlSelectFileSystemFileForDeletionStmt;
	sqlite3_stmtRef _sqlSelectTimeStmt;
	sqlite3_stmtRef _sqlDeleteStmtResponse;
	sqlite3_stmtRef _sqlDeleteStmtBlobData;
	sqlite3_stmtRef _sqlDeleteStmtReceiverData;
	long long _schemaVersion;
	NSMutableArray* _entryIDsToDelete;
	unsigned char _performingShrink;
	unsigned long long _currentFSBackedUsage;
	unsigned long long _currentSQLiteDBUsage;
	unsigned long long _currentTotalPersistentCacheUsage;
	long long _minSizeForFileSystemBackedCacheItem;

}

@property (assign) unsigned long long currentFSBackedUsage;                          //@synthesize currentFSBackedUsage=_currentFSBackedUsage - In the implementation block
@property (assign) unsigned long long currentSQLiteDBUsage;                          //@synthesize currentSQLiteDBUsage=_currentSQLiteDBUsage - In the implementation block
@property (assign) unsigned long long currentTotalPersistentCacheUsage;              //@synthesize currentTotalPersistentCacheUsage=_currentTotalPersistentCacheUsage - In the implementation block
@property (assign) long long minSizeForFileSystemBackedCacheItem;                    //@synthesize minSizeForFileSystemBackedCacheItem=_minSizeForFileSystemBackedCacheItem - In the implementation block
@property (assign) unsigned char performingShrink;                                   //@synthesize performingShrink=_performingShrink - In the implementation block
-(id)initWithDBPath:(id)arg1 maxSize:(long long)arg2 clientPid:(int)arg3 ;
-(id)initWithDBPath:(id)arg1 maxSize:(long long)arg2 clientPid:(int)arg3 schemaCheck:(char)arg4 ;
-(id)copyAllPartitionNames;
-(void)cleanupAndShutdown_Lock;
-(unsigned long long)getcurrentTotalPersistentCacheUsage;
-(char)deleteResponseForRequestWithKey:(id)arg1 ;
-(void)setMinSizeForFileSystemBackedCacheItem:(long long)arg1 ;
-(void)shrinkDB;
-(void)updateFSBackedCacheUsageOnDisk;
-(void)updateSQLiteDBCacheUsageOnDisk;
-(void)setPerformingShrink:(unsigned char)arg1 ;
-(id)copyHostNamesForOptionalPartition:(id)arg1 ;
-(CFCachedURLResponse*)readDBforKey:(id)arg1 cacheDataPath:(id*)arg2 cacheDataFile:(id*)arg3 ;
-(char)isSchemaCurrent;
-(void)updateToCurrentSchema;
-(char)openAndPrepareWriteCacheDB_NoLock;
-(char)_setDBSchemaAndPragmas;
-(char)_finalizeAllDBStatements;
-(char)_finalizeWriteConnectionDBStatements;
-(char)_prepareDBInsertUpdateStatements;
-(char)_prepareDBDeleteStatements;
-(char)_prepareDBSelectStatements;
-(unsigned long long)currentTotalPersistentCacheUsage;
-(int)execSQLStatement:(const char*)arg1 onConnection:(sqlite3Ref)arg2 toCompletionWithRetry:(long long)arg3 ;
-(void)cleanupWriteConnections_NoLock;
-(char)_finalizeDBSelectStatements;
-(char)_finalizeDBInsertUpdateStatements;
-(char)_finalizeDBDeleteStatements;
-(unsigned char)performingShrink;
-(int)stepSQLStatement:(sqlite3_stmtRef)arg1 toCompletionWithRetry:(long long)arg2 ;
-(entry_idAndRecevierDataInfo*)getEntryIDandReceiverDataForRequestKey:(const char*)arg1 keyLength:(long long)arg2 ;
-(long long)getMinSizeForVMCachedResource;
-(unsigned long long)currentFSBackedUsage;
-(void)setCurrentFSBackedUsage:(unsigned long long)arg1 ;
-(void)setCurrentTotalPersistentCacheUsage:(unsigned long long)arg1 ;
-(void)_ensureDBCapacityConstraints:(id)arg1 ;
-(long long)minSizeForFileSystemBackedCacheItem;
-(char)openAndPrepareReadCacheDB;
-(char)openCacheDB_NoLock;
-(void)_purgeAllFileSystemCacheData;
-(char)_prepareDBStatements;
-(char)writeDBwithCachedResponse_Lock:(id)arg1 withKey:(id)arg2 taskManager:(id)arg3 ;
-(unsigned long long)currentSQLiteDBUsage;
-(void)setCurrentSQLiteDBUsage:(unsigned long long)arg1 ;
-(id)init;
-(void)dealloc;
-(void)deleteResponsesSinceDate:(id)arg1 ;
-(void)deleteAllHostNames:(id)arg1 forOptionalPartition:(id)arg2 ;
-(void)deleteAllResponses;
@end

