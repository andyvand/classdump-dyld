/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:05:15 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/libexec/locationd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

typedef struct {
	long long IDLength;
	void ID;
} SCD_Struct_CL0;

typedef struct {
	int field1;
} SCD_Struct_CL1;

typedef struct {
	unsigned age : 1;
	unsigned serverHash : 1;
} SCD_Struct_CR2;

typedef struct {
	unsigned arfcn : 1;
	unsigned ecn0 : 1;
	unsigned psc : 1;
	unsigned rat : 1;
	unsigned rscp : 1;
	unsigned serverHash : 1;
	unsigned transmit : 1;
} SCD_Struct_CR3;

typedef struct {
	unsigned altitude : 1;
	unsigned context : 1;
	unsigned course : 1;
	unsigned speed : 1;
	unsigned verticalAccuracy : 1;
} SCD_Struct_CR4;

typedef struct {
	unsigned mcc : 1;
	unsigned mnc : 1;
	unsigned rat : 1;
} SCD_Struct_CR5;

typedef struct {
	unsigned submissionId : 1;
} SCD_Struct_CR6;

typedef struct {
	int list;
	unsigned long long count;
	unsigned long long size;
} SCD_Struct_CR7;

typedef struct {
	unsigned bsLatitude : 1;
	unsigned bsLongitude : 1;
	unsigned sectorLatitude : 1;
	unsigned sectorLongitude : 1;
	unsigned bandclass : 1;
	unsigned celltype : 1;
	unsigned channel : 1;
	unsigned dayLightSavings : 1;
	unsigned ecn0 : 1;
	unsigned ltmOffset : 1;
	unsigned pnoffset : 1;
	unsigned rat : 1;
	unsigned rscp : 1;
	unsigned serverHash : 1;
	unsigned zoneid : 1;
} SCD_Struct_CR8;

typedef struct _long {
	unsigned long long __cap_;
	unsigned long long __size_;
	char* __data_;
} long;

typedef struct _short {
	/*function pointer*/void* ;
	unsigned char __size_;
	c) __lx;
	char __data_[23];
} short;

typedef struct _raw {
	unsigned long long __words[3];
} raw;

typedef struct _rep {
	/*function pointer*/void* ;
	long __l;
	short __s;
	const aw) __r;
} rep;

typedef struct _compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > {
	const ep __first_;
} compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {
	compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > __r_;
} basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >;

typedef struct {
	unsigned numberOfSurroundingCdmaCells : 1;
	unsigned numberOfSurroundingCdmaEvdoCells : 1;
	unsigned numberOfSurroundingCells : 1;
	unsigned numberOfSurroundingLteCells : 1;
	unsigned numberOfSurroundingScdmaCells : 1;
	unsigned numberOfSurroundingWifis : 1;
} SCD_Struct_AL15;

typedef struct {
	unsigned bandclass : 1;
	unsigned bsid : 1;
	unsigned channel : 1;
	unsigned mcc : 1;
	unsigned nid : 1;
	unsigned pnoffset : 1;
	unsigned sid : 1;
	unsigned zoneid : 1;
} SCD_Struct_AL16;

typedef struct {
	unsigned cellLatitude : 1;
	unsigned cellLongitude : 1;
	unsigned bandInfo : 1;
	unsigned ecn0 : 1;
	unsigned pid : 1;
	unsigned rscp : 1;
	unsigned rssi : 1;
	unsigned serverHash : 1;
	unsigned uarfcn : 1;
} SCD_Struct_CR17;

typedef struct _compressed_pair<CLLocationController_Type::Client *, std::__1::default_delete<CLLocationController_Type::Client> > {
	Client __first_;
} compressed_pair<CLLocationController_Type::Client *, std::__1::default_delete<CLLocationController_Type::Client> >;

typedef struct unique_ptr<CLLocationController_Type::Client, std::__1::default_delete<CLLocationController_Type::Client> > {
	compressed_pair<CLLocationController_Type::Client *, std::__1::default_delete<CLLocationController_Type::Client> > __ptr_;
} unique_ptr<CLLocationController_Type::Client, std::__1::default_delete<CLLocationController_Type::Client> >;

typedef struct _compressed_pair<CLGpsController_Type::Client *, std::__1::default_delete<CLGpsController_Type::Client> > {
	Client __first_;
} compressed_pair<CLGpsController_Type::Client *, std::__1::default_delete<CLGpsController_Type::Client> >;

typedef struct unique_ptr<CLGpsController_Type::Client, std::__1::default_delete<CLGpsController_Type::Client> > {
	compressed_pair<CLGpsController_Type::Client *, std::__1::default_delete<CLGpsController_Type::Client> > __ptr_;
} unique_ptr<CLGpsController_Type::Client, std::__1::default_delete<CLGpsController_Type::Client> >;

typedef struct _compressed_pair<CLServiceLocationProvider_Type::Client *, std::__1::default_delete<CLServiceLocationProvider_Type::Client> > {
	Client __first_;
} compressed_pair<CLServiceLocationProvider_Type::Client *, std::__1::default_delete<CLServiceLocationProvider_Type::Client> >;

typedef struct unique_ptr<CLServiceLocationProvider_Type::Client, std::__1::default_delete<CLServiceLocationProvider_Type::Client> > {
	compressed_pair<CLServiceLocationProvider_Type::Client *, std::__1::default_delete<CLServiceLocationProvider_Type::Client> > __ptr_;
} unique_ptr<CLServiceLocationProvider_Type::Client, std::__1::default_delete<CLServiceLocationProvider_Type::Client> >;

typedef struct _compressed_pair<CLClientManager_Type::Client *, std::__1::default_delete<CLClientManager_Type::Client> > {
	Client __first_;
} compressed_pair<CLClientManager_Type::Client *, std::__1::default_delete<CLClientManager_Type::Client> >;

typedef struct unique_ptr<CLClientManager_Type::Client, std::__1::default_delete<CLClientManager_Type::Client> > {
	compressed_pair<CLClientManager_Type::Client *, std::__1::default_delete<CLClientManager_Type::Client> > __ptr_;
} unique_ptr<CLClientManager_Type::Client, std::__1::default_delete<CLClientManager_Type::Client> >;

typedef struct _CFURLRequest* CFURLRequestRef;

typedef struct _CFURLConnection* CFURLConnectionRef;

typedef struct _CFURLAuthChallenge* CFURLAuthChallengeRef;

typedef struct __CFURL* CFURLRef;

typedef struct _CFURLResponse* CFURLResponseRef;

typedef struct __CFURLConnectionSession* CFURLConnectionSessionRef;

typedef struct {
	unsigned ecn0 : 1;
	unsigned pilotPhase : 1;
	unsigned pnoffset : 1;
	unsigned rscp : 1;
} SCD_Struct_CR32;

typedef struct _compressed_pair<unsigned long, std::__1::__map_value_compare<SEL *, std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, std::__1::less<SEL *>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__map_value_compare<SEL *, std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, std::__1::less<SEL *>, true> >;

typedef struct _tree_end_node<std::__1::__tree_node_base<void *> *> {
	__tree_node_base<void *> __left_;
} tree_end_node<std::__1::__tree_node_base<void *> *>;

typedef struct _compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, void *> > > {
	tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
} compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, void *> > >;

typedef struct _tree<std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, std::__1::__map_value_compare<SEL *, std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, std::__1::less<SEL *>, true>, std::__1::allocator<std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *> > > {
	__tree_node<std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, void *> __begin_node_;
	compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, void *> > > __pair1_;
	compressed_pair<unsigned long, std::__1::__map_value_compare<SEL *, std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, std::__1::less<SEL *>, true> > __pair3_;
} tree<std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, std::__1::__map_value_compare<SEL *, std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, std::__1::less<SEL *>, true>, std::__1::allocator<std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *> > >;

typedef struct map<SEL *, CLIntersiloInterfaceSelectorInfo *, std::__1::less<SEL *>, std::__1::allocator<std::__1::pair<SEL *const, CLIntersiloInterfaceSelectorInfo *> > > {
	tree<std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, std::__1::__map_value_compare<SEL *, std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, std::__1::less<SEL *>, true>, std::__1::allocator<std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *> > > __tree_;
} map<SEL *, CLIntersiloInterfaceSelectorInfo *, std::__1::less<SEL *>, std::__1::allocator<std::__1::pair<SEL *const, CLIntersiloInterfaceSelectorInfo *> > >;

typedef struct _NSZone* NSZoneRef;

typedef struct _compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, int>, std::__1::less<unsigned long>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, int>, std::__1::less<unsigned long>, true> >;

typedef struct _compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, int>, void *> > > {
	tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
} compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, int>, void *> > >;

typedef struct _tree<std::__1::__value_type<unsigned long, int>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, int>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, int> > > {
	__tree_node<std::__1::__value_type<unsigned long, int>, void *> __begin_node_;
	compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, int>, void *> > > __pair1_;
	compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, int>, std::__1::less<unsigned long>, true> > __pair3_;
} tree<std::__1::__value_type<unsigned long, int>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, int>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, int> > >;

typedef struct map<unsigned long, int, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, int> > > {
	tree<std::__1::__value_type<unsigned long, int>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, int>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, int> > > __tree_;
} map<unsigned long, int, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, int> > >;

typedef struct __CFRunLoop* CFRunLoopRef;

