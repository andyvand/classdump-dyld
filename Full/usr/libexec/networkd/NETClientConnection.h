/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:05:16 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/libexec/networkd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <networkd/networkd-Structs.h>
#import <networkd/NETHelperEndpoint.h>
#import <networkd/NETProxyLookupDelegate.h>
#import <networkd/NETConnectionPoolEvaluationProtocol.h>
#import <networkd/NETDuetGateDelegate.h>
#import <networkd/NETLedBellyClientDelegate.h>
#import <networkd/NETDataProtectionStateObserver.h>

@protocol OS_xpc_object, OS_dispatch_source, OS_tcp_connection;
@class NETOnDemandJob, NSObject, NETProxyLookup, NETDuetGate, NETConnectionPool, NETLedBellyClient, NETClient, NSString;

@interface NETClientConnection : NETHelperEndpoint <NETProxyLookupDelegate, NETConnectionPoolEvaluationProtocol, NETDuetGateDelegate, NETLedBellyClientDelegate, NETDataProtectionStateObserver> {

	char _processName[16];
	NETOnDemandJob* _onDemandJob;
	BOOL _isConnected;
	BOOL _overrideSatisfied;
	BOOL _attemptedAndFailed;
	BOOL _isLoopback;
	BOOL _isIPv6LinkLocal;
	BOOL _isPush;
	BOOL _isWaldo;
	BOOL _isCellFallbackWhitelisted;
	BOOL _isDNS;
	BOOL _notifiedCellBlocked;
	BOOL _wifiInUse;
	BOOL _wifiInDemand;
	BOOL _vpnAlwaysRequired;
	BOOL _proxyOutstanding;
	BOOL _duetOutstanding;
	BOOL _ledbellyOutstanding;
	BOOL _connectionPoolOutstanding;
	BOOL _isBonjour;
	BOOL _mptcpCellAttempted;
	BOOL _ccTimerSuspended;
	unsigned char _ccTimerSlot;
	unsigned char _ccTimerSlotStart;
	BOOL _ccPowerNapXPCActivityScheduled;
	unsigned _sleepAssertionOutstanding;
	unsigned _tcpConnectResult;
	unsigned _vpnDialOutstanding;
	unsigned _evaluateOutstanding;
	unsigned _attemptOutstanding;
	int _lastAttemptError;
	NSObject*<OS_xpc_object> _parameters;
	NSObject*<OS_xpc_object> _reachability;
	NSObject*<OS_xpc_object> _details;
	NSObject*<OS_xpc_object> _proxyBundle;
	unsigned long long _start;
	NSObject*<OS_xpc_object> _connectionEntry;
	NSObject*<OS_xpc_object> _dnsName;
	unsigned long long _duetLastQueryTime;
	NSObject*<OS_xpc_object> _flowDivertToken;
	NETProxyLookup* _proxyLookup;
	NETDuetGate* _duetGate;
	NSObject*<OS_dispatch_source> _ccTimer;
	long long _ccTimerInterval;
	power_policy_s* _ccPowerPolicy;
	NSObject*<OS_xpc_object> _ccPowerNapXPCActivityID;
	fallback_report_sRef _fallbackReport;
	unsigned long long _connectReportTime;
	NSObject*<OS_tcp_connection> _tcpConnection;
	unsigned long long _previousReachabilityHash;
	unsigned long long _reachabilitySentTimestamp;
	vpn_sRef _pendingVPN;
	NSObject*<OS_xpc_object> _pendingDNSFailRequest;
	NETConnectionPool* _connectionPool;
	NETLedBellyClient* _ledBellyClient;

}

@property (retain) NSObject*<OS_xpc_object> parameters;                           //@synthesize parameters=_parameters - In the implementation block
@property (retain) NSObject*<OS_xpc_object> reachability;                         //@synthesize reachability=_reachability - In the implementation block
@property (retain) NSObject*<OS_xpc_object> details;                              //@synthesize details=_details - In the implementation block
@property (retain) NSObject*<OS_xpc_object> proxyBundle;                          //@synthesize proxyBundle=_proxyBundle - In the implementation block
@property (readonly) long long poolPriority; 
@property (assign) BOOL isConnected;                                              //@synthesize isConnected=_isConnected - In the implementation block
@property (assign,nonatomic) BOOL overrideSatisfied;                              //@synthesize overrideSatisfied=_overrideSatisfied - In the implementation block
@property (assign) BOOL attemptedAndFailed;                                       //@synthesize attemptedAndFailed=_attemptedAndFailed - In the implementation block
@property (retain) NETOnDemandJob * onDemandJob; 
@property (retain) NETClient * client; 
@property (assign) unsigned long long start;                                      //@synthesize start=_start - In the implementation block
@property (retain) NSObject*<OS_xpc_object> connectionEntry;                      //@synthesize connectionEntry=_connectionEntry - In the implementation block
@property (nonatomic,retain) NSObject*<OS_xpc_object> dnsName;                    //@synthesize dnsName=_dnsName - In the implementation block
@property (assign) unsigned long long duetLastQueryTime;                          //@synthesize duetLastQueryTime=_duetLastQueryTime - In the implementation block
@property (retain) NSObject*<OS_xpc_object> flowDivertToken;                      //@synthesize flowDivertToken=_flowDivertToken - In the implementation block
@property (retain) NETProxyLookup * proxyLookup;                                  //@synthesize proxyLookup=_proxyLookup - In the implementation block
@property (retain) NETDuetGate * duetGate;                                        //@synthesize duetGate=_duetGate - In the implementation block
@property (assign,nonatomic) unsigned sleepAssertionOutstanding;                  //@synthesize sleepAssertionOutstanding=_sleepAssertionOutstanding - In the implementation block
@property (assign,nonatomic) BOOL isLoopback;                                     //@synthesize isLoopback=_isLoopback - In the implementation block
@property (assign,nonatomic) BOOL isIPv6LinkLocal;                                //@synthesize isIPv6LinkLocal=_isIPv6LinkLocal - In the implementation block
@property (assign,nonatomic) BOOL isPush;                                         //@synthesize isPush=_isPush - In the implementation block
@property (assign,nonatomic) BOOL isWaldo;                                        //@synthesize isWaldo=_isWaldo - In the implementation block
@property (assign,nonatomic) BOOL isCellFallbackWhitelisted;                      //@synthesize isCellFallbackWhitelisted=_isCellFallbackWhitelisted - In the implementation block
@property (assign,nonatomic) BOOL isDNS;                                          //@synthesize isDNS=_isDNS - In the implementation block
@property (assign,nonatomic) BOOL notifiedCellBlocked;                            //@synthesize notifiedCellBlocked=_notifiedCellBlocked - In the implementation block
@property (assign,nonatomic) BOOL wifiInUse;                                      //@synthesize wifiInUse=_wifiInUse - In the implementation block
@property (assign,nonatomic) BOOL wifiInDemand;                                   //@synthesize wifiInDemand=_wifiInDemand - In the implementation block
@property (assign,nonatomic) BOOL vpnAlwaysRequired;                              //@synthesize vpnAlwaysRequired=_vpnAlwaysRequired - In the implementation block
@property (assign,nonatomic) BOOL proxyOutstanding;                               //@synthesize proxyOutstanding=_proxyOutstanding - In the implementation block
@property (assign,nonatomic) BOOL duetOutstanding;                                //@synthesize duetOutstanding=_duetOutstanding - In the implementation block
@property (assign,nonatomic) BOOL ledbellyOutstanding;                            //@synthesize ledbellyOutstanding=_ledbellyOutstanding - In the implementation block
@property (assign,nonatomic) BOOL connectionPoolOutstanding;                      //@synthesize connectionPoolOutstanding=_connectionPoolOutstanding - In the implementation block
@property (assign,nonatomic) BOOL isBonjour;                                      //@synthesize isBonjour=_isBonjour - In the implementation block
@property (assign,nonatomic) BOOL mptcpCellAttempted;                             //@synthesize mptcpCellAttempted=_mptcpCellAttempted - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> ccTimer;                         //@synthesize ccTimer=_ccTimer - In the implementation block
@property (assign) BOOL ccTimerSuspended;                                         //@synthesize ccTimerSuspended=_ccTimerSuspended - In the implementation block
@property (assign) long long ccTimerInterval;                                     //@synthesize ccTimerInterval=_ccTimerInterval - In the implementation block
@property (assign) unsigned char ccTimerSlot;                                     //@synthesize ccTimerSlot=_ccTimerSlot - In the implementation block
@property (assign) unsigned char ccTimerSlotStart;                                //@synthesize ccTimerSlotStart=_ccTimerSlotStart - In the implementation block
@property (assign) power_policy_s* ccPowerPolicy;                                 //@synthesize ccPowerPolicy=_ccPowerPolicy - In the implementation block
@property (retain) NSObject*<OS_xpc_object> ccPowerNapXPCActivityID;              //@synthesize ccPowerNapXPCActivityID=_ccPowerNapXPCActivityID - In the implementation block
@property (assign) BOOL ccPowerNapXPCActivityScheduled;                           //@synthesize ccPowerNapXPCActivityScheduled=_ccPowerNapXPCActivityScheduled - In the implementation block
@property (assign) fallback_report_sRef fallbackReport;                           //@synthesize fallbackReport=_fallbackReport - In the implementation block
@property (assign) unsigned long long connectReportTime;                          //@synthesize connectReportTime=_connectReportTime - In the implementation block
@property (retain) NSObject*<OS_tcp_connection> tcpConnection;                    //@synthesize tcpConnection=_tcpConnection - In the implementation block
@property (assign) unsigned tcpConnectResult;                                     //@synthesize tcpConnectResult=_tcpConnectResult - In the implementation block
@property (assign) unsigned long long previousReachabilityHash;                   //@synthesize previousReachabilityHash=_previousReachabilityHash - In the implementation block
@property (assign) unsigned long long reachabilitySentTimestamp;                  //@synthesize reachabilitySentTimestamp=_reachabilitySentTimestamp - In the implementation block
@property (assign) vpn_sRef pendingVPN;                                           //@synthesize pendingVPN=_pendingVPN - In the implementation block
@property (assign) unsigned vpnDialOutstanding;                                   //@synthesize vpnDialOutstanding=_vpnDialOutstanding - In the implementation block
@property (retain) NSObject*<OS_xpc_object> pendingDNSFailRequest;                //@synthesize pendingDNSFailRequest=_pendingDNSFailRequest - In the implementation block
@property (assign) unsigned evaluateOutstanding;                                  //@synthesize evaluateOutstanding=_evaluateOutstanding - In the implementation block
@property (assign) unsigned attemptOutstanding;                                   //@synthesize attemptOutstanding=_attemptOutstanding - In the implementation block
@property (assign) int lastAttemptError;                                          //@synthesize lastAttemptError=_lastAttemptError - In the implementation block
@property (retain) NETConnectionPool * connectionPool;                            //@synthesize connectionPool=_connectionPool - In the implementation block
@property (retain) NETLedBellyClient * ledBellyClient;                            //@synthesize ledBellyClient=_ledBellyClient - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) int pid; 
@property (readonly) unsigned long long cid; 
@property (nonatomic,readonly) const char* name; 
+(void)handleChange:(const char*)arg1 line:(int)arg2 ;
+(void)persistentDump;
+(void)setPersistentInterface:(int)arg1 ;
+(void)forEach:(/*^block*/id)arg1 ;
+(void)clearFallback;
+(void)handleThermalConditionChange;
+(id)findLaunchOnDemand:(const char*)arg1 label:(id)arg2 ;
+(id)findResumeToken:(unsigned long long)arg1 ;
-(void)destroy:(BOOL)arg1 ;
-(unsigned long long)cid;
-(void)switchToClient:(id)arg1 withID:(unsigned long long)arg2 ;
-(id)initWithParamters:(id)arg1 state:(id)arg2 client:(id)arg3 endpointID:(unsigned long long)arg4 start:(unsigned long long)arg5 ;
-(NSObject*<OS_tcp_connection>)tcpConnection;
-(void)setOnDemandJob:(NETOnDemandJob *)arg1 ;
-(void)handleMessage:(id)arg1 ofType:(unsigned long long)arg2 ;
-(void)ledBellyStateChanged:(id)arg1 ;
-(void)proxyLookupComplete:(id)arg1 ;
-(void)setIsDNS:(BOOL)arg1 ;
-(NSObject*<OS_xpc_object>)connectionEntry;
-(NSObject*<OS_xpc_object>)reachability;
-(void)incrementEvaluateOutstanding;
-(void)setReachabilityNotSatisfiedWithReason:(long long)arg1 format:(const char*)arg2 ;
-(NSObject*<OS_xpc_object>)flowDivertToken;
-(void)setFlowDivertToken:(NSObject*<OS_xpc_object>)arg1 ;
-(void)decrementEvaluateOutstanding;
-(vpn_sRef)pendingVPN;
-(void)setPendingVPN:(vpn_sRef)arg1 ;
-(BOOL)reevaluateActiveVPN:(vpn_sRef)arg1 forHostname:(const char*)arg2 ;
-(BOOL)isCellularBlocked;
-(void)reportCellularBlocked;
-(unsigned)vpnDialOutstanding;
-(void)setVpnDialOutstanding:(unsigned)arg1 ;
-(void)setPendingDNSFailRequest:(NSObject*<OS_xpc_object>)arg1 ;
-(unsigned char)ccTimerSlot;
-(void)setCcTimerSuspended:(BOOL)arg1 ;
-(void)handleCCTimerFired:(BOOL)arg1 ;
-(void)schedulePowerNapWithDelay:(long long)arg1 gracePeriod:(long long)arg2 ;
-(NSObject*<OS_dispatch_source>)ccTimer;
-(void)cleanupCCTimer;
-(BOOL)ccPowerNapXPCActivityScheduled;
-(void)cancelPowerNap;
-(BOOL)ccTimerSuspended;
-(void)setCcTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(void)setCcTimerSlot:(unsigned char)arg1 ;
-(power_policy_s*)ccPowerPolicy;
-(void)setCcPowerPolicy:(power_policy_s*)arg1 ;
-(NSObject*<OS_xpc_object>)ccPowerNapXPCActivityID;
-(void)setCcPowerNapXPCActivityID:(NSObject*<OS_xpc_object>)arg1 ;
-(void)setCcPowerNapXPCActivityScheduled:(BOOL)arg1 ;
-(unsigned)sleepAssertionOutstanding;
-(void)setSleepAssertionOutstanding:(unsigned)arg1 ;
-(void)decrementSleepAssertion;
-(NETLedBellyClient *)ledBellyClient;
-(void)setLedBellyClient:(NETLedBellyClient *)arg1 ;
-(void)setLastAttemptError:(int)arg1 ;
-(NSObject*<OS_xpc_object>)pendingDNSFailRequest;
-(void)decrementConnectionAttemptOutstanding;
-(unsigned)evaluateOutstanding;
-(void)setEvaluateOutstanding:(unsigned)arg1 ;
-(void)incrementConnectionAttemptOutstanding;
-(unsigned long long)previousReachabilityHash;
-(BOOL)isBonjour;
-(void)incrementSleepAssertion;
-(void)setReachabilitySentTimestamp:(unsigned long long)arg1 ;
-(void)handleReachabilityReply:(id)arg1 decrementSleepAssert:(BOOL)arg2 ;
-(void)setPreviousReachabilityHash:(unsigned long long)arg1 ;
-(unsigned)attemptOutstanding;
-(void)setAttemptOutstanding:(unsigned)arg1 ;
-(void)setAttemptedAndFailed:(BOOL)arg1 ;
-(BOOL)attemptedAndFailed;
-(int)lastAttemptError;
-(BOOL)notifiedCellBlocked;
-(NSObject*<OS_xpc_object>)proxyBundle;
-(void)setNotifiedCellBlocked:(BOOL)arg1 ;
-(BOOL)overrideSatisfied;
-(BOOL)duetOutstanding;
-(void)setDuetOutstanding:(BOOL)arg1 ;
-(NETDuetGate *)duetGate;
-(void)setDuetGate:(NETDuetGate *)arg1 ;
-(unsigned char)ccTimerSlotStart;
-(NSObject*<OS_xpc_object>)dnsName;
-(void)setVpnAlwaysRequired:(BOOL)arg1 ;
-(long long)interfaceAllowed:(int)arg1 withPath:(path_evaluation_s*)arg2 shouldNotify:(BOOL)arg3 ;
-(BOOL)isPush;
-(BOOL)isDNS;
-(void)setIsBonjour:(BOOL)arg1 ;
-(NETProxyLookup *)proxyLookup;
-(void)setProxyLookup:(NETProxyLookup *)arg1 ;
-(BOOL)proxyOutstanding;
-(void)setProxyOutstanding:(BOOL)arg1 ;
-(BOOL)vpnAlwaysRequired;
-(BOOL)isCellFallbackWhitelisted;
-(void)setLedbellyOutstanding:(BOOL)arg1 ;
-(BOOL)wifiInDemand;
-(void)setWifiInDemand:(BOOL)arg1 ;
-(void)setConnectionPoolOutstanding:(BOOL)arg1 ;
-(BOOL)connectionPoolOutstanding;
-(void)evaluatePathDataProtection:(path_evaluation_s*)arg1 ;
-(void)evaluatePathPowerPre:(path_evaluation_s*)arg1 ;
-(void)evaluatePathCellular:(path_evaluation_s*)arg1 ;
-(void)evaluatePathPersistent:(path_evaluation_s*)arg1 ;
-(void)evaluatePathVPN:(path_evaluation_s*)arg1 ;
-(void)evaluatePathDNS:(path_evaluation_s*)arg1 ;
-(void)evaluatePathRoute:(path_evaluation_s*)arg1 ;
-(void)evaluatePathProxy:(path_evaluation_s*)arg1 ;
-(void)evaluatePathPowerPost:(path_evaluation_s*)arg1 ;
-(void)evaluatePathMultipath:(path_evaluation_s*)arg1 ;
-(void)evaluatePathLedBelly:(path_evaluation_s*)arg1 ;
-(void)evaluatePathFallback:(path_evaluation_s*)arg1 ;
-(void)evaluatePathWiFi:(path_evaluation_s*)arg1 ;
-(void)evaluatePathDuet:(path_evaluation_s*)arg1 ;
-(void)evaluatePathConnectionPool:(path_evaluation_s*)arg1 ;
-(BOOL)isLoopback;
-(id)networkSignatureForInterface:(int)arg1 ;
-(unsigned long long)connectReportTime;
-(BOOL)isIPv6LinkLocal;
-(void)setMptcpCellAttempted:(BOOL)arg1 ;
-(BOOL)mptcpCellAttempted;
-(void)reportAWDStatsForMPTCP:(id)arg1 ;
-(void)setConnectReportTime:(unsigned long long)arg1 ;
-(id)scrubParametersForEntitlements:(id)arg1 ;
-(BOOL)startVPNForDNS:(const char*)arg1 msg:(id)arg2 sendRestartOnSuccess:(BOOL)arg3 ;
-(BOOL)startCellular:(id)arg1 ;
-(void)cancelCCWakeEvents;
-(void)setConnectionEntry:(NSObject*<OS_xpc_object>)arg1 ;
-(void)setIsLoopback:(BOOL)arg1 ;
-(void)setIsIPv6LinkLocal:(BOOL)arg1 ;
-(BOOL)isWaldo;
-(fallback_report_sRef)fallbackReport;
-(void)setFallbackReport:(fallback_report_sRef)arg1 ;
-(void)setReachability:(NSObject*<OS_xpc_object>)arg1 ;
-(NETOnDemandJob *)onDemandJob;
-(id)serialize;
-(void)evaluatePath:(path_evaluation_s*)arg1 ;
-(void)evaluateLedBellyConnected:(established_evaluation_s*)arg1 withPath:(path_evaluation_s*)arg2 ;
-(void)evaluateEstablishedRoutable:(established_evaluation_s*)arg1 withPath:(path_evaluation_s*)arg2 ;
-(void)evaluateEstablishedBetterRoute:(established_evaluation_s*)arg1 withPath:(path_evaluation_s*)arg2 ;
-(BOOL)wifiInUse;
-(void)setWifiInUse:(BOOL)arg1 ;
-(void)evaluateEstablishedMultipath:(path_evaluation_s*)arg1 ;
-(id)copyMatchingMultipathInterfaces:(established_evaluation_s*)arg1 path:(path_evaluation_s*)arg2 ;
-(void)handleStatsReport:(id)arg1 ;
-(void)handleMPTCPFailureReport:(id)arg1 ;
-(void)handleMPTCPResuming:(id)arg1 ;
-(void)handleMPTCPToTCPFallback:(id)arg1 ;
-(void)handleUpdate:(id)arg1 ;
-(void)handleConnectFail:(id)arg1 ;
-(void)handleDNSFail:(const char*)arg1 request:(id)arg2 ;
-(void)handleConnectReport:(id)arg1 ;
-(void)handleCopyState:(id)arg1 ;
-(void)handleDestinationReport:(id)arg1 ;
-(void)handleDestinationFallback:(id)arg1 ;
-(void)handleMessageForLedbellyFd:(id)arg1 ;
-(void)handleConnectionRetry:(id)arg1 ;
-(void)setIsPush:(BOOL)arg1 ;
-(void)setIsCellFallbackWhitelisted:(BOOL)arg1 ;
-(void)setIsWaldo:(BOOL)arg1 ;
-(void)initializeCCWakeEvents;
-(long long)ccTimerInterval;
-(unsigned long long)reachabilitySentTimestamp;
-(void)poolPriorityEvaluated:(BOOL)arg1 ;
-(void)duetGateChanged:(id)arg1 ;
-(void)dataProtectionStateChanged;
-(long long)poolPriority;
-(void)setOverrideSatisfied:(BOOL)arg1 ;
-(BOOL)needsLaunchOnDemand;
-(void)setProxyBundle:(NSObject*<OS_xpc_object>)arg1 ;
-(void)setDnsName:(NSObject*<OS_xpc_object>)arg1 ;
-(unsigned long long)duetLastQueryTime;
-(void)setDuetLastQueryTime:(unsigned long long)arg1 ;
-(BOOL)ledbellyOutstanding;
-(void)setCcTimerInterval:(long long)arg1 ;
-(void)setCcTimerSlotStart:(unsigned char)arg1 ;
-(void)setTcpConnection:(NSObject*<OS_tcp_connection>)arg1 ;
-(unsigned)tcpConnectResult;
-(void)setTcpConnectResult:(unsigned)arg1 ;
-(int)pid;
-(void)setStart:(unsigned long long)arg1 ;
-(void)setIsConnected:(BOOL)arg1 ;
-(void)setConnectionPool:(NETConnectionPool *)arg1 ;
-(NETConnectionPool *)connectionPool;
-(void)setDetails:(NSObject*<OS_xpc_object>)arg1 ;
-(NSObject*<OS_xpc_object>)details;
-(id)init;
-(void)dealloc;
-(unsigned long long)start;
-(NSString *)description;
-(const char*)name;
-(BOOL)isConnected;
-(const char*)processName;
-(void)resume;
-(NSObject*<OS_xpc_object>)parameters;
-(void)setParameters:(NSObject*<OS_xpc_object>)arg1 ;
-(void)evaluate;
@end

