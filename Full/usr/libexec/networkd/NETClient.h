/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:05:16 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/libexec/networkd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <networkd/networkd-Structs.h>
#import <networkd/NETWaldoClient.h>
#import <networkd/NETLedBellyTap.h>

@protocol OS_xpc_object, OS_dispatch_source;
@class NSObject, NSMutableSet, NETWaldo, NSString;

@interface NETClient : NSObject <NETWaldoClient, NETLedBellyTap> {

	BOOL _watchingFallback;
	BOOL _suspended;
	BOOL _reachabilityAllowedInDarkWake;
	BOOL _inFastFallback;
	BOOL _cellularBlocked;
	BOOL _sleepAsserting;
	BOOL _waldoClient;
	int _pid;
	unsigned _auditPort;
	unsigned _bootstrap;
	unsigned _powerAssertion;
	int _ccpTapFd;
	NSObject*<OS_xpc_object> _xname;
	NSObject*<OS_xpc_object> _uuid;
	NSObject*<OS_xpc_object> _bundle;
	NSObject*<OS_xpc_object> _connection;
	NSMutableSet* _endpoints;
	NSMutableSet* _sleepAssertEndpoints;
	unsigned long long _lastRequestTime;
	NSObject*<OS_dispatch_source> _idleTimer;
	NSObject*<OS_dispatch_source> _sleepAssertTimer;
	unsigned long long _transactionCount;
	NETWaldo* _waldo;
	NSMutableSet* _waldoWaiting;
	SCD_Struct_NE0 _auditToken;

}

@property (assign) int pid;                                                     //@synthesize pid=_pid - In the implementation block
@property (nonatomic,readonly) const char* name; 
@property (retain) NSObject*<OS_xpc_object> xname;                              //@synthesize xname=_xname - In the implementation block
@property (retain) NSObject*<OS_xpc_object> uuid;                               //@synthesize uuid=_uuid - In the implementation block
@property (retain) NSObject*<OS_xpc_object> bundle;                             //@synthesize bundle=_bundle - In the implementation block
@property (assign) BOOL watchingFallback; 
@property (assign) BOOL reachabilityAllowedInDarkWake;                          //@synthesize reachabilityAllowedInDarkWake=_reachabilityAllowedInDarkWake - In the implementation block
@property (assign) BOOL inFastFallback;                                         //@synthesize inFastFallback=_inFastFallback - In the implementation block
@property (assign) BOOL cellularBlocked;                                        //@synthesize cellularBlocked=_cellularBlocked - In the implementation block
@property (assign) BOOL suspended; 
@property (retain) NSObject*<OS_xpc_object> connection;                         //@synthesize connection=_connection - In the implementation block
@property (retain) NSMutableSet * endpoints;                                    //@synthesize endpoints=_endpoints - In the implementation block
@property (retain) NSMutableSet * sleepAssertEndpoints;                         //@synthesize sleepAssertEndpoints=_sleepAssertEndpoints - In the implementation block
@property (assign) BOOL sleepAsserting;                                         //@synthesize sleepAsserting=_sleepAsserting - In the implementation block
@property (assign) BOOL waldoClient;                                            //@synthesize waldoClient=_waldoClient - In the implementation block
@property (assign) SCD_Struct_NE0 auditToken;                                   //@synthesize auditToken=_auditToken - In the implementation block
@property (assign) unsigned auditPort;                                          //@synthesize auditPort=_auditPort - In the implementation block
@property (assign) unsigned bootstrap;                                          //@synthesize bootstrap=_bootstrap - In the implementation block
@property (assign) unsigned long long lastRequestTime;                          //@synthesize lastRequestTime=_lastRequestTime - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> idleTimer;                     //@synthesize idleTimer=_idleTimer - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> sleepAssertTimer;              //@synthesize sleepAssertTimer=_sleepAssertTimer - In the implementation block
@property (assign) unsigned long long transactionCount;                         //@synthesize transactionCount=_transactionCount - In the implementation block
@property (assign) unsigned powerAssertion;                                     //@synthesize powerAssertion=_powerAssertion - In the implementation block
@property (retain) NETWaldo * waldo;                                            //@synthesize waldo=_waldo - In the implementation block
@property (retain) NSMutableSet * waldoWaiting;                                 //@synthesize waldoWaiting=_waldoWaiting - In the implementation block
@property (assign) int ccpTapFd;                                                //@synthesize ccpTapFd=_ccpTapFd - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)dumpClients;
+(void)handleNew:(id)arg1 ;
+(int)evaluateTrustForCertificate:(id)arg1 subjectName:(id)arg2 queue:(id)arg3 completion:(/*^block*/id)arg4 ;
+(id)copyBundleForXPCConnection:(id)arg1 PID:(int)arg2 ;
+(void)forEach:(/*^block*/id)arg1 ;
+(id)createSecCertificateArrayFromXPCCertificateChain:(id)arg1 ;
+(id)getTrustEvaluationQueue;
+(id)copyPublicKeyBitsFromEvaluatedSecTrust:(SecTrustRef)arg1 ;
+(id)clientForPID:(int)arg1 ;
+(id)userEventAgentClient;
-(NSObject*<OS_dispatch_source>)idleTimer;
-(void)setIdleTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(void)addEndpoint:(id)arg1 ;
-(void)didReceiveWaldo:(id)arg1 ;
-(unsigned)auditPort;
-(void)setAuditPort:(unsigned)arg1 ;
-(unsigned)powerAssertion;
-(void)setPowerAssertion:(unsigned)arg1 ;
-(NSObject*<OS_dispatch_source>)sleepAssertTimer;
-(void)setSleepAssertTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(int)ccpTapFd;
-(void)setCcpTapFd:(int)arg1 ;
-(void)transactionEnd;
-(NSMutableSet *)endpoints;
-(void)setEndpoints:(NSMutableSet *)arg1 ;
-(void)handleTapClose;
-(BOOL)waldoClient;
-(void)setWaldoClient:(BOOL)arg1 ;
-(void)disableSleepAssert;
-(void)setWaldo:(NETWaldo *)arg1 ;
-(NSMutableSet *)waldoWaiting;
-(void)setWaldoWaiting:(NSMutableSet *)arg1 ;
-(void)ledbellyTapTx:(iovec*)arg1 count:(int)arg2 ;
-(void)handleLedbelly:(id)arg1 clientAddedOrRemoved:(id)arg2 message:(unsigned char)arg3 ;
-(void)respondToRequest:(id)arg1 response:(unsigned long long)arg2 ifindex:(int)arg3 delay:(long long)arg4 ;
-(void)transactionBegin;
-(void)respondToRequest:(id)arg1 withError:(unsigned long long)arg2 ;
-(void)respondToRequest:(id)arg1 withDictionary:(id)arg2 ;
-(NETWaldo *)waldo;
-(void)setLastRequestTime:(unsigned long long)arg1 ;
-(void)handleOpportunisticDisable:(id)arg1 ;
-(void)handleConnectionStart:(id)arg1 ;
-(id)endpointForID:(unsigned long long)arg1 ;
-(void)removeEndpoint:(id)arg1 ;
-(void)setWatchingFallback:(BOOL)arg1 ;
-(void)sendSettings;
-(void)handleIsCellular:(id)arg1 ;
-(void)handleSetPersistentInterface:(id)arg1 ;
-(void)handleSetPoolLimit:(id)arg1 ;
-(void)handleUserEventAgentCheckIn:(id)arg1 ;
-(void)handleUserEventAgentMap:(id)arg1 ;
-(void)handleUserEventAgentUnmap:(id)arg1 ;
-(void)handleCheckout:(id)arg1 ;
-(void)handleIsExpensive:(id)arg1 ;
-(void)handleSetExpensive:(id)arg1 ;
-(void)handleNotifyCellBlocked:(id)arg1 ;
-(void)handleUUIDForBundleID:(id)arg1 ;
-(void)handleMessageVerifyPeerCertificateAndCopyPublicKey:(id)arg1 ;
-(void)handleCopyWaldo:(id)arg1 ;
-(void)handleFetchCCPTap:(id)arg1 ;
-(void)handleRequest:(id)arg1 ;
-(void)handleRemove;
-(void)setReachabilityAllowedInDarkWake:(BOOL)arg1 ;
-(void)removeSleepAssertEndpoint:(id)arg1 ;
-(NSMutableSet *)sleepAssertEndpoints;
-(void)setSleepAssertEndpoints:(NSMutableSet *)arg1 ;
-(void)enableSleepAssert;
-(NSObject*<OS_xpc_object>)xname;
-(void)sendMessage:(id)arg1 replyHandler:(/*^block*/id)arg2 ;
-(void)sendMessage:(id)arg1 withDelay:(long long)arg2 ;
-(id)copyEntitlement:(const char*)arg1 ;
-(unsigned long long)transactionCount;
-(void)setTransactionCount:(unsigned long long)arg1 ;
-(unsigned long long)lastRequestTime;
-(BOOL)reachabilityAllowedInDarkWake;
-(BOOL)cellularBlocked;
-(BOOL)inFastFallback;
-(void)handleLedbelly:(id)arg1 inboundHeader:(id)arg2 payload:(id)arg3 to:(id)arg4 ;
-(void)handleLedbelly:(id)arg1 outboundMessage:(id)arg2 from:(id)arg3 ;
-(void)handleLedbelly:(id)arg1 clientAdded:(id)arg2 ;
-(void)handleLedbelly:(id)arg1 clientRemoved:(id)arg2 ;
-(void)handleLedbelly:(id)arg1 newState:(unsigned char)arg2 ;
-(void)addSleepAssertEndpoint:(id)arg1 ;
-(BOOL)watchingFallback;
-(void)getAuditToken:(SCD_Struct_NE0*)arg1 auditPort:(unsigned*)arg2 bootstrapPort:(unsigned*)arg3 ;
-(void)reportCellBlocked;
-(void)setXname:(NSObject*<OS_xpc_object>)arg1 ;
-(void)setInFastFallback:(BOOL)arg1 ;
-(void)setCellularBlocked:(BOOL)arg1 ;
-(BOOL)sleepAsserting;
-(void)setSleepAsserting:(BOOL)arg1 ;
-(NSObject*<OS_xpc_object>)uuid;
-(void)setUuid:(NSObject*<OS_xpc_object>)arg1 ;
-(BOOL)hasEntitlement:(const char*)arg1 ;
-(int)pid;
-(unsigned)bootstrap;
-(void)setBootstrap:(unsigned)arg1 ;
-(void)sendMessage:(id)arg1 ;
-(void)setPid:(int)arg1 ;
-(void)setConnection:(NSObject*<OS_xpc_object>)arg1 ;
-(NSObject*<OS_xpc_object>)connection;
-(void)setBundle:(NSObject*<OS_xpc_object>)arg1 ;
-(NSObject*<OS_xpc_object>)bundle;
-(SCD_Struct_NE0)auditToken;
-(id)initWithConnection:(id)arg1 ;
-(void)setAuditToken:(SCD_Struct_NE0)arg1 ;
-(id)init;
-(void)dealloc;
-(NSString *)description;
-(const char*)name;
-(BOOL)suspended;
-(void)setSuspended:(BOOL)arg1 ;
@end

