/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:05:16 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/libexec/networkd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_tcp_connection, OS_xpc_object;
@class NSObject, NETClient, NETClientConnection;

@interface NETOnDemandJob : NSObject {

	char _procname[16];
	int _state;
	int _pid;
	unsigned _result;
	NSObject*<OS_tcp_connection> _tcpConnection;
	NSObject*<OS_xpc_object> _label;
	NSObject*<OS_xpc_object> _parameters;
	NETClient* _client;
	NETClientConnection* _connection;

}

@property (assign) int state;                                               //@synthesize state=_state - In the implementation block
@property (assign) int pid;                                                 //@synthesize pid=_pid - In the implementation block
@property (assign) unsigned result;                                         //@synthesize result=_result - In the implementation block
@property (retain) NSObject*<OS_tcp_connection> tcpConnection;              //@synthesize tcpConnection=_tcpConnection - In the implementation block
@property (readonly) const char* name; 
@property (retain) NSObject*<OS_xpc_object> label;                          //@synthesize label=_label - In the implementation block
@property (retain) NSObject*<OS_xpc_object> parameters;                     //@synthesize parameters=_parameters - In the implementation block
@property (retain) NETClient * client;                                      //@synthesize client=_client - In the implementation block
@property (retain) NETClientConnection * connection;                        //@synthesize connection=_connection - In the implementation block
+(id)findByJobID:(unsigned long long)arg1 ;
+(void)addClientTokens:(id)arg1 ;
+(void)addClientToken:(const char*)arg1 token:(unsigned long long)arg2 ;
+(void)removeClientToken:(unsigned long long)arg1 ;
+(id)findByProcess:(const char*)arg1 label:(id)arg2 ;
+(unsigned long long)tokenForClient:(const char*)arg1 ;
+(id)copyClientTokens;
-(NSObject*<OS_tcp_connection>)tcpConnection;
-(void)setTcpConnection:(NSObject*<OS_tcp_connection>)arg1 ;
-(void)destroy;
-(int)pid;
-(void)setPid:(int)arg1 ;
-(void)setConnection:(NETClientConnection *)arg1 ;
-(void)setResult:(unsigned)arg1 ;
-(NETClientConnection *)connection;
-(id)initWithConnection:(id)arg1 ;
-(id)init;
-(void)dealloc;
-(id)description;
-(const char*)name;
-(void)setState:(int)arg1 ;
-(int)state;
-(void)run;
-(void)setLabel:(NSObject*<OS_xpc_object>)arg1 ;
-(NETClient *)client;
-(void)setClient:(NETClient *)arg1 ;
-(NSObject*<OS_xpc_object>)label;
-(unsigned)result;
-(NSObject*<OS_xpc_object>)parameters;
-(void)setParameters:(NSObject*<OS_xpc_object>)arg1 ;
@end

