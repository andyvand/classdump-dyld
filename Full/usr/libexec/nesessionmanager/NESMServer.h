/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:05:15 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/libexec/nesessionmanager
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <nesessionmanager/nesessionmanager-Structs.h>
#import <nesessionmanager/NESMPowerManagerDelegate.h>
#import <nesessionmanager/NESMSessionDelegate.h>

@protocol OS_dispatch_queue, OS_xpc_object, OS_dispatch_source;
@class NSString, NSObject, NSMutableDictionary, NESMPowerManager, NSUUID, NSDictionary, NESMSession;

@interface NESMServer : NSObject <NESMPowerManagerDelegate, NESMSessionDelegate> {

	int _sleepAckCount;
	int _pidToken;
	int _NWINotifyToken;
	int _onDemandPauseNotifyToken;
	int _userEventNotifyToken;
	NSString* _primaryLowerInterface;
	NSObject*<OS_dispatch_queue> _queue;
	NSObject*<OS_xpc_object> _listener;
	NSMutableDictionary* _sessions;
	NSMutableDictionary* _pendingSessionRequests;
	NESMPowerManager* _powerManager;
	NSObject*<OS_dispatch_source> _termSource;
	SCDynamicStoreRef _dynamicStore;
	NSUUID* _consoleUserUUID;
	NSObject*<OS_dispatch_source> _onDemandPauseTimerSource;
	NSDictionary* _savedInterfaceInfo;
	NESMSession* _alwaysOnVPNSession;
	long long _alwaysOnVPNSessionInstallState;
	NESMSession* _exclusiveEnterpriseVPNSession;
	long long _enterpriseVPNSessionInstallState;
	NESMSession* _personalVPNSession;
	long long _personalVPNSessionInstallState;
	NESMSession* _filterSession;
	long long _filterSessionInstallState;

}

@property (copy) NSString * primaryLowerInterface;                                      //@synthesize primaryLowerInterface=_primaryLowerInterface - In the implementation block
@property (readonly) NSObject*<OS_dispatch_queue> queue;                                //@synthesize queue=_queue - In the implementation block
@property (readonly) NSObject*<OS_xpc_object> listener;                                 //@synthesize listener=_listener - In the implementation block
@property (readonly) NSMutableDictionary * sessions;                                    //@synthesize sessions=_sessions - In the implementation block
@property (readonly) NSMutableDictionary * pendingSessionRequests;                      //@synthesize pendingSessionRequests=_pendingSessionRequests - In the implementation block
@property (retain) NESMPowerManager * powerManager;                                     //@synthesize powerManager=_powerManager - In the implementation block
@property (assign) int sleepAckCount;                                                   //@synthesize sleepAckCount=_sleepAckCount - In the implementation block
@property (assign) int pidToken;                                                        //@synthesize pidToken=_pidToken - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> termSource;                            //@synthesize termSource=_termSource - In the implementation block
@property (assign) int NWINotifyToken;                                                  //@synthesize NWINotifyToken=_NWINotifyToken - In the implementation block
@property (assign) int onDemandPauseNotifyToken;                                        //@synthesize onDemandPauseNotifyToken=_onDemandPauseNotifyToken - In the implementation block
@property (assign) int userEventNotifyToken;                                            //@synthesize userEventNotifyToken=_userEventNotifyToken - In the implementation block
@property (assign) SCDynamicStoreRef dynamicStore;                                      //@synthesize dynamicStore=_dynamicStore - In the implementation block
@property (retain) NSUUID * consoleUserUUID;                                            //@synthesize consoleUserUUID=_consoleUserUUID - In the implementation block
@property (assign) NSObject*<OS_dispatch_source> onDemandPauseTimerSource;              //@synthesize onDemandPauseTimerSource=_onDemandPauseTimerSource - In the implementation block
@property (retain) NSDictionary * savedInterfaceInfo;                                   //@synthesize savedInterfaceInfo=_savedInterfaceInfo - In the implementation block
@property (retain) NESMSession * alwaysOnVPNSession;                                    //@synthesize alwaysOnVPNSession=_alwaysOnVPNSession - In the implementation block
@property (assign) long long alwaysOnVPNSessionInstallState;                            //@synthesize alwaysOnVPNSessionInstallState=_alwaysOnVPNSessionInstallState - In the implementation block
@property (retain) NESMSession * exclusiveEnterpriseVPNSession;                         //@synthesize exclusiveEnterpriseVPNSession=_exclusiveEnterpriseVPNSession - In the implementation block
@property (assign) long long enterpriseVPNSessionInstallState;                          //@synthesize enterpriseVPNSessionInstallState=_enterpriseVPNSessionInstallState - In the implementation block
@property (retain) NESMSession * personalVPNSession;                                    //@synthesize personalVPNSession=_personalVPNSession - In the implementation block
@property (assign) long long personalVPNSessionInstallState;                            //@synthesize personalVPNSessionInstallState=_personalVPNSessionInstallState - In the implementation block
@property (retain) NESMSession * filterSession;                                         //@synthesize filterSession=_filterSession - In the implementation block
@property (assign) long long filterSessionInstallState;                                 //@synthesize filterSessionInstallState=_filterSessionInstallState - In the implementation block
+(id)sharedServer;
-(id)initPrivate;
-(void)acceptNewConnection:(id)arg1 ;
-(unsigned long long)onDemandPauseLevel;
-(void)setOnDemandPauseLevel:(unsigned long long)arg1 ;
-(void)handleWakeup;
-(char)handleSleep;
-(NSString *)primaryLowerInterface;
-(void)ackSleep;
-(void)requestUninstallForSession:(id)arg1 ;
-(void)requestInstallForSession:(id)arg1 withParentSession:(id)arg2 exclusive:(char)arg3 ;
-(void)handleSleepTime:(double)arg1 ;
-(int)pidToken;
-(void)registerForInterfaceEvents;
-(void)registerForPowerEvents;
-(void)registerForUserEvents;
-(void)deregisterForInterfaceEvents;
-(void)deregisterForPowerEvents;
-(void)deregisterForUserEvents;
-(void)addSessionClientWithConnection:(id)arg1 initialMessage:(id)arg2 ;
-(void)handleAgentClientConnection:(id)arg1 initialMessage:(id)arg2 ;
-(void)handleSessionQuery:(id)arg1 fromConnection:(id)arg2 ;
-(NSMutableDictionary *)pendingSessionRequests;
-(void)loadSessionWithType:(int)arg1 andConfigurationIdentifier:(id)arg2 ;
-(char)canSleep;
-(void)setSleepAckCount:(int)arg1 ;
-(int)sleepAckCount;
-(void)onDemandPauseOff;
-(NESMPowerManager *)powerManager;
-(NSDictionary *)savedInterfaceInfo;
-(void)setPrimaryLowerInterface:(NSString *)arg1 ;
-(id)copyInterfaceInfoFromNWIState:(nwi_stateRef)arg1 ;
-(void)setSavedInterfaceInfo:(NSDictionary *)arg1 ;
-(void)processInterfaceChanges:(id)arg1 ;
-(int)NWINotifyToken;
-(void)setNWINotifyToken:(int)arg1 ;
-(void)setPowerManager:(NESMPowerManager *)arg1 ;
-(void)setConsoleUserUUID:(NSUUID *)arg1 ;
-(int)userEventNotifyToken;
-(void)setUserEventNotifyToken:(int)arg1 ;
-(NESMSession *)alwaysOnVPNSession;
-(NESMSession *)personalVPNSession;
-(void)setPersonalVPNSession:(NESMSession *)arg1 ;
-(void)setAlwaysOnVPNSession:(NESMSession *)arg1 ;
-(NESMSession *)filterSession;
-(void)setFilterSession:(NESMSession *)arg1 ;
-(NESMSession *)exclusiveEnterpriseVPNSession;
-(void)setExclusiveEnterpriseVPNSession:(NESMSession *)arg1 ;
-(void)setAlwaysOnVPNSessionInstallState:(long long)arg1 ;
-(void)setFilterSessionInstallState:(long long)arg1 ;
-(void)setEnterpriseVPNSessionInstallState:(long long)arg1 ;
-(long long)personalVPNSessionInstallState;
-(void)setPersonalVPNSessionInstallState:(long long)arg1 ;
-(long long)enterpriseVPNSessionInstallState;
-(int)onDemandPauseNotifyToken;
-(NSObject*<OS_dispatch_source>)onDemandPauseTimerSource;
-(void)setOnDemandPauseTimerSource:(NSObject*<OS_dispatch_source>)arg1 ;
-(void)registerSession:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)deregisterSession:(id)arg1 ;
-(void)removeSessionWithType:(int)arg1 andConfigurationIdentifier:(id)arg2 ;
-(char)isOnDemandPauseLevelHard;
-(void)onDemandPauseHard;
-(void)onDemandPauseSoft;
-(void)setPidToken:(int)arg1 ;
-(NSObject*<OS_dispatch_source>)termSource;
-(void)setTermSource:(NSObject*<OS_dispatch_source>)arg1 ;
-(void)setOnDemandPauseNotifyToken:(int)arg1 ;
-(NSUUID *)consoleUserUUID;
-(long long)alwaysOnVPNSessionInstallState;
-(long long)filterSessionInstallState;
-(SCDynamicStoreRef)dynamicStore;
-(void)setDynamicStore:(SCDynamicStoreRef)arg1 ;
-(id)init;
-(void)stop;
-(void)start;
-(NSObject*<OS_dispatch_queue>)queue;
-(NSMutableDictionary *)sessions;
-(NSObject*<OS_xpc_object>)listener;
@end

