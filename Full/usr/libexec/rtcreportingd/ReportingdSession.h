/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:05:17 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/libexec/rtcreportingd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <rtcreportingd/rtcreportingd-Structs.h>
#import <rtcreportingd/ClientSessionInterface.h>

@protocol ReportingdSessionDelegate;
@class NSDictionary, NSMutableDictionary, NSString;

@interface ReportingdSession : NSObject <ClientSessionInterface> {

	unsigned _sessionID;
	NSDictionary* _sessionInfo;
	NSDictionary* _userInfo;
	NSDictionary* _frameworks;
	NSDictionary* _backends;
	NSMutableDictionary* _periodicServices;
	id<ReportingdSessionDelegate> _sessionDelegate;
	NSString* _combinedSessionIDString;

}

@property (assign) unsigned sessionID;                                  //@synthesize sessionID=_sessionID - In the implementation block
@property (copy) NSString * combinedSessionIDString;                    //@synthesize combinedSessionIDString=_combinedSessionIDString - In the implementation block
@property (nonatomic,readonly) NSDictionary * userInfo;                 //@synthesize userInfo=_userInfo - In the implementation block
@property (nonatomic,readonly) NSDictionary * sessionInfo;              //@synthesize sessionInfo=_sessionInfo - In the implementation block
+(void)sendMessageWithSessionInfo:(id)arg1 userInfo:(id)arg2 storebag:(id)arg3 category:(unsigned short)arg4 type:(unsigned short)arg5 payload:(id)arg6 ;
-(void)setSessionInfo:(id)arg1 userInfo:(id)arg2 frameworksToCheck:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)startConfigWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)fetchStatesWithUserInfo:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)fetchDisplayURL:(/*^block*/id)arg1 ;
-(void)sendMessageWithCategory:(unsigned short)arg1 type:(unsigned short)arg2 payload:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)flushMessagesWithReply:(/*^block*/id)arg1 ;
-(void)uploadFileAtPath:(id)arg1 extensionToken:(char*)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)uploadLogData:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)sendMessageWithSessionInfo:(id)arg1 userInfo:(id)arg2 category:(unsigned short)arg3 type:(unsigned short)arg4 payload:(id)arg5 reply:(/*^block*/id)arg6 ;
-(id)sendMessageWithCategory:(unsigned short)arg1 type:(unsigned short)arg2 payload:(id)arg3 error:(id)arg4 ;
-(void)setCombinedSessionIDString:(NSString *)arg1 ;
-(id)flushMessages;
-(NSString *)combinedSessionIDString;
-(void)internalSendMessage:(id)arg1 timestamp:(const timeval*)arg2 method:(unsigned short)arg3 respCode:(unsigned short)arg4 ;
-(void)receivedUserInfo:(id)arg1 ;
-(void)createBackendsWithStorebag:(id)arg1 ;
-(id)fetchReportingStates;
-(void)uploadFileWithURL:(id)arg1 extensionToken:(char*)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)updateReportingStates;
-(id)initWithSessionDelegate:(id)arg1 ;
-(int)getSessionHierarchy;
-(NSDictionary *)sessionInfo;
-(void)dealloc;
-(NSDictionary *)userInfo;
-(unsigned)sessionID;
-(void)setSessionID:(unsigned)arg1 ;
@end

