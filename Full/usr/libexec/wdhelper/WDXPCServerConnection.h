/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:05:18 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/libexec/wdhelper
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class WDXPCSubsystem, NSXPCConnection;

@interface WDXPCServerConnection : NSObject {

	WDXPCSubsystem* _subsystem;
	NSXPCConnection* _connection;
	unsigned long long _subscriptions;

}

@property (assign,nonatomic,__weak) NSXPCConnection * connection;              //@synthesize connection=_connection - In the implementation block
@property (nonatomic,readonly) unsigned long long subscriptions;               //@synthesize subscriptions=_subscriptions - In the implementation block
-(id)initWithSubsystem:(id)arg1 ;
-(void)queryEventSubscriptionsWithReply:(/*^block*/id)arg1 ;
-(void)setEventSubscriptions:(unsigned long long)arg1 reply:(/*^block*/id)arg2 ;
-(void)createMiniDiagnosticsReportUsingTemporaryDirectory:(id)arg1 interfaceName:(id)arg2 authorizationData:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)createBasicDiagnosticsReportUsingTemporaryDirectory:(id)arg1 interfaceName:(id)arg2 authorizationData:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)createDiagnosticsReportUsingTemporaryDirectory:(id)arg1 interfaceName:(id)arg2 authorizationData:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)setDNSServerAddresses:(id)arg1 searchDomains:(id)arg2 serviceID:(id)arg3 authorizationData:(id)arg4 reply:(/*^block*/id)arg5 ;
-(void)configureIPv4ManuallyWithIPAddress:(id)arg1 routerAddress:(id)arg2 subnetMask:(id)arg3 serviceID:(id)arg4 authorizationData:(id)arg5 reply:(/*^block*/id)arg6 ;
-(void)configureIPv4UsingDHCPWithServiceID:(id)arg1 authorizationData:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)configureIPv6ManuallyWithIPAddress:(id)arg1 router:(id)arg2 prefixLength:(id)arg3 serviceID:(id)arg4 authorizationData:(id)arg5 reply:(/*^block*/id)arg6 ;
-(void)configureIPv6AutomaticallyWithServiceID:(id)arg1 authorizationData:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)queryWiFiLoggingEnabledWithAuthorizationData:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)setWiFiLoggingEnabled:(char)arg1 authorizationData:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)queryEAPOLLoggingEnabledWithAuthorizationData:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)setEAPOLLoggingEnabled:(char)arg1 authorizationData:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)queryDHCPLoggingEnabledWithAuthorizationData:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)setDHCPLoggingEnabled:(char)arg1 authorizationData:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)queryDNSLoggingEnabledWithAuthorizationData:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)setDNSLoggingEnabled:(char)arg1 authorizationData:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)queryOpenDirectoryLoggingEnabledWithAuthorizationData:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)setOpenDirectoryLoggingEnabled:(char)arg1 authorizationData:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)startFrameCaptureInMonitorModeWithSaveFilePath:(id)arg1 interfaceName:(id)arg2 authorizationData:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)startFrameCaptureWithDataLinkType:(long long)arg1 promiscuousMode:(char)arg2 interfaceName:(id)arg3 authorizationData:(id)arg4 reply:(/*^block*/id)arg5 ;
-(void)stopFrameCaptureWithAuthorizationData:(id)arg1 reply:(/*^block*/id)arg2 ;
-(unsigned long long)subscriptions;
-(void)setConnection:(NSXPCConnection *)arg1 ;
-(NSXPCConnection *)connection;
-(void)dealloc;
@end

