/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:05:15 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/libexec/nehelper
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <nehelper/nehelper-Structs.h>
@class NSArray, NSString, NSDictionary, NSObject, NSMutableArray;

@interface NEHelperNetworkDetection : NSObject {

	char _redirectQueryActive;
	char _networkChanged;
	char _installedPolicies;
	int _nextDNSServiceID;
	int _sessionManagerRunningPid;
	NEPolicy_sRef _policySession;
	NSArray* _currentConfigurations;
	NSString* _primaryInterfaceName;
	NSString* _primaryInterfaceServiceID;
	NSDictionary* _primaryInterfaceDNS;
	long long _primaryInterfaceType;
	NSString* _curDNSDomain;
	NSArray* _curDNSServers;
	long long _configurationGeneration;
	NSObject*<OS_dispatch_queue> _queue;
	DNSServiceRef_tRef _redirectQuery;
	NSMutableArray* _staleOnDemandDNSKeys;
	unsigned long long _onDemandPauseLevel;
	NSArray* _captivePlugins;

}

@property (assign) NEPolicy_sRef policySession;                        //@synthesize policySession=_policySession - In the implementation block
@property (retain) NSArray * currentConfigurations;                    //@synthesize currentConfigurations=_currentConfigurations - In the implementation block
@property (retain) NSString * primaryInterfaceName;                    //@synthesize primaryInterfaceName=_primaryInterfaceName - In the implementation block
@property (retain) NSString * primaryInterfaceServiceID;               //@synthesize primaryInterfaceServiceID=_primaryInterfaceServiceID - In the implementation block
@property (retain) NSDictionary * primaryInterfaceDNS;                 //@synthesize primaryInterfaceDNS=_primaryInterfaceDNS - In the implementation block
@property (assign) long long primaryInterfaceType;                     //@synthesize primaryInterfaceType=_primaryInterfaceType - In the implementation block
@property (retain) NSString * curDNSDomain;                            //@synthesize curDNSDomain=_curDNSDomain - In the implementation block
@property (retain) NSArray * curDNSServers;                            //@synthesize curDNSServers=_curDNSServers - In the implementation block
@property (assign) long long configurationGeneration;                  //@synthesize configurationGeneration=_configurationGeneration - In the implementation block
@property (readonly) NSObject*<OS_dispatch_queue> queue;               //@synthesize queue=_queue - In the implementation block
@property (assign) char redirectQueryActive;                           //@synthesize redirectQueryActive=_redirectQueryActive - In the implementation block
@property (assign) DNSServiceRef_tRef redirectQuery;                   //@synthesize redirectQuery=_redirectQuery - In the implementation block
@property (retain) NSMutableArray * staleOnDemandDNSKeys;              //@synthesize staleOnDemandDNSKeys=_staleOnDemandDNSKeys - In the implementation block
@property (assign) int nextDNSServiceID;                               //@synthesize nextDNSServiceID=_nextDNSServiceID - In the implementation block
@property (assign) unsigned long long onDemandPauseLevel;              //@synthesize onDemandPauseLevel=_onDemandPauseLevel - In the implementation block
@property (retain) NSArray * captivePlugins;                           //@synthesize captivePlugins=_captivePlugins - In the implementation block
@property (assign) int sessionManagerRunningPid;                       //@synthesize sessionManagerRunningPid=_sessionManagerRunningPid - In the implementation block
@property (assign) char networkChanged;                                //@synthesize networkChanged=_networkChanged - In the implementation block
@property (assign) char installedPolicies;                             //@synthesize installedPolicies=_installedPolicies - In the implementation block
+(id)networkDetectionWithPolicySessionSocket:(int)arg1 ;
-(NSArray *)currentConfigurations;
-(void)setCurrentConfigurations:(NSArray *)arg1 ;
-(void)checkNetwork:(char)arg1 ;
-(void)setPolicySession:(NEPolicy_sRef)arg1 ;
-(NEPolicy_sRef)policySession;
-(id)initWithPolicySessionSocket:(int)arg1 ;
-(void)setStaleOnDemandDNSKeys:(NSMutableArray *)arg1 ;
-(void)setNextDNSServiceID:(int)arg1 ;
-(int)nextDNSServiceID;
-(NSMutableArray *)staleOnDemandDNSKeys;
-(DNSServiceRef_tRef)redirectQuery;
-(void)setRedirectQuery:(DNSServiceRef_tRef)arg1 ;
-(char)redirectQueryActive;
-(void)setRedirectQueryActive:(char)arg1 ;
-(void)finishDNSRedirectionDetection;
-(void)setInstalledPolicies:(char)arg1 ;
-(unsigned long long)onDemandPauseLevel;
-(char)networkChanged;
-(void)startDNSRedirectionDetection;
-(int)installDNSServers:(id)arg1 forService:(id)arg2 interfaceName:(id)arg3 ;
-(void)stopConfig:(id)arg1 withType:(int)arg2 ;
-(char)resetPrimaryInterfaceValues:(id)arg1 ;
-(long long)primaryInterfaceType;
-(NSString *)curDNSDomain;
-(NSArray *)curDNSServers;
-(void)applyOnDemandActionForConfig:(id)arg1 rule:(id)arg2 userUUID:(id)arg3 ;
-(void)setPrimaryInterfaceName:(NSString *)arg1 ;
-(NSString *)primaryInterfaceServiceID;
-(void)setPrimaryInterfaceServiceID:(NSString *)arg1 ;
-(NSDictionary *)primaryInterfaceDNS;
-(void)setPrimaryInterfaceDNS:(NSDictionary *)arg1 ;
-(void)setCurDNSDomain:(NSString *)arg1 ;
-(void)setCurDNSServers:(NSArray *)arg1 ;
-(void)setPrimaryInterfaceType:(long long)arg1 ;
-(NSArray *)captivePlugins;
-(void)setCaptivePlugins:(NSArray *)arg1 ;
-(void)setNetworkChanged:(char)arg1 ;
-(long long)configurationGeneration;
-(void)setConfigurationGeneration:(long long)arg1 ;
-(void)setOnDemandPauseLevel:(unsigned long long)arg1 ;
-(int)sessionManagerRunningPid;
-(void)setSessionManagerRunningPid:(int)arg1 ;
-(char)resetCaptivePlugins;
-(void)storeCurrentDNSConfigurations;
-(char)shouldSetDropAll;
-(void)startConfig:(id)arg1 withType:(int)arg2 ;
-(char)isEnabledForPluginType:(id)arg1 ;
-(long long)evaluateOnDemandForConfig:(id)arg1 vpn:(id)arg2 userUUID:(id)arg3 ;
-(void)installAppRulesForConfig:(id)arg1 appVPN:(id)arg2 userUUID:(id)arg3 log:(char)arg4 ;
-(void)installSigningIDsFromConfigurations:(id)arg1 ;
-(void)uninstallStaleDNSConfigurations;
-(char)installedPolicies;
-(void)addNEAgentSkipPolicy;
-(void)receiveDNSRedirectionAddress:(const sockaddr*)arg1 flags:(unsigned)arg2 error:(int)arg3 ;
-(NSString *)primaryInterfaceName;
-(void)dealloc;
-(NSObject*<OS_dispatch_queue>)queue;
@end

