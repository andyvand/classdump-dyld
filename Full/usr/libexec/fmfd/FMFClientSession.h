/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 4:05:13 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/libexec/fmfd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <fmfd/ClientSession.h>
#import <fmfd/FMFXPCInternalServerProtocol.h>

@class NSString, NSMutableSet, NSSet;

@interface FMFClientSession : ClientSession <FMFXPCInternalServerProtocol> {

	char _blockingDialogs;
	NSString* _clientBundleId;
	NSMutableSet* __handlesInternal;

}

@property (readonly) id<NSXPCProxyCreating><FMFXPCInternalClientProtocol> clientProxy; 
@property (readonly) NSSet * handles; 
@property (retain) NSString * clientBundleId;                                                       //@synthesize clientBundleId=_clientBundleId - In the implementation block
@property (assign) char blockingDialogs;                                                            //@synthesize blockingDialogs=_blockingDialogs - In the implementation block
@property (retain) NSMutableSet * _handlesInternal;                                                 //@synthesize _handlesInternal=__handlesInternal - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(NSString *)clientBundleId;
-(void)set_handlesInternal:(NSMutableSet *)arg1 ;
-(id<NSXPCProxyCreating><FMFXPCInternalClientProtocol>)clientProxy;
-(void)upselliCloudIfNeeded;
-(double)_alertTimeoutInterval;
-(NSMutableSet *)_handlesInternal;
-(void)sendFMFIDSPacketsForHandleIdToMappingIdentifiers:(id)arg1 ;
-(void)dispayOfferAlertDialogsWithoutRepeatForError:(id)arg1 ;
-(char)blockingDialogs;
-(void)setBlockingDialogs:(char)arg1 ;
-(void)setClientBundleId:(NSString *)arg1 ;
-(void)sendFMFIDSPacket:(id)arg1 toHandle:(id)arg2 ;
-(oneway void)_iCloudAccountNameWithCompletion:(/*^block*/id)arg1 ;
-(oneway void)deviceSharingLocation:(/*^block*/id)arg1 ;
-(oneway void)allDevices:(/*^block*/id)arg1 ;
-(oneway void)removeDevice:(id)arg1 completion:(/*^block*/id)arg2 ;
-(oneway void)setExpiredInitTimestamp;
-(oneway void)fetchLocationForHandle:(id)arg1 callerId:(id)arg2 priority:(long long)arg3 completion:(/*^block*/id)arg4 ;
-(oneway void)fetchLocationForHandles:(id)arg1 callerId:(id)arg2 priority:(long long)arg3 completion:(/*^block*/id)arg4 ;
-(oneway void)locationForHandle:(id)arg1 completion:(/*^block*/id)arg2 ;
-(oneway void)isNetworkReachable:(/*^block*/id)arg1 ;
-(oneway void)getHandlesSharingLocationsWithMe:(/*^block*/id)arg1 ;
-(oneway void)getHandlesSharingLocationsWithMeWithGroupId:(id)arg1 completion:(/*^block*/id)arg2 ;
-(oneway void)getHandlesSharingMyLocation:(/*^block*/id)arg1 ;
-(oneway void)getHandlesSharingMyLocationWithGroupId:(id)arg1 completion:(/*^block*/id)arg2 ;
-(oneway void)setHideMyLocationEnabled:(char)arg1 completion:(/*^block*/id)arg2 ;
-(oneway void)isMyLocationEnabled:(/*^block*/id)arg1 ;
-(oneway void)canShareLocationWithHandle:(id)arg1 groupId:(id)arg2 callerId:(id)arg3 completion:(/*^block*/id)arg4 ;
-(oneway void)canGetLocationForHandle:(id)arg1 groupId:(id)arg2 callerId:(id)arg3 completion:(/*^block*/id)arg4 ;
-(oneway void)getPendingMappingPacketsForHandle:(id)arg1 groupId:(id)arg2 completion:(/*^block*/id)arg3 ;
-(oneway void)getOfferExpirationForHandle:(id)arg1 groupId:(id)arg2 callerId:(id)arg3 completion:(/*^block*/id)arg4 ;
-(oneway void)getHandlesWithPendingOffers:(/*^block*/id)arg1 ;
-(oneway void)getAllLocations:(/*^block*/id)arg1 ;
-(oneway void)extendFriendshipOfferToHandle:(id)arg1 groupId:(id)arg2 callerId:(id)arg3 endDate:(id)arg4 completion:(/*^block*/id)arg5 ;
-(oneway void)sendFriendshipInviteToHandle:(id)arg1 groupId:(id)arg2 callerId:(id)arg3 endDate:(id)arg4 completion:(/*^block*/id)arg5 ;
-(oneway void)approveFriendshipRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(oneway void)declineFriendshipRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(oneway void)stopSharingMyLocationWithHandle:(id)arg1 groupId:(id)arg2 callerId:(id)arg3 completion:(/*^block*/id)arg4 ;
-(oneway void)getPendingFriendshipRequestsWithCompletion:(/*^block*/id)arg1 ;
-(oneway void)sendFriendshipOfferToHandle:(id)arg1 groupId:(id)arg2 callerId:(id)arg3 endDate:(id)arg4 completion:(/*^block*/id)arg5 ;
-(oneway void)forceRefresh;
-(oneway void)startSharingMyLocationToFamilyMemberWithDSID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(oneway void)stopSharingMyLocationToFamilyMemberWithDSID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(oneway void)sessionWasCreatedRefresh;
-(oneway void)_setClientBundleId:(id)arg1 ;
-(oneway void)addFriendHandles:(id)arg1 ;
-(oneway void)removeFriendHandles:(id)arg1 ;
-(oneway void)getCurrentTrackedHandles:(/*^block*/id)arg1 ;
-(oneway void)importMappingPacket:(id)arg1 completion:(/*^block*/id)arg2 ;
-(oneway void)invalidateMappingPackets:(id)arg1 completion:(/*^block*/id)arg2 ;
-(oneway void)sendFriendshipOfferToHandles:(id)arg1 groupId:(id)arg2 callerId:(id)arg3 endDate:(id)arg4 completion:(/*^block*/id)arg5 ;
-(oneway void)stopSharingMyLocationWithHandles:(id)arg1 groupId:(id)arg2 callerId:(id)arg3 completion:(/*^block*/id)arg4 ;
-(oneway void)setActiveDevice:(id)arg1 completion:(/*^block*/id)arg2 ;
-(NSSet *)handles;
-(id)initWithConnection:(id)arg1 ;
-(NSString *)description;
@end

