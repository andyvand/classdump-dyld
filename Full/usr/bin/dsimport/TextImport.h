/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:55:19 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/bin/dsimport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol ImportDelegate;
@class ToolArgParser, NSString, ODSession, ODNode, NSDictionary, NSMutableArray, NSArray, NSMutableSet, NSMutableDictionary;

@interface TextImport : NSObject {

	id<ImportDelegate> _delegate;
	char myEscapeChar;
	char myEndRecordChar;
	char myEndFieldChar;
	char myEndValueChar;
	ToolArgParser* myArgParser;
	int myNumAttributes;
	NSString* myRecordType;
	id* myAttrNames;
	int* myAttrTypes;
	long long myInputFileLen;
	char* myBasePointer;
	long long myCurFileIndex;
	int myMergeType;
	int myUIDIndex;
	int myGroupIDIndex;
	int myCurID;
	NSString* myGroupID;
	ODSession* myODSession;
	ODNode* myODNode;
	ODNode* mySearchNode;
	NSDictionary* myUserPresetAttrValues;
	NSDictionary* myGroupPresetAttrValues;
	NSMutableArray* myRecordNamesToAddToGroups;
	NSMutableArray* myUserGUIDsToAddToGroups;
	NSArray* myShortNamesToAddToImportedGroups;
	NSArray* myGUIDsToAddToImportedGroups;
	NSMutableSet* myAllUniqueNames;
	NSMutableSet* myAllUniqueIDs;
	NSMutableDictionary* myForcedAttrValues;

}
-(void)setDupHandling:(id)arg1 ;
-(void)setupStandardUserRecord;
-(void)setupStandardGroupRecord;
-(char)parseRecordDescription:(char**)arg1 ;
-(long long)findRecordEnd:(long long)arg1 ;
-(char)importOpenFile;
-(id)getNextRecordDictionary;
-(void)convertFromShortNamesToGUIDs:(id)arg1 forAttribute:(id)arg2 ;
-(char)addOneRecord:(id)arg1 ;
-(void)addImportedUsersToGroups;
-(void)nestGroups:(id)arg1 ;
-(void)applyPresetToRecordDict:(id)arg1 ;
-(char)addRecord:(id)arg1 checkForDupes:(char)arg2 overWriteDupes:(char)arg3 ;
-(char)mergeRecord:(id)arg1 ;
-(char)recordNamesConflict:(id)arg1 ;
-(id)extractPasswordFromDictionary:(id)arg1 ;
-(id)extractPWPolicyFromDictionary:(id)arg1 ;
-(void)addIDtoRecord:(id)arg1 ;
-(void)setPassword:(id)arg1 andPolicy:(id)arg2 forRecord:(id)arg3 ;
-(long long)getNextAttributeValue:(long long)arg1 recEnd:(long long)arg2 oneValueStr:(char**)arg3 ;
-(void)applyUserPreset:(id)arg1 toRecordDict:(id)arg2 ;
-(void)applyGroupPreset:(id)arg1 toRecordDict:(id)arg2 ;
-(void)applyPresetValue:(id)arg1 fromDict:(id)arg2 toDict:(id)arg3 ;
-(void)partsFromHomeLocAttribute:(id)arg1 url:(id*)arg2 path:(id*)arg3 ;
-(id)homeLocAttributeFromURL:(id)arg1 path:(id)arg2 ;
-(id)initWithArgParser:(id)arg1 ;
-(char)import;
-(char)deleteRecord:(id)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(void)dealloc;
-(id)delegate;
@end

