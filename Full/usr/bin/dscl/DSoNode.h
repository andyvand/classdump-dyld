/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:55:19 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/bin/dscl
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <dscl/dscl-Structs.h>
@class DSoDirectory, NSString, DSoGroup, NSLock, NSArray;

@interface DSoNode : NSObject {

	DSoDirectory* mDirectory;
	NSString* mNodeName;
	char mIsAuthenticated;
	char mSupportsSetAttributeValues;
	unsigned mNodeRef;
	DSoGroup* mAdminGroup;
	NSLock* mCacheLock;
	NSArray* mTypeList;

}
-(unsigned)dsNodeReference;
-(id)initWithDir:(id)arg1 nodeRef:(unsigned)arg2 nodeName:(id)arg3 ;
-(id)findRecordNames:(id)arg1 ofType:(const char*)arg2 matchType:(int)arg3 ;
-(id)searchAttributes:(const char*)arg1 allowBinary:(char)arg2 ;
-(id)getAttributeFirstValue:(const char*)arg1 allowBinary:(char)arg2 ;
-(id)getAttribute:(const char*)arg1 allowBinary:(char)arg2 ;
-(char)_hasRecordsOfType:(const char*)arg1 ;
-(id)_findRecordsOfTypes:(id)arg1 withAttribute:(const char*)arg2 value:(id)arg3 matchType:(int)arg4 retrieveAttributes:(id)arg5 allowBinary:(char)arg6 ;
-(SCD_Struct_DS3)_findRecord:(id)arg1 ofType:(const char*)arg2 ;
-(id)findGroup:(id)arg1 ;
-(int)authenticateName:(id)arg1 withPassword:(id)arg2 authOnly:(char)arg3 ;
-(int)authenticateWithBufferItems:(id)arg1 authType:(const char*)arg2 authOnly:(char)arg3 ;
-(int)customCall:(int)arg1 sendData:(id)arg2 withAuthorization:(void*)arg3 ;
-(int)customCall:(int)arg1 inputData:(id)arg2 outputData:(id)arg3 ;
-(id)searchAttributes:(const char*)arg1 ;
-(id)getAttributeFirstValue:(const char*)arg1 ;
-(id)getAllAttributes;
-(id)getAllAttributesAllowingBinary:(char)arg1 ;
-(id)findRecordTypes;
-(char)hasRecordsOfType:(const char*)arg1 ;
-(id)findRecordNames:(id)arg1 andAttributes:(id)arg2 ofType:(const char*)arg3 matchType:(int)arg4 ;
-(id)findRecordNamesOfTypes:(id)arg1 withAttribute:(const char*)arg2 value:(id)arg3 matchType:(int)arg4 ;
-(id)findRecordsOfTypes:(id)arg1 withAttribute:(const char*)arg2 value:(id)arg3 matchType:(int)arg4 allowBinary:(char)arg5 ;
-(id)findRecordsOfTypes:(id)arg1 withAttribute:(const char*)arg2 value:(id)arg3 matchType:(int)arg4 ;
-(id)findRecordsOfTypes:(id)arg1 withAttribute:(const char*)arg2 value:(id)arg3 matchType:(int)arg4 retrieveAttributes:(id)arg5 allowBinary:(char)arg6 ;
-(id)findRecordsOfTypes:(id)arg1 withAttribute:(const char*)arg2 value:(id)arg3 matchType:(int)arg4 retrieveAttributes:(id)arg5 ;
-(id)findRecord:(id)arg1 ofType:(const char*)arg2 ;
-(id)findUser:(id)arg1 ;
-(id)newRecord:(id)arg1 ofType:(const char*)arg2 ;
-(int)authenticateWithBufferItems:(id)arg1 authType:(const char*)arg2 authOnly:(char)arg3 responseBufferItems:(id*)arg4 ;
-(int)customCall:(int)arg1 sendPropertyList:(id)arg2 withAuthorization:(void*)arg3 ;
-(int)customCall:(int)arg1 withAuthorization:(void*)arg2 ;
-(int)customCall:(int)arg1 sendItems:(id)arg2 outputData:(id)arg3 ;
-(int)customCall:(int)arg1 receiveData:(id)arg2 withAuthorization:(void*)arg3 sizeCall:(int)arg4 ;
-(char)usesMultiThreaded;
-(void)setUsesMultiThreaded:(char)arg1 ;
-(char)supportsSetAttributeValues;
-(void)setSupportsSetAttributeValues:(char)arg1 ;
-(int)authenticateName:(id)arg1 withPassword:(id)arg2 ;
-(id)adminGroup;
-(void)reopen;
-(id)getName;
-(id)getAttribute:(const char*)arg1 ;
-(id)init;
-(void)finalize;
-(void)dealloc;
-(id)description;
-(id)directory;
@end

