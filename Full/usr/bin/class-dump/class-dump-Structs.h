/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:55:17 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/bin/class-dump
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

typedef struct {
	int cputype;
	int cpusubtype;
} SCD_Struct_CD0;

typedef struct _NSZone* NSZoneRef;

typedef struct dyld_info_command {
	unsigned cmd;
	unsigned cmdsize;
	unsigned rebase_off;
	unsigned rebase_size;
	unsigned bind_off;
	unsigned bind_size;
	unsigned weak_bind_off;
	unsigned weak_bind_size;
	unsigned lazy_bind_off;
	unsigned lazy_bind_size;
	unsigned export_off;
	unsigned export_size;
} dyld_info_command;

typedef struct dylib {
	lc_str name;
	I) offset;
	unsigned timestamp;
	unsigned current_version;
	unsigned compatibility_version;
} dylib;

typedef struct dylib_command {
	unsigned cmd;
	unsigned cmdsize;
	dylib dylib;
} dylib_command;

typedef struct dylinker_command {
	unsigned cmd;
	unsigned cmdsize;
	lc_str name;
	I) offset;
} dylinker_command;

typedef struct dysymtab_command {
	unsigned cmd;
	unsigned cmdsize;
	unsigned ilocalsym;
	unsigned nlocalsym;
	unsigned iextdefsym;
	unsigned nextdefsym;
	unsigned iundefsym;
	unsigned nundefsym;
	unsigned tocoff;
	unsigned ntoc;
	unsigned modtaboff;
	unsigned nmodtab;
	unsigned extrefsymoff;
	unsigned nextrefsyms;
	unsigned indirectsymoff;
	unsigned nindirectsyms;
	unsigned extreloff;
	unsigned nextrel;
	unsigned locreloff;
	unsigned nlocrel;
} dysymtab_command;

typedef struct encryption_info_command {
	unsigned cmd;
	unsigned cmdsize;
	unsigned cryptoff;
	unsigned cryptsize;
	unsigned cryptid;
} encryption_info_command;

typedef struct linkedit_data_command {
	unsigned cmd;
	unsigned cmdsize;
	unsigned dataoff;
	unsigned datasize;
} linkedit_data_command;

typedef struct prebind_cksum_command {
	unsigned cmd;
	unsigned cmdsize;
	unsigned cksum;
} prebind_cksum_command;

typedef struct prebound_dylib_command {
	unsigned cmd;
	unsigned cmdsize;
	lc_str name;
	I) offset;
	unsigned nmodules;
	lc_str linked_modules;
	I) offset;
} prebound_dylib_command;

typedef struct routines_command {
	unsigned cmd;
	unsigned cmdsize;
	unsigned init_address;
	unsigned init_module;
	unsigned reserved1;
	unsigned reserved2;
	unsigned reserved3;
	unsigned reserved4;
	unsigned reserved5;
	unsigned reserved6;
} routines_command;

typedef struct routines_command_64 {
	unsigned cmd;
	unsigned cmdsize;
	unsigned long long init_address;
	unsigned long long init_module;
	unsigned long long reserved1;
	unsigned long long reserved2;
	unsigned long long reserved3;
	unsigned long long reserved4;
	unsigned long long reserved5;
	unsigned long long reserved6;
} routines_command_64;

typedef struct rpath_command {
	unsigned cmd;
	unsigned cmdsize;
	lc_str path;
	I) offset;
} rpath_command;

typedef struct segment_command {
	unsigned cmd;
	unsigned cmdsize;
	char segname[16];
	unsigned vmaddr;
	unsigned vmsize;
	unsigned fileoff;
	unsigned filesize;
	int maxprot;
	int initprot;
	unsigned nsects;
	unsigned flags;
} segment_command;

typedef struct segment_command_64 {
	unsigned cmd;
	unsigned cmdsize;
	char segname[16];
	unsigned long long vmaddr;
	unsigned long long vmsize;
	unsigned long long fileoff;
	unsigned long long filesize;
	int maxprot;
	int initprot;
	unsigned nsects;
	unsigned flags;
} segment_command_64;

typedef struct sub_client_command {
	unsigned cmd;
	unsigned cmdsize;
	lc_str client;
	I) offset;
} sub_client_command;

typedef struct sub_framework_command {
	unsigned cmd;
	unsigned cmdsize;
	lc_str umbrella;
	I) offset;
} sub_framework_command;

typedef struct sub_library_command {
	unsigned cmd;
	unsigned cmdsize;
	lc_str sub_library;
	I) offset;
} sub_library_command;

typedef struct sub_umbrella_command {
	unsigned cmd;
	unsigned cmdsize;
	lc_str sub_umbrella;
	I) offset;
} sub_umbrella_command;

typedef struct symtab_command {
	unsigned cmd;
	unsigned cmdsize;
	unsigned symoff;
	unsigned nsyms;
	unsigned stroff;
	unsigned strsize;
} symtab_command;

typedef struct twolevel_hints_command {
	unsigned cmd;
	unsigned cmdsize;
	unsigned offset;
	unsigned nhints;
} twolevel_hints_command;

typedef struct load_command {
	unsigned cmd;
	unsigned cmdsize;
} load_command;

typedef struct uuid_command {
	unsigned cmd;
	unsigned cmdsize;
	unsigned char uuid[16];
} uuid_command;

typedef struct __CFUUID* CFUUIDRef;

typedef struct version_min_command {
	unsigned cmd;
	unsigned cmdsize;
	unsigned version;
	unsigned sdk;
} version_min_command;

typedef struct section {
	char sectname[16];
	char segname[16];
	unsigned addr;
	unsigned size;
	unsigned offset;
	unsigned align;
	unsigned reloff;
	unsigned nreloc;
	unsigned flags;
	unsigned reserved1;
	unsigned reserved2;
} section;

typedef struct section_64 {
	char sectname[16];
	char segname[16];
	unsigned long long addr;
	unsigned long long size;
	unsigned offset;
	unsigned align;
	unsigned reloff;
	unsigned nreloc;
	unsigned flags;
	unsigned reserved1;
	unsigned reserved2;
	unsigned reserved3;
} section_64;

typedef struct nlist_64 {
	/*function pointer*/void* n_un;
	I) n_strx;
	unsigned char n_type;
	unsigned char n_sect;
	unsigned short n_desc;
	unsigned long long n_value;
} nlist_64;

typedef struct relocation_info {
	int r_address;
	unsigned r_symbolnum : 24;
	unsigned r_pcrel : 1;
	unsigned r_length : 2;
	unsigned r_extern : 1;
	unsigned r_type : 4;
} relocation_info;

typedef struct entry_point_command {
	unsigned cmd;
	unsigned cmdsize;
	unsigned long long entryoff;
	unsigned long long stacksize;
} entry_point_command;

typedef struct source_version_command {
	unsigned cmd;
	unsigned cmdsize;
	unsigned long long version;
} source_version_command;

