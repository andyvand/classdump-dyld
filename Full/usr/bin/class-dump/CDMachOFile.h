/*
* This header is generated by classdump-dyld 0.7
* on Sunday, February 15, 2015 at 3:55:17 AM Central European Standard Time
* Operating System: Version 10.10.2 (Build 14C109)
* Image Source: /usr/bin/class-dump
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <class-dump/class-dump-Structs.h>
#import <class-dump/CDFile.h>

@class NSArray, CDLCSymbolTable, CDLCDynamicSymbolTable, CDLCDyldInfo, CDLCDylib, CDLCVersionMinimum, CDLCSourceVersion, NSString;

@interface CDMachOFile : CDFile {

	unsigned long long _byteOrder;
	NSArray* _loadCommands;
	NSArray* _dylibLoadCommands;
	NSArray* _segments;
	CDLCSymbolTable* _symbolTable;
	CDLCDynamicSymbolTable* _dynamicSymbolTable;
	CDLCDyldInfo* _dyldInfo;
	CDLCDylib* _dylibIdentifier;
	CDLCVersionMinimum* _minVersionMacOSX;
	CDLCVersionMinimum* _minVersionIOS;
	CDLCSourceVersion* _sourceVersion;
	NSArray* _runPaths;
	NSArray* _runPathCommands;
	NSArray* _dyldEnvironment;
	NSArray* _reExportedDylibs;
	unsigned _magic;
	int _cputype;
	int _cpusubtype;
	unsigned _filetype;
	unsigned _ncmds;
	unsigned _sizeofcmds;
	unsigned _flags;
	unsigned _reserved;
	char _uses64BitABI;

}

@property (readonly) unsigned long long byteOrder;                           //@synthesize byteOrder=_byteOrder - In the implementation block
@property (readonly) unsigned magic;                                         //@synthesize magic=_magic - In the implementation block
@property (assign) int cputype;                                              //@synthesize cputype=_cputype - In the implementation block
@property (assign) int cpusubtype;                                           //@synthesize cpusubtype=_cpusubtype - In the implementation block
@property (readonly) unsigned filetype;                                      //@synthesize filetype=_filetype - In the implementation block
@property (readonly) unsigned flags;                                         //@synthesize flags=_flags - In the implementation block
@property (nonatomic,readonly) int maskedCPUType; 
@property (nonatomic,readonly) int maskedCPUSubtype; 
@property (readonly) NSArray * loadCommands;                                 //@synthesize loadCommands=_loadCommands - In the implementation block
@property (readonly) NSArray * dylibLoadCommands;                            //@synthesize dylibLoadCommands=_dylibLoadCommands - In the implementation block
@property (readonly) NSArray * segments;                                     //@synthesize segments=_segments - In the implementation block
@property (readonly) NSArray * runPaths;                                     //@synthesize runPaths=_runPaths - In the implementation block
@property (readonly) NSArray * runPathCommands;                              //@synthesize runPathCommands=_runPathCommands - In the implementation block
@property (readonly) NSArray * dyldEnvironment;                              //@synthesize dyldEnvironment=_dyldEnvironment - In the implementation block
@property (readonly) NSArray * reExportedDylibs;                             //@synthesize reExportedDylibs=_reExportedDylibs - In the implementation block
@property (retain) CDLCSymbolTable * symbolTable;                            //@synthesize symbolTable=_symbolTable - In the implementation block
@property (retain) CDLCDynamicSymbolTable * dynamicSymbolTable;              //@synthesize dynamicSymbolTable=_dynamicSymbolTable - In the implementation block
@property (retain) CDLCDyldInfo * dyldInfo;                                  //@synthesize dyldInfo=_dyldInfo - In the implementation block
@property (retain) CDLCDylib * dylibIdentifier;                              //@synthesize dylibIdentifier=_dylibIdentifier - In the implementation block
@property (retain) CDLCVersionMinimum * minVersionMacOSX;                    //@synthesize minVersionMacOSX=_minVersionMacOSX - In the implementation block
@property (retain) CDLCVersionMinimum * minVersionIOS;                       //@synthesize minVersionIOS=_minVersionIOS - In the implementation block
@property (retain) CDLCSourceVersion * sourceVersion;                        //@synthesize sourceVersion=_sourceVersion - In the implementation block
@property (readonly) char uses64BitABI;                                      //@synthesize uses64BitABI=_uses64BitABI - In the implementation block
@property (nonatomic,readonly) NSString * importBaseName; 
@property (nonatomic,readonly) char isEncrypted; 
@property (nonatomic,readonly) char hasProtectedSegments; 
@property (nonatomic,readonly) char canDecryptAllSegments; 
@property (nonatomic,readonly) NSString * uuidString; 
@property (nonatomic,readonly) NSString * archName; 
@property (nonatomic,readonly) char hasObjectiveC1Data; 
@property (nonatomic,readonly) char hasObjectiveC2Data; 
@property (nonatomic,readonly) Class processorClass; 
-(id)machOFileWithArch:(SCD_Struct_CD0)arg1 ;
-(id)architectureNameDescription;
-(NSArray *)loadCommands;
-(NSArray *)runPaths;
-(Class)processorClass;
-(id)headerString:(char)arg1 ;
-(id)loadCommandString:(char)arg1 ;
-(int)cputype;
-(int)cpusubtype;
-(unsigned)filetype;
-(CDLCDylib *)dylibIdentifier;
-(CDLCVersionMinimum *)minVersionMacOSX;
-(CDLCVersionMinimum *)minVersionIOS;
-(NSArray *)dyldEnvironment;
-(NSArray *)runPathCommands;
-(char)hasProtectedSegments;
-(char)canDecryptAllSegments;
-(NSString *)importBaseName;
-(NSString *)archName;
-(unsigned long long)dataOffsetForAddress:(unsigned long long)arg1 ;
-(unsigned long long)byteOrder;
-(unsigned long long)ptrSize;
-(const void*)bytesAtOffset:(unsigned long long)arg1 ;
-(id)flagDescription;
-(char)uses64BitABI;
-(id)initWithData:(id)arg1 filename:(id)arg2 searchPathState:(id)arg3 ;
-(char)bestMatchForArch:(SCD_Struct_CD0*)arg1 ;
-(int)maskedCPUType;
-(int)maskedCPUSubtype;
-(void)setCputype:(int)arg1 ;
-(void)setCpusubtype:(int)arg1 ;
-(void)_readLoadCommands:(id)arg1 count:(unsigned)arg2 ;
-(void)setMinVersionMacOSX:(CDLCVersionMinimum *)arg1 ;
-(void)setMinVersionIOS:(CDLCVersionMinimum *)arg1 ;
-(void)setDylibIdentifier:(CDLCDylib *)arg1 ;
-(void)setSymbolTable:(CDLCSymbolTable *)arg1 ;
-(void)setDynamicSymbolTable:(CDLCDynamicSymbolTable *)arg1 ;
-(void)setDyldInfo:(CDLCDyldInfo *)arg1 ;
-(unsigned)magic;
-(id)segmentContainingAddress:(unsigned long long)arg1 ;
-(id)filetypeDescription;
-(id)stringAtAddress:(unsigned long long)arg1 ;
-(CDLCDynamicSymbolTable *)dynamicSymbolTable;
-(CDLCSymbolTable *)symbolTable;
-(CDLCDyldInfo *)dyldInfo;
-(id)segmentWithName:(id)arg1 ;
-(char)hasObjectiveC2Data;
-(void)showWarning:(id)arg1 ;
-(void)logInfoForAddress:(unsigned long long)arg1 ;
-(id)externalClassNameForAddress:(unsigned long long)arg1 ;
-(char)hasRelocationEntryForAddress:(unsigned long long)arg1 ;
-(char)hasRelocationEntryForAddress2:(unsigned long long)arg1 ;
-(id)externalClassNameForAddress2:(unsigned long long)arg1 ;
-(char)hasObjectiveC1Data;
-(NSArray *)dylibLoadCommands;
-(NSArray *)reExportedDylibs;
-(NSString *)uuidString;
-(NSArray *)segments;
-(char)isEncrypted;
-(CDLCSourceVersion *)sourceVersion;
-(void)setSourceVersion:(CDLCSourceVersion *)arg1 ;
-(id)init;
-(id)description;
-(const void*)bytes;
-(unsigned)flags;
@end

